<?xml version="1.0" encoding="UTF-8"?><!--Designed and generated by Altova StyleVision Enterprise Edition 2018 rel. 2 - see http://www.altova.com/stylevision for more information.--><xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:altova="http://www.altova.com" xmlns:altova-xfi="http://www.altova.com/xslt-extensions/xbrl" xmlns:altovaext="http://www.altova.com/xslt-extensions" xmlns:array="http://www.w3.org/2005/xpath-functions/array" xmlns:clitype="clitype" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:eml="urn:oasis:names:tc:evs:schema:eml" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:iso4217="http://www.xbrl.org/2003/iso4217" xmlns:java="java" xmlns:kr="http://www.kiesraad.nl/extensions" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:map="http://www.w3.org/2005/xpath-functions/map" xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:rg="http://www.kiesraad.nl/reportgenerator" xmlns:sps="http://www.altova.com/StyleVision/user-xpath-functions" xmlns:ts="urn:oasis:names:tc:evs:schema:eml:ts" xmlns:xal="urn:oasis:names:tc:ciq:xsdschema:xAL:2.0" xmlns:xbrldi="http://xbrl.org/2006/xbrldi" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:xff="http://www.xbrl.org/2010/function/formula" xmlns:xfi="http://www.xbrl.org/2008/function/instance" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xnl="urn:oasis:names:tc:ciq:xsdschema:xNL:2.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:svg="http://www.w3.org/2000/svg" exclude-result-prefixes="altova altova-xfi altovaext array clitype ds eml fn iso4217 java kr link map math rg sps ts xal xbrldi xbrli xff xfi xlink xnl xs xsi">    <xsl:import href="D:\projekte\de.ivu.wahl.wus.reportgenerator\src\main\resources\de\ivu\wahl\wus\reportgen\text\nl\reused-parts-simple-text.xslt"/> <xsl:output version="1.0" method="xml" encoding="UTF-8" indent="no"/>   <xsl:param name="SV_OutputFormat" select="'PDF'"/>  <xsl:param name="generateDate" select="'01-02-2003 04:05:06'"/> <xsl:param name="hashCode" select="'1234 5678 90AB CDEF 1234 5678 90AB CDEF 1234 5678 90AB CDEF 1234 5678 90AB CDEF'"/> <xsl:param name="isDraft" select="'false'"/>    <xsl:param name="lang" select="'1'"/>   <xsl:variable name="XML" select="/"/>   <xsl:variable name="fo:layout-master-set">      <fo:layout-master-set>          <fo:simple-page-master master-name="page-master-0-even" margin-left="1.0in" margin-right="1.0in" page-height="11.69in" page-width="8.27in" margin-top="0.0in" margin-bottom="0.0in">                <fo:region-body margin-top="0.90in" margin-bottom="1.20in" column-count="1" column-gap="0.50in"/>               <fo:region-after region-name="even-page-footer" overflow="hidden" extent="1.20in"/>         </fo:simple-page-master>            <fo:simple-page-master master-name="page-master-0-odd" margin-left="1.0in" margin-right="1.0in" page-height="11.69in" page-width="8.27in" margin-top="0.0in" margin-bottom="0.0in">             <fo:region-body margin-top="0.90in" margin-bottom="1.20in" column-count="1" column-gap="0.50in"/>               <fo:region-after region-name="odd-page-footer" overflow="hidden" extent="1.20in"/>          </fo:simple-page-master>            <fo:page-sequence-master master-name="page-master-0">               <fo:repeatable-page-master-alternatives>                    <fo:conditional-page-master-reference master-reference="page-master-0-even" odd-or-even="even"/>                    <fo:conditional-page-master-reference master-reference="page-master-0-odd" odd-or-even="odd"/>              </fo:repeatable-page-master-alternatives>           </fo:page-sequence-master>          <fo:simple-page-master master-name="page-master-1-even" margin-left="1.0in" margin-right="1.0in" page-height="11.69in" page-width="8.27in" margin-top="0.0in" margin-bottom="0.0in">                <fo:region-body margin-top="0.90in" margin-bottom="1.20in" column-count="1" column-gap="0.50in"/>               <fo:region-after region-name="even-page-footer" overflow="hidden" extent="1.20in"/>         </fo:simple-page-master>            <fo:simple-page-master master-name="page-master-1-odd" margin-left="1.0in" margin-right="1.0in" page-height="11.69in" page-width="8.27in" margin-top="0.0in" margin-bottom="0.0in">             <fo:region-body margin-top="0.90in" margin-bottom="1.20in" column-count="1" column-gap="0.50in"/>               <fo:region-after region-name="odd-page-footer" overflow="hidden" extent="1.20in"/>          </fo:simple-page-master>            <fo:page-sequence-master master-name="page-master-1">               <fo:repeatable-page-master-alternatives>                    <fo:conditional-page-master-reference master-reference="page-master-1-even" odd-or-even="even"/>                    <fo:conditional-page-master-reference master-reference="page-master-1-odd" odd-or-even="odd"/>              </fo:repeatable-page-master-alternatives>           </fo:page-sequence-master>      </fo:layout-master-set> </xsl:variable> <xsl:variable name="altova:nPxPerIn" select="96"/>  <xsl:template match="/">        <fo:root>           <xsl:copy-of select="$fo:layout-master-set"/>           <fo:declarations>               <x:xmpmeta xmlns:x="adobe:ns:meta/">                    <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">                       <rdf:Description rdf:about="" xmlns:dc="http://purl.org/dc/elements/1.1/">                          <dc:title>Model P 22-2</dc:title>                           <dc:creator/>                           <dc:description/>                       </rdf:Description>                      <rdf:Description rdf:about="" xmlns:xmp="http://ns.adobe.com/xap/1.0/">                         <xmp:CreatorTool>Altova StyleVision Enterprise Edition 2018 rel. 2 (http://www.altova.com)</xmp:CreatorTool>                        </rdf:Description>                  </rdf:RDF>              </x:xmpmeta>            </fo:declarations>          <fo:page-sequence force-page-count="end-on-even" master-reference="page-master-0" initial-page-number="auto" format="1">                <fo:static-content flow-name="odd-page-footer">                 <fo:block-container height="1.20in" overflow="hidden" display-align="after">                        <fo:block>                          <xsl:call-template name="LegacyFooter"/>                        </fo:block>                 </fo:block-container>               </fo:static-content>                <fo:static-content flow-name="even-page-footer">                    <fo:block-container height="1.20in" overflow="hidden" display-align="after">                        <fo:block>                          <xsl:call-template name="LegacyFooter"/>                        </fo:block>                 </fo:block-container>               </fo:static-content>                <fo:flow flow-name="xsl-region-body">                   <fo:block font-family="Arial" font-size="9pt">                      <fo:inline-container>                           <fo:block>                              <xsl:text>&#x200B;</xsl:text>                           </fo:block>                     </fo:inline-container>                      <fo:block font-family="Arial" font-size="9pt" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">                         <xsl:for-each select="$XML">                                <xsl:for-each select="eml:EML">                                 <xsl:for-each select="eml:Result">                                      <xsl:variable name="includesPostalVotes" select="false()"/>                                     <xsl:for-each select="eml:Election">                                            <xsl:for-each select="eml:ElectionIdentifier">                                              <xsl:call-template name="Line"/>                                                <xsl:call-template name="LineBreakPdf"/>                                                <fo:block/>                                             <fo:inline font-family="Arial" font-size="11pt" font-weight="bold">                                                 <xsl:text>Model P 22-2</xsl:text>                                               </fo:inline>                                                <fo:block/>                                             <fo:block>                                                  <fo:leader leader-pattern="space"/>                                             </fo:block>                                             <fo:inline font-family="Arial" font-size="16pt" font-weight="bold">                                                 <xsl:text>Proces-verbaal van de verkiezingsuitslag van </xsl:text>                                              </fo:inline>                                                <xsl:choose>                                                    <xsl:when test="eml:ElectionCategory[ text() = &quot;ER&quot; ]">                                                       <fo:inline font-family="Arial" font-size="16pt" font-weight="bold">                                                         <xsl:text>de eilandsraad</xsl:text>                                                     </fo:inline>                                                    </xsl:when>                                                 <xsl:when test="eml:ElectionCategory[ text() = &quot;GR&quot; ]">                                                       <fo:inline font-family="Arial" font-size="16pt" font-weight="bold">                                                         <xsl:text>de gemeenteraad</xsl:text>                                                        </fo:inline>                                                    </xsl:when>                                                 <xsl:when test="eml:ElectionCategory[ text() = &quot;BC&quot; ]">                                                       <fo:inline font-family="Arial" font-size="16pt" font-weight="bold">                                                         <xsl:text>de bestuurscommissie</xsl:text>                                                       </fo:inline>                                                    </xsl:when>                                                 <xsl:when test="eml:ElectionCategory[ text() = &quot;GC&quot; ]">                                                       <fo:inline font-family="Arial" font-size="16pt" font-weight="bold">                                                         <xsl:text>de gebiedscommissie</xsl:text>                                                        </fo:inline>                                                    </xsl:when>                                                 <xsl:when test="eml:ElectionCategory[ text() = &quot;AB&quot; ]">                                                       <fo:inline font-family="Arial" font-size="16pt" font-weight="bold">                                                         <xsl:text>het algemeen bestuur van het waterschap</xsl:text>                                                        </fo:inline>                                                    </xsl:when>                                                 <xsl:otherwise>                                                     <fo:inline font-family="Arial" font-size="16pt" font-weight="bold">                                                         <xsl:text>de provinciale staten</xsl:text>                                                      </fo:inline>                                                    </xsl:otherwise>                                                </xsl:choose>                                               <fo:block/>                                             <fo:block>                                                  <fo:leader leader-pattern="space"/>                                             </fo:block>                                             <fo:inline font-family="Arial" font-size="9pt">                                                 <xsl:text>Met dit formulier wordt verslag gedaan van de zitting waarin de uitslag is vastgesteld van de verkiezing voor </xsl:text>                                             </fo:inline>                                                <xsl:choose>                                                    <xsl:when test="eml:ElectionCategory[ text() = &quot;ER&quot; ]">                                                       <fo:inline font-family="Arial" font-size="9pt">                                                         <xsl:text>de eilandsraad</xsl:text>                                                     </fo:inline>                                                    </xsl:when>                                                 <xsl:when test="eml:ElectionCategory[ text() = &quot;GR&quot; ]">                                                       <fo:inline font-family="Arial" font-size="9pt">                                                         <xsl:text>de gemeenteraad</xsl:text>                                                        </fo:inline>                                                    </xsl:when>                                                 <xsl:when test="eml:ElectionCategory[ text() = &quot;BC&quot; ]">                                                       <fo:inline font-family="Arial" font-size="9pt">                                                         <xsl:text>de bestuurscommissie</xsl:text>                                                       </fo:inline>                                                    </xsl:when>                                                 <xsl:when test="eml:ElectionCategory[ text() = &quot;GC&quot; ]">                                                       <fo:inline font-family="Arial" font-size="9pt">                                                         <xsl:text>de gebiedscommissie</xsl:text>                                                        </fo:inline>                                                    </xsl:when>                                                 <xsl:when test="eml:ElectionCategory[ text() = &quot;AB&quot; ]">                                                       <fo:inline font-family="Arial" font-size="9pt">                                                         <xsl:text>het algemeen bestuur van een waterschap</xsl:text>                                                        </fo:inline>                                                    </xsl:when>                                                 <xsl:otherwise>                                                     <fo:inline font-family="Arial" font-size="9pt">                                                         <xsl:text>de provinciale staten van een provincie die uit één kieskring bestaat</xsl:text>                                                      </fo:inline>                                                    </xsl:otherwise>                                                </xsl:choose>                                               <fo:inline font-family="Arial" font-size="9pt">                                                 <xsl:text>.</xsl:text>                                              </fo:inline>                                            </xsl:for-each>                                         <fo:block/>                                         <fo:block>                                              <fo:leader leader-pattern="space"/>                                         </fo:block>                                         <xsl:call-template name="Line"/>                                            <xsl:call-template name="LineBreakPdf"/>                                            <fo:block/>                                         <fo:inline font-family="Arial" font-size="11pt" font-weight="bold" margin-bottom="6pt">                                             <xsl:text>1. Verkiezing</xsl:text>                                          </fo:inline>                                            <fo:block/>                                         <fo:block>                                              <fo:leader leader-pattern="space"/>                                         </fo:block>                                         <fo:inline font-family="Arial" font-size="9pt">                                             <xsl:text>Dit proces-verbaal heeft betrekking op:</xsl:text>                                            </fo:inline>                                            <fo:block/>                                         <fo:block>                                              <fo:leader leader-pattern="space"/>                                         </fo:block>                                         <fo:inline font-family="Arial" font-size="9pt">                                             <xsl:text>de verkiezing van </xsl:text>                                         </fo:inline>                                            <xsl:call-template name="ElectionNameShort">                                                <xsl:with-param name="isBold" select="1"/>                                          </xsl:call-template>                                            <fo:block/>                                         <fo:block>                                              <fo:leader leader-pattern="space"/>                                         </fo:block>                                         <fo:inline font-family="Arial" font-size="9pt">                                             <xsl:text>Datum stemming </xsl:text>                                            </fo:inline>                                            <xsl:for-each select="eml:ElectionIdentifier">                                              <xsl:for-each select="kr:ElectionDate">                                                 <xsl:call-template name="Date">                                                     <xsl:with-param name="isBold" select="1"/>                                                  </xsl:call-template>                                                </xsl:for-each>                                         </xsl:for-each>                                         <fo:block/>                                         <fo:block>                                              <fo:leader leader-pattern="space"/>                                         </fo:block>                                         <xsl:call-template name="Line"/>                                            <xsl:call-template name="LineBreakPdf"/>                                            <fo:block/>                                         <fo:inline font-family="Arial" font-size="11pt" font-weight="bold" margin-bottom="6pt">                                             <xsl:text>2. Zitting</xsl:text>                                         </fo:inline>                                            <fo:block/>                                         <fo:block>                                              <fo:leader leader-pattern="space"/>                                         </fo:block>                                         <fo:inline font-family="Arial" font-size="9pt">                                             <xsl:text>Het betreft de openbare zitting van het hoofd- c.q. centraal stembureau in </xsl:text>                                            </fo:inline>                                            <xsl:for-each select="$XML">                                                <xsl:for-each select="eml:EML">                                                 <xsl:for-each select="eml:Result">                                                      <xsl:for-each select="rg:RG520">                                                            <xsl:for-each select="rg:CandidateLetter">                                                              <xsl:for-each select="rg:PlaceLetter">                                                                  <xsl:variable name="value-of-template_2">                                                                       <xsl:apply-templates/>                                                                  </xsl:variable>                                                                 <xsl:choose>                                                                        <xsl:when test="contains(string($value-of-template_2),'&#x200B;')">                                                                         <fo:block font-family="Arial" font-size="9pt" font-weight="bold">                                                                               <xsl:copy-of select="$value-of-template_2"/>                                                                            </fo:block>                                                                     </xsl:when>                                                                     <xsl:otherwise>                                                                         <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                                                              <xsl:copy-of select="$value-of-template_2"/>                                                                            </fo:inline>                                                                        </xsl:otherwise>                                                                    </xsl:choose>                                                               </xsl:for-each>                                                         </xsl:for-each>                                                     </xsl:for-each>                                                 </xsl:for-each>                                             </xsl:for-each>                                         </xsl:for-each>                                         <fo:inline font-family="Arial" font-size="9pt">                                             <xsl:text>.</xsl:text>                                          </fo:inline>                                            <xsl:if test="./eml:ElectionIdentifier/kr:ElectionSubcategory[text()=&quot;TK&quot; or text()=&quot;EK&quot; or text()=&quot;PS2&quot; or text()=&quot;EP&quot;]">                                              <fo:block>                                                  <fo:leader leader-pattern="space"/>                                             </fo:block>                                             <fo:block>                                                  <fo:leader leader-pattern="space"/>                                             </fo:block>                                             <fo:table font-family="Arial" font-size="9pt" table-layout="fixed" width="52%" border-spacing="2pt">                                                    <fo:table-column column-width="100pt"/>                                                 <fo:table-column column-width="240pt"/>                                                 <xsl:variable name="altova:CurrContextGrid_3" select="."/>                                                  <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">                                                      <xsl:variable name="altova:tablerows">                                                          <fo:table-row font-family="Arial" font-size="9pt">                                                              <fo:table-cell font-family="Arial" font-size="small" padding="2pt" display-align="center">                                                                  <fo:block text-align="left">                                                                        <fo:inline font-family="Arial" font-size="9pt">                                                                         <xsl:text>Kieskring</xsl:text>                                                                      </fo:inline>                                                                    </fo:block>                                                             </fo:table-cell>                                                                <fo:table-cell font-family="Arial" font-size="9pt" padding="2pt" display-align="center">                                                                    <fo:block text-align="left">                                                                        <xsl:for-each select="eml:Contest">                                                                         <xsl:for-each select="eml:ContestIdentifier">                                                                               <xsl:for-each select="@Id">                                                                                 <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                                                                      <xsl:value-of select="string(.)"/>                                                                                  </fo:inline>                                                                                </xsl:for-each>                                                                             <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                                                                  <xsl:text> (</xsl:text>                                                                             </fo:inline>                                                                                <xsl:for-each select="eml:ContestName">                                                                                 <xsl:variable name="value-of-template_5">                                                                                       <xsl:apply-templates/>                                                                                  </xsl:variable>                                                                                 <xsl:choose>                                                                                        <xsl:when test="contains(string($value-of-template_5),'&#x200B;')">                                                                                         <fo:block font-family="Arial" font-size="9pt" font-weight="bold">                                                                                               <xsl:copy-of select="$value-of-template_5"/>                                                                                            </fo:block>                                                                                     </xsl:when>                                                                                     <xsl:otherwise>                                                                                         <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                                                                              <xsl:copy-of select="$value-of-template_5"/>                                                                                            </fo:inline>                                                                                        </xsl:otherwise>                                                                                    </xsl:choose>                                                                               </xsl:for-each>                                                                             <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                                                                  <xsl:text>)</xsl:text>                                                                              </fo:inline>                                                                            </xsl:for-each>                                                                     </xsl:for-each>                                                                 </fo:block>                                                             </fo:table-cell>                                                            </fo:table-row>                                                     </xsl:variable>                                                     <xsl:choose>                                                            <xsl:when test="string($altova:tablerows)">                                                             <xsl:copy-of select="$altova:tablerows"/>                                                           </xsl:when>                                                         <xsl:otherwise>                                                             <fo:table-row>                                                                  <fo:table-cell>                                                                     <fo:block/>                                                                 </fo:table-cell>                                                                </fo:table-row>                                                         </xsl:otherwise>                                                        </xsl:choose>                                                   </fo:table-body>                                                </fo:table>                                         </xsl:if>                                       </xsl:for-each>                                     <xsl:for-each select="rg:RG520">                                            <fo:block>                                              <fo:leader leader-pattern="space"/>                                         </fo:block>                                         <xsl:call-template name="LineBreakRTF"/>                                            <fo:table font-family="Arial" font-size="9pt" table-layout="fixed" width="100%" border-spacing="2pt">                                               <fo:table-column column-width="100pt"/>                                             <fo:table-column column-width="240pt"/>                                             <xsl:variable name="altova:CurrContextGrid_6" select="."/>                                              <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">                                                  <xsl:variable name="altova:tablerows">                                                      <fo:table-row font-family="Arial" font-size="9pt">                                                          <fo:table-cell font-family="Arial" font-size="small" padding="2pt" display-align="center">                                                              <fo:block text-align="left">                                                                    <fo:inline font-family="Arial" font-size="9pt">                                                                     <xsl:text>Datum zitting</xsl:text>                                                                  </fo:inline>                                                                </fo:block>                                                         </fo:table-cell>                                                            <fo:table-cell font-family="Arial" font-size="9pt" padding="2pt" display-align="center">                                                                <fo:block text-align="left">                                                                    <xsl:for-each select="rg:DateOfMeetingO1P20">                                                                       <xsl:call-template name="Date">                                                                         <xsl:with-param name="isBold" select="1"/>                                                                      </xsl:call-template>                                                                    </xsl:for-each>                                                             </fo:block>                                                         </fo:table-cell>                                                        </fo:table-row>                                                     <fo:table-row font-family="Arial" font-size="9pt">                                                          <fo:table-cell font-family="Arial" font-size="small" padding="2pt" display-align="center">                                                              <fo:block text-align="left">                                                                    <fo:inline font-family="Arial" font-size="9pt">                                                                     <xsl:text>Tijdstip zitting</xsl:text>                                                                   </fo:inline>                                                                </fo:block>                                                         </fo:table-cell>                                                            <fo:table-cell font-family="Arial" font-size="9pt" padding="2pt" display-align="center">                                                                <fo:block text-align="left">                                                                    <xsl:for-each select="rg:TimeOfMeetingP20">                                                                     <xsl:variable name="value-of-template_7">                                                                           <xsl:apply-templates/>                                                                      </xsl:variable>                                                                     <xsl:choose>                                                                            <xsl:when test="contains(string($value-of-template_7),'&#x200B;')">                                                                             <fo:block font-family="Arial" font-size="9pt" font-weight="bold">                                                                                   <xsl:copy-of select="$value-of-template_7"/>                                                                                </fo:block>                                                                         </xsl:when>                                                                         <xsl:otherwise>                                                                             <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                                                                  <xsl:copy-of select="$value-of-template_7"/>                                                                                </fo:inline>                                                                            </xsl:otherwise>                                                                        </xsl:choose>                                                                   </xsl:for-each>                                                             </fo:block>                                                         </fo:table-cell>                                                        </fo:table-row>                                                 </xsl:variable>                                                 <xsl:choose>                                                        <xsl:when test="string($altova:tablerows)">                                                         <xsl:copy-of select="$altova:tablerows"/>                                                       </xsl:when>                                                     <xsl:otherwise>                                                         <fo:table-row>                                                              <fo:table-cell>                                                                 <fo:block/>                                                             </fo:table-cell>                                                            </fo:table-row>                                                     </xsl:otherwise>                                                    </xsl:choose>                                               </fo:table-body>                                            </fo:table>                                         <fo:block>                                              <fo:leader leader-pattern="space"/>                                         </fo:block>                                         <xsl:for-each select="rg:PresenceVotes">                                                <xsl:call-template name="Line"/>                                                <xsl:call-template name="LineBreakPdf"/>                                                <fo:block/>                                             <fo:inline font-family="Arial" font-size="11pt" font-weight="bold" margin-bottom="6pt">                                                 <xsl:text>3. Aantal stemmen per lijst en kandidaat</xsl:text>                                               </fo:inline>                                                <fo:block break-after="page">                                                   <fo:leader leader-pattern="space"/>                                             </fo:block>                                             <xsl:call-template name="AffiliationVotes"/>                                                <xsl:call-template name="Line"/>                                                <xsl:call-template name="LineBreakPdf"/>                                                <fo:block/>                                             <fo:inline font-family="Arial" font-size="11pt" font-weight="bold" margin-bottom="6pt">                                                 <xsl:text>4. Aantal blanco en ongeldige stemmen</xsl:text>                                              </fo:inline>                                                <fo:block/>                                             <fo:block>                                                  <fo:leader leader-pattern="space"/>                                             </fo:block>                                             <fo:table font-family="Arial" font-size="9pt" table-layout="fixed" width="52%" border-spacing="2pt">                                                    <fo:table-column column-width="180pt"/>                                                 <fo:table-column column-width="40pt"/>                                                  <xsl:variable name="altova:CurrContextGrid_8" select="."/>                                                  <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">                                                      <xsl:variable name="altova:tablerows">                                                          <fo:table-row font-family="Arial" font-size="9pt">                                                              <fo:table-cell font-family="Arial" font-size="small" padding="2pt" display-align="center">                                                                  <fo:block text-align="left">                                                                        <fo:inline font-family="Arial" font-size="9pt">                                                                         <xsl:text>Het aantal blanco stemmen bedraagt</xsl:text>                                                                     </fo:inline>                                                                    </fo:block>                                                             </fo:table-cell>                                                                <fo:table-cell font-family="Arial" font-size="9pt" padding="2pt" display-align="center">                                                                    <fo:block text-align="right">                                                                       <xsl:for-each select="rg:BlancVotes">                                                                           <xsl:variable name="value-of-template_9">                                                                               <xsl:apply-templates/>                                                                          </xsl:variable>                                                                         <xsl:choose>                                                                                <xsl:when test="contains(string($value-of-template_9),'&#x200B;')">                                                                                 <fo:block font-family="Arial" font-size="9pt">                                                                                      <xsl:copy-of select="$value-of-template_9"/>                                                                                    </fo:block>                                                                             </xsl:when>                                                                             <xsl:otherwise>                                                                                 <fo:inline font-family="Arial" font-size="9pt">                                                                                     <xsl:copy-of select="$value-of-template_9"/>                                                                                    </fo:inline>                                                                                </xsl:otherwise>                                                                            </xsl:choose>                                                                       </xsl:for-each>                                                                 </fo:block>                                                             </fo:table-cell>                                                            </fo:table-row>                                                         <fo:table-row font-family="Arial" font-size="9pt">                                                              <fo:table-cell font-family="Arial" font-size="small" padding="2pt" display-align="center">                                                                  <fo:block text-align="left">                                                                        <fo:inline font-family="Arial" font-size="9pt">                                                                         <xsl:text>Het aantal ongeldige stemmen bedraagt</xsl:text>                                                                      </fo:inline>                                                                    </fo:block>                                                             </fo:table-cell>                                                                <fo:table-cell font-family="Arial" font-size="9pt" padding="2pt" display-align="center">                                                                    <fo:block text-align="right">                                                                       <xsl:for-each select="rg:InvalidVotes">                                                                         <xsl:variable name="value-of-template_10">                                                                              <xsl:apply-templates/>                                                                          </xsl:variable>                                                                         <xsl:choose>                                                                                <xsl:when test="contains(string($value-of-template_10),'&#x200B;')">                                                                                    <fo:block font-family="Arial" font-size="9pt">                                                                                      <xsl:copy-of select="$value-of-template_10"/>                                                                                   </fo:block>                                                                             </xsl:when>                                                                             <xsl:otherwise>                                                                                 <fo:inline font-family="Arial" font-size="9pt">                                                                                     <xsl:copy-of select="$value-of-template_10"/>                                                                                   </fo:inline>                                                                                </xsl:otherwise>                                                                            </xsl:choose>                                                                       </xsl:for-each>                                                                 </fo:block>                                                             </fo:table-cell>                                                            </fo:table-row>                                                     </xsl:variable>                                                     <xsl:choose>                                                            <xsl:when test="string($altova:tablerows)">                                                             <xsl:copy-of select="$altova:tablerows"/>                                                           </xsl:when>                                                         <xsl:otherwise>                                                             <fo:table-row>                                                                  <fo:table-cell>                                                                     <fo:block/>                                                                 </fo:table-cell>                                                                </fo:table-row>                                                         </xsl:otherwise>                                                        </xsl:choose>                                                   </fo:table-body>                                                </fo:table>                                             <fo:block>                                                  <fo:leader leader-pattern="space"/>                                             </fo:block>                                             <xsl:call-template name="Line"/>                                                <xsl:call-template name="LineBreakPdf"/>                                                <fo:block/>                                             <fo:inline font-family="Arial" font-size="11pt" font-weight="bold" margin-bottom="6pt">                                                 <xsl:text>5. Verschil tussen het aantal toegelaten kiezers en het aantal getelde stemmen</xsl:text>                                             </fo:inline>                                                <fo:block/>                                             <fo:block>                                                  <fo:leader leader-pattern="space"/>                                             </fo:block>                                             <fo:block>                                                  <fo:leader leader-pattern="space"/>                                             </fo:block>                                             <fo:inline-container>                                                   <fo:block>                                                      <xsl:text>&#x200B;</xsl:text>                                                   </fo:block>                                             </fo:inline-container>                                              <fo:block font-family="Arial" font-size="9pt" line-height="13.5pt" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">                                                    <fo:inline font-family="Arial" font-size="9pt" font-style="italic">                                                     <xsl:text>In de processen-verbaal is vastgesteld in hoeverre er:</xsl:text>                                                 </fo:inline>                                                </fo:block>                                             <fo:inline-container>                                                   <fo:block>                                                      <xsl:text>&#x200B;</xsl:text>                                                   </fo:block>                                             </fo:inline-container>                                              <fo:block font-family="Arial" font-size="9pt" line-height="13.5pt" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">                                                    <fo:inline font-family="Arial" font-size="9pt" font-style="italic">                                                     <xsl:text>- meer stembiljetten zijn geteld, dan dat er kiezers zijn toegelaten;</xsl:text>                                                  </fo:inline>                                                </fo:block>                                             <fo:inline-container>                                                   <fo:block>                                                      <xsl:text>&#x200B;</xsl:text>                                                   </fo:block>                                             </fo:inline-container>                                              <fo:block font-family="Arial" font-size="9pt" line-height="13.5pt" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">                                                    <fo:inline font-family="Arial" font-size="9pt" font-style="italic">                                                     <xsl:text>- minder stembiljetten zijn geteld, dan dat er kiezers zijn toegelaten.</xsl:text>                                                    </fo:inline>                                                </fo:block>                                             <fo:inline-container>                                                   <fo:block>                                                      <xsl:text>&#x200B;</xsl:text>                                                   </fo:block>                                             </fo:inline-container>                                              <fo:block font-family="Arial" font-size="9pt" line-height="13.5pt" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">                                                    <fo:inline font-family="Arial" font-size="9pt" font-style="italic">                                                     <xsl:text>Voor beide categorieën afzonderlijk stelt u het aantal voor de verkiezing vast.</xsl:text>                                                    </fo:inline>                                                </fo:block>                                             <fo:inline-container>                                                   <fo:block>                                                      <xsl:text>&#x200B;</xsl:text>                                                   </fo:block>                                             </fo:inline-container>                                              <fo:block font-family="Arial" font-size="9pt" line-height="13.5pt" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">                                                    <fo:inline font-family="Arial" font-size="9pt">                                                     <xsl:text>&#160;</xsl:text>                                                 </fo:inline>                                                </fo:block>                                             <fo:inline-container>                                                   <fo:block>                                                      <xsl:text>&#x200B;</xsl:text>                                                   </fo:block>                                             </fo:inline-container>                                              <fo:block font-family="Arial" font-size="9pt" line-height="13.5pt" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">                                                    <fo:inline font-family="Arial" font-size="9pt" line-height="13.5pt" text-decoration="underline">                                                        <xsl:text>Welke verschillen zijn in de processen-verbaal vastgesteld tussen het aantal toegelaten kiezers en getelde stembiljetten?</xsl:text>                                                  </fo:inline>                                                </fo:block>                                             <fo:inline-container>                                                   <fo:block>                                                      <xsl:text>&#x200B;</xsl:text>                                                   </fo:block>                                             </fo:inline-container>                                              <fo:block font-family="Arial" font-size="9pt" line-height="13.5pt" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">                                                    <fo:inline font-family="Arial" font-size="9pt">                                                     <xsl:text>■</xsl:text>                                                  </fo:inline>                                                    <fo:inline font-family="Arial" font-size="9pt" line-height="13.5pt">                                                        <xsl:text>&#160;&#160; In de stembureaus zijn </xsl:text>                                                   </fo:inline>                                                    <xsl:for-each select="rg:MoreValidVotesThanAdmittedVoters">                                                     <xsl:variable name="value-of-template_11">                                                          <xsl:apply-templates/>                                                      </xsl:variable>                                                     <xsl:choose>                                                            <xsl:when test="contains(string($value-of-template_11),'&#x200B;')">                                                                <fo:block font-family="Arial" font-size="9pt" font-weight="bold">                                                                   <xsl:copy-of select="$value-of-template_11"/>                                                               </fo:block>                                                         </xsl:when>                                                         <xsl:otherwise>                                                             <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                                                  <xsl:copy-of select="$value-of-template_11"/>                                                               </fo:inline>                                                            </xsl:otherwise>                                                        </xsl:choose>                                                   </xsl:for-each>                                                 <fo:inline font-family="Arial" font-size="9pt" line-height="13.5pt">                                                        <xsl:text> stembiljetten </xsl:text>                                                    </fo:inline>                                                    <fo:inline font-family="Arial" font-size="9pt" font-weight="bold" line-height="13.5pt">                                                     <xsl:text>meer </xsl:text>                                                  </fo:inline>                                                    <fo:inline font-family="Arial" font-size="9pt" line-height="13.5pt">                                                        <xsl:text>geteld, dan dat er kiezers zijn toegelaten tot de stemming.</xsl:text>                                                    </fo:inline>                                                </fo:block>                                             <fo:inline-container>                                                   <fo:block>                                                      <xsl:text>&#x200B;</xsl:text>                                                   </fo:block>                                             </fo:inline-container>                                              <fo:block font-family="Arial" font-size="9pt" line-height="13.5pt" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">                                                    <fo:inline font-family="Arial" font-size="9pt">                                                     <xsl:text>■</xsl:text>                                                  </fo:inline>                                                    <fo:inline font-family="Arial" font-size="9pt" line-height="13.5pt">                                                        <xsl:text>&#160;&#160; In de stembureaus zijn </xsl:text>                                                   </fo:inline>                                                    <xsl:for-each select="rg:LessValidVotesThanAdmittedVoters">                                                     <xsl:variable name="value-of-template_12">                                                          <xsl:apply-templates/>                                                      </xsl:variable>                                                     <xsl:choose>                                                            <xsl:when test="contains(string($value-of-template_12),'&#x200B;')">                                                                <fo:block font-family="Arial" font-size="9pt" font-weight="bold">                                                                   <xsl:copy-of select="$value-of-template_12"/>                                                               </fo:block>                                                         </xsl:when>                                                         <xsl:otherwise>                                                             <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                                                  <xsl:copy-of select="$value-of-template_12"/>                                                               </fo:inline>                                                            </xsl:otherwise>                                                        </xsl:choose>                                                   </xsl:for-each>                                                 <fo:inline font-family="Arial" font-size="9pt" line-height="13.5pt">                                                        <xsl:text> stembiljetten </xsl:text>                                                    </fo:inline>                                                    <fo:inline font-family="Arial" font-size="9pt" font-weight="bold" line-height="13.5pt">                                                     <xsl:text>minder </xsl:text>                                                    </fo:inline>                                                    <fo:inline font-family="Arial" font-size="9pt" line-height="13.5pt">                                                        <xsl:text>geteld, dan dat er kiezers zijn toegelaten tot de stemming.</xsl:text>                                                    </fo:inline>                                                </fo:block>                                             <fo:inline-container>                                                   <fo:block>                                                      <xsl:text>&#x200B;</xsl:text>                                                   </fo:block>                                             </fo:inline-container>                                              <fo:block font-family="Arial" font-size="9pt" line-height="13.5pt" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">                                                    <fo:inline font-family="Arial" font-size="9pt">                                                     <xsl:text>&#160;</xsl:text>                                                 </fo:inline>                                                </fo:block>                                             <fo:inline-container>                                                   <fo:block>                                                      <xsl:text>&#x200B;</xsl:text>                                                   </fo:block>                                             </fo:inline-container>                                              <fo:block font-family="Arial" font-size="9pt" line-height="13.5pt" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">                                                    <fo:inline font-family="Arial" font-size="9pt" line-height="13.5pt" text-decoration="underline">                                                        <xsl:text>Hoe worden deze verschillen in de processen-verbaal verklaard?</xsl:text>                                                 </fo:inline>                                                </fo:block>                                             <fo:block>                                                  <fo:leader leader-pattern="space"/>                                             </fo:block>                                             <fo:table font-family="Arial" font-size="9pt" table-layout="fixed" width="100%" border-spacing="2pt">                                                   <fo:table-column column-width="70%"/>                                                   <fo:table-column column-width="30%"/>                                                   <xsl:variable name="altova:CurrContextGrid_13" select="."/>                                                 <fo:table-header font-family="Arial" font-size="9pt" start-indent="0pt">                                                        <xsl:variable name="altova:tablerows">                                                          <fo:table-row font-family="Arial" font-size="9pt">                                                              <fo:table-cell number-columns-spanned="2" background-color="#e8e8e8" border-bottom="1pt solid #000" font-family="Arial" font-size="9pt" padding-left="0" padding="2pt" display-align="before">                                                                  <fo:block text-align="left">                                                                        <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                                                          <xsl:text>Mogelijke verklaringen voor het verschil</xsl:text>                                                                       </fo:inline>                                                                        <fo:block/>                                                                     <fo:block>                                                                          <fo:leader leader-pattern="space"/>                                                                     </fo:block>                                                                     <fo:inline font-family="Arial" font-size="9pt" font-style="italic">                                                                         <xsl:text>Vermeld hoe vaak de volgende situaties zich hebben voorgedaan volgens de processen-verbaal. </xsl:text>                                                                       </fo:inline>                                                                        <fo:block/>                                                                 </fo:block>                                                             </fo:table-cell>                                                            </fo:table-row>                                                     </xsl:variable>                                                     <xsl:choose>                                                            <xsl:when test="string($altova:tablerows)">                                                             <xsl:copy-of select="$altova:tablerows"/>                                                           </xsl:when>                                                         <xsl:otherwise>                                                             <fo:table-row>                                                                  <fo:table-cell>                                                                     <fo:block/>                                                                 </fo:table-cell>                                                                </fo:table-row>                                                         </xsl:otherwise>                                                        </xsl:choose>                                                   </fo:table-header>                                                  <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">                                                      <xsl:variable name="altova:tablerows">                                                          <fo:table-row font-family="Arial" font-size="9pt" line-height="14pt">                                                               <fo:table-cell font-family="Arial" font-size="9pt" padding-left="0" padding="2pt" display-align="center">                                                                   <fo:block text-align="left">                                                                        <fo:inline font-family="Arial" font-size="9pt">                                                                         <xsl:text>Hoe vaak heeft een kiezer het stembiljet niet ingeleverd?</xsl:text>                                                                      </fo:inline>                                                                    </fo:block>                                                             </fo:table-cell>                                                                <fo:table-cell font-family="Arial" font-size="9pt" padding-left="0" padding="2pt" display-align="center">                                                                   <fo:block text-align="right">                                                                       <xsl:for-each select="rg:BallotPaperNotReturned">                                                                           <xsl:variable name="value-of-template_14">                                                                              <xsl:apply-templates/>                                                                          </xsl:variable>                                                                         <xsl:choose>                                                                                <xsl:when test="contains(string($value-of-template_14),'&#x200B;')">                                                                                    <fo:block font-family="Arial" font-size="9pt">                                                                                      <xsl:copy-of select="$value-of-template_14"/>                                                                                   </fo:block>                                                                             </xsl:when>                                                                             <xsl:otherwise>                                                                                 <fo:inline font-family="Arial" font-size="9pt">                                                                                     <xsl:copy-of select="$value-of-template_14"/>                                                                                   </fo:inline>                                                                                </xsl:otherwise>                                                                            </xsl:choose>                                                                       </xsl:for-each>                                                                 </fo:block>                                                             </fo:table-cell>                                                            </fo:table-row>                                                         <fo:table-row font-family="Arial" font-size="9pt" line-height="14pt">                                                               <fo:table-cell font-family="Arial" font-size="9pt" padding-left="0" padding="2pt" display-align="center">                                                                   <fo:block text-align="left">                                                                        <fo:inline font-family="Arial" font-size="9pt">                                                                         <xsl:text>Hoe vaak is er een stembiljet te weinig uitgereikt? </xsl:text>                                                                       </fo:inline>                                                                    </fo:block>                                                             </fo:table-cell>                                                                <fo:table-cell font-family="Arial" font-size="9pt" padding-left="0" padding="2pt" display-align="center">                                                                   <fo:block text-align="right">                                                                       <xsl:for-each select="rg:TooFewBallotPaperIssued">                                                                          <xsl:variable name="value-of-template_15">                                                                              <xsl:apply-templates/>                                                                          </xsl:variable>                                                                         <xsl:choose>                                                                                <xsl:when test="contains(string($value-of-template_15),'&#x200B;')">                                                                                    <fo:block font-family="Arial" font-size="9pt">                                                                                      <xsl:copy-of select="$value-of-template_15"/>                                                                                   </fo:block>                                                                             </xsl:when>                                                                             <xsl:otherwise>                                                                                 <fo:inline font-family="Arial" font-size="9pt">                                                                                     <xsl:copy-of select="$value-of-template_15"/>                                                                                   </fo:inline>                                                                                </xsl:otherwise>                                                                            </xsl:choose>                                                                       </xsl:for-each>                                                                 </fo:block>                                                             </fo:table-cell>                                                            </fo:table-row>                                                         <fo:table-row font-family="Arial" font-size="9pt" line-height="14pt">                                                               <fo:table-cell font-family="Arial" font-size="9pt" padding-left="0" padding="2pt" display-align="center">                                                                   <fo:block text-align="left">                                                                        <fo:inline font-family="Arial" font-size="9pt">                                                                         <xsl:text>Hoe vaak is er een stembiljet te veel uitgereikt?</xsl:text>                                                                      </fo:inline>                                                                    </fo:block>                                                             </fo:table-cell>                                                                <fo:table-cell font-family="Arial" font-size="9pt" padding-left="0" padding="2pt" display-align="center">                                                                   <fo:block text-align="right">                                                                       <xsl:for-each select="rg:TooManyBallotPaperIssued">                                                                         <xsl:variable name="value-of-template_16">                                                                              <xsl:apply-templates/>                                                                          </xsl:variable>                                                                         <xsl:choose>                                                                                <xsl:when test="contains(string($value-of-template_16),'&#x200B;')">                                                                                    <fo:block font-family="Arial" font-size="9pt">                                                                                      <xsl:copy-of select="$value-of-template_16"/>                                                                                   </fo:block>                                                                             </xsl:when>                                                                             <xsl:otherwise>                                                                                 <fo:inline font-family="Arial" font-size="9pt">                                                                                     <xsl:copy-of select="$value-of-template_16"/>                                                                                   </fo:inline>                                                                                </xsl:otherwise>                                                                            </xsl:choose>                                                                       </xsl:for-each>                                                                 </fo:block>                                                             </fo:table-cell>                                                            </fo:table-row>                                                         <fo:table-row font-family="Arial" font-size="9pt" line-height="14pt">                                                               <fo:table-cell font-family="Arial" font-size="9pt" padding-left="0" padding="2pt" display-align="center">                                                                   <fo:block text-align="left">                                                                        <fo:inline font-family="Arial" font-size="9pt">                                                                         <xsl:text>Hoe vaak kon er geen verklaring gegeven worden voor het verschil?</xsl:text>                                                                      </fo:inline>                                                                    </fo:block>                                                             </fo:table-cell>                                                                <fo:table-cell font-family="Arial" font-size="9pt" padding-left="0" padding="2pt" display-align="center">                                                                   <fo:block text-align="right">                                                                       <xsl:for-each select="rg:NoExplanation">                                                                            <xsl:variable name="value-of-template_17">                                                                              <xsl:apply-templates/>                                                                          </xsl:variable>                                                                         <xsl:choose>                                                                                <xsl:when test="contains(string($value-of-template_17),'&#x200B;')">                                                                                    <fo:block font-family="Arial" font-size="9pt">                                                                                      <xsl:copy-of select="$value-of-template_17"/>                                                                                   </fo:block>                                                                             </xsl:when>                                                                             <xsl:otherwise>                                                                                 <fo:inline font-family="Arial" font-size="9pt">                                                                                     <xsl:copy-of select="$value-of-template_17"/>                                                                                   </fo:inline>                                                                                </xsl:otherwise>                                                                            </xsl:choose>                                                                       </xsl:for-each>                                                                 </fo:block>                                                             </fo:table-cell>                                                            </fo:table-row>                                                         <fo:table-row font-family="Arial" font-size="9pt" line-height="14pt">                                                               <fo:table-cell font-family="Arial" font-size="9pt" padding-left="0" padding="2pt" display-align="center">                                                                   <fo:block text-align="left">                                                                        <fo:inline font-family="Arial" font-size="9pt">                                                                         <xsl:text>Hoe vaak is er een andere verklaring gegeven?</xsl:text>                                                                      </fo:inline>                                                                    </fo:block>                                                             </fo:table-cell>                                                                <fo:table-cell font-family="Arial" font-size="9pt" padding-left="0" padding="2pt" display-align="center">                                                                   <fo:block text-align="right">                                                                       <xsl:for-each select="rg:OtherExplanations">                                                                            <xsl:variable name="value-of-template_18">                                                                              <xsl:apply-templates/>                                                                          </xsl:variable>                                                                         <xsl:choose>                                                                                <xsl:when test="contains(string($value-of-template_18),'&#x200B;')">                                                                                    <fo:block font-family="Arial" font-size="9pt">                                                                                      <xsl:copy-of select="$value-of-template_18"/>                                                                                   </fo:block>                                                                             </xsl:when>                                                                             <xsl:otherwise>                                                                                 <fo:inline font-family="Arial" font-size="9pt">                                                                                     <xsl:copy-of select="$value-of-template_18"/>                                                                                   </fo:inline>                                                                                </xsl:otherwise>                                                                            </xsl:choose>                                                                       </xsl:for-each>                                                                 </fo:block>                                                             </fo:table-cell>                                                            </fo:table-row>                                                     </xsl:variable>                                                     <xsl:choose>                                                            <xsl:when test="string($altova:tablerows)">                                                             <xsl:copy-of select="$altova:tablerows"/>                                                           </xsl:when>                                                         <xsl:otherwise>                                                             <fo:table-row>                                                                  <fo:table-cell>                                                                     <fo:block/>                                                                 </fo:table-cell>                                                                </fo:table-row>                                                         </xsl:otherwise>                                                        </xsl:choose>                                                   </fo:table-body>                                                </fo:table>                                             <fo:block>                                                  <fo:leader leader-pattern="space"/>                                             </fo:block>                                             <xsl:call-template name="Line"/>                                                <xsl:call-template name="LineBreakPdf"/>                                                <fo:block/>                                             <fo:inline font-family="Arial" font-size="11pt" font-weight="bold" margin-bottom="6pt">                                                 <xsl:text>6. Aantal kiezers dat bij volmacht mocht stemmen</xsl:text>                                               </fo:inline>                                                <fo:block/>                                             <fo:block>                                                  <fo:leader leader-pattern="space"/>                                             </fo:block>                                             <fo:inline-container>                                                   <fo:block>                                                      <xsl:text>&#x200B;</xsl:text>                                                   </fo:block>                                             </fo:inline-container>                                              <fo:block font-family="Arial" font-size="9pt" margin-right="100% - 100%" margin="0pt">                                                  <fo:inline font-family="Arial" font-size="9pt">                                                     <xsl:text>Het aantal kiezers dat mocht stemmen met een geldig volmachtbewijs (schriftelijk of via ingevulde stempas), bedraagt </xsl:text>                                                  </fo:inline>                                                    <xsl:for-each select="rg:ProxyVoters">                                                      <xsl:variable name="value-of-template_19">                                                          <xsl:apply-templates/>                                                      </xsl:variable>                                                     <xsl:choose>                                                            <xsl:when test="contains(string($value-of-template_19),'&#x200B;')">                                                                <fo:block font-family="Arial" font-size="9pt" font-weight="bold">                                                                   <xsl:copy-of select="$value-of-template_19"/>                                                               </fo:block>                                                         </xsl:when>                                                         <xsl:otherwise>                                                             <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                                                  <xsl:copy-of select="$value-of-template_19"/>                                                               </fo:inline>                                                            </xsl:otherwise>                                                        </xsl:choose>                                                   </xsl:for-each>                                                 <fo:inline font-family="Arial" font-size="9pt">                                                     <xsl:text>.</xsl:text>                                                  </fo:inline>                                                </fo:block>                                         </xsl:for-each>                                     </xsl:for-each>                                     <fo:block break-after="page">                                           <fo:leader leader-pattern="space"/>                                     </fo:block>                                     <xsl:call-template name="Line"/>                                        <xsl:call-template name="LineBreakPdf"/>                                        <fo:block/>                                     <fo:inline font-family="Arial" font-size="11pt" font-weight="bold" margin-bottom="6pt">                                         <xsl:text>7. Aantal stemmen per lijst</xsl:text>                                        </fo:inline>                                        <fo:block/>                                     <fo:block>                                          <fo:leader leader-pattern="space"/>                                     </fo:block>                                     <xsl:for-each select="rg:RG520">                                            <xsl:call-template name="OverviewVotesP22-2"/>                                      </xsl:for-each>                                     <fo:block/>                                     <fo:block>                                          <fo:leader leader-pattern="space"/>                                     </fo:block>                                     <xsl:call-template name="Line"/>                                        <xsl:call-template name="LineBreakPdf"/>                                        <fo:block/>                                     <fo:inline font-family="Arial" font-size="11pt" font-weight="bold" margin-bottom="6pt">                                         <xsl:text>8. Kiesdeler</xsl:text>                                       </fo:inline>                                        <fo:block/>                                     <fo:block>                                          <fo:leader leader-pattern="space"/>                                     </fo:block>                                     <xsl:for-each select="rg:RG520">                                            <xsl:call-template name="Kiesdeler"/>                                       </xsl:for-each>                                     <fo:block/>                                     <fo:block break-after="page">                                           <fo:leader leader-pattern="space"/>                                     </fo:block>                                     <xsl:call-template name="Line"/>                                        <xsl:call-template name="LineBreakPdf"/>                                        <fo:block/>                                     <fo:inline font-family="Arial" font-size="11pt" font-weight="bold" margin-bottom="6pt">                                         <xsl:text>9. Verdeling van de volle zetels</xsl:text>                                       </fo:inline>                                        <fo:block/>                                     <fo:block>                                          <fo:leader leader-pattern="space"/>                                     </fo:block>                                     <xsl:for-each select="rg:RG520">                                            <xsl:call-template name="OverviewFirstAssigment"/>                                      </xsl:for-each>                                     <fo:block break-after="page">                                           <fo:leader leader-pattern="space"/>                                     </fo:block>                                     <xsl:call-template name="Line"/>                                        <xsl:call-template name="LineBreakPdf"/>                                        <fo:block/>                                     <fo:inline font-family="Arial" font-size="11pt" font-weight="bold" margin-bottom="6pt">                                         <xsl:text>10. Verdeling van de restzetels</xsl:text>                                        </fo:inline>                                        <fo:block/>                                     <fo:block>                                          <fo:leader leader-pattern="space"/>                                     </fo:block>                                     <xsl:if test="eml:Election/eml:ElectionIdentifier/kr:ElectionSubcategory  != &quot;BC&quot;  and eml:Election/eml:ElectionIdentifier/kr:ElectionSubcategory != &quot;GC&quot;  and eml:Election/eml:ElectionIdentifier/kr:ElectionSubcategory  != &quot;GR1&quot; and eml:Election/eml:ElectionIdentifier/kr:ElectionSubcategory != &quot;ER1&quot; and eml:Election/eml:ElectionIdentifier/kr:ElectionSubcategory != &quot;AB1&quot;">                                         <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                              <xsl:text>Bij 19 of meer te verdelen zetels</xsl:text>                                          </fo:inline>                                            <fo:block/>                                         <fo:block>                                              <fo:leader leader-pattern="space"/>                                         </fo:block>                                         <fo:inline font-family="Arial" font-size="9pt">                                             <xsl:text>De restzetels zijn achtereenvolgens toegewezen aan de lijsten die met een zetel erbij het grootste gemiddelde aantal stemmen per zetel hebben.</xsl:text>                                         </fo:inline>                                            <fo:block/>                                         <fo:block>                                              <fo:leader leader-pattern="space"/>                                         </fo:block>                                         <xsl:for-each select="rg:RG520">                                                <xsl:call-template name="OverviewDHondtAssignment"/>                                                <xsl:call-template name="OverviewDHondtAssignmentSpecial"/>                                         </xsl:for-each>                                         <fo:block/>                                         <fo:block>                                              <fo:leader leader-pattern="space"/>                                         </fo:block>                                     </xsl:if>                                       <xsl:if test="eml:Election/eml:ElectionIdentifier/kr:ElectionSubcategory = &quot;BC&quot;  or eml:Election/eml:ElectionIdentifier/kr:ElectionSubcategory = &quot;GC&quot;  or eml:Election/eml:ElectionIdentifier/kr:ElectionSubcategory = &quot;GR1&quot; or eml:Election/eml:ElectionIdentifier/kr:ElectionSubcategory = &quot;ER1&quot; or eml:Election/eml:ElectionIdentifier/kr:ElectionSubcategory = &quot;AB1&quot;">                                            <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                              <xsl:text>Bij minder dan 19 te verdelen zetels</xsl:text>                                           </fo:inline>                                            <fo:block/>                                         <fo:block>                                              <fo:leader leader-pattern="space"/>                                         </fo:block>                                         <fo:inline font-family="Arial" font-size="9pt">                                             <xsl:text>De restzetels zijn achtereenvolgens toegewezen aan de lijsten die na verdeling van de zetels het grootste overschot aan stemmen hebben. Lijsten die minder dan </xsl:text>                                            </fo:inline>                                            <xsl:choose>                                                <xsl:when test="eml:Election/eml:ElectionIdentifier/kr:ElectionSubcategory != &quot;BC&quot;">                                                  <fo:inline font-family="Arial" font-size="9pt">                                                     <xsl:text>75%</xsl:text>                                                    </fo:inline>                                                </xsl:when>                                             <xsl:otherwise>                                                 <fo:inline font-family="Arial" font-size="9pt">                                                     <xsl:text>25%</xsl:text>                                                    </fo:inline>                                                </xsl:otherwise>                                            </xsl:choose>                                           <fo:inline font-family="Arial" font-size="9pt">                                             <xsl:text> van de kiesdeler hebben gehaald, komen niet in aanmerking voor een restzetel.</xsl:text>                                         </fo:inline>                                            <fo:block/>                                         <fo:block>                                              <fo:leader leader-pattern="space"/>                                         </fo:block>                                         <xsl:for-each select="rg:RG520">                                                <xsl:call-template name="OverviewNiemeyerAssignment"/>                                          </xsl:for-each>                                         <fo:block/>                                         <fo:block>                                              <fo:leader leader-pattern="space"/>                                         </fo:block>                                         <xsl:for-each select="rg:RG520">                                                <xsl:for-each select="rg:DHondtAssignment">                                                 <fo:inline font-family="Arial" font-size="9pt">                                                     <xsl:text>Hierna waren er nog </xsl:text>                                                   </fo:inline>                                                    <xsl:for-each select="@numberOfUnassignedSeatsBeforeDHondtAssignment">                                                      <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                                          <xsl:value-of select="string(.)"/>                                                      </fo:inline>                                                    </xsl:for-each>                                                 <fo:inline font-family="Arial" font-size="9pt">                                                     <xsl:text> restzetels te verdelen. Deze zetels zijn toegewezen aan de lijsten die met een zetel erbij het grootste gemiddelde aantal stemmen per zetel hebben. Hierbij heeft iedere lijst niet meer dan één zetel toegewezen gekregen.</xsl:text>                                                   </fo:inline>                                                    <fo:block/>                                                 <fo:block>                                                      <fo:leader leader-pattern="space"/>                                                 </fo:block>                                                 <xsl:call-template name="OverviewDHondtTableOneSeat"/>                                              </xsl:for-each>                                             <xsl:call-template name="OverviewDHondtAssignmentSpecial"/>                                         </xsl:for-each>                                     </xsl:if>                                       <fo:block/>                                     <fo:block break-after="page">                                           <fo:leader leader-pattern="space"/>                                     </fo:block>                                     <xsl:call-template name="Line"/>                                        <xsl:call-template name="LineBreakPdf"/>                                        <fo:block/>                                     <fo:inline font-family="Arial" font-size="11pt" font-weight="bold" margin-bottom="6pt">                                         <xsl:text>11. Totaal aantal zetels per politieke groepering</xsl:text>                                      </fo:inline>                                        <fo:block/>                                     <fo:block>                                          <fo:leader leader-pattern="space"/>                                     </fo:block>                                     <xsl:for-each select="rg:RG520">                                            <xsl:call-template name="OverviewListResult"/>                                      </xsl:for-each>                                     <fo:block break-after="page">                                           <fo:leader leader-pattern="space"/>                                     </fo:block>                                     <xsl:call-template name="Line"/>                                        <xsl:call-template name="LineBreakPdf"/>                                        <fo:block/>                                     <fo:inline font-family="Arial" font-size="11pt" font-weight="bold" margin-bottom="6pt">                                         <xsl:text>12. Stemmen per lijst met ten minste één zetel </xsl:text>                                        </fo:inline>                                        <xsl:call-template name="LineBreakRTF"/>                                        <xsl:call-template name="LineBreakRTF"/>                                        <fo:block break-after="page">                                           <fo:leader leader-pattern="space"/>                                     </fo:block>                                     <xsl:call-template name="LineBreakRTF"/>                                        <xsl:for-each select="rg:RG520">                                            <xsl:call-template name="OverviewCandidateResultP22-2-H"/>                                      </xsl:for-each>                                     <xsl:call-template name="Line"/>                                        <xsl:call-template name="LineBreakPdf"/>                                        <fo:block/>                                     <fo:inline font-family="Arial" font-size="11pt" font-weight="bold" margin-bottom="6pt">                                         <xsl:text>13. Toewijzing van zetels aan kandidaten en rangschikking per lijst </xsl:text>                                       </fo:inline>                                        <fo:block break-after="page">                                           <fo:leader leader-pattern="space"/>                                     </fo:block>                                     <xsl:for-each select="rg:RG520">                                            <xsl:call-template name="OverviewCandidateResultP22-2"/>                                        </xsl:for-each>                                     <fo:block/>                                     <xsl:call-template name="Line"/>                                        <xsl:call-template name="LineBreakPdf"/>                                        <fo:block/>                                     <fo:inline font-family="Arial" font-size="11pt" font-weight="bold" margin-bottom="6pt">                                         <xsl:text>14. Gekozen kandidaten in alfabetische volgorde</xsl:text>                                        </fo:inline>                                        <fo:block/>                                     <fo:block>                                          <fo:leader leader-pattern="space"/>                                     </fo:block>                                     <xsl:for-each select="rg:RG520">                                            <xsl:call-template name="OverviewElectedCandidate"/>                                            <fo:block break-after="page">                                               <fo:leader leader-pattern="space"/>                                         </fo:block>                                         <xsl:call-template name="Line"/>                                            <xsl:call-template name="LineBreakPdf"/>                                            <fo:block/>                                         <fo:inline font-family="Arial" font-size="11pt" font-weight="bold" margin-bottom="6pt">                                             <xsl:text>15. Bezwaren van aanwezige kiezers</xsl:text>                                         </fo:inline>                                            <fo:block/>                                         <fo:block>                                              <fo:leader leader-pattern="space"/>                                         </fo:block>                                         <fo:inline font-family="Arial" font-size="9pt">                                             <xsl:text>Tijdens de zitting zijn:</xsl:text>                                           </fo:inline>                                            <fo:block/>                                         <fo:block>                                              <fo:leader leader-pattern="space"/>                                         </fo:block>                                         <fo:table font-family="Arial" font-size="9pt" table-layout="fixed" width="100%" border-spacing="0">                                             <fo:table-column column-width="30pt"/>                                              <fo:table-column column-width="15pt"/>                                              <fo:table-column column-width="proportional-column-width(1)"/>                                              <xsl:variable name="altova:CurrContextGrid_21" select="."/>                                             <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">                                                  <xsl:variable name="altova:tablerows">                                                      <fo:table-row font-family="Arial" font-size="9pt">                                                          <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="before">                                                              <fo:block text-align="left"/>                                                           </fo:table-cell>                                                            <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="before">                                                              <fo:block text-align="left">                                                                    <fo:inline font-family="Arial" font-size="9pt">                                                                     <xsl:text>□ </xsl:text>                                                                 </fo:inline>                                                                </fo:block>                                                         </fo:table-cell>                                                            <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="before">                                                              <fo:block text-align="left">                                                                    <fo:inline font-family="Arial" font-size="9pt">                                                                     <xsl:text>geen bezwaren ingebracht.</xsl:text>                                                                  </fo:inline>                                                                </fo:block>                                                         </fo:table-cell>                                                        </fo:table-row>                                                     <fo:table-row font-family="Arial" font-size="9pt">                                                          <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="before">                                                              <fo:block text-align="left"/>                                                           </fo:table-cell>                                                            <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="before">                                                              <fo:block text-align="left">                                                                    <fo:inline font-family="Arial" font-size="9pt">                                                                     <xsl:text>□ </xsl:text>                                                                 </fo:inline>                                                                </fo:block>                                                         </fo:table-cell>                                                            <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="before">                                                              <fo:block text-align="left">                                                                    <fo:inline font-family="Arial" font-size="9pt">                                                                     <xsl:text>bezwaren ingebracht: zie de bijlage met opmerkingen van het centraal stembureau.</xsl:text>                                                                   </fo:inline>                                                                </fo:block>                                                         </fo:table-cell>                                                        </fo:table-row>                                                 </xsl:variable>                                                 <xsl:choose>                                                        <xsl:when test="string($altova:tablerows)">                                                         <xsl:copy-of select="$altova:tablerows"/>                                                       </xsl:when>                                                     <xsl:otherwise>                                                         <fo:table-row>                                                              <fo:table-cell>                                                                 <fo:block/>                                                             </fo:table-cell>                                                            </fo:table-row>                                                     </xsl:otherwise>                                                    </xsl:choose>                                               </fo:table-body>                                            </fo:table>                                         <fo:block>                                              <fo:leader leader-pattern="space"/>                                         </fo:block>                                         <fo:block break-after="page">                                               <fo:leader leader-pattern="space"/>                                         </fo:block>                                         <xsl:call-template name="Line"/>                                            <xsl:call-template name="LineBreakPdf"/>                                            <fo:block/>                                         <fo:inline font-family="Arial" font-size="11pt" font-weight="bold" margin-bottom="6pt">                                             <xsl:text>16. Leden hoofd-/centraal stembureau</xsl:text>                                           </fo:inline>                                            <fo:block/>                                         <fo:block>                                              <fo:leader leader-pattern="space"/>                                         </fo:block>                                         <fo:inline font-family="Arial" font-size="9pt">                                             <xsl:text>Alle leden van het hoofd- dan wel centraal, stembureau die aanwezig zijn na afloop van de telling van de stemmen, noteren hieronder hun naam. Ga vervolgens naar rubriek 17 voor de ondertekening.</xsl:text>                                         </fo:inline>                                            <fo:block/>                                         <fo:block>                                              <fo:leader leader-pattern="space"/>                                         </fo:block>                                         <xsl:call-template name="CommitteeMemberNames">                                             <xsl:with-param name="membertitle" select="&apos;leden&apos;"/>                                             <xsl:with-param name="no_of_lines" select="5"/>                                         </xsl:call-template>                                            <fo:block/>                                     </xsl:for-each>                                 </xsl:for-each>                             </xsl:for-each>                         </xsl:for-each>                     </fo:block>                 </fo:block>             </fo:flow>          </fo:page-sequence>         <fo:page-sequence force-page-count="no-force" master-reference="page-master-1" initial-page-number="auto" format="1">               <fo:static-content flow-name="odd-page-footer">                 <fo:block-container height="1.20in" overflow="hidden" display-align="after">                        <fo:block>                          <xsl:call-template name="LegacyFooter"/>                        </fo:block>                 </fo:block-container>               </fo:static-content>                <fo:static-content flow-name="even-page-footer">                    <fo:block-container height="1.20in" overflow="hidden" display-align="after">                        <fo:block>                          <xsl:call-template name="LegacyFooter"/>                        </fo:block>                 </fo:block-container>               </fo:static-content>                <fo:flow flow-name="xsl-region-body">                   <fo:block>                      <fo:inline-container>                           <fo:block>                              <xsl:text>&#x200B;</xsl:text>                           </fo:block>                     </fo:inline-container>                      <fo:block font-family="Arial" font-size="9pt" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">                         <xsl:for-each select="$XML">                                <xsl:for-each select="eml:EML">                                 <xsl:call-template name="Line"/>                                    <xsl:call-template name="LineBreakPdf"/>                                    <fo:block/>                                 <fo:inline font-family="Arial" font-size="11pt" font-weight="bold" margin-bottom="6pt">                                     <xsl:text>17. Ondertekening leden hoofd-/centraal stembureau</xsl:text>                                 </fo:inline>                                    <fo:block/>                                 <fo:block>                                      <fo:leader leader-pattern="space"/>                                 </fo:block>                                 <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>Alle leden van het hoofd-, dan wel centraal stembureau die in rubriek 16 hun naam hebben genoteerd, ondertekenen het proces-verbaal. Houd hierbij de volgorde aan van rubriek 16. De leden van het hoofd-, dan wel centraal stembureau verklaren hiermee dat de tellingen, waarvan de resultaten zijn weergegeven in dit proces-verbaal, zijn uitgevoerd volgens de voorgeschreven procedures.</xsl:text>                                 </fo:inline>                                    <fo:block/>                                 <fo:block>                                      <fo:leader leader-pattern="space"/>                                 </fo:block>                                 <xsl:call-template name="CommitteeMemberSignatures">                                        <xsl:with-param name="membertitle" select="&apos;leden&apos;"/>                                     <xsl:with-param name="no_of_lines" select="5"/>                                 </xsl:call-template>                                    <fo:block/>                             </xsl:for-each>                         </xsl:for-each>                     </fo:block>                 </fo:block>                 <fo:block id="SV_RefID_PageTotal"/>             </fo:flow>          </fo:page-sequence>     </fo:root>  </xsl:template> <xsl:template name="OverviewElectoralDistricts">        <xsl:for-each select="rg:RG520">            <xsl:for-each select="rg:ElectoralDistrictsOverview">               <fo:table border-bottom="0.01in solid #000" border-top="0.01in solid #000" font-family="Arial" font-size="smaller" table-layout="fixed" width="90%" border-spacing="0">                 <fo:table-column column-width="55pt"/>                  <fo:table-column column-width="proportional-column-width(1)"/>                  <xsl:variable name="altova:CurrContextGrid_22" select="."/>                 <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">                      <xsl:variable name="altova:tablerows">                          <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell font-family="Arial" font-size="smaller" padding="1" display-align="before">                                  <fo:block text-align="left">                                        <xsl:for-each select="rg:ElectoralDistrictName">                                            <xsl:choose>                                                <xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">                                                    <fo:inline-container>                                                       <fo:block>                                                          <xsl:text>&#x200B;</xsl:text>                                                       </fo:block>                                                 </fo:inline-container>                                                  <fo:block font-family="Arial" font-size="9pt" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">                                                     <fo:inline font-family="Arial" font-size="9pt">                                                         <xsl:value-of select="position()"/>                                                     </fo:inline>                                                        <fo:inline font-family="Arial" font-size="9pt">                                                         <xsl:text>.</xsl:text>                                                      </fo:inline>                                                    </fo:block>                                             </xsl:when>                                             <xsl:otherwise>                                                 <fo:inline font-family="Arial" font-size="9pt">                                                     <xsl:value-of select="position()"/>                                                 </fo:inline>                                                    <fo:inline font-family="Arial" font-size="9pt">                                                     <xsl:text>.</xsl:text>                                                  </fo:inline>                                                    <fo:block/>                                             </xsl:otherwise>                                            </xsl:choose>                                       </xsl:for-each>                                 </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="smaller" padding="1" display-align="before">                                  <fo:block text-align="left">                                        <xsl:for-each select="rg:ElectoralDistrictName">                                            <xsl:choose>                                                <xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">                                                    <fo:inline-container>                                                       <fo:block>                                                          <xsl:text>&#x200B;</xsl:text>                                                       </fo:block>                                                 </fo:inline-container>                                                  <fo:block font-family="Arial" font-size="9pt" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">                                                     <xsl:variable name="value-of-template_23">                                                          <xsl:apply-templates/>                                                      </xsl:variable>                                                     <xsl:choose>                                                            <xsl:when test="contains(string($value-of-template_23),'&#x200B;')">                                                                <fo:block font-family="Arial" font-size="9pt">                                                                  <xsl:copy-of select="$value-of-template_23"/>                                                               </fo:block>                                                         </xsl:when>                                                         <xsl:otherwise>                                                             <fo:inline font-family="Arial" font-size="9pt">                                                                 <xsl:copy-of select="$value-of-template_23"/>                                                               </fo:inline>                                                            </xsl:otherwise>                                                        </xsl:choose>                                                   </fo:block>                                             </xsl:when>                                             <xsl:otherwise>                                                 <xsl:variable name="value-of-template_24">                                                      <xsl:apply-templates/>                                                  </xsl:variable>                                                 <xsl:choose>                                                        <xsl:when test="contains(string($value-of-template_24),'&#x200B;')">                                                            <fo:block font-family="Arial" font-size="9pt">                                                              <xsl:copy-of select="$value-of-template_24"/>                                                           </fo:block>                                                     </xsl:when>                                                     <xsl:otherwise>                                                         <fo:inline font-family="Arial" font-size="9pt">                                                             <xsl:copy-of select="$value-of-template_24"/>                                                           </fo:inline>                                                        </xsl:otherwise>                                                    </xsl:choose>                                                   <fo:block/>                                             </xsl:otherwise>                                            </xsl:choose>                                       </xsl:for-each>                                 </fo:block>                             </fo:table-cell>                            </fo:table-row>                     </xsl:variable>                     <xsl:choose>                            <xsl:when test="string($altova:tablerows)">                             <xsl:copy-of select="$altova:tablerows"/>                           </xsl:when>                         <xsl:otherwise>                             <fo:table-row>                                  <fo:table-cell>                                     <fo:block/>                                 </fo:table-cell>                                </fo:table-row>                         </xsl:otherwise>                        </xsl:choose>                   </fo:table-body>                </fo:table>         </xsl:for-each>     </xsl:for-each> </xsl:template> <xsl:template name="OverviewFirstAssigment">        <xsl:param name="isEK" select="0"/>     <xsl:for-each select="rg:FirstAssignment">          <xsl:if test="rg:FirstAssignmentLine">              <fo:table border-bottom="0.01in solid #000" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" table-layout="fixed" width="100%" border-spacing="0">                    <fo:table-column column-width="30pt"/>                  <fo:table-column column-width="70pt"/>                  <fo:table-column column-width="proportional-column-width(1)"/>                  <fo:table-column column-width="20pt"/>                  <fo:table-column column-width="proportional-column-width(1)"/>                  <fo:table-column column-width="20pt"/>                  <fo:table-column column-width="proportional-column-width(1)"/>                  <xsl:variable name="altova:CurrContextGrid_25" select="."/>                 <fo:table-header font-family="Arial" font-size="9pt" start-indent="0pt">                        <xsl:variable name="altova:tablerows">                          <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell number-columns-spanned="2" border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                 <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                            <xsl:text>lijstnummer</xsl:text>                                        </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                    <fo:block text-align="right">                                       <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                            <xsl:text>aantal stemmen</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                    <fo:block text-align="center">                                      <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                            <xsl:text>:</xsl:text>                                      </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                    <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                            <xsl:text>kiesdeler</xsl:text>                                      </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                    <fo:block text-align="center">                                      <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                            <xsl:text>=</xsl:text>                                      </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                    <fo:block text-align="right">                                       <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                            <xsl:text>aantal volle zetels</xsl:text>                                        </fo:inline>                                        <fo:block/>                                 </fo:block>                             </fo:table-cell>                            </fo:table-row>                     </xsl:variable>                     <xsl:choose>                            <xsl:when test="string($altova:tablerows)">                             <xsl:copy-of select="$altova:tablerows"/>                           </xsl:when>                         <xsl:otherwise>                             <fo:table-row>                                  <fo:table-cell>                                     <fo:block/>                                 </fo:table-cell>                                </fo:table-row>                         </xsl:otherwise>                        </xsl:choose>                   </fo:table-header>                  <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">                      <xsl:variable name="altova:tablerows">                          <xsl:for-each select="rg:FirstAssignmentLine">                              <fo:table-row font-family="Arial" font-size="9pt">                                  <fo:table-cell font-family="Arial" font-size="9pt" padding-top="2pt" padding="1" display-align="center">                                        <fo:block text-align="right">                                           <xsl:for-each select="rg:ListOrCombinedList">                                               <xsl:for-each select="@combinationId">                                                  <fo:inline font-family="Arial" font-size="9pt">                                                     <xsl:value-of select="string(.)"/>                                                  </fo:inline>                                                </xsl:for-each>                                             <xsl:for-each select="@listNumber">                                                 <fo:inline font-family="Arial" font-size="9pt">                                                     <xsl:value-of select="string(.)"/>                                                  </fo:inline>                                                </xsl:for-each>                                         </xsl:for-each>                                     </fo:block>                                 </fo:table-cell>                                    <fo:table-cell font-family="Arial" font-size="9pt" padding-left="5pt" padding-top="2pt" padding="1" display-align="center">                                     <fo:block text-align="left">                                            <xsl:if test="count(rg:ListOrCombinedList/rg:ListInCombination) &gt;0">                                             <fo:inline font-family="Arial" font-size="9pt">                                                 <xsl:text>(</xsl:text>                                              </fo:inline>                                                <xsl:for-each select="rg:ListOrCombinedList">                                                   <xsl:for-each select="rg:ListInCombination">                                                        <xsl:variable name="value-of-template_28">                                                          <xsl:apply-templates/>                                                      </xsl:variable>                                                     <xsl:choose>                                                            <xsl:when test="contains(string($value-of-template_28),'&#x200B;')">                                                                <fo:block font-family="Arial" font-size="9pt">                                                                  <xsl:copy-of select="$value-of-template_28"/>                                                               </fo:block>                                                         </xsl:when>                                                         <xsl:otherwise>                                                             <fo:inline font-family="Arial" font-size="9pt">                                                                 <xsl:copy-of select="$value-of-template_28"/>                                                               </fo:inline>                                                            </xsl:otherwise>                                                        </xsl:choose>                                                       <xsl:if test="position() != last()">                                                            <fo:inline font-family="Arial" font-size="9pt">                                                             <xsl:text>, </xsl:text>                                                         </fo:inline>                                                        </xsl:if>                                                   </xsl:for-each>                                             </xsl:for-each>                                             <fo:inline font-family="Arial" font-size="9pt">                                                 <xsl:text>)</xsl:text>                                              </fo:inline>                                            </xsl:if>                                           <xsl:choose>                                                <xsl:when test="//kr:ElectionSubcategory[text()= &apos;PS2&apos; or text()= &apos;TK&apos;]">                                                   <xsl:for-each select="rg:ListOrCombinedList">                                                       <xsl:if test="@districtNumber">                                                         <fo:inline font-family="Arial" font-size="9pt">                                                             <xsl:text>(Kieskring </xsl:text>                                                            </fo:inline>                                                            <xsl:for-each select="@districtNumber">                                                             <fo:inline font-family="Arial" font-size="9pt">                                                                 <xsl:value-of select="string(.)"/>                                                              </fo:inline>                                                                <fo:inline font-family="Arial" font-size="9pt">                                                                 <xsl:text>)</xsl:text>                                                              </fo:inline>                                                            </xsl:for-each>                                                     </xsl:if>                                                   </xsl:for-each>                                             </xsl:when>                                             <xsl:when test="//kr:ElectionSubcategory[text()= &apos;EK&apos;]">                                                  <xsl:for-each select="rg:ListOrCombinedList">                                                       <xsl:if test="@provinceName">                                                           <xsl:for-each select="@provinceName">                                                               <fo:inline font-family="Arial" font-size="9pt">                                                                 <xsl:text>(</xsl:text>                                                              </fo:inline>                                                                <fo:inline font-family="Arial" font-size="9pt">                                                                 <xsl:value-of select="string(.)"/>                                                              </fo:inline>                                                                <fo:inline font-family="Arial" font-size="9pt">                                                                 <xsl:text>)</xsl:text>                                                              </fo:inline>                                                            </xsl:for-each>                                                     </xsl:if>                                                   </xsl:for-each>                                             </xsl:when>                                         </xsl:choose>                                       </fo:block>                                 </fo:table-cell>                                    <fo:table-cell font-family="Arial" font-size="9pt" padding-top="2pt" padding="1" display-align="before">                                        <fo:block text-align="right">                                           <xsl:for-each select="rg:Votes">                                                <xsl:variable name="value-of-template_31">                                                  <xsl:apply-templates/>                                              </xsl:variable>                                             <xsl:choose>                                                    <xsl:when test="contains(string($value-of-template_31),'&#x200B;')">                                                        <fo:block font-family="Arial" font-size="9pt">                                                          <xsl:copy-of select="$value-of-template_31"/>                                                       </fo:block>                                                 </xsl:when>                                                 <xsl:otherwise>                                                     <fo:inline font-family="Arial" font-size="9pt">                                                         <xsl:copy-of select="$value-of-template_31"/>                                                       </fo:inline>                                                    </xsl:otherwise>                                                </xsl:choose>                                           </xsl:for-each>                                     </fo:block>                                 </fo:table-cell>                                    <fo:table-cell font-family="Arial" font-size="9pt" padding-top="2pt" padding="1" display-align="before">                                        <fo:block text-align="center">                                          <fo:inline font-family="Arial" font-size="9pt">                                             <xsl:text>:</xsl:text>                                          </fo:inline>                                        </fo:block>                                 </fo:table-cell>                                    <fo:table-cell font-family="Arial" font-size="9pt" padding-top="2pt" padding="1" display-align="before">                                        <fo:block text-align="left">                                            <xsl:for-each select="..">                                              <xsl:for-each select="..">                                                  <xsl:for-each select="rg:ElectoralQuota">                                                       <xsl:call-template name="ElectionFraction"/>                                                    </xsl:for-each>                                             </xsl:for-each>                                         </xsl:for-each>                                     </fo:block>                                 </fo:table-cell>                                    <fo:table-cell font-family="Arial" font-size="9pt" padding-top="2pt" padding="1" display-align="before">                                        <fo:block text-align="center">                                          <fo:inline font-family="Arial" font-size="9pt">                                             <xsl:text>=</xsl:text>                                          </fo:inline>                                        </fo:block>                                 </fo:table-cell>                                    <fo:table-cell font-family="Arial" font-size="9pt" padding-top="2pt" padding="1" display-align="before">                                        <fo:block text-align="right">                                           <xsl:for-each select="rg:Seats">                                                <xsl:variable name="value-of-template_32">                                                  <xsl:apply-templates/>                                              </xsl:variable>                                             <xsl:choose>                                                    <xsl:when test="contains(string($value-of-template_32),'&#x200B;')">                                                        <fo:block font-family="Arial" font-size="9pt">                                                          <xsl:copy-of select="$value-of-template_32"/>                                                       </fo:block>                                                 </xsl:when>                                                 <xsl:otherwise>                                                     <fo:inline font-family="Arial" font-size="9pt">                                                         <xsl:copy-of select="$value-of-template_32"/>                                                       </fo:inline>                                                    </xsl:otherwise>                                                </xsl:choose>                                           </xsl:for-each>                                     </fo:block>                                 </fo:table-cell>                                </fo:table-row>                         </xsl:for-each>                     </xsl:variable>                     <xsl:choose>                            <xsl:when test="string($altova:tablerows)">                             <xsl:copy-of select="$altova:tablerows"/>                           </xsl:when>                         <xsl:otherwise>                             <fo:table-row>                                  <fo:table-cell>                                     <fo:block/>                                 </fo:table-cell>                                </fo:table-row>                         </xsl:otherwise>                        </xsl:choose>                   </fo:table-body>                </fo:table>         </xsl:if>           <xsl:call-template name="LineBreakTable"/>          <fo:table font-family="Arial" font-size="9pt" table-layout="fixed" width="100%" border-spacing="2pt">               <fo:table-column column-width="200pt"/>             <fo:table-column column-width="100pt"/>             <fo:table-column column-width="15pt"/>              <xsl:variable name="altova:CurrContextGrid_33" select="."/>             <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">                  <xsl:variable name="altova:tablerows">                      <fo:table-row font-family="Arial" font-size="9pt">                          <fo:table-cell font-family="Arial" font-size="9pt" padding="2pt" display-align="center">                                <fo:block text-align="left">                                    <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>Totaal aantal zetels</xsl:text>                                   </fo:inline>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell font-family="Arial" font-size="9pt" padding="2pt" display-align="center">                                <fo:block text-align="right">                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:value-of select="rg:ResidualSeats + rg:TotalSeatsAssigned"/>                                   </fo:inline>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell font-family="Arial" font-size="9pt" padding="2pt" display-align="center">                                <fo:block text-align="left"/>                           </fo:table-cell>                        </fo:table-row>                     <fo:table-row font-family="Arial" font-size="9pt">                          <fo:table-cell font-family="Arial" font-size="9pt" padding="2pt" display-align="center">                                <fo:block text-align="left">                                    <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>Totaal aantal toegewezen volle zetels</xsl:text>                                  </fo:inline>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="2pt" display-align="center">                              <fo:block text-align="right">                                   <xsl:for-each select="rg:TotalSeatsAssigned">                                       <xsl:variable name="value-of-template_34">                                          <xsl:apply-templates/>                                      </xsl:variable>                                     <xsl:choose>                                            <xsl:when test="contains(string($value-of-template_34),'&#x200B;')">                                                <fo:block font-family="Arial" font-size="9pt">                                                  <xsl:copy-of select="$value-of-template_34"/>                                               </fo:block>                                         </xsl:when>                                         <xsl:otherwise>                                             <fo:inline font-family="Arial" font-size="9pt">                                                 <xsl:copy-of select="$value-of-template_34"/>                                               </fo:inline>                                            </xsl:otherwise>                                        </xsl:choose>                                   </xsl:for-each>                             </fo:block>                         </fo:table-cell>                            <fo:table-cell font-family="Arial" font-size="9pt" padding="2pt" display-align="center">                                <fo:block text-align="left">                                    <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>–</xsl:text>                                  </fo:inline>                                </fo:block>                         </fo:table-cell>                        </fo:table-row>                     <fo:table-row font-family="Arial" font-size="9pt">                          <fo:table-cell font-family="Arial" font-size="9pt" padding="2pt" display-align="center">                                <fo:block text-align="left">                                    <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>Restzetels</xsl:text>                                 </fo:inline>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell font-family="Arial" font-size="9pt" padding="2pt" display-align="center">                                <fo:block text-align="right">                                   <xsl:for-each select="rg:ResidualSeats">                                        <xsl:variable name="value-of-template_35">                                          <xsl:apply-templates/>                                      </xsl:variable>                                     <xsl:choose>                                            <xsl:when test="contains(string($value-of-template_35),'&#x200B;')">                                                <fo:block font-family="Arial" font-size="9pt">                                                  <xsl:copy-of select="$value-of-template_35"/>                                               </fo:block>                                         </xsl:when>                                         <xsl:otherwise>                                             <fo:inline font-family="Arial" font-size="9pt">                                                 <xsl:copy-of select="$value-of-template_35"/>                                               </fo:inline>                                            </xsl:otherwise>                                        </xsl:choose>                                   </xsl:for-each>                             </fo:block>                         </fo:table-cell>                            <fo:table-cell font-family="Arial" font-size="9pt" padding="2pt" display-align="center">                                <fo:block text-align="left"/>                           </fo:table-cell>                        </fo:table-row>                 </xsl:variable>                 <xsl:choose>                        <xsl:when test="string($altova:tablerows)">                         <xsl:copy-of select="$altova:tablerows"/>                       </xsl:when>                     <xsl:otherwise>                         <fo:table-row>                              <fo:table-cell>                                 <fo:block/>                             </fo:table-cell>                            </fo:table-row>                     </xsl:otherwise>                    </xsl:choose>               </fo:table-body>            </fo:table>     </xsl:for-each> </xsl:template> <xsl:template name="OverviewDHondtAssignment">      <xsl:param name="articleLoting" select="&apos;&apos;"/>     <xsl:for-each select="rg:DHondtAssignment">         <xsl:variable name="numberOfSteps" select="./@maxNumberOfAssignments"/>         <xsl:choose>                <xsl:when test="$numberOfSteps  &lt;= 2">                   <xsl:call-template name="OverviewDHondtTable2">                     <xsl:with-param name="maxNumberOfAssignments" select="$numberOfSteps"/>                 </xsl:call-template>                </xsl:when>             <xsl:when test="$numberOfSteps  = 3">                   <xsl:call-template name="OverviewDHondtTable3">                     <xsl:with-param name="maxNumberOfAssignments" select="$numberOfSteps"/>                 </xsl:call-template>                </xsl:when>             <xsl:when test="$numberOfSteps  = 4">                   <xsl:call-template name="OverviewDHondtTable4">                     <xsl:with-param name="maxNumberOfAssignments" select="$numberOfSteps"/>                 </xsl:call-template>                </xsl:when>             <xsl:otherwise>                 <xsl:call-template name="OverviewDHondtTable6">                     <xsl:with-param name="maxNumberOfAssignments" select="$numberOfSteps"/>                     <xsl:with-param name="offset" select="0"/>                  </xsl:call-template>                    <xsl:if test="$numberOfSteps &gt; 6">                       <xsl:call-template name="LineBreak"/>                       <xsl:if test="count( rg:DHondtAssignmentLine )  &gt;= 15">                          <fo:block break-after="page">                               <fo:leader leader-pattern="space"/>                         </fo:block>                     </xsl:if>                       <xsl:call-template name="OverviewDHondtTable6">                         <xsl:with-param name="maxNumberOfAssignments" select="$numberOfSteps"/>                         <xsl:with-param name="offset" select="6"/>                      </xsl:call-template>                    </xsl:if>                   <xsl:if test="$numberOfSteps &gt; 12">                      <xsl:call-template name="LineBreak"/>                       <xsl:if test="count( rg:DHondtAssignmentLine )  &gt;= 15">                          <fo:block break-after="page">                               <fo:leader leader-pattern="space"/>                         </fo:block>                     </xsl:if>                       <xsl:call-template name="OverviewDHondtTable6">                         <xsl:with-param name="maxNumberOfAssignments" select="$numberOfSteps"/>                         <xsl:with-param name="offset" select="12"/>                     </xsl:call-template>                    </xsl:if>               </xsl:otherwise>            </xsl:choose>           <xsl:for-each select="rg:Allotting">                <fo:block>                  <fo:leader leader-pattern="space"/>             </fo:block>             <fo:block>                  <fo:leader leader-pattern="space"/>             </fo:block>             <fo:inline font-family="Arial" font-size="9pt">                 <xsl:text>Overeenkomstig artikel </xsl:text>                </fo:inline>                <xsl:choose>                    <xsl:when test="$articleLoting != &quot;&quot;">                        <fo:inline font-family="Arial" font-size="9pt">                         <xsl:value-of select="$articleLoting"/>                     </fo:inline>                    </xsl:when>                 <xsl:otherwise>                     <xsl:choose>                            <xsl:when test="@article = &quot;P13&quot;">                                <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>P 13</xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:when test="@article = &quot;U13&quot;">                                <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>U 13</xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>P 7</xsl:text>                                </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:otherwise>                </xsl:choose>               <fo:inline font-family="Arial" font-size="9pt">                 <xsl:text>, eerste lid van de Kieswet heeft een loting plaatsgevonden tussen </xsl:text>                </fo:inline>                <xsl:for-each select="rg:Winner">                   <xsl:call-template name="ListOrCombinedList"/>              </xsl:for-each>             <xsl:for-each select="rg:Looser">                   <fo:inline font-family="Arial" font-size="9pt">                     <xsl:text> en </xsl:text>                   </fo:inline>                    <xsl:call-template name="ListOrCombinedList"/>              </xsl:for-each>             <fo:inline font-family="Arial" font-size="9pt">                 <xsl:text>. Als gevolg hiervan is een restzetel toegewezen aan </xsl:text>              </fo:inline>                <xsl:for-each select="rg:Winner">                   <xsl:call-template name="ListOrCombinedList"/>              </xsl:for-each>             <fo:inline font-family="Arial" font-size="9pt">                 <xsl:text>.</xsl:text>              </fo:inline>            </xsl:for-each>     </xsl:for-each> </xsl:template> <xsl:template name="OverviewListResult">        <xsl:if test="rg:OverviewOfCandidatesAndResults">           <fo:table border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" table-layout="fixed" width="100%" border-spacing="0">               <fo:table-column column-width="proportional-column-width(1)"/>              <fo:table-column column-width="90pt"/>              <fo:table-column column-width="80pt"/>              <xsl:variable name="altova:CurrContextGrid_36" select="."/>             <fo:table-header font-family="Arial" font-size="9pt" start-indent="0pt">                    <xsl:variable name="altova:tablerows">                      <fo:table-row font-family="Arial" font-size="9pt">                          <fo:table-cell border-bottom="0.01in solid #000" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                             <fo:block text-align="left">                                    <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                        <xsl:text>lijstnaam</xsl:text>                                  </fo:inline>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell border-bottom="0.01in solid #000" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                             <fo:block text-align="center">                                  <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                        <xsl:text>lijstnummer</xsl:text>                                    </fo:inline>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell border-bottom="0.01in solid #000" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                             <fo:block text-align="center">                                  <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                        <xsl:text>aantal zetels</xsl:text>                                  </fo:inline>                                </fo:block>                         </fo:table-cell>                        </fo:table-row>                 </xsl:variable>                 <xsl:choose>                        <xsl:when test="string($altova:tablerows)">                         <xsl:copy-of select="$altova:tablerows"/>                       </xsl:when>                     <xsl:otherwise>                         <fo:table-row>                              <fo:table-cell>                                 <fo:block/>                             </fo:table-cell>                            </fo:table-row>                     </xsl:otherwise>                    </xsl:choose>               </fo:table-header>              <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">                  <xsl:variable name="altova:tablerows">                      <xsl:for-each select="rg:OverviewOfCandidatesAndResults">                           <xsl:for-each select="rg:ListGroupAndResults">                              <xsl:sort select="rg:Seats" data-type="number" order="descending"/>                             <xsl:sort select="rg:Votes" data-type="number" order="descending"/>                             <xsl:sort select="eml:AffiliationIdentifier/@Id" data-type="number" order="ascending"/>                             <fo:table-row font-family="Arial" font-size="9pt">                                  <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="before">                                      <fo:block text-align="left">                                            <xsl:call-template name="PartyNamePdfWrapped"/>                                     </fo:block>                                 </fo:table-cell>                                    <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="before">                                      <fo:block text-align="center">                                          <xsl:for-each select="eml:AffiliationIdentifier">                                               <xsl:for-each select="@Id">                                                 <fo:inline font-family="Arial" font-size="9pt">                                                     <xsl:value-of select="string(.)"/>                                                  </fo:inline>                                                </xsl:for-each>                                         </xsl:for-each>                                     </fo:block>                                 </fo:table-cell>                                    <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="before">                                      <fo:block text-align="center">                                          <xsl:for-each select="rg:Seats">                                                <xsl:variable name="value-of-template_38">                                                  <xsl:apply-templates/>                                              </xsl:variable>                                             <xsl:choose>                                                    <xsl:when test="contains(string($value-of-template_38),'&#x200B;')">                                                        <fo:block font-family="Arial" font-size="9pt">                                                          <xsl:copy-of select="$value-of-template_38"/>                                                       </fo:block>                                                 </xsl:when>                                                 <xsl:otherwise>                                                     <fo:inline font-family="Arial" font-size="9pt">                                                         <xsl:copy-of select="$value-of-template_38"/>                                                       </fo:inline>                                                    </xsl:otherwise>                                                </xsl:choose>                                           </xsl:for-each>                                     </fo:block>                                 </fo:table-cell>                                </fo:table-row>                         </xsl:for-each>                     </xsl:for-each>                 </xsl:variable>                 <xsl:choose>                        <xsl:when test="string($altova:tablerows)">                         <xsl:copy-of select="$altova:tablerows"/>                       </xsl:when>                     <xsl:otherwise>                         <fo:table-row>                              <fo:table-cell>                                 <fo:block/>                             </fo:table-cell>                            </fo:table-row>                     </xsl:otherwise>                    </xsl:choose>               </fo:table-body>            </fo:table>     </xsl:if>       <fo:block>          <fo:leader leader-pattern="space"/>     </fo:block> </xsl:template> <xsl:template name="OverviewListResultAndSeats">        <xsl:if test="rg:OverviewOfCandidatesAndResults">           <fo:table border-bottom="0.01in solid #000" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" table-layout="fixed" width="100%" border-spacing="0">                <fo:table-column column-width="proportional-column-width(1)"/>              <fo:table-column column-width="100pt"/>             <fo:table-column column-width="100pt"/>             <fo:table-column column-width="100pt"/>             <xsl:variable name="altova:CurrContextGrid_39" select="."/>             <fo:table-header font-family="Arial" font-size="9pt" start-indent="0pt">                    <xsl:variable name="altova:tablerows">                      <fo:table-row font-family="Arial" font-size="9pt">                          <fo:table-cell border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                <fo:block text-align="left">                                    <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>Aanduiding van de groepering</xsl:text>                                   </fo:inline>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                <fo:block text-align="left">                                    <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>Lijst</xsl:text>                                  </fo:inline>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                <fo:block text-align="left">                                    <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>Totaal aantal stemmen</xsl:text>                                  </fo:inline>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                <fo:block text-align="left">                                    <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>Toegewezen aantal zetels</xsl:text>                                   </fo:inline>                                </fo:block>                         </fo:table-cell>                        </fo:table-row>                 </xsl:variable>                 <xsl:choose>                        <xsl:when test="string($altova:tablerows)">                         <xsl:copy-of select="$altova:tablerows"/>                       </xsl:when>                     <xsl:otherwise>                         <fo:table-row>                              <fo:table-cell>                                 <fo:block/>                             </fo:table-cell>                            </fo:table-row>                     </xsl:otherwise>                    </xsl:choose>               </fo:table-header>              <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">                  <xsl:variable name="altova:tablerows">                      <xsl:for-each select="rg:OverviewOfCandidatesAndResults">                           <xsl:for-each select="rg:ListGroupAndResults">                              <xsl:sort select="eml:AffiliationIdentifier/@Id" data-type="number" order="ascending"/>                             <fo:table-row font-family="Arial" font-size="9pt">                                  <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="before">                                      <fo:block text-align="left">                                            <xsl:call-template name="PartyNamePdfWrapped"/>                                     </fo:block>                                 </fo:table-cell>                                    <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="before">                                      <fo:block text-align="left">                                            <xsl:for-each select="eml:AffiliationIdentifier">                                               <xsl:for-each select="@Id">                                                 <fo:inline font-family="Arial" font-size="9pt">                                                     <xsl:value-of select="string(.)"/>                                                  </fo:inline>                                                </xsl:for-each>                                         </xsl:for-each>                                     </fo:block>                                 </fo:table-cell>                                    <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="before">                                      <fo:block text-align="left">                                            <xsl:for-each select="rg:Votes">                                                <xsl:variable name="value-of-template_41">                                                  <xsl:apply-templates/>                                              </xsl:variable>                                             <xsl:choose>                                                    <xsl:when test="contains(string($value-of-template_41),'&#x200B;')">                                                        <fo:block font-family="Arial" font-size="9pt">                                                          <xsl:copy-of select="$value-of-template_41"/>                                                       </fo:block>                                                 </xsl:when>                                                 <xsl:otherwise>                                                     <fo:inline font-family="Arial" font-size="9pt">                                                         <xsl:copy-of select="$value-of-template_41"/>                                                       </fo:inline>                                                    </xsl:otherwise>                                                </xsl:choose>                                           </xsl:for-each>                                     </fo:block>                                 </fo:table-cell>                                    <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="before">                                      <fo:block text-align="left">                                            <xsl:for-each select="rg:Seats">                                                <xsl:variable name="value-of-template_42">                                                  <xsl:apply-templates/>                                              </xsl:variable>                                             <xsl:choose>                                                    <xsl:when test="contains(string($value-of-template_42),'&#x200B;')">                                                        <fo:block font-family="Arial" font-size="9pt">                                                          <xsl:copy-of select="$value-of-template_42"/>                                                       </fo:block>                                                 </xsl:when>                                                 <xsl:otherwise>                                                     <fo:inline font-family="Arial" font-size="9pt">                                                         <xsl:copy-of select="$value-of-template_42"/>                                                       </fo:inline>                                                    </xsl:otherwise>                                                </xsl:choose>                                           </xsl:for-each>                                     </fo:block>                                 </fo:table-cell>                                </fo:table-row>                         </xsl:for-each>                     </xsl:for-each>                 </xsl:variable>                 <xsl:choose>                        <xsl:when test="string($altova:tablerows)">                         <xsl:copy-of select="$altova:tablerows"/>                       </xsl:when>                     <xsl:otherwise>                         <fo:table-row>                              <fo:table-cell>                                 <fo:block/>                             </fo:table-cell>                            </fo:table-row>                     </xsl:otherwise>                    </xsl:choose>               </fo:table-body>            </fo:table>     </xsl:if>   </xsl:template> <xsl:template name="OverviewCandidateResultP22-2-H">        <xsl:for-each select="rg:OverviewOfCandidatesAndResults">           <xsl:for-each select="rg:ListGroupAndResults">              <xsl:if test="rg:Seats &gt; 0">                 <xsl:for-each select="rg:ListAndResults">                       <xsl:call-template name="PartyHeader4Lines">                            <xsl:with-param name="withList" select="false()"/>                          <xsl:with-param name="withVotes" select="true()"/>                          <xsl:with-param name="withListnumber" select="true()"/>                     </xsl:call-template>                        <xsl:call-template name="O3-H-CandidateVotes"/>                     <fo:block break-after="page">                           <fo:leader leader-pattern="space"/>                     </fo:block>                     <xsl:call-template name="LineBreakRTF"/>                    </xsl:for-each>             </xsl:if>           </xsl:for-each>     </xsl:for-each> </xsl:template> <xsl:template name="OverviewCandidateResultP22-2">      <xsl:for-each select="rg:OverviewOfCandidatesAndResults">           <xsl:for-each select="rg:ListGroupAndResults[rg:Seats &gt; 0]">             <fo:block>                  <fo:leader leader-pattern="space"/>             </fo:block>             <xsl:for-each select="rg:ListAndResults">                   <xsl:call-template name="PartyHeader4Lines">                        <xsl:with-param name="withList" select="false()"/>                      <xsl:with-param name="withVotes" select="false()"/>                     <xsl:with-param name="toegewezen" select="true()"/>                     <xsl:with-param name="withListnumber" select="true()"/>                 </xsl:call-template>                    <fo:block/>             </xsl:for-each>             <fo:block/>             <xsl:call-template name="OverviewCandidateResultElected"/>              <fo:block/>             <xsl:call-template name="OverviewCandidateResultNewListOrder"/>             <fo:block break-after="page">                   <fo:leader leader-pattern="space"/>             </fo:block>         </xsl:for-each>     </xsl:for-each> </xsl:template> <xsl:template name="OverviewCandidateResultElected">        <xsl:param name="PublishGender" select="rg:ListAndResults[ position() = 1 ]/kr:ListData/@PublishGender"/>       <xsl:param name="PublicationLanguage" select="rg:ListAndResults[ position() = 1 ]/kr:ListData/@PublicationLanguage"/>       <xsl:param name="isEK" select="count(//eml:ElectionCategory[text() = &apos;EK&apos;])"/>        <xsl:call-template name="LineBreakPdf"/>        <xsl:call-template name="LineBreakPdf"/>        <xsl:for-each select="rg:DeadCandidate">            <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>Bij de toewijzing van de zetels aan de kandidaten wordt ingevolge artikel P 19a van de Kieswet de kandidaat </xsl:text>           </fo:inline>            <xsl:call-template name="CandidateInTable2">                <xsl:with-param name="PublishGender" select="$PublishGender"/>              <xsl:with-param name="PublicationLanguage" select="$PublicationLanguage"/>          </xsl:call-template>            <fo:inline font-family="Arial" font-size="9pt">             <xsl:text> buiten beschouwing gelaten, aangezien deze is overleden.</xsl:text>          </fo:inline>            <xsl:call-template name="LineBreak"/>           <xsl:if test="position() = last()">             <fo:block>                  <fo:leader leader-pattern="space"/>             </fo:block>         </xsl:if>       </xsl:for-each>     <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">          <xsl:text>I. Met voorkeurstemmen gekozen kandidaten</xsl:text>      </fo:inline>        <fo:block/>     <fo:block>          <fo:leader leader-pattern="space"/>     </fo:block>     <xsl:if test="rg:PriorityCandidate">            <xsl:choose>                <xsl:when test="$isEK = 0">                 <fo:inline font-family="Arial" font-size="9pt">                     <xsl:text>De volgende kandidaten zijn met voorkeurstemmen gekozen. Deze kandidaten hebben </xsl:text>                   </fo:inline>                    <xsl:choose>                        <xsl:when test="//kr:ElectionSubcategory[text() = &quot;EK&quot;]">                         <fo:inline font-family="Arial" font-size="9pt">                             <xsl:text>ten minste of gelijk aan</xsl:text>                           </fo:inline>                        </xsl:when>                     <xsl:otherwise>                         <fo:inline font-family="Arial" font-size="9pt">                             <xsl:text>meer dan </xsl:text>                          </fo:inline>                            <xsl:choose>                                <xsl:when test="//kr:ElectionSubcategory[ text() = &quot;GR1&quot; or text()  = &quot;BC&quot; ]">                                  <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>50% van</xsl:text>                                    </fo:inline>                                </xsl:when>                             <xsl:when test="//kr:ElectionSubcategory[ text()  = &quot;EP&quot; ]">                                  <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>10% van</xsl:text>                                    </fo:inline>                                </xsl:when>                             <xsl:when test="//kr:ElectionSubcategory[ text()  = &quot;GC&quot; ]">                                  <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>100% van</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>25% van</xsl:text>                                    </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:otherwise>                    </xsl:choose>                   <fo:inline font-family="Arial" font-size="9pt">                     <xsl:text> de kiesdeler gehaald.</xsl:text>                 </fo:inline>                </xsl:when>             <xsl:otherwise>                 <fo:inline font-family="Arial" font-size="9pt">                     <xsl:text>Op basis van artikel U 15 jo. artikel P 15 en artikel P 16 van de Kieswet zijn de volgende kandidaten met voorkeurstemmen gekozen. Deze kandidaten hebben de kiesdeler behaald en krijgen een zetel toegewezen.</xsl:text>                    </fo:inline>                </xsl:otherwise>            </xsl:choose>           <xsl:call-template name="LineBreakRTF"/>            <xsl:choose>                <xsl:when test="$isEK = 1 or rg:Type = &apos;lijstengroep&apos;">                   <fo:block>                      <fo:leader leader-pattern="space"/>                 </fo:block>                 <xsl:if test="rg:PriorityCandidate">                        <fo:table font-family="Arial" font-size="9pt" alignment-baseline="before-edge" table-layout="fixed" width="100%" border-spacing="0">                            <fo:table-column column-width="177pt"/>                         <fo:table-column column-width="106pt"/>                         <fo:table-column column-width="98pt"/>                          <fo:table-column column-width="70pt"/>                          <xsl:variable name="altova:CurrContextGrid_43" select="."/>                         <fo:table-header font-family="Arial" font-size="9pt" start-indent="0pt">                                <xsl:variable name="altova:tablerows">                                  <fo:table-row font-family="Arial" font-size="9pt">                                      <fo:table-cell border-bottom="0.01in solid #000" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                         <fo:block text-align="left">                                                <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                                    <xsl:text>naam</xsl:text>                                               </fo:inline>                                            </fo:block>                                     </fo:table-cell>                                        <fo:table-cell border-bottom="0.01in solid #000" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                         <fo:block text-align="left">                                                <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                                    <xsl:text>woonplaats</xsl:text>                                             </fo:inline>                                            </fo:block>                                     </fo:table-cell>                                        <fo:table-cell border-bottom="0.01in solid #000" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding-right="5pt" padding="1" display-align="before">                                         <fo:block text-align="right">                                               <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                                    <xsl:text>aantal stemmen op</xsl:text>                                              </fo:inline>                                                <fo:block/>                                             <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                                    <xsl:text>gezamenlijke lijsten</xsl:text>                                               </fo:inline>                                            </fo:block>                                     </fo:table-cell>                                        <fo:table-cell border-bottom="0.01in solid #000" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                         <fo:block text-align="left">                                                <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                                    <xsl:text>lijst waarop zetel</xsl:text>                                             </fo:inline>                                                <fo:block/>                                             <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                                    <xsl:text>wordt toegewezen</xsl:text>                                               </fo:inline>                                            </fo:block>                                     </fo:table-cell>                                    </fo:table-row>                             </xsl:variable>                             <xsl:choose>                                    <xsl:when test="string($altova:tablerows)">                                     <xsl:copy-of select="$altova:tablerows"/>                                   </xsl:when>                                 <xsl:otherwise>                                     <fo:table-row>                                          <fo:table-cell>                                             <fo:block/>                                         </fo:table-cell>                                        </fo:table-row>                                 </xsl:otherwise>                                </xsl:choose>                           </fo:table-header>                          <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">                              <xsl:variable name="altova:tablerows">                                  <xsl:for-each select="rg:PriorityCandidate">                                        <xsl:sort select="rg:Votes" data-type="number" order="descending"/>                                     <fo:table-row font-family="Arial" font-size="9pt">                                          <fo:table-cell font-family="Arial" font-size="9pt" padding-top="2pt" padding="1" display-align="before">                                                <fo:block text-align="left">                                                    <xsl:call-template name="CandidateInTable2">                                                        <xsl:with-param name="PublishGender" select="$PublishGender"/>                                                      <xsl:with-param name="PublicationLanguage" select="$PublicationLanguage"/>                                                  </xsl:call-template>                                                </fo:block>                                         </fo:table-cell>                                            <fo:table-cell font-family="Arial" font-size="9pt" padding-top="2pt" padding="1" display-align="before">                                                <fo:block text-align="left">                                                    <xsl:call-template name="CandidateCityInTable2"/>                                               </fo:block>                                         </fo:table-cell>                                            <fo:table-cell font-family="Arial" font-size="9pt" padding-right="5pt" padding-top="2pt" padding="1" display-align="before">                                                <fo:block text-align="right">                                                   <xsl:for-each select="rg:Votes">                                                        <xsl:variable name="value-of-template_44">                                                          <xsl:apply-templates/>                                                      </xsl:variable>                                                     <xsl:choose>                                                            <xsl:when test="contains(string($value-of-template_44),'&#x200B;')">                                                                <fo:block font-family="Arial" font-size="9pt">                                                                  <xsl:copy-of select="$value-of-template_44"/>                                                               </fo:block>                                                         </xsl:when>                                                         <xsl:otherwise>                                                             <fo:inline font-family="Arial" font-size="9pt">                                                                 <xsl:copy-of select="$value-of-template_44"/>                                                               </fo:inline>                                                            </xsl:otherwise>                                                        </xsl:choose>                                                   </xsl:for-each>                                             </fo:block>                                         </fo:table-cell>                                            <fo:table-cell font-family="Arial" font-size="9pt" padding-top="2pt" padding="1" display-align="before">                                                <fo:block text-align="left">                                                    <xsl:choose>                                                        <xsl:when test="@setNumber">                                                            <fo:inline font-family="Arial" font-size="9pt">                                                             <xsl:text>Stel </xsl:text>                                                          </fo:inline>                                                            <xsl:for-each select="@setNumber">                                                              <fo:inline font-family="Arial" font-size="9pt">                                                                 <xsl:value-of select="string(.)"/>                                                              </fo:inline>                                                            </xsl:for-each>                                                     </xsl:when>                                                     <xsl:when test="@districtNumber">                                                           <xsl:choose>                                                                <xsl:when test="//eml:ElectionCategory[ text() != &quot;EK&quot; ]">                                                                    <fo:inline font-family="Arial" font-size="9pt">                                                                     <xsl:text>Kieskring </xsl:text>                                                                 </fo:inline>                                                                    <xsl:for-each select="@districtNumber">                                                                     <fo:inline font-family="Arial" font-size="9pt">                                                                         <xsl:value-of select="string(.)"/>                                                                      </fo:inline>                                                                    </xsl:for-each>                                                             </xsl:when>                                                             <xsl:otherwise>                                                                 <xsl:for-each select="@provinceName">                                                                       <fo:inline font-family="Arial" font-size="9pt">                                                                         <xsl:value-of select="string(.)"/>                                                                      </fo:inline>                                                                    </xsl:for-each>                                                             </xsl:otherwise>                                                            </xsl:choose>                                                       </xsl:when>                                                 </xsl:choose>                                               </fo:block>                                         </fo:table-cell>                                        </fo:table-row>                                 </xsl:for-each>                             </xsl:variable>                             <xsl:choose>                                    <xsl:when test="string($altova:tablerows)">                                     <xsl:copy-of select="$altova:tablerows"/>                                   </xsl:when>                                 <xsl:otherwise>                                     <fo:table-row>                                          <fo:table-cell>                                             <fo:block/>                                         </fo:table-cell>                                        </fo:table-row>                                 </xsl:otherwise>                                </xsl:choose>                           </fo:table-body>                        </fo:table>                 </xsl:if>               </xsl:when>             <xsl:otherwise>                 <fo:block>                      <fo:leader leader-pattern="space"/>                 </fo:block>                 <xsl:if test="rg:PriorityCandidate">                        <fo:table font-family="Arial" font-size="9pt" alignment-baseline="before-edge" table-layout="fixed" width="100%" border-spacing="0">                            <fo:table-column column-width="50%"/>                           <fo:table-column column-width="proportional-column-width(1)"/>                          <fo:table-column column-width="110pt"/>                         <xsl:variable name="altova:CurrContextGrid_48" select="."/>                         <fo:table-header font-family="Arial" font-size="9pt" start-indent="0pt">                                <xsl:variable name="altova:tablerows">                                  <fo:table-row font-family="Arial" font-size="9pt">                                      <fo:table-cell border-bottom="0.01in solid #000" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                         <fo:block text-align="left">                                                <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                                    <xsl:text>naam</xsl:text>                                               </fo:inline>                                            </fo:block>                                     </fo:table-cell>                                        <fo:table-cell border-bottom="0.01in solid #000" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                         <fo:block text-align="left">                                                <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                                    <xsl:text>woonplaats</xsl:text>                                             </fo:inline>                                            </fo:block>                                     </fo:table-cell>                                        <fo:table-cell border-bottom="0.01in solid #000" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding-right="5pt" padding="1" display-align="before">                                         <fo:block text-align="right">                                               <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                                    <xsl:text>aantal stemmen</xsl:text>                                             </fo:inline>                                            </fo:block>                                     </fo:table-cell>                                    </fo:table-row>                             </xsl:variable>                             <xsl:choose>                                    <xsl:when test="string($altova:tablerows)">                                     <xsl:copy-of select="$altova:tablerows"/>                                   </xsl:when>                                 <xsl:otherwise>                                     <fo:table-row>                                          <fo:table-cell>                                             <fo:block/>                                         </fo:table-cell>                                        </fo:table-row>                                 </xsl:otherwise>                                </xsl:choose>                           </fo:table-header>                          <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">                              <xsl:variable name="altova:tablerows">                                  <xsl:for-each select="rg:PriorityCandidate">                                        <xsl:sort select="rg:Votes" data-type="number" order="descending"/>                                     <fo:table-row font-family="Arial" font-size="9pt">                                          <fo:table-cell font-family="Arial" font-size="9pt" padding-top="2pt" padding="1" display-align="before">                                                <fo:block text-align="left">                                                    <xsl:call-template name="CandidateInTable2">                                                        <xsl:with-param name="PublishGender" select="$PublishGender"/>                                                      <xsl:with-param name="PublicationLanguage" select="$PublicationLanguage"/>                                                  </xsl:call-template>                                                </fo:block>                                         </fo:table-cell>                                            <fo:table-cell font-family="Arial" font-size="9pt" padding-top="2pt" padding="1" display-align="before">                                                <fo:block text-align="left">                                                    <xsl:call-template name="CandidateCityInTable2"/>                                               </fo:block>                                         </fo:table-cell>                                            <fo:table-cell font-family="Arial" font-size="9pt" padding-right="5pt" padding-top="2pt" padding="1" display-align="before">                                                <fo:block text-align="right">                                                   <xsl:for-each select="rg:Votes">                                                        <xsl:variable name="value-of-template_49">                                                          <xsl:apply-templates/>                                                      </xsl:variable>                                                     <xsl:choose>                                                            <xsl:when test="contains(string($value-of-template_49),'&#x200B;')">                                                                <fo:block font-family="Arial" font-size="9pt">                                                                  <xsl:copy-of select="$value-of-template_49"/>                                                               </fo:block>                                                         </xsl:when>                                                         <xsl:otherwise>                                                             <fo:inline font-family="Arial" font-size="9pt">                                                                 <xsl:copy-of select="$value-of-template_49"/>                                                               </fo:inline>                                                            </xsl:otherwise>                                                        </xsl:choose>                                                   </xsl:for-each>                                             </fo:block>                                         </fo:table-cell>                                        </fo:table-row>                                 </xsl:for-each>                             </xsl:variable>                             <xsl:choose>                                    <xsl:when test="string($altova:tablerows)">                                     <xsl:copy-of select="$altova:tablerows"/>                                   </xsl:when>                                 <xsl:otherwise>                                     <fo:table-row>                                          <fo:table-cell>                                             <fo:block/>                                         </fo:table-cell>                                        </fo:table-row>                                 </xsl:otherwise>                                </xsl:choose>                           </fo:table-body>                        </fo:table>                 </xsl:if>               </xsl:otherwise>            </xsl:choose>           <xsl:call-template name="LineBreakTable"/>      </xsl:if>       <xsl:if test="count( rg:ListAndResults/rg:CandidateAndResult/rg:Elected[ @byLot = &quot;true&quot; ] ) &gt; 0">         <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>Overeenkomstig artikel P 15, eerste lid van de Kieswet heeft een loting plaatsgevonden tuss</xsl:text>            </fo:inline>            <xsl:for-each select="rg:ListAndResults">               <xsl:for-each select="rg:CandidateAndResult">                   <xsl:sort select="rg:TotalVotes" data-type="number" order="descending"/>                    <xsl:if test="rg:Elected/@byLot = &quot;true&quot;">                        <fo:inline font-family="Arial" font-size="9pt">                         <xsl:text>en </xsl:text>                        </fo:inline>                        <xsl:call-template name="CandidateInTable2">                            <xsl:with-param name="PublishGender" select="$PublishGender"/>                          <xsl:with-param name="PublicationLanguage" select="$PublicationLanguage"/>                      </xsl:call-template>                        <fo:inline font-family="Arial" font-size="9pt">                         <xsl:text>&#160;</xsl:text>                     </fo:inline>                    </xsl:if>               </xsl:for-each>         </xsl:for-each>         <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>. Als gevolg hiervan is/zijn gekozen </xsl:text>          </fo:inline>            <fo:block/>         <fo:table font-family="Arial" font-size="9pt" alignment-baseline="before-edge" table-layout="fixed" width="100%" border-spacing="0">                <fo:table-column column-width="60%"/>               <fo:table-column column-width="proportional-column-width(1)"/>              <xsl:variable name="altova:CurrContextGrid_50" select="."/>             <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">                  <xsl:variable name="altova:tablerows">                      <fo:table-row font-family="Arial" font-size="9pt">                          <fo:table-cell border-bottom="0.01in solid #000" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                             <fo:block text-align="left">                                    <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>Naam</xsl:text>                                   </fo:inline>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell border-bottom="0.01in solid #000" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                             <fo:block text-align="left">                                    <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>Woonplaats</xsl:text>                                 </fo:inline>                                </fo:block>                         </fo:table-cell>                        </fo:table-row>                     <xsl:for-each select="rg:ListAndResults">                           <xsl:for-each select="rg:CandidateAndResult[rg:Elected = &quot;true&quot; and rg:Elected/@byLot = &quot;true&quot;]">                               <xsl:sort select="rg:TotalVotes" data-type="number" order="descending"/>                                <fo:table-row font-family="Arial" font-size="9pt">                                  <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="before">                                      <fo:block text-align="left">                                            <xsl:call-template name="CandidateInTable2">                                                <xsl:with-param name="PublishGender" select="$PublishGender"/>                                              <xsl:with-param name="PublicationLanguage" select="$PublicationLanguage"/>                                          </xsl:call-template>                                        </fo:block>                                 </fo:table-cell>                                    <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="before">                                      <fo:block text-align="left">                                            <xsl:call-template name="CandidateCityInTable2"/>                                       </fo:block>                                 </fo:table-cell>                                </fo:table-row>                         </xsl:for-each>                     </xsl:for-each>                 </xsl:variable>                 <xsl:choose>                        <xsl:when test="string($altova:tablerows)">                         <xsl:copy-of select="$altova:tablerows"/>                       </xsl:when>                     <xsl:otherwise>                         <fo:table-row>                              <fo:table-cell>                                 <fo:block/>                             </fo:table-cell>                            </fo:table-row>                     </xsl:otherwise>                    </xsl:choose>               </fo:table-body>            </fo:table>     </xsl:if>       <xsl:call-template name="LineBreakTable"/>      <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">          <xsl:text>II. Overige gekozen kandidaten</xsl:text>     </fo:inline>        <fo:block/>     <fo:block>          <fo:leader leader-pattern="space"/>     </fo:block>     <xsl:choose>            <xsl:when test="$isEK = 0">             <fo:inline font-family="Arial" font-size="9pt">                 <xsl:text>De overige aan de lijst toegewezen zetels gaan naar de volgende kandidaten.</xsl:text>                </fo:inline>            </xsl:when>         <xsl:otherwise>             <fo:inline font-family="Arial" font-size="9pt">                 <xsl:text>Op basis van artikel U 15 jo. artikel P 17 en artikel P 18 van de Kieswet gaan de overige aan de lijst toegewezen zetels naar de volgende kandidaten:</xsl:text>              </fo:inline>            </xsl:otherwise>        </xsl:choose>       <fo:block/>     <xsl:if test="rg:CandidatesElectedByPositionOnList/rg:CandidateElectedByPositionOnList">            <xsl:call-template name="LineBreakPdf"/>            <xsl:for-each select="rg:CandidatesElectedByPositionOnList">                <xsl:if test="../rg:Type = &quot;lijstengroep&quot;">                   <xsl:choose>                        <xsl:when test="position() &gt; 1">                         <fo:block>                              <fo:leader leader-pattern="space"/>                         </fo:block>                     </xsl:when>                     <xsl:otherwise>                         <xsl:call-template name="LineBreakRTF"/>                        </xsl:otherwise>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="@setNumber">                            <fo:inline font-family="Arial" font-size="9pt">                             <xsl:text>Stel gelijkluidende lijsten: </xsl:text>                          </fo:inline>                            <xsl:for-each select="@setNumber">                              <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:value-of select="string(.)"/>                              </fo:inline>                            </xsl:for-each>                     </xsl:when>                     <xsl:when test="@districtNumber">                           <xsl:choose>                                <xsl:when test="//eml:ElectionCategory[ text() != &quot;EK&quot; ]">                                    <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>Kieskring: </xsl:text>                                    </fo:inline>                                    <xsl:for-each select="@districtNumber">                                     <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:value-of select="string(.)"/>                                      </fo:inline>                                    </xsl:for-each>                             </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>Provincie: </xsl:text>                                    </fo:inline>                                    <xsl:for-each select="@provinceName">                                       <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:value-of select="string(.)"/>                                      </fo:inline>                                    </xsl:for-each>                             </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                 </xsl:choose>               </xsl:if>               <fo:block/>             <xsl:if test="rg:CandidateElectedByPositionOnList">                 <fo:table font-family="Arial" font-size="9pt" alignment-baseline="before-edge" table-layout="fixed" width="100%" border-spacing="0">                        <fo:table-column column-width="50%"/>                       <fo:table-column column-width="proportional-column-width(1)"/>                      <fo:table-column column-width="110pt"/>                     <xsl:variable name="altova:CurrContextGrid_54" select="."/>                     <fo:table-header font-family="Arial" font-size="9pt" start-indent="0pt">                            <xsl:variable name="altova:tablerows">                              <fo:table-row font-family="Arial" font-size="9pt">                                  <fo:table-cell border-bottom="0.01in solid #000" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                     <fo:block text-align="left">                                            <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                                <xsl:text>naam</xsl:text>                                           </fo:inline>                                        </fo:block>                                 </fo:table-cell>                                    <fo:table-cell border-bottom="0.01in solid #000" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                     <fo:block text-align="left">                                            <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                                <xsl:text>woonplaats</xsl:text>                                         </fo:inline>                                        </fo:block>                                 </fo:table-cell>                                    <fo:table-cell border-bottom="0.01in solid #000" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding-right="5pt" padding="1" display-align="before">                                     <fo:block text-align="right">                                           <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                                <xsl:text>aantal stemmen</xsl:text>                                         </fo:inline>                                        </fo:block>                                 </fo:table-cell>                                </fo:table-row>                         </xsl:variable>                         <xsl:choose>                                <xsl:when test="string($altova:tablerows)">                                 <xsl:copy-of select="$altova:tablerows"/>                               </xsl:when>                             <xsl:otherwise>                                 <fo:table-row>                                      <fo:table-cell>                                         <fo:block/>                                     </fo:table-cell>                                    </fo:table-row>                             </xsl:otherwise>                            </xsl:choose>                       </fo:table-header>                      <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">                          <xsl:variable name="altova:tablerows">                              <xsl:for-each select="rg:CandidateElectedByPositionOnList">                                 <fo:table-row font-family="Arial" font-size="9pt">                                      <fo:table-cell font-family="Arial" font-size="9pt" padding-top="2pt" padding="1" display-align="before">                                            <fo:block text-align="left">                                                <xsl:call-template name="CandidateInTable2">                                                    <xsl:with-param name="PublishGender" select="$PublishGender"/>                                                  <xsl:with-param name="PublicationLanguage" select="$PublicationLanguage"/>                                              </xsl:call-template>                                            </fo:block>                                     </fo:table-cell>                                        <fo:table-cell font-family="Arial" font-size="9pt" padding-top="2pt" padding="1" display-align="before">                                            <fo:block text-align="left">                                                <xsl:call-template name="CandidateCityInTable2"/>                                           </fo:block>                                     </fo:table-cell>                                        <fo:table-cell font-family="Arial" font-size="9pt" padding-right="5pt" padding-top="2pt" padding="1" display-align="before">                                            <fo:block text-align="right">                                               <xsl:for-each select="rg:Votes">                                                    <xsl:variable name="value-of-template_55">                                                      <xsl:apply-templates/>                                                  </xsl:variable>                                                 <xsl:choose>                                                        <xsl:when test="contains(string($value-of-template_55),'&#x200B;')">                                                            <fo:block font-family="Arial" font-size="9pt">                                                              <xsl:copy-of select="$value-of-template_55"/>                                                           </fo:block>                                                     </xsl:when>                                                     <xsl:otherwise>                                                         <fo:inline font-family="Arial" font-size="9pt">                                                             <xsl:copy-of select="$value-of-template_55"/>                                                           </fo:inline>                                                        </xsl:otherwise>                                                    </xsl:choose>                                               </xsl:for-each>                                         </fo:block>                                     </fo:table-cell>                                    </fo:table-row>                             </xsl:for-each>                         </xsl:variable>                         <xsl:choose>                                <xsl:when test="string($altova:tablerows)">                                 <xsl:copy-of select="$altova:tablerows"/>                               </xsl:when>                             <xsl:otherwise>                                 <fo:table-row>                                      <fo:table-cell>                                         <fo:block/>                                     </fo:table-cell>                                    </fo:table-row>                             </xsl:otherwise>                            </xsl:choose>                       </fo:table-body>                    </fo:table>             </xsl:if>           </xsl:for-each>     </xsl:if>   </xsl:template> <xsl:template name="OverviewCandidateResultNewListOrder">       <xsl:if test="0=1">         <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>This fragment must start on the page with the elected candidates. First there is the text if the order was changed or not. Now a page break BEFORE each stel or kieskring, but NOT at the END.</xsl:text>         </fo:inline>        </xsl:if>       <xsl:call-template name="LineBreakPdf"/>        <xsl:call-template name="LineBreakPdf"/>        <fo:block/>     <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">          <xsl:text>III. Rangschikking kandidaten</xsl:text>      </fo:inline>        <fo:block/>     <fo:block>          <fo:leader leader-pattern="space"/>     </fo:block>     <fo:inline font-family="Arial" font-size="9pt">         <xsl:text>De kandidaten zijn gerangschikt in de volgorde zoals hiervoor is aangegeven.</xsl:text>       </fo:inline>        <fo:block/>     <fo:block>          <fo:leader leader-pattern="space"/>     </fo:block>     <xsl:if test="rg:ListAndResults/rg:PositionsOnListChanged[text() = &quot;true&quot;]">          <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>Uitzondering hierop zijn de volgende lijsten:</xsl:text>          </fo:inline>            <fo:block/>         <xsl:for-each select="rg:ListAndResults">               <fo:block break-after="page">                   <fo:leader leader-pattern="space"/>             </fo:block>             <fo:block>                  <fo:leader leader-pattern="space"/>             </fo:block>             <xsl:call-template name="PartyHeader2Lines"/>               <fo:block/>             <xsl:if test="$SV_OutputFormat = &apos;PDF&apos;">                  <fo:block>                      <fo:leader leader-pattern="space"/>                 </fo:block>             </xsl:if>               <fo:inline font-family="Arial" font-size="9pt">                 <xsl:text>Kandidaten in volgorde van rangschikking:</xsl:text>              </fo:inline>                <fo:block/>             <fo:block>                  <fo:leader leader-pattern="space"/>             </fo:block>             <xsl:if test="rg:CandidateAndResult[rg:Deceased = &quot;false&quot;]">                  <fo:table font-family="Arial" font-size="9pt" alignment-baseline="before-edge" table-layout="fixed" width="100%" border-spacing="0">                        <fo:table-column column-width="proportional-column-width(1)"/>                      <xsl:variable name="altova:CurrContextGrid_56" select="."/>                     <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">                          <xsl:variable name="altova:tablerows">                              <xsl:for-each select="rg:CandidateAndResult[rg:Deceased = &quot;false&quot;]">                                  <xsl:sort select="rg:NewPositionOnList" data-type="number" order="ascending"/>                                  <fo:table-row font-family="Arial" font-size="9pt">                                      <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="before">                                          <fo:block text-align="left">                                                <xsl:call-template name="CandidateInTable2">                                                    <xsl:with-param name="PublishGender" select="../kr:ListData/@PublishGender"/>                                                   <xsl:with-param name="PublicationLanguage" select="../kr:ListData/@PublicationLanguage"/>                                               </xsl:call-template>                                            </fo:block>                                     </fo:table-cell>                                    </fo:table-row>                             </xsl:for-each>                         </xsl:variable>                         <xsl:choose>                                <xsl:when test="string($altova:tablerows)">                                 <xsl:copy-of select="$altova:tablerows"/>                               </xsl:when>                             <xsl:otherwise>                                 <fo:table-row>                                      <fo:table-cell>                                         <fo:block/>                                     </fo:table-cell>                                    </fo:table-row>                             </xsl:otherwise>                            </xsl:choose>                       </fo:table-body>                    </fo:table>             </xsl:if>           </xsl:for-each>     </xsl:if>   </xsl:template> <xsl:template name="OverviewElectedCandidate">      <xsl:for-each select="rg:OverviewOfElectedCandidates">          <xsl:if test="rg:ElectedCandidate">             <fo:table font-family="Arial" font-size="9pt" alignment-baseline="before-edge" table-layout="fixed" width="100%" border-spacing="0">                    <fo:table-column column-width="60%"/>                   <fo:table-column column-width="proportional-column-width(1)"/>                  <xsl:variable name="altova:CurrContextGrid_57" select="."/>                 <fo:table-header font-family="Arial" font-size="9pt" start-indent="0pt">                        <xsl:variable name="altova:tablerows">                          <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="0.01in solid #000" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                 <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                            <xsl:text>naam kandidaat</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="0.01in solid #000" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                 <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                            <xsl:text>woonplaats</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                            </fo:table-row>                     </xsl:variable>                     <xsl:choose>                            <xsl:when test="string($altova:tablerows)">                             <xsl:copy-of select="$altova:tablerows"/>                           </xsl:when>                         <xsl:otherwise>                             <fo:table-row>                                  <fo:table-cell>                                     <fo:block/>                                 </fo:table-cell>                                </fo:table-row>                         </xsl:otherwise>                        </xsl:choose>                   </fo:table-header>                  <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">                      <xsl:variable name="altova:tablerows">                          <xsl:for-each select="rg:ElectedCandidate">                             <xsl:variable name="PublishGender" select="kr:ListData/@PublishGender"/>                                <xsl:variable name="PublicationLanguage" select="kr:ListData/@PublicationLanguage"/>                                <xsl:for-each select="eml:Candidate">                                   <fo:table-row font-family="Arial" font-size="9pt">                                      <fo:table-cell font-family="Arial" font-size="9pt" padding-top="2pt" padding="1" display-align="before">                                            <fo:block text-align="left">                                                <xsl:for-each select="eml:CandidateFullName">                                                   <xsl:call-template name="LastNameH1"/>                                                  <fo:inline font-family="Arial" font-size="9pt">                                                     <xsl:text>, </xsl:text>                                                 </fo:inline>                                                    <xsl:call-template name="FirstNameH1"/>                                             </xsl:for-each>                                             <xsl:call-template name="GenderGeneral">                                                    <xsl:with-param name="Gender" select="eml:Gender"/>                                                 <xsl:with-param name="PublishGender" select="$PublishGender"/>                                                  <xsl:with-param name="PublicationLanguage" select="$PublicationLanguage"/>                                              </xsl:call-template>                                            </fo:block>                                     </fo:table-cell>                                        <fo:table-cell font-family="Arial" font-size="9pt" padding-top="2pt" padding="1" display-align="before">                                            <fo:block text-align="left">                                                <xsl:for-each select="eml:QualifyingAddress">                                                   <xsl:call-template name="City"/>                                                    <xsl:for-each select="xal:Country">                                                     <xsl:call-template name="City"/>                                                        <fo:inline font-family="Arial" font-size="9pt">                                                         <xsl:text>&#160;</xsl:text>                                                     </fo:inline>                                                        <xsl:for-each select="xal:CountryNameCode">                                                         <fo:inline font-family="Arial" font-size="9pt">                                                             <xsl:text>(</xsl:text>                                                          </fo:inline>                                                            <xsl:variable name="value-of-template_58">                                                              <xsl:apply-templates/>                                                          </xsl:variable>                                                         <xsl:choose>                                                                <xsl:when test="contains(string($value-of-template_58),'&#x200B;')">                                                                    <fo:block font-family="Arial" font-size="9pt">                                                                      <xsl:copy-of select="$value-of-template_58"/>                                                                   </fo:block>                                                             </xsl:when>                                                             <xsl:otherwise>                                                                 <fo:inline font-family="Arial" font-size="9pt">                                                                     <xsl:copy-of select="$value-of-template_58"/>                                                                   </fo:inline>                                                                </xsl:otherwise>                                                            </xsl:choose>                                                           <fo:inline font-family="Arial" font-size="9pt">                                                             <xsl:text>)</xsl:text>                                                          </fo:inline>                                                        </xsl:for-each>                                                 </xsl:for-each>                                             </xsl:for-each>                                         </fo:block>                                     </fo:table-cell>                                    </fo:table-row>                             </xsl:for-each>                         </xsl:for-each>                     </xsl:variable>                     <xsl:choose>                            <xsl:when test="string($altova:tablerows)">                             <xsl:copy-of select="$altova:tablerows"/>                           </xsl:when>                         <xsl:otherwise>                             <fo:table-row>                                  <fo:table-cell>                                     <fo:block/>                                 </fo:table-cell>                                </fo:table-row>                         </xsl:otherwise>                        </xsl:choose>                   </fo:table-body>                </fo:table>         </xsl:if>       </xsl:for-each> </xsl:template> <xsl:template name="ListOrCombinedList">        <xsl:param name="smaller" select="0"/>      <xsl:if test="$smaller = 0">            <xsl:for-each select="rg:ListOrCombinedList">               <xsl:for-each select="@listNumber">                 <fo:inline font-family="Arial" font-size="9pt">                     <xsl:text>lijst </xsl:text>                 </fo:inline>                    <fo:inline font-family="Arial" font-size="9pt">                     <xsl:value-of select="string(.)"/>                  </fo:inline>                </xsl:for-each>             <xsl:if test="count( rg:ListInCombination ) &gt; 0">                    <fo:inline font-family="Arial" font-size="9pt">                     <xsl:text> (</xsl:text>                 </fo:inline>                    <xsl:for-each select="rg:ListInCombination">                        <xsl:variable name="value-of-template_60">                          <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_60),'&#x200B;')">                                <fo:block font-family="Arial" font-size="9pt">                                  <xsl:copy-of select="$value-of-template_60"/>                               </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:copy-of select="$value-of-template_60"/>                               </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                       <xsl:if test="position() != last()">                            <fo:inline font-family="Arial" font-size="9pt">                             <xsl:text>, </xsl:text>                         </fo:inline>                        </xsl:if>                   </xsl:for-each>                 <fo:inline font-family="Arial" font-size="9pt">                     <xsl:text>)</xsl:text>                  </fo:inline>                </xsl:if>           </xsl:for-each>     </xsl:if>       <xsl:if test="$smaller = 1">            <xsl:for-each select="rg:ListOrCombinedList">               <xsl:for-each select="@combinationId">                  <fo:inline font-family="Arial" font-size="smaller">                     <xsl:text>lijstencombinatie </xsl:text>                 </fo:inline>                    <fo:inline font-family="Arial" font-size="smaller">                     <xsl:value-of select="string(.)"/>                  </fo:inline>                </xsl:for-each>             <xsl:for-each select="@listNumber">                 <fo:inline font-family="Arial" font-size="smaller">                     <xsl:text>lijst </xsl:text>                 </fo:inline>                    <fo:inline font-family="Arial" font-size="smaller">                     <xsl:value-of select="string(.)"/>                  </fo:inline>                </xsl:for-each>             <xsl:if test="count( rg:ListInCombination ) &gt; 0">                    <fo:inline font-family="Arial" font-size="smaller">                     <xsl:text> (</xsl:text>                 </fo:inline>                    <xsl:for-each select="rg:ListInCombination">                        <xsl:variable name="value-of-template_63">                          <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_63),'&#x200B;')">                                <fo:block font-family="Arial" font-size="smaller">                                  <xsl:copy-of select="$value-of-template_63"/>                               </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="smaller">                                 <xsl:copy-of select="$value-of-template_63"/>                               </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                       <xsl:if test="position() != last()">                            <fo:inline font-family="Arial" font-size="smaller">                             <xsl:text>, </xsl:text>                         </fo:inline>                        </xsl:if>                   </xsl:for-each>                 <fo:inline font-family="Arial" font-size="smaller">                     <xsl:text>)</xsl:text>                  </fo:inline>                </xsl:if>           </xsl:for-each>     </xsl:if>   </xsl:template> <xsl:template name="OverviewDHondtAssignmentSpecial">       <xsl:for-each select="rg:AbsoluteMajority">         <xsl:call-template name="LineBreak"/>           <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>Door toepassing van artikel P 9 van de Kieswet is een extra zetel toegewezen aan </xsl:text>          </fo:inline>            <xsl:for-each select="rg:Winner">               <xsl:call-template name="ListOrCombinedList"/>          </xsl:for-each>         <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>. </xsl:text>         </fo:inline>            <xsl:choose>                <xsl:when test="count( rg:Allotting ) = 0">                 <fo:inline font-family="Arial" font-size="9pt">                     <xsl:text>Daartegenover vervalt een zetel die was toegewezen aan </xsl:text>                    </fo:inline>                    <xsl:for-each select="rg:Looser">                       <xsl:call-template name="ListOrCombinedList"/>                  </xsl:for-each>                 <fo:inline font-family="Arial" font-size="9pt">                     <xsl:text>.</xsl:text>                  </fo:inline>                </xsl:when>             <xsl:otherwise>                 <xsl:for-each select="rg:Allotting">                        <fo:inline font-family="Arial" font-size="9pt">                         <xsl:text>Daartegenover heeft een loting plaatsgevonden tussen </xsl:text>                      </fo:inline>                        <xsl:for-each select="rg:Winner">                           <xsl:call-template name="ListOrCombinedList"/>                      </xsl:for-each>                     <xsl:for-each select="rg:Looser">                           <fo:inline font-family="Arial" font-size="9pt">                             <xsl:text> en </xsl:text>                           </fo:inline>                            <xsl:call-template name="ListOrCombinedList"/>                      </xsl:for-each>                     <fo:inline font-family="Arial" font-size="9pt">                         <xsl:text>. Als gevolg hiervan vervalt een zetel die was toegewezen aan </xsl:text>                     </fo:inline>                        <xsl:for-each select="rg:Winner">                           <xsl:call-template name="ListOrCombinedList"/>                      </xsl:for-each>                     <fo:inline font-family="Arial" font-size="9pt">                         <xsl:text>.</xsl:text>                      </fo:inline>                    </xsl:for-each>             </xsl:otherwise>            </xsl:choose>       </xsl:for-each>     <xsl:for-each select="rg:ExhaustedList">            <xsl:call-template name="LineBreak"/>           <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>Door toepassing van artikel </xsl:text>           </fo:inline>            <xsl:choose>                <xsl:when test="//kr:ElectionSubcategory[ text() != &quot;EK&quot; ]">                  <fo:inline font-family="Arial" font-size="9pt">                     <xsl:text>P 10</xsl:text>                   </fo:inline>                </xsl:when>             <xsl:otherwise>                 <fo:inline font-family="Arial" font-size="9pt">                     <xsl:text>U 10</xsl:text>                   </fo:inline>                </xsl:otherwise>            </xsl:choose>           <fo:inline font-family="Arial" font-size="9pt">             <xsl:text> van de Kieswet </xsl:text>           </fo:inline>            <xsl:choose>                <xsl:when test="@lostSeats = 1">                    <fo:inline font-family="Arial" font-size="9pt">                     <xsl:text>is</xsl:text>                 </fo:inline>                </xsl:when>             <xsl:otherwise>                 <fo:inline font-family="Arial" font-size="9pt">                     <xsl:text>zijn</xsl:text>                   </fo:inline>                </xsl:otherwise>            </xsl:choose>           <fo:inline font-family="Arial" font-size="9pt">             <xsl:text> als gevolg van lijstuitputting bij </xsl:text>           </fo:inline>            <xsl:call-template name="ListOrCombinedList"/>          <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>&#160;</xsl:text>         </fo:inline>            <xsl:choose>                <xsl:when test="@lostSeats = 1">                    <fo:inline font-family="Arial" font-size="9pt">                     <xsl:text>een extra zetel toegewezen aan een ander lijst</xsl:text>                 </fo:inline>                </xsl:when>             <xsl:otherwise>                 <xsl:for-each select="@lostSeats">                      <fo:inline font-family="Arial" font-size="9pt">                         <xsl:value-of select="string(.)"/>                      </fo:inline>                    </xsl:for-each>                 <fo:inline font-family="Arial" font-size="9pt">                     <xsl:text> extra zetels toegewezen aan andere lijsten</xsl:text>                    </fo:inline>                </xsl:otherwise>            </xsl:choose>           <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>.</xsl:text>          </fo:inline>        </xsl:for-each> </xsl:template> <xsl:template name="CandidateInTable">      <xsl:param name="PublishGender"/>       <xsl:param name="PublicationLanguage"/>     <xsl:if test="false()">         <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>In font-size=smaller</xsl:text>           </fo:inline>        </xsl:if>       <xsl:for-each select="eml:Candidate">           <xsl:for-each select="eml:CandidateFullName">               <xsl:call-template name="LastNameH1">                   <xsl:with-param name="fontSize" select="&apos;smaller&apos;"/>              </xsl:call-template>                <fo:inline font-family="Arial" font-size="smaller">                 <xsl:text>, </xsl:text>             </fo:inline>                <xsl:call-template name="FirstNameH1">                  <xsl:with-param name="fontSize" select="&apos;smaller&apos;"/>              </xsl:call-template>            </xsl:for-each>         <xsl:call-template name="GenderGeneral">                <xsl:with-param name="Gender" select="eml:Gender"/>             <xsl:with-param name="PublishGender" select="$PublishGender"/>              <xsl:with-param name="PublicationLanguage" select="$PublicationLanguage"/>              <xsl:with-param name="fontSize" select="&apos;smaller&apos;"/>          </xsl:call-template>        </xsl:for-each> </xsl:template> <xsl:template name="CandidateInTable2">     <xsl:param name="PublishGender"/>       <xsl:param name="PublicationLanguage"/>     <xsl:for-each select="eml:Candidate">           <xsl:for-each select="eml:CandidateFullName">               <xsl:call-template name="LastNameH1"/>              <fo:inline font-family="Arial" font-size="9pt">                 <xsl:text>, </xsl:text>             </fo:inline>                <xsl:call-template name="FirstNameH1"/>         </xsl:for-each>         <xsl:call-template name="GenderGeneral">                <xsl:with-param name="Gender" select="eml:Gender"/>             <xsl:with-param name="PublishGender" select="$PublishGender"/>              <xsl:with-param name="PublicationLanguage" select="$PublicationLanguage"/>          </xsl:call-template>        </xsl:for-each> </xsl:template> <xsl:template name="CandidateCityInTable2">     <xsl:for-each select="eml:Candidate">           <xsl:for-each select="eml:QualifyingAddress">               <xsl:call-template name="City"/>                <xsl:for-each select="xal:Country">                 <xsl:call-template name="City"/>                    <fo:inline font-family="Arial" font-size="9pt">                     <xsl:text>&#160;</xsl:text>                 </fo:inline>                    <xsl:for-each select="xal:CountryNameCode">                     <fo:inline font-family="Arial" font-size="9pt">                         <xsl:text>(</xsl:text>                      </fo:inline>                        <xsl:variable name="value-of-template_65">                          <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_65),'&#x200B;')">                                <fo:block font-family="Arial" font-size="9pt">                                  <xsl:copy-of select="$value-of-template_65"/>                               </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:copy-of select="$value-of-template_65"/>                               </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                       <fo:inline font-family="Arial" font-size="9pt">                         <xsl:text>)</xsl:text>                      </fo:inline>                    </xsl:for-each>             </xsl:for-each>         </xsl:for-each>     </xsl:for-each> </xsl:template> <xsl:template name="PartyHeader2Lines">     <xsl:choose>            <xsl:when test="../rg:Type = &quot;lijstengroep&quot;">             <fo:table font-family="Arial" font-size="9pt" alignment-baseline="before-edge" table-layout="fixed" width="100%" border-spacing="0">                    <fo:table-column column-width="160pt"/>                 <fo:table-column column-width="proportional-column-width(1)"/>                  <fo:table-column column-width="200pt"/>                 <xsl:variable name="altova:CurrContextGrid_66" select="."/>                 <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">                      <xsl:variable name="altova:tablerows">                          <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                   <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>Lijstnaam:</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell number-columns-spanned="2" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                    <fo:block text-align="left">                                        <xsl:call-template name="PartyNamePdfWrapped"/>                                 </fo:block>                             </fo:table-cell>                            </fo:table-row>                         <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>Lijstnummer:</xsl:text>                                       </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <xsl:for-each select="eml:AffiliationIdentifier">                                           <xsl:for-each select="@Id">                                             <fo:inline font-family="Arial" font-size="9pt">                                                 <xsl:value-of select="string(.)"/>                                              </fo:inline>                                            </xsl:for-each>                                     </xsl:for-each>                                 </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                         <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                    <fo:block text-align="left">                                        <xsl:for-each select="rg:Type">                                         <xsl:choose>                                                <xsl:when test="text() = &quot;op zichzelf staande lijst&quot;">                                                    <xsl:choose>                                                        <xsl:when test="//kr:ElectionSubcategory[ text() != &quot;EK&quot; ]">                                                          <fo:inline font-family="Arial" font-size="9pt">                                                             <xsl:text>Kieskring:</xsl:text>                                                         </fo:inline>                                                        </xsl:when>                                                     <xsl:otherwise>                                                         <fo:inline font-family="Arial" font-size="9pt">                                                             <xsl:text>Provincie:</xsl:text>                                                         </fo:inline>                                                        </xsl:otherwise>                                                    </xsl:choose>                                               </xsl:when>                                             <xsl:when test="text() = &quot;stel gelijkluidende lijsten&quot;">                                                  <fo:inline font-family="Arial" font-size="9pt">                                                     <xsl:text>Stel:</xsl:text>                                                  </fo:inline>                                                </xsl:when>                                         </xsl:choose>                                       </xsl:for-each>                                 </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                    <fo:block text-align="left">                                        <xsl:choose>                                            <xsl:when test="rg:Type/text() = &quot;op zichzelf staande lijst&quot;">                                                <xsl:choose>                                                    <xsl:when test="//eml:ElectionCategory[ text() != &quot;EK&quot; ]">                                                        <fo:inline font-family="Arial" font-size="9pt">                                                         <xsl:value-of select="@districtNumber"/>                                                        </fo:inline>                                                    </xsl:when>                                                 <xsl:otherwise>                                                     <fo:inline font-family="Arial" font-size="9pt">                                                         <xsl:value-of select="@provinceName"/>                                                      </fo:inline>                                                    </xsl:otherwise>                                                </xsl:choose>                                           </xsl:when>                                         <xsl:otherwise>                                             <xsl:for-each select="kr:ListData">                                                 <xsl:for-each select="@BelongsToSet">                                                       <fo:inline font-family="Arial" font-size="9pt">                                                         <xsl:value-of select="string(.)"/>                                                      </fo:inline>                                                    </xsl:for-each>                                             </xsl:for-each>                                         </xsl:otherwise>                                        </xsl:choose>                                   </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                    <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:variable>                     <xsl:choose>                            <xsl:when test="string($altova:tablerows)">                             <xsl:copy-of select="$altova:tablerows"/>                           </xsl:when>                         <xsl:otherwise>                             <fo:table-row>                                  <fo:table-cell>                                     <fo:block/>                                 </fo:table-cell>                                </fo:table-row>                         </xsl:otherwise>                        </xsl:choose>                   </fo:table-body>                </fo:table>         </xsl:when>         <xsl:otherwise>             <fo:table font-family="Arial" font-size="9pt" alignment-baseline="before-edge" table-layout="fixed" width="100%" border-spacing="0">                    <fo:table-column column-width="160pt"/>                 <fo:table-column column-width="proportional-column-width(1)"/>                  <xsl:variable name="altova:CurrContextGrid_69" select="."/>                 <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">                      <xsl:variable name="altova:tablerows">                          <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                   <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>Lijstnaam:</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                   <fo:block text-align="left">                                        <xsl:for-each select="eml:AffiliationIdentifier">                                           <xsl:for-each select="eml:RegisteredName">                                              <xsl:variable name="value-of-template_70">                                                  <xsl:apply-templates/>                                              </xsl:variable>                                             <xsl:choose>                                                    <xsl:when test="contains(string($value-of-template_70),'&#x200B;')">                                                        <fo:block font-family="Arial" font-size="9pt">                                                          <xsl:copy-of select="$value-of-template_70"/>                                                       </fo:block>                                                 </xsl:when>                                                 <xsl:otherwise>                                                     <fo:inline font-family="Arial" font-size="9pt">                                                         <xsl:copy-of select="$value-of-template_70"/>                                                       </fo:inline>                                                    </xsl:otherwise>                                                </xsl:choose>                                           </xsl:for-each>                                     </xsl:for-each>                                 </fo:block>                             </fo:table-cell>                            </fo:table-row>                         <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                    <fo:block text-align="left">                                        <xsl:choose>                                            <xsl:when test="//kr:ElectionSubcategory[ text() != &quot;TK&quot; and text() != &quot;PS2&quot; ]">                                                <fo:inline font-family="Arial" font-size="9pt">                                                 <xsl:text>Lijst:</xsl:text>                                             </fo:inline>                                            </xsl:when>                                         <xsl:when test="../rg:Type = &quot;op zichzelf staande lijst&quot;">                                                <fo:inline font-family="Arial" font-size="9pt">                                                 <xsl:text>Op zichzelf staande lijst:</xsl:text>                                             </fo:inline>                                            </xsl:when>                                         <xsl:when test="../rg:Type = &quot;stel gelijkluidende lijsten&quot;">                                              <fo:inline font-family="Arial" font-size="9pt">                                                 <xsl:text>Stel gelijkluidende lijsten:</xsl:text>                                               </fo:inline>                                            </xsl:when>                                     </xsl:choose>                                   </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                    <fo:block text-align="left">                                        <xsl:for-each select="eml:AffiliationIdentifier">                                           <xsl:for-each select="@Id">                                             <fo:inline font-family="Arial" font-size="9pt">                                                 <xsl:value-of select="string(.)"/>                                              </fo:inline>                                            </xsl:for-each>                                     </xsl:for-each>                                 </fo:block>                             </fo:table-cell>                            </fo:table-row>                     </xsl:variable>                     <xsl:choose>                            <xsl:when test="string($altova:tablerows)">                             <xsl:copy-of select="$altova:tablerows"/>                           </xsl:when>                         <xsl:otherwise>                             <fo:table-row>                                  <fo:table-cell>                                     <fo:block/>                                 </fo:table-cell>                                </fo:table-row>                         </xsl:otherwise>                        </xsl:choose>                   </fo:table-body>                </fo:table>         </xsl:otherwise>        </xsl:choose>   </xsl:template> <xsl:template name="PartyHeader3Lines">     <fo:table font-family="Arial" font-size="9pt" alignment-baseline="before-edge" table-layout="fixed" width="100%" border-spacing="0">            <fo:table-column column-width="160pt"/>         <fo:table-column column-width="proportional-column-width(1)"/>          <xsl:variable name="altova:CurrContextGrid_72" select="."/>         <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">              <xsl:variable name="altova:tablerows">                  <fo:table-row font-family="Arial" font-size="9pt">                      <fo:table-cell border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                           <fo:block text-align="left">                                <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>Lijstnaam</xsl:text>                              </fo:inline>                            </fo:block>                     </fo:table-cell>                        <fo:table-cell border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                           <fo:block text-align="left">                                <xsl:call-template name="PartyNamePdfWrapped"/>                         </fo:block>                     </fo:table-cell>                    </fo:table-row>                 <fo:table-row font-family="Arial" font-size="9pt">                      <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                          <fo:block text-align="left">                                <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>Lijstnummer</xsl:text>                                </fo:inline>                            </fo:block>                     </fo:table-cell>                        <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                          <fo:block text-align="left">                                <xsl:for-each select="eml:AffiliationIdentifier">                                   <xsl:for-each select="@Id">                                     <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:value-of select="string(.)"/>                                      </fo:inline>                                    </xsl:for-each>                             </xsl:for-each>                         </fo:block>                     </fo:table-cell>                    </fo:table-row>                 <fo:table-row font-family="Arial" font-size="9pt">                      <fo:table-cell border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="left">                                <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>Toegewezen aantal zetels</xsl:text>                               </fo:inline>                            </fo:block>                     </fo:table-cell>                        <fo:table-cell border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="left">                                <xsl:for-each select="rg:Seats">                                    <xsl:variable name="value-of-template_74">                                      <xsl:apply-templates/>                                  </xsl:variable>                                 <xsl:choose>                                        <xsl:when test="contains(string($value-of-template_74),'&#x200B;')">                                            <fo:block font-family="Arial" font-size="9pt">                                              <xsl:copy-of select="$value-of-template_74"/>                                           </fo:block>                                     </xsl:when>                                     <xsl:otherwise>                                         <fo:inline font-family="Arial" font-size="9pt">                                             <xsl:copy-of select="$value-of-template_74"/>                                           </fo:inline>                                        </xsl:otherwise>                                    </xsl:choose>                               </xsl:for-each>                         </fo:block>                     </fo:table-cell>                    </fo:table-row>             </xsl:variable>             <xsl:choose>                    <xsl:when test="string($altova:tablerows)">                     <xsl:copy-of select="$altova:tablerows"/>                   </xsl:when>                 <xsl:otherwise>                     <fo:table-row>                          <fo:table-cell>                             <fo:block/>                         </fo:table-cell>                        </fo:table-row>                 </xsl:otherwise>                </xsl:choose>           </fo:table-body>        </fo:table> </xsl:template> <xsl:template name="PartyHeader4Lines">     <xsl:param name="withList" select="true()"/>        <xsl:param name="withListnumber" select="false()"/>     <xsl:param name="withVotes" select="true()"/>       <xsl:param name="toegewezen" select="false()"/>     <xsl:for-each select="self::*">         <xsl:variable name="isListengroup" select="../rg:Type = &quot;lijstengroep&quot;"/>         <fo:table font-family="Arial" font-size="9pt" alignment-baseline="before-edge" table-layout="fixed" width="100%" border-spacing="0">                <fo:table-column column-width="160pt"/>             <fo:table-column column-width="proportional-column-width(1)"/>              <xsl:variable name="altova:CurrContextGrid_75" select="."/>             <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">                  <xsl:variable name="altova:tablerows">                      <fo:table-row font-family="Arial" font-size="9pt">                          <fo:table-cell border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                               <fo:block text-align="left">                                    <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>Lijstnaam:</xsl:text>                                 </fo:inline>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                               <fo:block text-align="left">                                    <xsl:call-template name="PartyNamePdfWrapped"/>                             </fo:block>                         </fo:table-cell>                        </fo:table-row>                     <xsl:choose>                            <xsl:when test="$withList and $isListengroup">                              <fo:table-row font-family="Arial" font-size="9pt">                                  <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                                      <fo:block text-align="left">                                            <fo:inline font-family="Arial" font-size="9pt">                                             <xsl:text>Lijstengroep:</xsl:text>                                          </fo:inline>                                        </fo:block>                                 </fo:table-cell>                                    <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                                      <fo:block text-align="left">                                            <xsl:for-each select="eml:AffiliationIdentifier">                                               <xsl:for-each select="@Id">                                                 <fo:inline font-family="Arial" font-size="9pt">                                                     <xsl:value-of select="string(.)"/>                                                  </fo:inline>                                                </xsl:for-each>                                         </xsl:for-each>                                     </fo:block>                                 </fo:table-cell>                                </fo:table-row>                         </xsl:when>                         <xsl:otherwise/>                        </xsl:choose>                       <xsl:choose>                            <xsl:when test="$withList and $isListengroup">                              <fo:table-row font-family="Arial" font-size="9pt">                                  <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                                      <fo:block text-align="left">                                            <xsl:for-each select="rg:Type">                                             <xsl:choose>                                                    <xsl:when test="text() = &quot;op zichzelf staande lijst&quot;">                                                        <xsl:choose>                                                            <xsl:when test="//kr:ElectionSubcategory[ text() != &quot;EK&quot; ]">                                                              <fo:inline font-family="Arial" font-size="9pt">                                                                 <xsl:text>Kieskring:</xsl:text>                                                             </fo:inline>                                                            </xsl:when>                                                         <xsl:otherwise>                                                             <fo:inline font-family="Arial" font-size="9pt">                                                                 <xsl:text>Provincie:</xsl:text>                                                             </fo:inline>                                                            </xsl:otherwise>                                                        </xsl:choose>                                                   </xsl:when>                                                 <xsl:when test="text() = &quot;stel gelijkluidende lijsten&quot;">                                                      <fo:inline font-family="Arial" font-size="9pt">                                                         <xsl:text>Stel:</xsl:text>                                                      </fo:inline>                                                    </xsl:when>                                             </xsl:choose>                                           </xsl:for-each>                                     </fo:block>                                 </fo:table-cell>                                    <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                                      <fo:block text-align="left">                                            <xsl:choose>                                                <xsl:when test="rg:Type/text() = &quot;op zichzelf staande lijst&quot;">                                                    <xsl:choose>                                                        <xsl:when test="//eml:ElectionCategory[ text() != &quot;EK&quot; ]">                                                            <fo:inline font-family="Arial" font-size="9pt">                                                             <xsl:value-of select="@districtNumber"/>                                                            </fo:inline>                                                        </xsl:when>                                                     <xsl:otherwise>                                                         <fo:inline font-family="Arial" font-size="9pt">                                                             <xsl:value-of select="@provinceName"/>                                                          </fo:inline>                                                        </xsl:otherwise>                                                    </xsl:choose>                                               </xsl:when>                                             <xsl:otherwise>                                                 <xsl:for-each select="kr:ListData">                                                     <xsl:for-each select="@BelongsToSet">                                                           <fo:inline font-family="Arial" font-size="9pt">                                                             <xsl:value-of select="string(.)"/>                                                          </fo:inline>                                                        </xsl:for-each>                                                 </xsl:for-each>                                             </xsl:otherwise>                                            </xsl:choose>                                       </fo:block>                                 </fo:table-cell>                                </fo:table-row>                         </xsl:when>                         <xsl:otherwise/>                        </xsl:choose>                       <xsl:choose>                            <xsl:when test="$withList and not($isListengroup)">                             <fo:table-row font-family="Arial" font-size="9pt">                                  <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                                      <fo:block text-align="left">                                            <xsl:choose>                                                <xsl:when test="//kr:ElectionSubcategory[ text() != &quot;TK&quot; and text() != &quot;PS2&quot; ]">                                                    <fo:inline font-family="Arial" font-size="9pt">                                                     <xsl:text>Lijst:</xsl:text>                                                 </fo:inline>                                                </xsl:when>                                             <xsl:when test="../rg:Type = &quot;op zichzelf staande lijst&quot;">                                                    <fo:inline font-family="Arial" font-size="9pt">                                                     <xsl:text>Op zichzelf staande lijst:</xsl:text>                                                 </fo:inline>                                                </xsl:when>                                             <xsl:when test="../rg:Type = &quot;stel gelijkluidende lijsten&quot;">                                                  <fo:inline font-family="Arial" font-size="9pt">                                                     <xsl:text>Stel gelijkluidende lijsten:</xsl:text>                                                   </fo:inline>                                                </xsl:when>                                         </xsl:choose>                                       </fo:block>                                 </fo:table-cell>                                    <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                                      <fo:block text-align="left">                                            <xsl:for-each select="eml:AffiliationIdentifier">                                               <xsl:for-each select="@Id">                                                 <fo:inline font-family="Arial" font-size="9pt">                                                     <xsl:value-of select="string(.)"/>                                                  </fo:inline>                                                </xsl:for-each>                                         </xsl:for-each>                                     </fo:block>                                 </fo:table-cell>                                </fo:table-row>                         </xsl:when>                         <xsl:otherwise/>                        </xsl:choose>                       <xsl:choose>                            <xsl:when test="$withListnumber">                               <fo:table-row font-family="Arial" font-size="9pt">                                  <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                                      <fo:block text-align="left">                                            <fo:inline font-family="Arial" font-size="9pt">                                             <xsl:text>Lijstnummer:</xsl:text>                                           </fo:inline>                                        </fo:block>                                 </fo:table-cell>                                    <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                                      <fo:block text-align="left">                                            <xsl:for-each select="eml:AffiliationIdentifier">                                               <xsl:for-each select="@Id">                                                 <fo:inline font-family="Arial" font-size="9pt">                                                     <xsl:value-of select="string(.)"/>                                                  </fo:inline>                                                </xsl:for-each>                                         </xsl:for-each>                                     </fo:block>                                 </fo:table-cell>                                </fo:table-row>                         </xsl:when>                         <xsl:otherwise/>                        </xsl:choose>                       <xsl:choose>                            <xsl:when test="$withVotes">                                <fo:table-row font-family="Arial" font-size="9pt">                                  <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                                      <fo:block text-align="left">                                            <fo:inline font-family="Arial" font-size="9pt">                                             <xsl:text>Totaal aantal stemmen:</xsl:text>                                         </fo:inline>                                        </fo:block>                                 </fo:table-cell>                                    <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                                      <fo:block text-align="left">                                            <xsl:for-each select="rg:Votes">                                                <xsl:variable name="value-of-template_80">                                                  <xsl:apply-templates/>                                              </xsl:variable>                                             <xsl:choose>                                                    <xsl:when test="contains(string($value-of-template_80),'&#x200B;')">                                                        <fo:block font-family="Arial" font-size="9pt">                                                          <xsl:copy-of select="$value-of-template_80"/>                                                       </fo:block>                                                 </xsl:when>                                                 <xsl:otherwise>                                                     <fo:inline font-family="Arial" font-size="9pt">                                                         <xsl:copy-of select="$value-of-template_80"/>                                                       </fo:inline>                                                    </xsl:otherwise>                                                </xsl:choose>                                           </xsl:for-each>                                     </fo:block>                                 </fo:table-cell>                                </fo:table-row>                         </xsl:when>                         <xsl:otherwise/>                        </xsl:choose>                       <fo:table-row font-family="Arial" font-size="9pt">                          <fo:table-cell border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                <fo:block text-align="left">                                    <xsl:choose>                                        <xsl:when test="$toegewezen">                                           <fo:inline font-family="Arial" font-size="9pt">                                             <xsl:text>Toegewezen</xsl:text>                                         </fo:inline>                                        </xsl:when>                                     <xsl:otherwise>                                         <fo:inline font-family="Arial" font-size="9pt">                                             <xsl:text>Totaal</xsl:text>                                         </fo:inline>                                        </xsl:otherwise>                                    </xsl:choose>                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text> aantal zetels:</xsl:text>                                    </fo:inline>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                <fo:block text-align="left">                                    <xsl:for-each select="rg:Seats">                                        <xsl:variable name="value-of-template_81">                                          <xsl:apply-templates/>                                      </xsl:variable>                                     <xsl:choose>                                            <xsl:when test="contains(string($value-of-template_81),'&#x200B;')">                                                <fo:block font-family="Arial" font-size="9pt">                                                  <xsl:copy-of select="$value-of-template_81"/>                                               </fo:block>                                         </xsl:when>                                         <xsl:otherwise>                                             <fo:inline font-family="Arial" font-size="9pt">                                                 <xsl:copy-of select="$value-of-template_81"/>                                               </fo:inline>                                            </xsl:otherwise>                                        </xsl:choose>                                   </xsl:for-each>                             </fo:block>                         </fo:table-cell>                        </fo:table-row>                 </xsl:variable>                 <xsl:choose>                        <xsl:when test="string($altova:tablerows)">                         <xsl:copy-of select="$altova:tablerows"/>                       </xsl:when>                     <xsl:otherwise>                         <fo:table-row>                              <fo:table-cell>                                 <fo:block/>                             </fo:table-cell>                            </fo:table-row>                     </xsl:otherwise>                    </xsl:choose>               </fo:table-body>            </fo:table>     </xsl:for-each> </xsl:template> <xsl:template name="PartyHeader5Lines">     <fo:table font-family="Arial" font-size="smaller" alignment-baseline="before-edge" table-layout="fixed" width="100%" border-spacing="0">            <fo:table-column column-width="160pt"/>         <fo:table-column column-width="proportional-column-width(1)"/>          <xsl:variable name="altova:CurrContextGrid_82" select="."/>         <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">              <xsl:variable name="altova:tablerows">                  <fo:table-row font-family="Arial" font-size="9pt">                      <fo:table-cell border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                           <fo:block text-align="left">                                <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>Lijstnaam:</xsl:text>                             </fo:inline>                            </fo:block>                     </fo:table-cell>                        <fo:table-cell border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                           <fo:block text-align="left">                                <xsl:call-template name="PartyNamePdfWrapped"/>                         </fo:block>                     </fo:table-cell>                    </fo:table-row>                 <fo:table-row font-family="Arial" font-size="9pt">                      <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                          <fo:block text-align="left">                                <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>Toegewezen aantal zetels lijstengroep:</xsl:text>                             </fo:inline>                            </fo:block>                     </fo:table-cell>                        <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                          <fo:block text-align="left">                                <xsl:for-each select="rg:ElectoralQuota">                                   <xsl:for-each select="rg:Fraction">                                     <xsl:for-each select="@denominator">                                            <fo:inline font-family="Arial" font-size="9pt">                                             <xsl:value-of select="string(.)"/>                                          </fo:inline>                                        </xsl:for-each>                                 </xsl:for-each>                             </xsl:for-each>                         </fo:block>                     </fo:table-cell>                    </fo:table-row>                 <fo:table-row font-family="Arial" font-size="9pt">                      <fo:table-cell border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="left">                                <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>Lijstengroepnummer:</xsl:text>                                </fo:inline>                            </fo:block>                     </fo:table-cell>                        <fo:table-cell border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                            <fo:block text-align="left">                                <xsl:for-each select="eml:AffiliationIdentifier">                                   <xsl:for-each select="@Id">                                     <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:value-of select="string(.)"/>                                      </fo:inline>                                    </xsl:for-each>                             </xsl:for-each>                         </fo:block>                     </fo:table-cell>                    </fo:table-row>             </xsl:variable>             <xsl:choose>                    <xsl:when test="string($altova:tablerows)">                     <xsl:copy-of select="$altova:tablerows"/>                   </xsl:when>                 <xsl:otherwise>                     <fo:table-row>                          <fo:table-cell>                             <fo:block/>                         </fo:table-cell>                        </fo:table-row>                 </xsl:otherwise>                </xsl:choose>           </fo:table-body>        </fo:table> </xsl:template> <xsl:template name="O3CandidateVotes">      <xsl:for-each select="rg:AffiliationVotes">         <xsl:choose>                <xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">                    <fo:inline font-family="Arial" font-size="small">                       <xsl:text>Aanduiding van de groepering: </xsl:text>                 </fo:inline>                    <xsl:for-each select="eml:AffiliationIdentifier">                       <xsl:for-each select="eml:RegisteredName">                          <xsl:variable name="value-of-template_85">                              <xsl:apply-templates/>                          </xsl:variable>                         <xsl:choose>                                <xsl:when test="contains(string($value-of-template_85),'&#x200B;')">                                    <fo:block font-family="Arial" font-size="small">                                        <xsl:copy-of select="$value-of-template_85"/>                                   </fo:block>                             </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="small">                                       <xsl:copy-of select="$value-of-template_85"/>                                   </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:for-each>                 </xsl:for-each>             </xsl:when>             <xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">                    <fo:inline-container>                       <fo:block>                          <xsl:text>&#x200B;</xsl:text>                       </fo:block>                 </fo:inline-container>                  <fo:block font-family="Arial" font-size="9pt" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" margin-right="100% - 100%" white-space="pre" margin="0pt">                       <fo:inline font-family="Arial" font-size="small">                           <xsl:text>Aanduiding van de groepering: </xsl:text>                     </fo:inline>                        <xsl:for-each select="eml:AffiliationIdentifier">                           <xsl:for-each select="eml:RegisteredName">                              <xsl:variable name="value-of-template_86">                                  <xsl:apply-templates/>                              </xsl:variable>                             <xsl:choose>                                    <xsl:when test="contains(string($value-of-template_86),'&#x200B;')">                                        <fo:block font-family="Arial" font-size="small">                                            <xsl:copy-of select="$value-of-template_86"/>                                       </fo:block>                                 </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="small">                                           <xsl:copy-of select="$value-of-template_86"/>                                       </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:for-each>                     </xsl:for-each>                 </fo:block>             </xsl:when>         </xsl:choose>           <fo:block/>         <fo:inline font-family="Arial" font-size="small">               <xsl:text>Lijstnummer: </xsl:text>          </fo:inline>            <xsl:for-each select="eml:AffiliationIdentifier">               <xsl:for-each select="@Id">                 <fo:inline font-family="Arial" font-size="small">                       <xsl:value-of select="string(.)"/>                  </fo:inline>                </xsl:for-each>         </xsl:for-each>         <fo:block/>         <xsl:if test="rg:CandidateVotes">               <fo:table border-bottom="0.01in solid #000" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" table-layout="fixed" width="100%" border-spacing="0">                    <fo:table-column column-width="70pt"/>                  <fo:table-column column-width="proportional-column-width(1)"/>                  <fo:table-column column-width="60pt"/>                  <xsl:variable name="altova:CurrContextGrid_88" select="."/>                 <fo:table-header font-family="Arial" font-size="9pt" start-indent="0pt">                        <xsl:variable name="altova:tablerows">                          <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                    <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="small">                                           <xsl:text>volgnummer op de lijst</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                    <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="small">                                           <xsl:text>Kandidaten</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                    <fo:block text-align="right">                                       <fo:inline font-family="Arial" font-size="small">                                           <xsl:text>Aantal stemmen</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                            </fo:table-row>                     </xsl:variable>                     <xsl:choose>                            <xsl:when test="string($altova:tablerows)">                             <xsl:copy-of select="$altova:tablerows"/>                           </xsl:when>                         <xsl:otherwise>                             <fo:table-row>                                  <fo:table-cell>                                     <fo:block/>                                 </fo:table-cell>                                </fo:table-row>                         </xsl:otherwise>                        </xsl:choose>                   </fo:table-header>                  <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">                      <xsl:variable name="altova:tablerows">                          <xsl:for-each select="rg:CandidateVotes">                               <xsl:sort select="eml:Candidate/eml:CandidateIdentifier/@Id" data-type="number" order="ascending"/>                             <fo:table-row font-family="Arial" font-size="9pt" alignment-baseline="before-edge">                                 <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                                      <fo:block text-align="center">                                          <xsl:for-each select="eml:Candidate">                                               <xsl:for-each select="eml:CandidateIdentifier">                                                 <xsl:for-each select="@Id">                                                     <fo:inline font-family="Arial" font-size="small" text-align="center">                                                           <xsl:value-of select="string(.)"/>                                                      </fo:inline>                                                    </xsl:for-each>                                             </xsl:for-each>                                         </xsl:for-each>                                     </fo:block>                                 </fo:table-cell>                                    <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                                      <fo:block text-align="left">                                            <xsl:for-each select="eml:Candidate">                                               <xsl:for-each select="eml:CandidateFullName">                                                   <xsl:call-template name="LastNameH1"/>                                                  <fo:inline font-family="Arial" font-size="small">                                                       <xsl:text>, </xsl:text>                                                 </fo:inline>                                                    <xsl:call-template name="FirstNameH1"/>                                             </xsl:for-each>                                             <xsl:call-template name="Gender2"/>                                         </xsl:for-each>                                     </fo:block>                                 </fo:table-cell>                                    <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                                      <fo:block text-align="right">                                           <xsl:for-each select="rg:ValidVotes">                                               <xsl:variable name="value-of-template_90">                                                  <xsl:apply-templates/>                                              </xsl:variable>                                             <xsl:choose>                                                    <xsl:when test="contains(string($value-of-template_90),'&#x200B;')">                                                        <fo:block font-family="Arial" font-size="small">                                                            <xsl:copy-of select="$value-of-template_90"/>                                                       </fo:block>                                                 </xsl:when>                                                 <xsl:otherwise>                                                     <fo:inline font-family="Arial" font-size="small">                                                           <xsl:copy-of select="$value-of-template_90"/>                                                       </fo:inline>                                                    </xsl:otherwise>                                                </xsl:choose>                                           </xsl:for-each>                                     </fo:block>                                 </fo:table-cell>                                </fo:table-row>                         </xsl:for-each>                         <fo:table-row font-family="Arial" font-size="9pt" alignment-baseline="before-edge">                             <fo:table-cell border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                   <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="small">                                           <xsl:text>Stemcijfer: </xsl:text>                                       </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                   <fo:block text-align="left"/>                               </fo:table-cell>                                <fo:table-cell border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                   <fo:block text-align="right">                                       <xsl:for-each select="rg:ValidVotes">                                           <xsl:variable name="value-of-template_91">                                              <xsl:apply-templates/>                                          </xsl:variable>                                         <xsl:choose>                                                <xsl:when test="contains(string($value-of-template_91),'&#x200B;')">                                                    <fo:block font-family="Arial" font-size="small">                                                        <xsl:copy-of select="$value-of-template_91"/>                                                   </fo:block>                                             </xsl:when>                                             <xsl:otherwise>                                                 <fo:inline font-family="Arial" font-size="small">                                                       <xsl:copy-of select="$value-of-template_91"/>                                                   </fo:inline>                                                </xsl:otherwise>                                            </xsl:choose>                                       </xsl:for-each>                                 </fo:block>                             </fo:table-cell>                            </fo:table-row>                     </xsl:variable>                     <xsl:choose>                            <xsl:when test="string($altova:tablerows)">                             <xsl:copy-of select="$altova:tablerows"/>                           </xsl:when>                         <xsl:otherwise>                             <fo:table-row>                                  <fo:table-cell>                                     <fo:block/>                                 </fo:table-cell>                                </fo:table-row>                         </xsl:otherwise>                        </xsl:choose>                   </fo:table-body>                </fo:table>         </xsl:if>           <fo:block break-after="page">               <fo:leader leader-pattern="space"/>         </fo:block>     </xsl:for-each> </xsl:template> <xsl:template name="O3-H-CandidateVotes">       <xsl:if test="rg:CandidateAndResult">           <fo:table border-bottom="0.01in solid #000" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" table-layout="fixed" width="100%" border-spacing="0">                <fo:table-column column-width="70pt"/>              <fo:table-column column-width="proportional-column-width(1)"/>              <fo:table-column column-width="60pt"/>              <xsl:variable name="altova:CurrContextGrid_92" select="."/>             <fo:table-header font-family="Arial" font-size="9pt" start-indent="0pt">                    <xsl:variable name="altova:tablerows">                      <fo:table-row font-family="Arial" font-size="9pt">                          <fo:table-cell border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                <fo:block text-align="left">                                    <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>nummer op de lijst</xsl:text>                                 </fo:inline>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                <fo:block text-align="left">                                    <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>naam kandidaat</xsl:text>                                 </fo:inline>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                <fo:block text-align="right">                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>aantal&#160; stemmen</xsl:text>                                   </fo:inline>                                </fo:block>                         </fo:table-cell>                        </fo:table-row>                 </xsl:variable>                 <xsl:choose>                        <xsl:when test="string($altova:tablerows)">                         <xsl:copy-of select="$altova:tablerows"/>                       </xsl:when>                     <xsl:otherwise>                         <fo:table-row>                              <fo:table-cell>                                 <fo:block/>                             </fo:table-cell>                            </fo:table-row>                     </xsl:otherwise>                    </xsl:choose>               </fo:table-header>              <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">                  <xsl:variable name="altova:tablerows">                      <xsl:for-each select="rg:CandidateAndResult">                           <xsl:sort select="eml:Candidate/eml:CandidateIdentifier/@Id" data-type="number" order="ascending"/>                         <fo:table-row font-family="Arial" font-size="9pt" alignment-baseline="before-edge">                             <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="center">                                      <xsl:for-each select="eml:Candidate">                                           <xsl:for-each select="eml:CandidateIdentifier">                                             <xsl:for-each select="@Id">                                                 <fo:inline font-family="Arial" font-size="9pt" text-align="center">                                                     <xsl:value-of select="string(.)"/>                                                  </fo:inline>                                                </xsl:for-each>                                         </xsl:for-each>                                     </xsl:for-each>                                 </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <xsl:for-each select="eml:Candidate">                                           <xsl:for-each select="eml:CandidateFullName">                                               <xsl:call-template name="LastNameH1"/>                                              <fo:inline font-family="Arial" font-size="9pt">                                                 <xsl:text>, </xsl:text>                                             </fo:inline>                                                <xsl:call-template name="FirstNameH1"/>                                         </xsl:for-each>                                         <xsl:call-template name="GenderGeneral">                                                <xsl:with-param name="Gender" select="eml:Gender"/>                                             <xsl:with-param name="PublishGender" select="../../kr:ListData/@PublishGender"/>                                                <xsl:with-param name="PublicationLanguage" select="../../kr:ListData/@PublicationLanguage"/>                                            </xsl:call-template>                                        </xsl:for-each>                                 </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="right">                                       <xsl:for-each select="rg:TotalVotes">                                           <xsl:variable name="value-of-template_94">                                              <xsl:apply-templates/>                                          </xsl:variable>                                         <xsl:choose>                                                <xsl:when test="contains(string($value-of-template_94),'&#x200B;')">                                                    <fo:block font-family="Arial" font-size="9pt">                                                      <xsl:copy-of select="$value-of-template_94"/>                                                   </fo:block>                                             </xsl:when>                                             <xsl:otherwise>                                                 <fo:inline font-family="Arial" font-size="9pt">                                                     <xsl:copy-of select="$value-of-template_94"/>                                                   </fo:inline>                                                </xsl:otherwise>                                            </xsl:choose>                                       </xsl:for-each>                                 </fo:block>                             </fo:table-cell>                            </fo:table-row>                     </xsl:for-each>                     <fo:table-row font-family="Arial" font-size="9pt" alignment-baseline="before-edge">                         <fo:table-cell border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                               <fo:block text-align="left"/>                           </fo:table-cell>                            <fo:table-cell border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                               <fo:block text-align="right">                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>Totaal</xsl:text>                                 </fo:inline>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                               <fo:block text-align="right">                                   <xsl:for-each select="rg:Votes">                                        <xsl:variable name="value-of-template_95">                                          <xsl:apply-templates/>                                      </xsl:variable>                                     <xsl:choose>                                            <xsl:when test="contains(string($value-of-template_95),'&#x200B;')">                                                <fo:block font-family="Arial" font-size="9pt">                                                  <xsl:copy-of select="$value-of-template_95"/>                                               </fo:block>                                         </xsl:when>                                         <xsl:otherwise>                                             <fo:inline font-family="Arial" font-size="9pt">                                                 <xsl:copy-of select="$value-of-template_95"/>                                               </fo:inline>                                            </xsl:otherwise>                                        </xsl:choose>                                   </xsl:for-each>                             </fo:block>                         </fo:table-cell>                        </fo:table-row>                 </xsl:variable>                 <xsl:choose>                        <xsl:when test="string($altova:tablerows)">                         <xsl:copy-of select="$altova:tablerows"/>                       </xsl:when>                     <xsl:otherwise>                         <fo:table-row>                              <fo:table-cell>                                 <fo:block/>                             </fo:table-cell>                            </fo:table-row>                     </xsl:otherwise>                    </xsl:choose>               </fo:table-body>            </fo:table>     </xsl:if>   </xsl:template> <xsl:template name="OverviewVotesP22-2">        <xsl:if test="rg:OverviewOfCandidatesAndResults">           <fo:table border-bottom="0.01in solid #000" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" table-layout="fixed" width="100%" border-spacing="0">                <fo:table-column column-width="90pt"/>              <fo:table-column column-width="proportional-column-width(1)"/>              <fo:table-column column-width="120pt"/>             <xsl:variable name="altova:CurrContextGrid_96" select="."/>             <fo:table-header font-family="Arial" font-size="9pt" start-indent="0pt">                    <xsl:variable name="altova:tablerows">                      <fo:table-row font-family="Arial" font-size="9pt">                          <fo:table-cell border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                <fo:block text-align="left">                                    <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>lijstnummer</xsl:text>                                    </fo:inline>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                <fo:block text-align="left">                                    <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>lijstnaam</xsl:text>                                  </fo:inline>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                <fo:block text-align="right">                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>aantal stemmen</xsl:text>                                 </fo:inline>                                </fo:block>                         </fo:table-cell>                        </fo:table-row>                 </xsl:variable>                 <xsl:choose>                        <xsl:when test="string($altova:tablerows)">                         <xsl:copy-of select="$altova:tablerows"/>                       </xsl:when>                     <xsl:otherwise>                         <fo:table-row>                              <fo:table-cell>                                 <fo:block/>                             </fo:table-cell>                            </fo:table-row>                     </xsl:otherwise>                    </xsl:choose>               </fo:table-header>              <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">                  <xsl:variable name="altova:tablerows">                      <xsl:for-each select="rg:OverviewOfCandidatesAndResults">                           <xsl:for-each select="rg:ListGroupAndResults">                              <xsl:sort select="eml:AffiliationIdentifier/@Id" data-type="number" order="ascending"/>                             <fo:table-row font-family="Arial" font-size="9pt">                                  <fo:table-cell font-family="Arial" font-size="9pt" padding-top="2pt" padding="1" display-align="before">                                        <fo:block text-align="center">                                          <xsl:for-each select="eml:AffiliationIdentifier">                                               <xsl:for-each select="@Id">                                                 <fo:inline font-family="Arial" font-size="9pt">                                                     <xsl:value-of select="string(.)"/>                                                  </fo:inline>                                                </xsl:for-each>                                         </xsl:for-each>                                     </fo:block>                                 </fo:table-cell>                                    <fo:table-cell font-family="Arial" font-size="9pt" padding-top="2pt" padding="1" display-align="before">                                        <fo:block text-align="left">                                            <xsl:call-template name="PartyNamePdfWrapped"/>                                     </fo:block>                                 </fo:table-cell>                                    <fo:table-cell font-family="Arial" font-size="9pt" padding-top="2pt" padding="1" display-align="before">                                        <fo:block text-align="right">                                           <xsl:for-each select="rg:Votes">                                                <xsl:variable name="value-of-template_98">                                                  <xsl:apply-templates/>                                              </xsl:variable>                                             <xsl:choose>                                                    <xsl:when test="contains(string($value-of-template_98),'&#x200B;')">                                                        <fo:block font-family="Arial" font-size="9pt" text-align="right">                                                           <xsl:copy-of select="$value-of-template_98"/>                                                       </fo:block>                                                 </xsl:when>                                                 <xsl:otherwise>                                                     <fo:inline font-family="Arial" font-size="9pt" text-align="right">                                                          <xsl:copy-of select="$value-of-template_98"/>                                                       </fo:inline>                                                    </xsl:otherwise>                                                </xsl:choose>                                           </xsl:for-each>                                     </fo:block>                                 </fo:table-cell>                                </fo:table-row>                         </xsl:for-each>                     </xsl:for-each>                     <fo:table-row font-family="Arial" font-size="9pt">                          <fo:table-cell number-columns-spanned="2" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                <fo:block text-align="right">                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Totaal</xsl:text>                                    </fo:inline>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                               <fo:block text-align="right">                                   <xsl:for-each select="rg:ElectoralQuota">                                       <xsl:for-each select="rg:Fraction">                                         <xsl:for-each select="@numerator">                                              <fo:inline font-family="Arial" font-size="9pt">                                                 <xsl:value-of select="string(.)"/>                                              </fo:inline>                                            </xsl:for-each>                                     </xsl:for-each>                                 </xsl:for-each>                             </fo:block>                         </fo:table-cell>                        </fo:table-row>                 </xsl:variable>                 <xsl:choose>                        <xsl:when test="string($altova:tablerows)">                         <xsl:copy-of select="$altova:tablerows"/>                       </xsl:when>                     <xsl:otherwise>                         <fo:table-row>                              <fo:table-cell>                                 <fo:block/>                             </fo:table-cell>                            </fo:table-row>                     </xsl:otherwise>                    </xsl:choose>               </fo:table-body>            </fo:table>     </xsl:if>   </xsl:template> <xsl:template name="ListOrCombinedList2">       <xsl:for-each select="rg:ListOrCombinedList">           <xsl:for-each select="@listNumber">             <fo:inline font-family="Arial" font-size="9pt">                 <xsl:value-of select="string(.)"/>              </fo:inline>            </xsl:for-each>     </xsl:for-each>     <xsl:if test="count(rg:ListOrCombinedList/rg:ListInCombination) &gt;0">         <fo:inline font-family="Arial" font-size="9pt">             <xsl:text> (</xsl:text>         </fo:inline>            <xsl:for-each select="rg:ListOrCombinedList">               <xsl:for-each select="rg:ListInCombination">                    <xsl:variable name="value-of-template_101">                     <xsl:apply-templates/>                  </xsl:variable>                 <xsl:choose>                        <xsl:when test="contains(string($value-of-template_101),'&#x200B;')">                           <fo:block font-family="Arial" font-size="9pt">                              <xsl:copy-of select="$value-of-template_101"/>                          </fo:block>                     </xsl:when>                     <xsl:otherwise>                         <fo:inline font-family="Arial" font-size="9pt">                             <xsl:copy-of select="$value-of-template_101"/>                          </fo:inline>                        </xsl:otherwise>                    </xsl:choose>                   <xsl:if test="position() != last()">                        <fo:inline font-family="Arial" font-size="9pt">                         <xsl:text>, </xsl:text>                     </fo:inline>                    </xsl:if>               </xsl:for-each>         </xsl:for-each>         <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>)</xsl:text>          </fo:inline>        </xsl:if>   </xsl:template> <xsl:template name="OverviewNiemeyerAssignment">        <xsl:for-each select="rg:NiemeyerAssignment">           <xsl:if test="rg:NiemeyerAssignmentLine">               <fo:table border-bottom="0.01in solid #000" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" table-layout="fixed" width="100%" border-spacing="0">                    <fo:table-column column-width="130pt"/>                 <fo:table-column column-width="70pt"/>                  <fo:table-column column-width="90pt"/>                  <fo:table-column column-width="80pt"/>                  <fo:table-column column-width="80pt"/>                  <xsl:variable name="altova:CurrContextGrid_102" select="."/>                    <fo:table-header font-family="Arial" font-size="9pt" start-indent="0pt">                        <xsl:variable name="altova:tablerows">                          <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                    <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                            <xsl:text>lijstnummer</xsl:text>                                        </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                    <fo:block text-align="right">                                       <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                            <xsl:text>aantal zetels</xsl:text>                                      </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                    <fo:block text-align="right">                                       <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                            <xsl:text>overschot</xsl:text>                                      </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                    <fo:block text-align="left"/>                               </fo:table-cell>                                <fo:table-cell border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                    <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                            <xsl:text>aantal restzetels</xsl:text>                                      </fo:inline>                                    </fo:block>                             </fo:table-cell>                            </fo:table-row>                     </xsl:variable>                     <xsl:choose>                            <xsl:when test="string($altova:tablerows)">                             <xsl:copy-of select="$altova:tablerows"/>                           </xsl:when>                         <xsl:otherwise>                             <fo:table-row>                                  <fo:table-cell>                                     <fo:block/>                                 </fo:table-cell>                                </fo:table-row>                         </xsl:otherwise>                        </xsl:choose>                   </fo:table-header>                  <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">                      <xsl:variable name="altova:tablerows">                          <xsl:for-each select="rg:NiemeyerAssignmentLine">                               <fo:table-row font-family="Arial" font-size="9pt">                                  <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="before">                                      <fo:block text-align="left">                                            <xsl:call-template name="ListOrCombinedList2"/>                                     </fo:block>                                 </fo:table-cell>                                    <fo:table-cell font-family="Arial" font-size="9pt" padding-right="10pt" padding="1" display-align="before">                                     <fo:block text-align="right">                                           <xsl:for-each select="rg:PriorSeats">                                               <xsl:variable name="value-of-template_103">                                                 <xsl:apply-templates/>                                              </xsl:variable>                                             <xsl:choose>                                                    <xsl:when test="contains(string($value-of-template_103),'&#x200B;')">                                                       <fo:block font-family="Arial" font-size="9pt">                                                          <xsl:copy-of select="$value-of-template_103"/>                                                      </fo:block>                                                 </xsl:when>                                                 <xsl:otherwise>                                                     <fo:inline font-family="Arial" font-size="9pt">                                                         <xsl:copy-of select="$value-of-template_103"/>                                                      </fo:inline>                                                    </xsl:otherwise>                                                </xsl:choose>                                           </xsl:for-each>                                     </fo:block>                                 </fo:table-cell>                                    <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="before">                                      <fo:block text-align="right">                                           <xsl:for-each select="rg:Remainder">                                                <xsl:call-template name="ElectionFractionPart1"/>                                           </xsl:for-each>                                     </fo:block>                                 </fo:table-cell>                                    <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="before">                                      <fo:block text-align="left">                                            <xsl:for-each select="rg:Remainder">                                                <xsl:call-template name="ElectionFractionPart2"/>                                           </xsl:for-each>                                     </fo:block>                                 </fo:table-cell>                                    <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="before">                                      <fo:block text-align="left">                                            <xsl:if test="rg:NewSeats != 0">                                                <xsl:for-each select="rg:NewSeats">                                                 <xsl:variable name="value-of-template_104">                                                     <xsl:apply-templates/>                                                  </xsl:variable>                                                 <xsl:choose>                                                        <xsl:when test="contains(string($value-of-template_104),'&#x200B;')">                                                           <fo:block font-family="Arial" font-size="9pt">                                                              <xsl:copy-of select="$value-of-template_104"/>                                                          </fo:block>                                                     </xsl:when>                                                     <xsl:otherwise>                                                         <fo:inline font-family="Arial" font-size="9pt">                                                             <xsl:copy-of select="$value-of-template_104"/>                                                          </fo:inline>                                                        </xsl:otherwise>                                                    </xsl:choose>                                               </xsl:for-each>                                         </xsl:if>                                       </fo:block>                                 </fo:table-cell>                                </fo:table-row>                         </xsl:for-each>                     </xsl:variable>                     <xsl:choose>                            <xsl:when test="string($altova:tablerows)">                             <xsl:copy-of select="$altova:tablerows"/>                           </xsl:when>                         <xsl:otherwise>                             <fo:table-row>                                  <fo:table-cell>                                     <fo:block/>                                 </fo:table-cell>                                </fo:table-row>                         </xsl:otherwise>                        </xsl:choose>                   </fo:table-body>                </fo:table>         </xsl:if>           <xsl:for-each select="rg:Allotting">                <xsl:call-template name="LineBreak"/>               <fo:inline font-family="Arial" font-size="9pt">                 <xsl:text>Overeenkomstig artikel </xsl:text>                </fo:inline>                <xsl:choose>                    <xsl:when test="@article = &quot;P13&quot;">                        <fo:inline font-family="Arial" font-size="9pt">                         <xsl:text>P 13</xsl:text>                       </fo:inline>                    </xsl:when>                 <xsl:otherwise>                     <fo:inline font-family="Arial" font-size="9pt">                         <xsl:text>P 8</xsl:text>                        </fo:inline>                    </xsl:otherwise>                </xsl:choose>               <fo:inline font-family="Arial" font-size="9pt">                 <xsl:text>, eerste lid van de Kieswet heeft een loting plaatsgevonden tussen </xsl:text>                </fo:inline>                <xsl:for-each select="rg:Winner">                   <xsl:call-template name="ListOrCombinedList"/>              </xsl:for-each>             <xsl:for-each select="rg:Looser">                   <fo:inline font-family="Arial" font-size="9pt">                     <xsl:text> en </xsl:text>                   </fo:inline>                    <xsl:call-template name="ListOrCombinedList"/>              </xsl:for-each>             <fo:inline font-family="Arial" font-size="9pt">                 <xsl:text>. Als gevolg hiervan is een restzetel toegewezen aan </xsl:text>              </fo:inline>                <xsl:for-each select="rg:Winner">                   <xsl:call-template name="ListOrCombinedList"/>              </xsl:for-each>             <fo:inline font-family="Arial" font-size="9pt">                 <xsl:text>.</xsl:text>              </fo:inline>            </xsl:for-each>     </xsl:for-each> </xsl:template> <xsl:template name="ListOrCombinedListUni">     <xsl:for-each select="rg:ListOrCombinedList">           <xsl:choose>                <xsl:when test="@combinationId">                    <xsl:if test="count( rg:ListInCombination ) &gt; 0">                        <fo:inline font-family="Arial" font-size="9pt">                         <xsl:text> (</xsl:text>                     </fo:inline>                        <xsl:for-each select="rg:ListInCombination">                            <xsl:variable name="value-of-template_105">                             <xsl:apply-templates/>                          </xsl:variable>                         <xsl:choose>                                <xsl:when test="contains(string($value-of-template_105),'&#x200B;')">                                   <fo:block font-family="Arial" font-size="9pt">                                      <xsl:copy-of select="$value-of-template_105"/>                                  </fo:block>                             </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:copy-of select="$value-of-template_105"/>                                  </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                           <xsl:if test="position() != last()">                                <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>, </xsl:text>                             </fo:inline>                            </xsl:if>                       </xsl:for-each>                     <fo:inline font-family="Arial" font-size="9pt">                         <xsl:text>)</xsl:text>                      </fo:inline>                    </xsl:if>               </xsl:when>             <xsl:when test="@districtNumber">                   <fo:inline font-family="Arial" font-size="9pt">                     <xsl:text>kieskring </xsl:text>                 </fo:inline>                    <xsl:for-each select="@districtNumber">                     <fo:inline font-family="Arial" font-size="9pt">                         <xsl:value-of select="string(.)"/>                      </fo:inline>                    </xsl:for-each>             </xsl:when>             <xsl:when test="@setNumber">                    <fo:inline font-family="Arial" font-size="9pt">                     <xsl:text>stel </xsl:text>                  </fo:inline>                    <xsl:for-each select="@setNumber">                      <fo:inline font-family="Arial" font-size="9pt">                         <xsl:value-of select="string(.)"/>                      </fo:inline>                    </xsl:for-each>             </xsl:when>             <xsl:when test="@listNumber">                   <fo:inline font-family="Arial" font-size="9pt">                     <xsl:text>lijst </xsl:text>                 </fo:inline>                    <xsl:for-each select="@listNumber">                     <fo:inline font-family="Arial" font-size="9pt">                         <xsl:value-of select="string(.)"/>                      </fo:inline>                    </xsl:for-each>             </xsl:when>         </xsl:choose>       </xsl:for-each> </xsl:template> <xsl:template name="PostTitle">     <xsl:if test="$SV_OutputFormat = &apos;PDF&apos;">          <fo:block>              <fo:leader leader-pattern="space"/>         </fo:block>         <fo:inline-container>               <fo:block>                  <xsl:text>&#x200B;</xsl:text>               </fo:block>         </fo:inline-container>          <fo:block font-family="Arial" font-size="9pt" margin-right="100% - 100%" margin="0pt"/>     </xsl:if>   </xsl:template> <xsl:template name="Kiesdeler">     <xsl:param name="inListGroup" select="false()"/>        <xsl:for-each select="rg:ElectoralQuota">           <fo:table font-family="Arial" font-size="9pt" table-layout="fixed" width="100%" border-spacing="2pt">               <fo:table-column column-width="180pt"/>             <fo:table-column column-width="15pt"/>              <fo:table-column column-width="proportional-column-width(1)"/>              <fo:table-column column-width="15pt"/>              <fo:table-column column-width="100pt"/>             <xsl:variable name="altova:CurrContextGrid_109" select="."/>                <fo:table-header font-family="Arial" font-size="9pt" start-indent="0pt">                    <xsl:variable name="altova:tablerows">                      <fo:table-row font-family="Arial" font-size="9pt">                          <fo:table-cell font-family="Arial" font-size="9pt" padding="2pt" display-align="center">                                <fo:block text-align="left">                                    <xsl:choose>                                        <xsl:when test="$inListGroup">                                          <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                                <xsl:text>aantal stemmen</xsl:text>                                         </fo:inline>                                        </xsl:when>                                     <xsl:otherwise>                                         <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                                <xsl:text>totaal aantal geldige stemmen op kandidaten</xsl:text>                                            </fo:inline>                                        </xsl:otherwise>                                    </xsl:choose>                               </fo:block>                         </fo:table-cell>                            <fo:table-cell font-family="Arial" font-size="9pt" padding="2pt" display-align="center">                                <fo:block text-align="left"/>                           </fo:table-cell>                            <fo:table-cell font-family="Arial" font-size="9pt" padding="2pt" display-align="center">                                <fo:block text-align="left">                                    <xsl:if test="$inListGroup and //kr:ElectionSubcategory = &apos;EK&apos;">                                      <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                            <xsl:text>toegewezen </xsl:text>                                        </fo:inline>                                    </xsl:if>                                   <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                        <xsl:text>aantal zetels</xsl:text>                                  </fo:inline>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell font-family="Arial" font-size="9pt" padding="2pt" display-align="center">                                <fo:block text-align="left"/>                           </fo:table-cell>                            <fo:table-cell font-family="Arial" font-size="9pt" padding="2pt" display-align="center">                                <fo:block text-align="left">                                    <xsl:choose>                                        <xsl:when test="$inListGroup">                                          <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                                <xsl:text>groepskiesdeler </xsl:text>                                           </fo:inline>                                        </xsl:when>                                     <xsl:otherwise>                                         <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                                <xsl:text>kiesdeler</xsl:text>                                          </fo:inline>                                        </xsl:otherwise>                                    </xsl:choose>                               </fo:block>                         </fo:table-cell>                        </fo:table-row>                 </xsl:variable>                 <xsl:choose>                        <xsl:when test="string($altova:tablerows)">                         <xsl:copy-of select="$altova:tablerows"/>                       </xsl:when>                     <xsl:otherwise>                         <fo:table-row>                              <fo:table-cell>                                 <fo:block/>                             </fo:table-cell>                            </fo:table-row>                     </xsl:otherwise>                    </xsl:choose>               </fo:table-header>              <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">                  <xsl:variable name="altova:tablerows">                      <fo:table-row font-family="Arial" font-size="9pt">                          <fo:table-cell font-family="Arial" font-size="9pt" padding="2pt" display-align="center">                                <fo:block text-align="left">                                    <xsl:for-each select="rg:Fraction">                                     <xsl:for-each select="@numerator">                                          <fo:inline font-family="Arial" font-size="9pt">                                             <xsl:value-of select="string(.)"/>                                          </fo:inline>                                        </xsl:for-each>                                 </xsl:for-each>                             </fo:block>                         </fo:table-cell>                            <fo:table-cell font-family="Arial" font-size="9pt" padding="2pt" display-align="center">                                <fo:block text-align="center">                                  <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>:</xsl:text>                                  </fo:inline>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell font-family="Arial" font-size="9pt" padding="2pt" display-align="center">                                <fo:block text-align="left">                                    <xsl:for-each select="rg:Fraction">                                     <xsl:for-each select="@denominator">                                            <fo:inline font-family="Arial" font-size="9pt">                                             <xsl:value-of select="string(.)"/>                                          </fo:inline>                                        </xsl:for-each>                                 </xsl:for-each>                             </fo:block>                         </fo:table-cell>                            <fo:table-cell font-family="Arial" font-size="9pt" padding="2pt" display-align="center">                                <fo:block text-align="center">                                  <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>=</xsl:text>                                  </fo:inline>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell font-family="Arial" font-size="9pt" padding="2pt" display-align="center">                                <fo:block text-align="left">                                    <xsl:call-template name="ElectionFraction"/>                                </fo:block>                         </fo:table-cell>                        </fo:table-row>                 </xsl:variable>                 <xsl:choose>                        <xsl:when test="string($altova:tablerows)">                         <xsl:copy-of select="$altova:tablerows"/>                       </xsl:when>                     <xsl:otherwise>                         <fo:table-row>                              <fo:table-cell>                                 <fo:block/>                             </fo:table-cell>                            </fo:table-row>                     </xsl:otherwise>                    </xsl:choose>               </fo:table-body>            </fo:table>         <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>&#160;</xsl:text>         </fo:inline>        </xsl:for-each> </xsl:template> <xsl:template name="OverviewDHondtTableOneSeat">        <xsl:param name="maxNumberOfAssignments"/>      <xsl:if test="rg:DHondtAssignmentLine">         <fo:table border-bottom="0.01in solid #000" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" table-layout="fixed" width="100%" border-spacing="0">                <fo:table-column column-width="30pt"/>              <fo:table-column column-width="70pt"/>              <fo:table-column column-width="proportional-column-width(1)"/>              <fo:table-column column-width="proportional-column-width(1)"/>              <fo:table-column column-width="proportional-column-width(1)"/>              <fo:table-column column-width="62pt"/>              <xsl:variable name="altova:CurrContextGrid_112" select="."/>                <fo:table-header font-family="Arial" font-size="9pt" start-indent="0pt">                    <xsl:variable name="altova:tablerows">                      <fo:table-row font-family="Arial" font-size="9pt">                          <fo:table-cell number-columns-spanned="2" border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                             <fo:block text-align="left">                                    <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                        <xsl:text>lijstnummer</xsl:text>                                    </fo:inline>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                <fo:block text-align="center">                                  <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                        <xsl:text>reeds toegewezen</xsl:text>                                   </fo:inline>                                    <fo:block/>                                 <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                        <xsl:text>aantal zetels</xsl:text>                                  </fo:inline>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell number-columns-spanned="2" border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                             <fo:block text-align="center">                                  <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                        <xsl:text>gemiddeld aantal stemmen</xsl:text>                                   </fo:inline>                                    <fo:block/>                                 <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                        <xsl:text>bij toewijzing restzetel</xsl:text>                                   </fo:inline>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                <fo:block text-align="left">                                    <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                        <xsl:text>aantal restzetels</xsl:text>                                  </fo:inline>                                </fo:block>                         </fo:table-cell>                        </fo:table-row>                 </xsl:variable>                 <xsl:choose>                        <xsl:when test="string($altova:tablerows)">                         <xsl:copy-of select="$altova:tablerows"/>                       </xsl:when>                     <xsl:otherwise>                         <fo:table-row>                              <fo:table-cell>                                 <fo:block/>                             </fo:table-cell>                            </fo:table-row>                     </xsl:otherwise>                    </xsl:choose>               </fo:table-header>              <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">                  <xsl:variable name="altova:tablerows">                      <xsl:for-each select="rg:DHondtAssignmentLine">                         <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="right">                                       <xsl:for-each select="rg:ListOrCombinedList">                                           <xsl:for-each select="@combinationId">                                              <fo:inline font-family="Arial" font-size="9pt">                                                 <xsl:value-of select="string(.)"/>                                              </fo:inline>                                            </xsl:for-each>                                         <xsl:for-each select="@listNumber">                                             <fo:inline font-family="Arial" font-size="9pt">                                                 <xsl:value-of select="string(.)"/>                                              </fo:inline>                                            </xsl:for-each>                                     </xsl:for-each>                                 </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" padding-left="5pt" padding="1" display-align="center">                                   <fo:block text-align="left">                                        <xsl:call-template name="ListOrCombinedListPart2"/>                                 </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="center">                                      <xsl:for-each select="rg:PriorSeats">                                           <xsl:variable name="value-of-template_115">                                             <xsl:apply-templates/>                                          </xsl:variable>                                         <xsl:choose>                                                <xsl:when test="contains(string($value-of-template_115),'&#x200B;')">                                                   <fo:block font-family="Arial" font-size="9pt">                                                      <xsl:copy-of select="$value-of-template_115"/>                                                  </fo:block>                                             </xsl:when>                                             <xsl:otherwise>                                                 <fo:inline font-family="Arial" font-size="9pt">                                                     <xsl:copy-of select="$value-of-template_115"/>                                                  </fo:inline>                                                </xsl:otherwise>                                            </xsl:choose>                                       </xsl:for-each>                                 </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" margin-left="0pt" padding="1" display-align="center">                                    <fo:block text-align="right">                                       <xsl:for-each select="rg:DHondtFraction">                                           <xsl:if test="@step = 1">                                               <xsl:call-template name="ElectionFractionPart1">                                                    <xsl:with-param name="smaller" select="1"/>                                                 <xsl:with-param name="bold" select="false()"/>                                              </xsl:call-template>                                            </xsl:if>                                       </xsl:for-each>                                 </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" margin-left="5pt" padding="1" display-align="center">                                    <fo:block text-align="left">                                        <xsl:for-each select="rg:DHondtFraction">                                           <xsl:if test="@step = 1">                                               <xsl:call-template name="ElectionFractionPart2">                                                    <xsl:with-param name="smaller" select="1"/>                                                 <xsl:with-param name="bold" select="false()"/>                                              </xsl:call-template>                                            </xsl:if>                                       </xsl:for-each>                                 </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" margin-left="0pt" padding="1" display-align="center">                                    <fo:block text-align="center">                                      <xsl:if test="rg:NewSeats != 0">                                            <xsl:for-each select="rg:NewSeats">                                             <xsl:variable name="value-of-template_116">                                                 <xsl:apply-templates/>                                              </xsl:variable>                                             <xsl:choose>                                                    <xsl:when test="contains(string($value-of-template_116),'&#x200B;')">                                                       <fo:block font-family="Arial" font-size="9pt">                                                          <xsl:copy-of select="$value-of-template_116"/>                                                      </fo:block>                                                 </xsl:when>                                                 <xsl:otherwise>                                                     <fo:inline font-family="Arial" font-size="9pt">                                                         <xsl:copy-of select="$value-of-template_116"/>                                                      </fo:inline>                                                    </xsl:otherwise>                                                </xsl:choose>                                           </xsl:for-each>                                     </xsl:if>                                   </fo:block>                             </fo:table-cell>                            </fo:table-row>                     </xsl:for-each>                 </xsl:variable>                 <xsl:choose>                        <xsl:when test="string($altova:tablerows)">                         <xsl:copy-of select="$altova:tablerows"/>                       </xsl:when>                     <xsl:otherwise>                         <fo:table-row>                              <fo:table-cell>                                 <fo:block/>                             </fo:table-cell>                            </fo:table-row>                     </xsl:otherwise>                    </xsl:choose>               </fo:table-body>            </fo:table>     </xsl:if>   </xsl:template> <xsl:template name="OverviewDHondtTable2">      <xsl:param name="maxNumberOfAssignments"/>      <xsl:if test="rg:DHondtAssignmentLine">         <fo:table border-bottom="0.01in solid #000" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" table-layout="fixed" width="100%" border-spacing="0">                <fo:table-column column-width="30pt"/>              <fo:table-column column-width="70pt"/>              <fo:table-column column-width="proportional-column-width(1)"/>              <fo:table-column column-width="proportional-column-width(1)"/>              <fo:table-column column-width="proportional-column-width(1)"/>              <fo:table-column column-width="proportional-column-width(1)"/>              <fo:table-column column-width="62pt"/>              <xsl:variable name="altova:CurrContextGrid_117" select="."/>                <fo:table-header font-family="Arial" font-size="9pt" start-indent="0pt">                    <xsl:variable name="altova:tablerows">                      <fo:table-row font-family="Arial" font-size="9pt">                          <fo:table-cell number-columns-spanned="2" number-rows-spanned="2" border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                             <fo:block text-align="left">                                    <xsl:choose>                                        <xsl:when test="//kr:ElectionSubcategory[ text() = &quot;EK&quot; ]">                                           <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                                <xsl:text>lijstnummer</xsl:text>                                            </fo:inline>                                        </xsl:when>                                     <xsl:when test="@article = &quot;P13&quot;">                                            <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                                <xsl:text>Lijst</xsl:text>                                          </fo:inline>                                        </xsl:when>                                     <xsl:otherwise>                                         <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                                <xsl:text>lijstnummer</xsl:text>                                            </fo:inline>                                            <fo:block/>                                     </xsl:otherwise>                                    </xsl:choose>                               </fo:block>                         </fo:table-cell>                            <fo:table-cell number-columns-spanned="4" font-family="Arial" font-size="9pt" padding="1" display-align="center">                               <fo:block text-align="center">                                  <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                        <xsl:text>restzetel</xsl:text>                                  </fo:inline>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell number-rows-spanned="2" border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                <fo:block text-align="left">                                    <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                        <xsl:text>aantal restzetels</xsl:text>                                  </fo:inline>                                </fo:block>                         </fo:table-cell>                        </fo:table-row>                     <fo:table-row font-family="Arial" font-size="9pt">                          <fo:table-cell number-columns-spanned="2" border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                             <fo:block text-align="center">                                  <xsl:call-template name="DHondtHeader">                                     <xsl:with-param name="step" select="1"/>                                        <xsl:with-param name="maxNumberOfAssignments" select="$maxNumberOfAssignments"/>                                    </xsl:call-template>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell number-columns-spanned="2" border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                             <fo:block text-align="center">                                  <xsl:call-template name="DHondtHeader">                                     <xsl:with-param name="step" select="2"/>                                        <xsl:with-param name="maxNumberOfAssignments" select="$maxNumberOfAssignments"/>                                    </xsl:call-template>                                </fo:block>                         </fo:table-cell>                        </fo:table-row>                 </xsl:variable>                 <xsl:choose>                        <xsl:when test="string($altova:tablerows)">                         <xsl:copy-of select="$altova:tablerows"/>                       </xsl:when>                     <xsl:otherwise>                         <fo:table-row>                              <fo:table-cell>                                 <fo:block/>                             </fo:table-cell>                            </fo:table-row>                     </xsl:otherwise>                    </xsl:choose>               </fo:table-header>              <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">                  <xsl:variable name="altova:tablerows">                      <xsl:for-each select="rg:DHondtAssignmentLine">                         <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="right">                                       <xsl:for-each select="rg:ListOrCombinedList">                                           <xsl:for-each select="@combinationId">                                              <fo:inline font-family="Arial" font-size="smaller">                                                 <xsl:value-of select="string(.)"/>                                              </fo:inline>                                            </xsl:for-each>                                         <xsl:for-each select="@listNumber">                                             <fo:inline font-family="Arial" font-size="smaller">                                                 <xsl:value-of select="string(.)"/>                                              </fo:inline>                                            </xsl:for-each>                                     </xsl:for-each>                                 </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" padding-left="5pt" padding="1" display-align="center">                                   <fo:block text-align="left">                                        <xsl:call-template name="ListOrCombinedListPart2"/>                                 </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="right">                                       <xsl:call-template name="DHondtFractionPart1">                                          <xsl:with-param name="step" select="1"/>                                        </xsl:call-template>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" margin-left="5pt" padding="1" display-align="center">                                    <fo:block text-align="left">                                        <xsl:call-template name="DHondtFractionPart2">                                          <xsl:with-param name="step" select="1"/>                                        </xsl:call-template>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" margin-left="0pt" padding="1" display-align="center">                                    <fo:block text-align="right">                                       <xsl:call-template name="DHondtFractionPart1">                                          <xsl:with-param name="step" select="2"/>                                        </xsl:call-template>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" margin-left="5pt" padding="1" display-align="center">                                    <fo:block text-align="left">                                        <xsl:call-template name="DHondtFractionPart2">                                          <xsl:with-param name="step" select="2"/>                                        </xsl:call-template>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" margin-left="0pt" padding="1" display-align="center">                                    <fo:block text-align="center">                                      <xsl:if test="rg:NewSeats != 0">                                            <xsl:for-each select="rg:NewSeats">                                             <xsl:variable name="value-of-template_120">                                                 <xsl:apply-templates/>                                              </xsl:variable>                                             <xsl:choose>                                                    <xsl:when test="contains(string($value-of-template_120),'&#x200B;')">                                                       <fo:block font-family="Arial" font-size="smaller">                                                          <xsl:copy-of select="$value-of-template_120"/>                                                      </fo:block>                                                 </xsl:when>                                                 <xsl:otherwise>                                                     <fo:inline font-family="Arial" font-size="smaller">                                                         <xsl:copy-of select="$value-of-template_120"/>                                                      </fo:inline>                                                    </xsl:otherwise>                                                </xsl:choose>                                           </xsl:for-each>                                     </xsl:if>                                   </fo:block>                             </fo:table-cell>                            </fo:table-row>                     </xsl:for-each>                     <fo:table-row font-family="Arial" font-size="9pt">                          <fo:table-cell number-columns-spanned="2" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                <fo:block text-align="left">                                    <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal" display-align="after">                                      <xsl:text>restzetel toegekend aan</xsl:text>                                    </fo:inline>                                    <fo:block/>                                 <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                        <xsl:text>lijst</xsl:text>                                  </fo:inline>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell number-columns-spanned="2" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                <fo:block text-align="center">                                  <xsl:call-template name="DHondtWinners">                                        <xsl:with-param name="step" select="1"/>                                    </xsl:call-template>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell number-columns-spanned="2" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                <fo:block text-align="center">                                  <xsl:call-template name="DHondtWinners">                                        <xsl:with-param name="step" select="2"/>                                    </xsl:call-template>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                               <fo:block text-align="left"/>                           </fo:table-cell>                        </fo:table-row>                 </xsl:variable>                 <xsl:choose>                        <xsl:when test="string($altova:tablerows)">                         <xsl:copy-of select="$altova:tablerows"/>                       </xsl:when>                     <xsl:otherwise>                         <fo:table-row>                              <fo:table-cell>                                 <fo:block/>                             </fo:table-cell>                            </fo:table-row>                     </xsl:otherwise>                    </xsl:choose>               </fo:table-body>            </fo:table>     </xsl:if>   </xsl:template> <xsl:template name="OverviewDHondtTable3">      <xsl:param name="maxNumberOfAssignments"/>      <xsl:if test="rg:DHondtAssignmentLine">         <fo:table border-bottom="0.01in solid #000" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" table-layout="fixed" width="100%" border-spacing="0">                <fo:table-column column-width="30pt"/>              <fo:table-column column-width="70pt"/>              <fo:table-column column-width="proportional-column-width(1)"/>              <fo:table-column column-width="proportional-column-width(1)"/>              <fo:table-column column-width="proportional-column-width(1)"/>              <fo:table-column column-width="proportional-column-width(1)"/>              <fo:table-column column-width="proportional-column-width(1)"/>              <fo:table-column column-width="proportional-column-width(1)"/>              <fo:table-column column-width="62pt"/>              <xsl:variable name="altova:CurrContextGrid_121" select="."/>                <fo:table-header font-family="Arial" font-size="9pt" start-indent="0pt">                    <xsl:variable name="altova:tablerows">                      <fo:table-row font-family="Arial" font-size="9pt">                          <fo:table-cell number-columns-spanned="2" number-rows-spanned="2" border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                             <fo:block text-align="left">                                    <xsl:choose>                                        <xsl:when test="//kr:ElectionSubcategory[ text() = &quot;EK&quot; ]">                                           <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                                <xsl:text>lijstnummer</xsl:text>                                            </fo:inline>                                        </xsl:when>                                     <xsl:when test="@article = &quot;P13&quot;">                                            <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                                <xsl:text>Lijst</xsl:text>                                          </fo:inline>                                        </xsl:when>                                     <xsl:otherwise>                                         <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                                <xsl:text>lijstnummer</xsl:text>                                            </fo:inline>                                            <fo:block/>                                     </xsl:otherwise>                                    </xsl:choose>                               </fo:block>                         </fo:table-cell>                            <fo:table-cell number-columns-spanned="6" font-family="Arial" font-size="9pt" padding="1" display-align="center">                               <fo:block text-align="center">                                  <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                        <xsl:text>restzetel</xsl:text>                                  </fo:inline>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell number-rows-spanned="2" border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                <fo:block text-align="left">                                    <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                        <xsl:text>aantal restzetels</xsl:text>                                  </fo:inline>                                </fo:block>                         </fo:table-cell>                        </fo:table-row>                     <fo:table-row font-family="Arial" font-size="9pt">                          <fo:table-cell number-columns-spanned="2" border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                             <fo:block text-align="center">                                  <xsl:call-template name="DHondtHeader">                                     <xsl:with-param name="step" select="1"/>                                        <xsl:with-param name="maxNumberOfAssignments" select="$maxNumberOfAssignments"/>                                    </xsl:call-template>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell number-columns-spanned="2" border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                             <fo:block text-align="center">                                  <xsl:call-template name="DHondtHeader">                                     <xsl:with-param name="step" select="2"/>                                        <xsl:with-param name="maxNumberOfAssignments" select="$maxNumberOfAssignments"/>                                    </xsl:call-template>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell number-columns-spanned="2" border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                             <fo:block text-align="center">                                  <xsl:call-template name="DHondtHeader">                                     <xsl:with-param name="step" select="3"/>                                        <xsl:with-param name="maxNumberOfAssignments" select="$maxNumberOfAssignments"/>                                    </xsl:call-template>                                </fo:block>                         </fo:table-cell>                        </fo:table-row>                 </xsl:variable>                 <xsl:choose>                        <xsl:when test="string($altova:tablerows)">                         <xsl:copy-of select="$altova:tablerows"/>                       </xsl:when>                     <xsl:otherwise>                         <fo:table-row>                              <fo:table-cell>                                 <fo:block/>                             </fo:table-cell>                            </fo:table-row>                     </xsl:otherwise>                    </xsl:choose>               </fo:table-header>              <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">                  <xsl:variable name="altova:tablerows">                      <xsl:for-each select="rg:DHondtAssignmentLine">                         <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="right">                                       <xsl:for-each select="rg:ListOrCombinedList">                                           <xsl:for-each select="@combinationId">                                              <fo:inline font-family="Arial" font-size="smaller">                                                 <xsl:value-of select="string(.)"/>                                              </fo:inline>                                            </xsl:for-each>                                         <xsl:for-each select="@listNumber">                                             <fo:inline font-family="Arial" font-size="smaller">                                                 <xsl:value-of select="string(.)"/>                                              </fo:inline>                                            </xsl:for-each>                                     </xsl:for-each>                                 </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" padding-left="5pt" padding="1" display-align="center">                                   <fo:block text-align="left">                                        <xsl:call-template name="ListOrCombinedListPart2"/>                                 </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="right">                                       <xsl:call-template name="DHondtFractionPart1">                                          <xsl:with-param name="step" select="1"/>                                        </xsl:call-template>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" margin-left="5pt" padding="1" display-align="center">                                    <fo:block text-align="left">                                        <xsl:call-template name="DHondtFractionPart2">                                          <xsl:with-param name="step" select="1"/>                                        </xsl:call-template>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" margin-left="0pt" padding="1" display-align="center">                                    <fo:block text-align="right">                                       <xsl:call-template name="DHondtFractionPart1">                                          <xsl:with-param name="step" select="2"/>                                        </xsl:call-template>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" margin-left="5pt" padding="1" display-align="center">                                    <fo:block text-align="left">                                        <xsl:call-template name="DHondtFractionPart2">                                          <xsl:with-param name="step" select="2"/>                                        </xsl:call-template>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" margin-left="0pt" padding="1" display-align="center">                                    <fo:block text-align="right">                                       <xsl:call-template name="DHondtFractionPart1">                                          <xsl:with-param name="step" select="3"/>                                        </xsl:call-template>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" margin-left="5pt" padding="1" display-align="center">                                    <fo:block text-align="left">                                        <xsl:call-template name="DHondtFractionPart2">                                          <xsl:with-param name="step" select="3"/>                                        </xsl:call-template>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" margin-left="0pt" padding="1" display-align="center">                                    <fo:block text-align="center">                                      <xsl:if test="rg:NewSeats != 0">                                            <xsl:for-each select="rg:NewSeats">                                             <xsl:variable name="value-of-template_124">                                                 <xsl:apply-templates/>                                              </xsl:variable>                                             <xsl:choose>                                                    <xsl:when test="contains(string($value-of-template_124),'&#x200B;')">                                                       <fo:block font-family="Arial" font-size="smaller">                                                          <xsl:copy-of select="$value-of-template_124"/>                                                      </fo:block>                                                 </xsl:when>                                                 <xsl:otherwise>                                                     <fo:inline font-family="Arial" font-size="smaller">                                                         <xsl:copy-of select="$value-of-template_124"/>                                                      </fo:inline>                                                    </xsl:otherwise>                                                </xsl:choose>                                           </xsl:for-each>                                     </xsl:if>                                   </fo:block>                             </fo:table-cell>                            </fo:table-row>                     </xsl:for-each>                     <fo:table-row font-family="Arial" font-size="9pt">                          <fo:table-cell number-columns-spanned="2" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                <fo:block text-align="left">                                    <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                        <xsl:text>restzetel toegekend aan</xsl:text>                                    </fo:inline>                                    <fo:block/>                                 <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal" display-align="after">                                      <xsl:text>lijst</xsl:text>                                  </fo:inline>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell number-columns-spanned="2" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                <fo:block text-align="center">                                  <xsl:call-template name="DHondtWinners">                                        <xsl:with-param name="step" select="1"/>                                    </xsl:call-template>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell number-columns-spanned="2" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                <fo:block text-align="center">                                  <xsl:call-template name="DHondtWinners">                                        <xsl:with-param name="step" select="2"/>                                    </xsl:call-template>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell number-columns-spanned="2" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                <fo:block text-align="center">                                  <xsl:call-template name="DHondtWinners">                                        <xsl:with-param name="step" select="3"/>                                    </xsl:call-template>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                               <fo:block text-align="left"/>                           </fo:table-cell>                        </fo:table-row>                 </xsl:variable>                 <xsl:choose>                        <xsl:when test="string($altova:tablerows)">                         <xsl:copy-of select="$altova:tablerows"/>                       </xsl:when>                     <xsl:otherwise>                         <fo:table-row>                              <fo:table-cell>                                 <fo:block/>                             </fo:table-cell>                            </fo:table-row>                     </xsl:otherwise>                    </xsl:choose>               </fo:table-body>            </fo:table>     </xsl:if>   </xsl:template> <xsl:template name="OverviewDHondtTable4">      <xsl:param name="maxNumberOfAssignments"/>      <xsl:if test="rg:DHondtAssignmentLine">         <fo:table border-bottom="0.01in solid #000" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" table-layout="fixed" width="100%" border-spacing="0">                <fo:table-column column-width="30pt"/>              <fo:table-column column-width="70pt"/>              <fo:table-column column-width="proportional-column-width(1)"/>              <fo:table-column column-width="proportional-column-width(1)"/>              <fo:table-column column-width="proportional-column-width(1)"/>              <fo:table-column column-width="proportional-column-width(1)"/>              <fo:table-column column-width="proportional-column-width(1)"/>              <fo:table-column column-width="proportional-column-width(1)"/>              <fo:table-column column-width="proportional-column-width(1)"/>              <fo:table-column column-width="proportional-column-width(1)"/>              <fo:table-column column-width="62pt"/>              <xsl:variable name="altova:CurrContextGrid_125" select="."/>                <fo:table-header font-family="Arial" font-size="9pt" start-indent="0pt">                    <xsl:variable name="altova:tablerows">                      <fo:table-row font-family="Arial" font-size="9pt">                          <fo:table-cell number-columns-spanned="2" number-rows-spanned="2" border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                             <fo:block text-align="left">                                    <xsl:choose>                                        <xsl:when test="//kr:ElectionSubcategory[ text() = &quot;EK&quot; ]">                                           <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                                <xsl:text>lijstnummer</xsl:text>                                            </fo:inline>                                        </xsl:when>                                     <xsl:when test="@article = &quot;P13&quot;">                                            <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                                <xsl:text>Lijst</xsl:text>                                          </fo:inline>                                        </xsl:when>                                     <xsl:otherwise>                                         <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                                <xsl:text>lijstnummer</xsl:text>                                            </fo:inline>                                            <fo:block/>                                     </xsl:otherwise>                                    </xsl:choose>                               </fo:block>                         </fo:table-cell>                            <fo:table-cell number-columns-spanned="8" font-family="Arial" font-size="9pt" padding="1" display-align="center">                               <fo:block text-align="center">                                  <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                        <xsl:text>restzetel</xsl:text>                                  </fo:inline>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell number-rows-spanned="2" border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                <fo:block text-align="left">                                    <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                        <xsl:text>aantal restzetels</xsl:text>                                  </fo:inline>                                </fo:block>                         </fo:table-cell>                        </fo:table-row>                     <fo:table-row font-family="Arial" font-size="9pt">                          <fo:table-cell number-columns-spanned="2" border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                             <fo:block text-align="center">                                  <xsl:call-template name="DHondtHeader">                                     <xsl:with-param name="step" select="1"/>                                        <xsl:with-param name="maxNumberOfAssignments" select="$maxNumberOfAssignments"/>                                    </xsl:call-template>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell number-columns-spanned="2" border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                             <fo:block text-align="center">                                  <xsl:call-template name="DHondtHeader">                                     <xsl:with-param name="step" select="2"/>                                        <xsl:with-param name="maxNumberOfAssignments" select="$maxNumberOfAssignments"/>                                    </xsl:call-template>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell number-columns-spanned="2" border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                             <fo:block text-align="center">                                  <xsl:call-template name="DHondtHeader">                                     <xsl:with-param name="step" select="3"/>                                        <xsl:with-param name="maxNumberOfAssignments" select="$maxNumberOfAssignments"/>                                    </xsl:call-template>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell number-columns-spanned="2" border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                             <fo:block text-align="center">                                  <xsl:call-template name="DHondtHeader">                                     <xsl:with-param name="step" select="4"/>                                        <xsl:with-param name="maxNumberOfAssignments" select="$maxNumberOfAssignments"/>                                    </xsl:call-template>                                </fo:block>                         </fo:table-cell>                        </fo:table-row>                 </xsl:variable>                 <xsl:choose>                        <xsl:when test="string($altova:tablerows)">                         <xsl:copy-of select="$altova:tablerows"/>                       </xsl:when>                     <xsl:otherwise>                         <fo:table-row>                              <fo:table-cell>                                 <fo:block/>                             </fo:table-cell>                            </fo:table-row>                     </xsl:otherwise>                    </xsl:choose>               </fo:table-header>              <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">                  <xsl:variable name="altova:tablerows">                      <xsl:for-each select="rg:DHondtAssignmentLine">                         <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="right">                                       <xsl:for-each select="rg:ListOrCombinedList">                                           <xsl:for-each select="@combinationId">                                              <fo:inline font-family="Arial" font-size="smaller">                                                 <xsl:value-of select="string(.)"/>                                              </fo:inline>                                            </xsl:for-each>                                         <xsl:for-each select="@listNumber">                                             <fo:inline font-family="Arial" font-size="smaller">                                                 <xsl:value-of select="string(.)"/>                                              </fo:inline>                                            </xsl:for-each>                                     </xsl:for-each>                                 </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" padding-left="5pt" padding="1" display-align="center">                                   <fo:block text-align="left">                                        <xsl:call-template name="ListOrCombinedListPart2"/>                                 </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" margin-left="0pt" padding="1" display-align="center">                                    <fo:block text-align="right">                                       <xsl:call-template name="DHondtFractionPart1">                                          <xsl:with-param name="step" select="1"/>                                        </xsl:call-template>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" margin-left="3pt" padding="1" display-align="center">                                    <fo:block text-align="left">                                        <xsl:call-template name="DHondtFractionPart2">                                          <xsl:with-param name="step" select="1"/>                                        </xsl:call-template>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" margin-left="0pt" padding="1" display-align="center">                                    <fo:block text-align="right">                                       <xsl:call-template name="DHondtFractionPart1">                                          <xsl:with-param name="step" select="2"/>                                        </xsl:call-template>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" margin-left="3pt" padding="1" display-align="center">                                    <fo:block text-align="left">                                        <xsl:call-template name="DHondtFractionPart2">                                          <xsl:with-param name="step" select="2"/>                                        </xsl:call-template>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" margin-left="0pt" padding="1" display-align="center">                                    <fo:block text-align="right">                                       <xsl:call-template name="DHondtFractionPart1">                                          <xsl:with-param name="step" select="3"/>                                        </xsl:call-template>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" margin-left="3pt" padding="1" display-align="center">                                    <fo:block text-align="left">                                        <xsl:call-template name="DHondtFractionPart2">                                          <xsl:with-param name="step" select="3"/>                                        </xsl:call-template>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" margin-left="0pt" padding="1" display-align="center">                                    <fo:block text-align="right">                                       <xsl:call-template name="DHondtFractionPart1">                                          <xsl:with-param name="step" select="4"/>                                        </xsl:call-template>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" margin-left="3pt" padding="1" display-align="center">                                    <fo:block text-align="left">                                        <xsl:call-template name="DHondtFractionPart2">                                          <xsl:with-param name="step" select="4"/>                                        </xsl:call-template>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" margin-left="0pt" padding="1" display-align="center">                                    <fo:block text-align="center">                                      <xsl:if test="rg:NewSeats != 0">                                            <xsl:for-each select="rg:NewSeats">                                             <xsl:variable name="value-of-template_128">                                                 <xsl:apply-templates/>                                              </xsl:variable>                                             <xsl:choose>                                                    <xsl:when test="contains(string($value-of-template_128),'&#x200B;')">                                                       <fo:block font-family="Arial" font-size="smaller">                                                          <xsl:copy-of select="$value-of-template_128"/>                                                      </fo:block>                                                 </xsl:when>                                                 <xsl:otherwise>                                                     <fo:inline font-family="Arial" font-size="smaller">                                                         <xsl:copy-of select="$value-of-template_128"/>                                                      </fo:inline>                                                    </xsl:otherwise>                                                </xsl:choose>                                           </xsl:for-each>                                     </xsl:if>                                   </fo:block>                             </fo:table-cell>                            </fo:table-row>                     </xsl:for-each>                     <fo:table-row font-family="Arial" font-size="9pt">                          <fo:table-cell number-columns-spanned="2" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                <fo:block text-align="left">                                    <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                        <xsl:text>restzetel toegekend aan</xsl:text>                                    </fo:inline>                                    <fo:block/>                                 <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal" display-align="after">                                      <xsl:text>lijst</xsl:text>                                  </fo:inline>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell number-columns-spanned="2" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                <fo:block text-align="center">                                  <xsl:call-template name="DHondtWinners">                                        <xsl:with-param name="step" select="1"/>                                    </xsl:call-template>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell number-columns-spanned="2" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                <fo:block text-align="center">                                  <xsl:call-template name="DHondtWinners">                                        <xsl:with-param name="step" select="2"/>                                    </xsl:call-template>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell number-columns-spanned="2" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                <fo:block text-align="center">                                  <xsl:call-template name="DHondtWinners">                                        <xsl:with-param name="step" select="3"/>                                    </xsl:call-template>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell number-columns-spanned="2" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                <fo:block text-align="center">                                  <xsl:call-template name="DHondtWinners">                                        <xsl:with-param name="step" select="4"/>                                    </xsl:call-template>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                               <fo:block text-align="left"/>                           </fo:table-cell>                        </fo:table-row>                 </xsl:variable>                 <xsl:choose>                        <xsl:when test="string($altova:tablerows)">                         <xsl:copy-of select="$altova:tablerows"/>                       </xsl:when>                     <xsl:otherwise>                         <fo:table-row>                              <fo:table-cell>                                 <fo:block/>                             </fo:table-cell>                            </fo:table-row>                     </xsl:otherwise>                    </xsl:choose>               </fo:table-body>            </fo:table>     </xsl:if>   </xsl:template> <xsl:template name="OverviewDHondtTable6">      <xsl:param name="maxNumberOfAssignments"/>      <xsl:param name="offset"/>      <xsl:if test="rg:DHondtAssignmentLine">         <fo:table border-bottom="0.01in solid #000" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" table-layout="fixed" width="100%" border-spacing="0">                <fo:table-column column-width="30pt"/>              <fo:table-column column-width="70pt"/>              <fo:table-column column-width="proportional-column-width(1)"/>              <fo:table-column column-width="proportional-column-width(1)"/>              <fo:table-column column-width="proportional-column-width(1)"/>              <fo:table-column column-width="proportional-column-width(1)"/>              <fo:table-column column-width="proportional-column-width(1)"/>              <fo:table-column column-width="proportional-column-width(1)"/>              <fo:table-column column-width="proportional-column-width(1)"/>              <fo:table-column column-width="proportional-column-width(1)"/>              <fo:table-column column-width="proportional-column-width(1)"/>              <fo:table-column column-width="proportional-column-width(1)"/>              <fo:table-column column-width="proportional-column-width(1)"/>              <fo:table-column column-width="proportional-column-width(1)"/>              <xsl:if test="$maxNumberOfAssignments &lt;= 6 + $offset">                   <fo:table-column column-width="62pt"/>              </xsl:if>               <xsl:variable name="altova:CurrContextGrid_129" select="."/>                <fo:table-header font-family="Arial" font-size="9pt" start-indent="0pt">                    <xsl:variable name="altova:tablerows">                      <fo:table-row font-family="Arial" font-size="9pt">                          <fo:table-cell number-columns-spanned="2" number-rows-spanned="2" border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                             <fo:block text-align="left">                                    <xsl:choose>                                        <xsl:when test="//kr:ElectionSubcategory[ text() = &quot;EK&quot; ]">                                           <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                                <xsl:text>lijstnummer</xsl:text>                                            </fo:inline>                                        </xsl:when>                                     <xsl:when test="@article = &quot;P13&quot;">                                            <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                                <xsl:text>Lijst</xsl:text>                                          </fo:inline>                                        </xsl:when>                                     <xsl:otherwise>                                         <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                                <xsl:text>lijstnummer</xsl:text>                                            </fo:inline>                                            <fo:block/>                                     </xsl:otherwise>                                    </xsl:choose>                               </fo:block>                         </fo:table-cell>                            <fo:table-cell number-columns-spanned="12" font-family="Arial" font-size="9pt" padding="1" display-align="center">                              <fo:block text-align="center">                                  <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                        <xsl:text>restzetel</xsl:text>                                  </fo:inline>                                </fo:block>                         </fo:table-cell>                            <xsl:variable name="bColumnCondition_0xA44A300">                                <xsl:for-each select="$altova:CurrContextGrid_129">                                 <xsl:value-of select="$maxNumberOfAssignments &lt;= 6 + $offset"/>                              </xsl:for-each>                         </xsl:variable>                         <xsl:if test="$bColumnCondition_0xA44A300 = 'true'">                                <fo:table-cell number-rows-spanned="2" border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                    <fo:block text-align="left">                                        <xsl:if test="$maxNumberOfAssignments &lt;= 6 + $offset">                                           <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                                <xsl:text>aantal restzetels</xsl:text>                                          </fo:inline>                                        </xsl:if>                                       <fo:block/>                                     <fo:block>                                          <fo:leader leader-pattern="space"/>                                     </fo:block>                                 </fo:block>                             </fo:table-cell>                            </xsl:if>                       </fo:table-row>                     <fo:table-row font-family="Arial" font-size="9pt">                          <fo:table-cell number-columns-spanned="2" border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                             <fo:block text-align="center">                                  <xsl:call-template name="DHondtHeader">                                     <xsl:with-param name="step" select="1 + $offset"/>                                      <xsl:with-param name="maxNumberOfAssignments" select="$maxNumberOfAssignments"/>                                    </xsl:call-template>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell number-columns-spanned="2" border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                             <fo:block text-align="center">                                  <xsl:call-template name="DHondtHeader">                                     <xsl:with-param name="step" select="2 + $offset"/>                                      <xsl:with-param name="maxNumberOfAssignments" select="$maxNumberOfAssignments"/>                                    </xsl:call-template>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell number-columns-spanned="2" border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                             <fo:block text-align="center">                                  <xsl:call-template name="DHondtHeader">                                     <xsl:with-param name="step" select="3 + $offset"/>                                      <xsl:with-param name="maxNumberOfAssignments" select="$maxNumberOfAssignments"/>                                    </xsl:call-template>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell number-columns-spanned="2" border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                             <fo:block text-align="center">                                  <xsl:call-template name="DHondtHeader">                                     <xsl:with-param name="step" select="4 + $offset"/>                                      <xsl:with-param name="maxNumberOfAssignments" select="$maxNumberOfAssignments"/>                                    </xsl:call-template>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell number-columns-spanned="2" border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                             <fo:block text-align="center">                                  <xsl:call-template name="DHondtHeader">                                     <xsl:with-param name="step" select="5 + $offset"/>                                      <xsl:with-param name="maxNumberOfAssignments" select="$maxNumberOfAssignments"/>                                    </xsl:call-template>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell number-columns-spanned="2" border-bottom="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                             <fo:block text-align="center">                                  <xsl:call-template name="DHondtHeader">                                     <xsl:with-param name="step" select="6 + $offset"/>                                      <xsl:with-param name="maxNumberOfAssignments" select="$maxNumberOfAssignments"/>                                    </xsl:call-template>                                </fo:block>                         </fo:table-cell>                            <xsl:variable name="bColumnCondition_0xA44A300">                                <xsl:for-each select="$altova:CurrContextGrid_129">                                 <xsl:value-of select="$maxNumberOfAssignments &lt;= 6 + $offset"/>                              </xsl:for-each>                         </xsl:variable>                         <xsl:if test="$bColumnCondition_0xA44A300 = 'true'"/>                       </fo:table-row>                 </xsl:variable>                 <xsl:choose>                        <xsl:when test="string($altova:tablerows)">                         <xsl:copy-of select="$altova:tablerows"/>                       </xsl:when>                     <xsl:otherwise>                         <fo:table-row>                              <fo:table-cell>                                 <fo:block/>                             </fo:table-cell>                            </fo:table-row>                     </xsl:otherwise>                    </xsl:choose>               </fo:table-header>              <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">                  <xsl:variable name="altova:tablerows">                      <xsl:for-each select="rg:DHondtAssignmentLine">                         <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="right">                                       <xsl:for-each select="rg:ListOrCombinedList">                                           <xsl:for-each select="@combinationId">                                              <fo:inline font-family="Arial" font-size="smaller">                                                 <xsl:value-of select="string(.)"/>                                              </fo:inline>                                            </xsl:for-each>                                         <xsl:for-each select="@listNumber">                                             <fo:inline font-family="Arial" font-size="smaller">                                                 <xsl:value-of select="string(.)"/>                                              </fo:inline>                                            </xsl:for-each>                                     </xsl:for-each>                                 </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" padding-left="5pt" padding="1" display-align="center">                                   <fo:block text-align="left">                                        <xsl:call-template name="ListOrCombinedListPart2"/>                                 </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" margin-left="0pt" padding="1" display-align="center">                                    <fo:block text-align="right">                                       <xsl:call-template name="DHondtFractionPart1">                                          <xsl:with-param name="step" select="1 + $offset"/>                                      </xsl:call-template>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" margin-left="3pt" padding="1" display-align="center">                                    <fo:block text-align="left">                                        <xsl:call-template name="DHondtFractionPart2">                                          <xsl:with-param name="step" select="1 + $offset"/>                                      </xsl:call-template>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" margin-left="0pt" padding="1" display-align="center">                                    <fo:block text-align="right">                                       <xsl:call-template name="DHondtFractionPart1">                                          <xsl:with-param name="step" select="2 + $offset"/>                                      </xsl:call-template>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" margin-left="3pt" padding="1" display-align="center">                                    <fo:block text-align="left">                                        <xsl:call-template name="DHondtFractionPart2">                                          <xsl:with-param name="step" select="2 + $offset"/>                                      </xsl:call-template>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" margin-left="0pt" padding="1" display-align="center">                                    <fo:block text-align="right">                                       <xsl:call-template name="DHondtFractionPart1">                                          <xsl:with-param name="step" select="3 + $offset"/>                                      </xsl:call-template>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" margin-left="3pt" padding="1" display-align="center">                                    <fo:block text-align="left">                                        <xsl:call-template name="DHondtFractionPart2">                                          <xsl:with-param name="step" select="3 + $offset"/>                                      </xsl:call-template>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" margin-left="0pt" padding="1" display-align="center">                                    <fo:block text-align="right">                                       <xsl:call-template name="DHondtFractionPart1">                                          <xsl:with-param name="step" select="4 + $offset"/>                                      </xsl:call-template>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" margin-left="3pt" padding="1" display-align="center">                                    <fo:block text-align="left">                                        <xsl:call-template name="DHondtFractionPart2">                                          <xsl:with-param name="step" select="4 + $offset"/>                                      </xsl:call-template>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" margin-left="0pt" padding="1" display-align="center">                                    <fo:block text-align="right">                                       <xsl:call-template name="DHondtFractionPart1">                                          <xsl:with-param name="step" select="5 + $offset"/>                                      </xsl:call-template>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" margin-left="3pt" padding="1" display-align="center">                                    <fo:block text-align="left">                                        <xsl:call-template name="DHondtFractionPart2">                                          <xsl:with-param name="step" select="5 + $offset"/>                                      </xsl:call-template>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" margin-left="0pt" padding="1" display-align="center">                                    <fo:block text-align="right">                                       <xsl:call-template name="DHondtFractionPart1">                                          <xsl:with-param name="step" select="6 + $offset"/>                                      </xsl:call-template>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell font-family="Arial" font-size="9pt" margin-left="3pt" padding="1" display-align="center">                                    <fo:block text-align="left">                                        <xsl:call-template name="DHondtFractionPart2">                                          <xsl:with-param name="step" select="6 + $offset"/>                                      </xsl:call-template>                                    </fo:block>                             </fo:table-cell>                                <xsl:variable name="bColumnCondition_0xA44A300">                                    <xsl:for-each select="$altova:CurrContextGrid_129">                                     <xsl:value-of select="$maxNumberOfAssignments &lt;= 6 + $offset"/>                                  </xsl:for-each>                             </xsl:variable>                             <xsl:if test="$bColumnCondition_0xA44A300 = 'true'">                                    <fo:table-cell font-family="Arial" font-size="9pt" margin-left="0pt" padding="1" display-align="center">                                        <fo:block text-align="center">                                          <xsl:if test="$maxNumberOfAssignments &lt;= 6 + $offset">                                               <xsl:if test="rg:NewSeats != 0">                                                    <xsl:for-each select="rg:NewSeats">                                                     <xsl:variable name="value-of-template_132">                                                         <xsl:apply-templates/>                                                      </xsl:variable>                                                     <xsl:choose>                                                            <xsl:when test="contains(string($value-of-template_132),'&#x200B;')">                                                               <fo:block font-family="Arial" font-size="smaller">                                                                  <xsl:copy-of select="$value-of-template_132"/>                                                              </fo:block>                                                         </xsl:when>                                                         <xsl:otherwise>                                                             <fo:inline font-family="Arial" font-size="smaller">                                                                 <xsl:copy-of select="$value-of-template_132"/>                                                              </fo:inline>                                                            </xsl:otherwise>                                                        </xsl:choose>                                                   </xsl:for-each>                                             </xsl:if>                                           </xsl:if>                                       </fo:block>                                 </fo:table-cell>                                </xsl:if>                           </fo:table-row>                     </xsl:for-each>                     <fo:table-row font-family="Arial" font-size="9pt">                          <fo:table-cell number-columns-spanned="2" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                <fo:block text-align="left">                                    <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal">                                        <xsl:text>restzetel toegekend aan</xsl:text>                                    </fo:inline>                                    <fo:block/>                                 <fo:inline font-family="Arial" font-size="8pt" font-style="italic" font-weight="normal" display-align="after">                                      <xsl:text>lijst</xsl:text>                                  </fo:inline>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell number-columns-spanned="2" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                <fo:block text-align="center">                                  <xsl:call-template name="DHondtWinners">                                        <xsl:with-param name="step" select="1 + $offset"/>                                  </xsl:call-template>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell number-columns-spanned="2" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                <fo:block text-align="center">                                  <xsl:call-template name="DHondtWinners">                                        <xsl:with-param name="step" select="2 + $offset"/>                                  </xsl:call-template>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell number-columns-spanned="2" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                <fo:block text-align="center">                                  <xsl:call-template name="DHondtWinners">                                        <xsl:with-param name="step" select="3 + $offset"/>                                  </xsl:call-template>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell number-columns-spanned="2" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                <fo:block text-align="center">                                  <xsl:call-template name="DHondtWinners">                                        <xsl:with-param name="step" select="4 + $offset"/>                                  </xsl:call-template>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell number-columns-spanned="2" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                <fo:block text-align="center">                                  <xsl:call-template name="DHondtWinners">                                        <xsl:with-param name="step" select="5 + $offset"/>                                  </xsl:call-template>                                </fo:block>                         </fo:table-cell>                            <fo:table-cell number-columns-spanned="2" border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                <fo:block text-align="center">                                  <xsl:call-template name="DHondtWinners">                                        <xsl:with-param name="step" select="6 + $offset"/>                                  </xsl:call-template>                                </fo:block>                         </fo:table-cell>                            <xsl:variable name="bColumnCondition_0xA44A300">                                <xsl:for-each select="$altova:CurrContextGrid_129">                                 <xsl:value-of select="$maxNumberOfAssignments &lt;= 6 + $offset"/>                              </xsl:for-each>                         </xsl:variable>                         <xsl:if test="$bColumnCondition_0xA44A300 = 'true'">                                <fo:table-cell border-top="0.01in solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                   <fo:block text-align="left"/>                               </fo:table-cell>                            </xsl:if>                       </fo:table-row>                 </xsl:variable>                 <xsl:choose>                        <xsl:when test="string($altova:tablerows)">                         <xsl:copy-of select="$altova:tablerows"/>                       </xsl:when>                     <xsl:otherwise>                         <fo:table-row>                              <fo:table-cell>                                 <fo:block/>                             </fo:table-cell>                            </fo:table-row>                     </xsl:otherwise>                    </xsl:choose>               </fo:table-body>            </fo:table>     </xsl:if>   </xsl:template> <xsl:template name="CandidateId">       <xsl:for-each select="eml:Candidate">           <xsl:for-each select="eml:CandidateIdentifier">             <xsl:for-each select="@Id">                 <fo:inline font-family="Arial" font-size="smaller">                     <xsl:value-of select="string(.)"/>                  </fo:inline>                </xsl:for-each>         </xsl:for-each>     </xsl:for-each> </xsl:template> <xsl:template name="Vote">      <xsl:param name="part" select="1"/>     <xsl:param name="position" select="&apos;&apos;"/>      <xsl:param name="alle" select="0"/>     <xsl:param name="weighted" select="0"/>     <xsl:choose>            <xsl:when test="rg:VotesInElectoralDistrictPart[position() = $part] / rg:VotesInElectoralDistrict[($alle = 1 and (@id = &apos;alle&apos; or position() = $position)) or ($alle = 0 and @id != &apos;alle&apos; and position() = $position)]">               <xsl:for-each select="rg:VotesInElectoralDistrictPart[position() = $part]">                 <xsl:for-each select="rg:VotesInElectoralDistrict[($alle = 1 and (@id = &apos;alle&apos; or position() = $position)) or ($alle = 0 and @id != &apos;alle&apos; and position() = $position)]">                       <xsl:choose>                            <xsl:when test="$weighted = 0">                             <xsl:variable name="value-of-template_134">                                 <xsl:apply-templates/>                              </xsl:variable>                             <xsl:choose>                                    <xsl:when test="contains(string($value-of-template_134),'&#x200B;')">                                       <fo:block font-family="Arial" font-size="smaller">                                          <xsl:copy-of select="$value-of-template_134"/>                                      </fo:block>                                 </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="smaller">                                         <xsl:copy-of select="$value-of-template_134"/>                                      </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:when>                         <xsl:when test="$weighted = 1">                             <xsl:variable name="value-of-template_135">                                 <xsl:apply-templates/>                              </xsl:variable>                             <xsl:choose>                                    <xsl:when test="contains(string($value-of-template_135),'&#x200B;')">                                       <fo:block font-family="Arial" font-size="smaller">                                          <xsl:copy-of select="$value-of-template_135"/>                                      </fo:block>                                 </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="smaller">                                         <xsl:copy-of select="$value-of-template_135"/>                                      </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                               <fo:block/>                             <xsl:for-each select="@weighted">                                   <fo:inline font-family="Arial" font-size="smaller">                                     <xsl:value-of select="string(.)"/>                                  </fo:inline>                                </xsl:for-each>                         </xsl:when>                     </xsl:choose>                   </xsl:for-each>             </xsl:for-each>         </xsl:when>         <xsl:otherwise>             <fo:inline color="white" font-family="Arial" font-size="smaller">                   <xsl:text>.</xsl:text>              </fo:inline>            </xsl:otherwise>        </xsl:choose>   </xsl:template> <xsl:template name="DistrictNumber">        <xsl:param name="part" select="1"/>     <xsl:param name="position" select="&apos;&apos;"/>      <xsl:param name="alle" select="0"/>     <xsl:for-each select="rg:CandidateAndResult[position() = 1]">           <xsl:for-each select="rg:VotesInElectoralDistrictPart[position() = $part]">             <xsl:for-each select="rg:VotesInElectoralDistrict">                 <xsl:choose>                        <xsl:when test="$alle = 1 and @id = &apos;alle&apos;">                          <fo:inline font-family="Arial" font-size="smaller">                             <xsl:text>Totaal</xsl:text>                         </fo:inline>                            <fo:block/>                         <fo:inline font-family="Arial" font-size="smaller">                             <xsl:text>aantal</xsl:text>                         </fo:inline>                            <fo:block/>                         <fo:inline font-family="Arial" font-size="smaller">                             <xsl:text>stemmen</xsl:text>                            </fo:inline>                        </xsl:when>                     <xsl:when test="position() = $position and @id != &apos;alle&apos;">                            <xsl:for-each select="@id">                             <fo:inline font-family="Arial" font-size="smaller">                                 <xsl:value-of select="string(.)"/>                              </fo:inline>                            </xsl:for-each>                     </xsl:when>                 </xsl:choose>               </xsl:for-each>         </xsl:for-each>     </xsl:for-each> </xsl:template> <xsl:template name="DistrictNumberTop">     <xsl:param name="part" select="1"/>     <xsl:param name="position" select="&apos;&apos;"/>      <xsl:param name="alle" select="0"/>     <xsl:param name="aantal" select="0"/>       <xsl:for-each select="rg:CandidateAndResult[position() = 1]">           <xsl:for-each select="rg:VotesInElectoralDistrictPart[position() = $part]">             <xsl:for-each select="rg:VotesInElectoralDistrict">                 <xsl:if test="$alle = 1 and @id = &apos;alle&apos;">                        <xsl:choose>                            <xsl:when test="$aantal = 1">                               <fo:inline font-family="Arial" font-size="smaller">                                 <xsl:text>totaal</xsl:text>                             </fo:inline>                                <fo:block/>                             <fo:inline font-family="Arial" font-size="smaller">                                 <xsl:text>aantal</xsl:text>                             </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="smaller">                                 <xsl:text>totaal</xsl:text>                             </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:if>               </xsl:for-each>         </xsl:for-each>     </xsl:for-each> </xsl:template> <xsl:template name="DistrictNumberBottom">      <xsl:param name="part" select="1"/>     <xsl:param name="position" select="&apos;&apos;"/>      <xsl:param name="alle" select="0"/>     <xsl:param name="aantal" select="1"/>       <xsl:for-each select="rg:CandidateAndResult[position() = 1]">           <xsl:for-each select="rg:VotesInElectoralDistrictPart[position() = $part]">             <xsl:for-each select="rg:VotesInElectoralDistrict">                 <xsl:choose>                        <xsl:when test="$alle = 1 and @id = &apos;alle&apos;">                          <xsl:if test="$aantal = 1">                             <fo:inline font-family="Arial" font-size="smaller">                                 <xsl:text>aantal</xsl:text>                             </fo:inline>                                <fo:block/>                         </xsl:if>                           <fo:inline font-family="Arial" font-size="smaller">                             <xsl:text>stemmen</xsl:text>                            </fo:inline>                        </xsl:when>                     <xsl:when test="position() = $position and @id != &apos;alle&apos;">                            <xsl:for-each select="@id">                             <fo:inline font-family="Arial" font-size="smaller">                                 <xsl:value-of select="string(.)"/>                              </fo:inline>                            </xsl:for-each>                     </xsl:when>                 </xsl:choose>               </xsl:for-each>         </xsl:for-each>     </xsl:for-each> </xsl:template> <xsl:template name="TotalVotes">        <xsl:param name="part" select="1"/>     <xsl:param name="position" select="&apos;&apos;"/>      <xsl:param name="alle" select="0"/>     <xsl:param name="weighted" select="0"/>     <xsl:for-each select="rg:VotesInElectoralDistrictPart[position() = $part]">         <xsl:for-each select="rg:VotesInElectoralDistrict[($alle = 1 and (@id = &apos;alle&apos; or position() = $position)) or ($alle = 0 and @id != &apos;alle&apos; and position() = $position)]">               <xsl:choose>                    <xsl:when test="$weighted = 0">                     <xsl:variable name="value-of-template_139">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_139),'&#x200B;')">                               <fo:block font-family="Arial" font-size="smaller">                                  <xsl:copy-of select="$value-of-template_139"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="smaller">                                 <xsl:copy-of select="$value-of-template_139"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="$weighted = 1">                     <xsl:for-each select="@weighted">                           <fo:inline font-family="Arial" font-size="smaller">                             <xsl:value-of select="string(.)"/>                          </fo:inline>                        </xsl:for-each>                 </xsl:when>             </xsl:choose>           </xsl:for-each>     </xsl:for-each> </xsl:template> <xsl:template name="TotalVotes2">       <xsl:param name="position" select="&apos;&apos;"/>      <xsl:param name="alle" select="0"/>     <xsl:param name="weighted" select="0"/>     <xsl:for-each select="rg:VotesInElectoralDistrict[($alle = 1 and (@id = &apos;alle&apos; or position() = $position)) or ($alle = 0 and @id != &apos;alle&apos; and position() = $position)]">           <xsl:choose>                <xsl:when test="$weighted = 0">                 <xsl:variable name="value-of-template_141">                     <xsl:apply-templates/>                  </xsl:variable>                 <xsl:choose>                        <xsl:when test="contains(string($value-of-template_141),'&#x200B;')">                           <fo:block font-family="Arial" font-size="smaller">                              <xsl:copy-of select="$value-of-template_141"/>                          </fo:block>                     </xsl:when>                     <xsl:otherwise>                         <fo:inline font-family="Arial" font-size="smaller">                             <xsl:copy-of select="$value-of-template_141"/>                          </fo:inline>                        </xsl:otherwise>                    </xsl:choose>               </xsl:when>             <xsl:when test="$weighted = 1">                 <xsl:for-each select="@weighted">                       <fo:inline font-family="Arial" font-size="smaller">                         <xsl:value-of select="string(.)"/>                      </fo:inline>                    </xsl:for-each>             </xsl:when>         </xsl:choose>       </xsl:for-each> </xsl:template> <xsl:template name="PartyHeaderEvenOdd">        <xsl:param name="isEvenOdd"/>       <xsl:param name="isSeats"/>     <xsl:choose>            <xsl:when test="count(rg:CandidateAndResult[position() = 1]/rg:VotesInElectoralDistrictPart) = 2 and $isEvenOdd = 1">               <xsl:if test="$SV_OutputFormat = &apos;RTF&apos;">                  <fo:block break-after="page">                       <fo:leader leader-pattern="space"/>                 </fo:block>             </xsl:if>               <fo:block>                  <fo:leader leader-pattern="space"/>             </fo:block>             <fo:inline-container>                   <fo:block>                      <xsl:text>&#x200B;</xsl:text>                   </fo:block>             </fo:inline-container>              <fo:block break-before="even-page" font-family="Arial" font-size="9pt" margin-right="100% - 100%" margin="0pt">                 <xsl:if test="$SV_OutputFormat = &apos;PDF&apos;">                      <fo:block>                          <fo:leader leader-pattern="space"/>                     </fo:block>                 </xsl:if>                   <xsl:call-template name="PartyHeader2or4Lines">                     <xsl:with-param name="isSeats" select="$isSeats"/>                  </xsl:call-template>                </fo:block>         </xsl:when>         <xsl:otherwise>             <fo:block break-after="page">                   <fo:leader leader-pattern="space"/>             </fo:block>             <fo:block>                  <fo:leader leader-pattern="space"/>             </fo:block>             <fo:inline-container>                   <fo:block>                      <xsl:text>&#x200B;</xsl:text>                   </fo:block>             </fo:inline-container>              <fo:block font-family="Arial" font-size="9pt" margin-right="100% - 100%" margin="0pt">                  <xsl:call-template name="PartyHeader2or4Lines">                     <xsl:with-param name="isSeats" select="$isSeats"/>                  </xsl:call-template>                </fo:block>         </xsl:otherwise>        </xsl:choose>   </xsl:template> <xsl:template name="PartyHeader2or4Lines">      <xsl:param name="isSeats"/>     <xsl:choose>            <xsl:when test="$isSeats = 1">              <xsl:call-template name="PartyHeader4Lines"/>           </xsl:when>         <xsl:otherwise>             <xsl:call-template name="PartyHeader2Lines"/>           </xsl:otherwise>        </xsl:choose>   </xsl:template> <xsl:template name="ListOrCombinedListPart2">       <xsl:if test="count(rg:ListOrCombinedList/rg:ListInCombination) &gt;0">         <fo:inline font-family="Arial" font-size="smaller">             <xsl:text>(</xsl:text>          </fo:inline>            <xsl:for-each select="rg:ListOrCombinedList">               <xsl:for-each select="rg:ListInCombination">                    <xsl:variable name="value-of-template_143">                     <xsl:apply-templates/>                  </xsl:variable>                 <xsl:choose>                        <xsl:when test="contains(string($value-of-template_143),'&#x200B;')">                           <fo:block font-family="Arial" font-size="smaller">                              <xsl:copy-of select="$value-of-template_143"/>                          </fo:block>                     </xsl:when>                     <xsl:otherwise>                         <fo:inline font-family="Arial" font-size="smaller">                             <xsl:copy-of select="$value-of-template_143"/>                          </fo:inline>                        </xsl:otherwise>                    </xsl:choose>                   <xsl:if test="position() != last()">                        <fo:inline font-family="Arial" font-size="smaller">                         <xsl:text>, </xsl:text>                     </fo:inline>                    </xsl:if>               </xsl:for-each>         </xsl:for-each>         <fo:inline font-family="Arial" font-size="smaller">             <xsl:text>)</xsl:text>          </fo:inline>        </xsl:if>       <xsl:choose>            <xsl:when test="//kr:ElectionSubcategory[text()= &apos;PS2&apos; or text()= &apos;TK&apos;]">               <xsl:for-each select="rg:ListOrCombinedList">                   <xsl:if test="@districtNumber">                     <fo:inline font-family="Arial" font-size="smaller">                         <xsl:text>(Kieskring </xsl:text>                        </fo:inline>                        <xsl:for-each select="@districtNumber">                         <fo:inline font-family="Arial" font-size="smaller">                             <xsl:value-of select="string(.)"/>                          </fo:inline>                            <fo:inline font-family="Arial" font-size="smaller">                             <xsl:text>)</xsl:text>                          </fo:inline>                        </xsl:for-each>                 </xsl:if>               </xsl:for-each>         </xsl:when>         <xsl:when test="//kr:ElectionSubcategory[text()= &apos;EK&apos;]">              <xsl:for-each select="rg:ListOrCombinedList">                   <xsl:if test="@provinceName">                       <xsl:for-each select="@provinceName">                           <fo:inline font-family="Arial" font-size="smaller">                             <xsl:text>(</xsl:text>                          </fo:inline>                            <fo:inline font-family="Arial" font-size="smaller">                             <xsl:value-of select="string(.)"/>                          </fo:inline>                            <fo:inline font-family="Arial" font-size="smaller">                             <xsl:text>)</xsl:text>                          </fo:inline>                        </xsl:for-each>                 </xsl:if>               </xsl:for-each>         </xsl:when>     </xsl:choose>   </xsl:template> <xsl:template name="DHondtFractionPart1">       <xsl:param name="step"/>        <xsl:for-each select="rg:DHondtFraction">           <xsl:if test="@step = $step">               <xsl:call-template name="ElectionFractionPart1">                    <xsl:with-param name="smaller" select="1"/>                 <xsl:with-param name="bold" select="count (self::rg:DHondtFraction[@winner = &quot;true&quot;])"/>              </xsl:call-template>            </xsl:if>       </xsl:for-each> </xsl:template> <xsl:template name="DHondtFractionPart2">       <xsl:param name="step"/>        <xsl:for-each select="rg:DHondtFraction">           <xsl:if test="@step = $step">               <xsl:call-template name="ElectionFractionPart2">                    <xsl:with-param name="smaller" select="1"/>                 <xsl:with-param name="bold" select="count (self::rg:DHondtFraction[@winner = &quot;true&quot;])"/>              </xsl:call-template>            </xsl:if>       </xsl:for-each> </xsl:template> <xsl:template name="DHondtHeader">      <xsl:param name="step"/>        <xsl:param name="maxNumberOfAssignments"/>      <xsl:if test="$maxNumberOfAssignments &gt;= $step">         <fo:inline font-family="Arial" font-size="smaller" font-style="italic" font-weight="normal">                <xsl:value-of select="$step"/>          </fo:inline>        </xsl:if>   </xsl:template> <xsl:template name="DHondtWinners">     <xsl:param name="step"/>        <xsl:for-each select="rg:DHondtAssignmentLine[rg:DHondtFraction[@step = $step and @winner=&quot;true&quot;]]">          <xsl:for-each select="rg:ListOrCombinedList">               <xsl:for-each select="@combinationId">                  <fo:inline font-family="Arial" font-size="smaller">                     <xsl:value-of select="string(.)"/>                  </fo:inline>                </xsl:for-each>             <xsl:for-each select="@listNumber">                 <fo:inline font-family="Arial" font-size="smaller">                     <xsl:value-of select="string(.)"/>                  </fo:inline>                </xsl:for-each>         </xsl:for-each>     </xsl:for-each> </xsl:template> <xsl:template name="LineBreakRTF">      <xsl:if test="$SV_OutputFormat = &apos;RTF&apos;">          <fo:block>              <fo:leader leader-pattern="space"/>         </fo:block>     </xsl:if>   </xsl:template> <xsl:template name="VotesInElectoralDistrict">      <xsl:param name="districtId"/>      <xsl:param name="addSpaceAfterNumbers" select="false()"/>       <xsl:for-each select="rg:VotesInElectoralDistrict">         <xsl:if test="@id != &quot;alle&quot; and position() = $districtId">                <xsl:variable name="value-of-template_148">                 <xsl:apply-templates/>              </xsl:variable>             <xsl:choose>                    <xsl:when test="contains(string($value-of-template_148),'&#x200B;')">                       <fo:block font-family="Arial" font-size="9pt">                          <xsl:copy-of select="$value-of-template_148"/>                      </fo:block>                 </xsl:when>                 <xsl:otherwise>                     <fo:inline font-family="Arial" font-size="9pt">                         <xsl:copy-of select="$value-of-template_148"/>                      </fo:inline>                    </xsl:otherwise>                </xsl:choose>           </xsl:if>       </xsl:for-each>     <xsl:if test="$addSpaceAfterNumbers">           <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>&#160;</xsl:text>         </fo:inline>        </xsl:if>   </xsl:template> <xsl:template name="TotalVotesInElectoralDistrict">     <xsl:param name="districtId"/>      <xsl:param name="addSpaceAfterNumbers" select="false()"/>       <xsl:for-each select="rg:OverviewOfDistrictsVotes">         <xsl:for-each select="rg:VotesInElectoralDistrict">             <xsl:if test="@id != &quot;alle&quot; and position() = $districtId">                    <xsl:variable name="value-of-template_149">                     <xsl:apply-templates/>                  </xsl:variable>                 <xsl:choose>                        <xsl:when test="contains(string($value-of-template_149),'&#x200B;')">                           <fo:block font-family="Arial" font-size="9pt">                              <xsl:copy-of select="$value-of-template_149"/>                          </fo:block>                     </xsl:when>                     <xsl:otherwise>                         <fo:inline font-family="Arial" font-size="9pt">                             <xsl:copy-of select="$value-of-template_149"/>                          </fo:inline>                        </xsl:otherwise>                    </xsl:choose>               </xsl:if>           </xsl:for-each>     </xsl:for-each>     <xsl:if test="$addSpaceAfterNumbers">           <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>&#160;</xsl:text>         </fo:inline>        </xsl:if>   </xsl:template> <xsl:template name="BlancVotesInElectoralDistrict">     <xsl:param name="districtId"/>      <xsl:param name="addSpaceAfterNumbers" select="false()"/>       <xsl:for-each select="rg:OverviewOfBlancVotes">         <xsl:for-each select="rg:VotesInElectoralDistrict">             <xsl:if test="@id != &quot;alle&quot; and position() = $districtId">                    <xsl:variable name="value-of-template_150">                     <xsl:apply-templates/>                  </xsl:variable>                 <xsl:choose>                        <xsl:when test="contains(string($value-of-template_150),'&#x200B;')">                           <fo:block font-family="Arial" font-size="9pt">                              <xsl:copy-of select="$value-of-template_150"/>                          </fo:block>                     </xsl:when>                     <xsl:otherwise>                         <fo:inline font-family="Arial" font-size="9pt">                             <xsl:copy-of select="$value-of-template_150"/>                          </fo:inline>                        </xsl:otherwise>                    </xsl:choose>               </xsl:if>           </xsl:for-each>     </xsl:for-each>     <xsl:if test="$addSpaceAfterNumbers">           <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>&#160;</xsl:text>         </fo:inline>        </xsl:if>   </xsl:template> <xsl:template name="InvalidVotesInElectoralDistrict">       <xsl:param name="districtId"/>      <xsl:param name="addSpaceAfterNumbers" select="false()"/>       <xsl:for-each select="rg:OverviewOfInvalidVotes">           <xsl:for-each select="rg:VotesInElectoralDistrict">             <xsl:if test="@id != &quot;alle&quot; and position() = $districtId">                    <xsl:variable name="value-of-template_151">                     <xsl:apply-templates/>                  </xsl:variable>                 <xsl:choose>                        <xsl:when test="contains(string($value-of-template_151),'&#x200B;')">                           <fo:block font-family="Arial" font-size="9pt">                              <xsl:copy-of select="$value-of-template_151"/>                          </fo:block>                     </xsl:when>                     <xsl:otherwise>                         <fo:inline font-family="Arial" font-size="9pt">                             <xsl:copy-of select="$value-of-template_151"/>                          </fo:inline>                        </xsl:otherwise>                    </xsl:choose>               </xsl:if>           </xsl:for-each>     </xsl:for-each>     <xsl:if test="$addSpaceAfterNumbers">           <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>&#160;</xsl:text>         </fo:inline>        </xsl:if>   </xsl:template> <xsl:template name="ElectoralDistrictNumber">       <xsl:param name="districtId"/>      <xsl:param name="addSpaceAfterNumbers" select="false()"/>       <xsl:for-each select="rg:ElectoralDistrictName[position() = $districtId]">          <xsl:for-each select="@id">             <fo:inline font-family="Arial" font-size="9pt">                 <xsl:value-of select="string(.)"/>              </fo:inline>            </xsl:for-each>     </xsl:for-each>     <xsl:if test="$addSpaceAfterNumbers">           <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>&#160;</xsl:text>         </fo:inline>        </xsl:if>   </xsl:template> <xsl:template name="PartyNamePdfWrapped">       <xsl:choose>            <xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">                <xsl:for-each select="eml:AffiliationIdentifier">                   <xsl:for-each select="eml:RegisteredName">                      <xsl:variable name="value-of-template_153">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_153),'&#x200B;')">                               <fo:block font-family="Arial" font-size="9pt">                                  <xsl:copy-of select="$value-of-template_153"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:copy-of select="$value-of-template_153"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:for-each>             </xsl:for-each>         </xsl:when>         <xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">                <fo:inline-container>                   <fo:block>                      <xsl:text>&#x200B;</xsl:text>                   </fo:block>             </fo:inline-container>              <fo:block font-family="Arial" font-size="9pt" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" margin-right="100% - 100%" white-space="pre" margin="0pt">                   <xsl:for-each select="eml:AffiliationIdentifier">                       <xsl:for-each select="eml:RegisteredName">                          <xsl:variable name="value-of-template_154">                             <xsl:apply-templates/>                          </xsl:variable>                         <xsl:choose>                                <xsl:when test="contains(string($value-of-template_154),'&#x200B;')">                                   <fo:block font-family="Arial" font-size="9pt">                                      <xsl:copy-of select="$value-of-template_154"/>                                  </fo:block>                             </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:copy-of select="$value-of-template_154"/>                                  </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:for-each>                 </xsl:for-each>             </fo:block>         </xsl:when>     </xsl:choose>   </xsl:template> <xsl:template name="ProvinceNameEK">        <xsl:param name="id"/>      <fo:inline-container>           <fo:block>              <xsl:text>&#x200B;</xsl:text>           </fo:block>     </fo:inline-container>      <fo:block font-family="Arial" font-size="9pt" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="no-wrap" white-space-treatment="preserve" margin-right="100% - 100%" white-space="pre" margin="0pt">          <xsl:choose>                <xsl:when test="rg:ElectoralDistrictName[position() = $id and text() != &apos;&apos;]">                 <xsl:for-each select="rg:ElectoralDistrictName[position() = $id]">                      <xsl:variable name="value-of-template_155">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_155),'&#x200B;')">                               <fo:block font-family="Arial" font-size="9pt">                                  <xsl:copy-of select="$value-of-template_155"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:copy-of select="$value-of-template_155"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:for-each>             </xsl:when>             <xsl:otherwise>                 <xsl:for-each select="$XML">                        <xsl:for-each select="eml:EML">                         <xsl:for-each select="eml:Result">                              <xsl:for-each select="rg:RG520">                                    <xsl:for-each select="rg:ElectoralDistrictsOverview">                                       <xsl:for-each select="rg:ElectoralDistrictName[position() = $id]">                                          <xsl:variable name="value-of-template_156">                                             <xsl:apply-templates/>                                          </xsl:variable>                                         <xsl:choose>                                                <xsl:when test="contains(string($value-of-template_156),'&#x200B;')">                                                   <fo:block font-family="Arial" font-size="9pt">                                                      <xsl:copy-of select="$value-of-template_156"/>                                                  </fo:block>                                             </xsl:when>                                             <xsl:otherwise>                                                 <fo:inline font-family="Arial" font-size="9pt">                                                     <xsl:copy-of select="$value-of-template_156"/>                                                  </fo:inline>                                                </xsl:otherwise>                                            </xsl:choose>                                       </xsl:for-each>                                 </xsl:for-each>                             </xsl:for-each>                         </xsl:for-each>                     </xsl:for-each>                 </xsl:for-each>             </xsl:otherwise>            </xsl:choose>       </fo:block> </xsl:template> <xsl:template name="ElectionName">      <xsl:param name="isBold" select="0"/>       <xsl:if test="0=1">         <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>Election name including date</xsl:text>           </fo:inline>            <fo:block/>     </xsl:if>       <xsl:choose>            <xsl:when test="eml:ElectionIdentifier/eml:ElectionCategory[text() != &quot;NR&quot; and text() != &quot;LR&quot; and text() != &quot;PR&quot;]">               <xsl:choose>                    <xsl:when test="$lang=0">                       <fo:inline font-family="Arial" font-size="9pt">                         <xsl:text>de verkiezing van de leden van </xsl:text>                        </fo:inline>                    </xsl:when>                 <xsl:otherwise>                     <fo:inline font-family="Arial" font-size="9pt">                         <xsl:value-of select="$RP_ElectionName_verkiezingLeden"/>                       </fo:inline>                    </xsl:otherwise>                </xsl:choose>               <xsl:call-template name="ElectionNameSimple">                   <xsl:with-param name="isBold" select="$isBold"/>                </xsl:call-template>            </xsl:when>         <xsl:otherwise>             <xsl:choose>                    <xsl:when test="$lang=0">                       <fo:inline font-family="Arial" font-size="9pt">                         <xsl:text>het referendum over </xsl:text>                       </fo:inline>                    </xsl:when>                 <xsl:otherwise>                     <fo:inline font-family="Arial" font-size="9pt">                         <xsl:value-of select="$RP_ElectionName_referendumOver"/>                        </fo:inline>                    </xsl:otherwise>                </xsl:choose>               <xsl:for-each select="eml:ElectionIdentifier">                  <xsl:for-each select="eml:ElectionName">                        <xsl:variable name="value-of-template_157">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_157),'&#x200B;')">                               <fo:block font-family="Arial" font-size="9pt">                                  <xsl:copy-of select="$value-of-template_157"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:copy-of select="$value-of-template_157"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:for-each>             </xsl:for-each>         </xsl:otherwise>        </xsl:choose>       <xsl:call-template name="ElectionDomain">           <xsl:with-param name="isBold" select="$isBold"/>        </xsl:call-template>        <xsl:for-each select="eml:ElectionIdentifier">          <xsl:choose>                <xsl:when test="$lang=0">                   <fo:inline font-family="Arial" font-size="9pt">                     <xsl:text> op </xsl:text>                   </fo:inline>                </xsl:when>             <xsl:otherwise>                 <fo:inline font-family="Arial" font-size="9pt">                     <xsl:value-of select="$RP_ElectionName_op"/>                    </fo:inline>                </xsl:otherwise>            </xsl:choose>           <xsl:for-each select="kr:ElectionDate">             <xsl:call-template name="Date">                 <xsl:with-param name="isBold" select="$isBold"/>                </xsl:call-template>            </xsl:for-each>     </xsl:for-each> </xsl:template> <xsl:template name="ElectionNameShort">     <xsl:param name="isBold" select="0"/>       <xsl:if test="0=1">         <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>Election name excluding date and &apos;verkiezing van...&apos;</xsl:text>         </fo:inline>            <fo:block/>     </xsl:if>       <xsl:call-template name="ElectionNameSimple">           <xsl:with-param name="isBold" select="$isBold"/>        </xsl:call-template>        <xsl:call-template name="ElectionDomain">           <xsl:with-param name="isBold" select="$isBold"/>        </xsl:call-template>    </xsl:template> <xsl:template name="Salutation">        <xsl:param name="isBold" select="0"/>       <xsl:if test="$isBold=0">           <xsl:if test="0=1">             <fo:inline font-family="Arial" font-size="9pt">                 <xsl:text>Salutation &quot;Mr. &quot; or &quot;Mrs. &quot; with subsequent blank</xsl:text>             </fo:inline>                <fo:block/>         </xsl:if>           <xsl:for-each select="eml:Gender">              <xsl:choose>                    <xsl:when test=".=&quot;male&quot;">                        <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>dhr. </xsl:text>                              </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:value-of select="$RP_Salutation_dhr"/>                             </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test=".=&quot;female&quot; or .=&quot;unknown&quot;">                     <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>mevr. </xsl:text>                             </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:value-of select="$RP_Salutation_mevr"/>                                </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>             </xsl:choose>           </xsl:for-each>     </xsl:if>       <xsl:if test="$isBold=1">           <xsl:if test="0=1">             <fo:inline font-family="Arial" font-size="9pt">                 <xsl:text>Salutation &quot;Mr. &quot; or &quot;Mrs. &quot; with subsequent blank</xsl:text>             </fo:inline>                <fo:block/>         </xsl:if>           <xsl:for-each select="eml:Gender">              <xsl:choose>                    <xsl:when test=".=&quot;male&quot;">                        <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:text>dhr. </xsl:text>                              </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:value-of select="$RP_Salutation_dhr"/>                             </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test=".=&quot;female&quot; or .=&quot;unknown&quot;">                     <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:text>mevr. </xsl:text>                             </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:value-of select="$RP_Salutation_mevr"/>                                </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>             </xsl:choose>           </xsl:for-each>     </xsl:if>   </xsl:template> <xsl:template name="Address">       <xsl:param name="isBold" select="0"/>       <xsl:if test="0=1">         <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>Street and house number &quot;Dasstraat 17&quot;</xsl:text>           </fo:inline>            <fo:block/>     </xsl:if>       <xsl:if test="$isBold=0">           <xsl:for-each select="xal:Locality">                <xsl:for-each select="xal:AddressLine">                 <xsl:variable name="value-of-template_158">                     <xsl:apply-templates/>                  </xsl:variable>                 <xsl:choose>                        <xsl:when test="contains(string($value-of-template_158),'&#x200B;')">                           <fo:block font-family="Arial" font-size="9pt">                              <xsl:copy-of select="$value-of-template_158"/>                          </fo:block>                     </xsl:when>                     <xsl:otherwise>                         <fo:inline font-family="Arial" font-size="9pt">                             <xsl:copy-of select="$value-of-template_158"/>                          </fo:inline>                        </xsl:otherwise>                    </xsl:choose>               </xsl:for-each>         </xsl:for-each>     </xsl:if>       <xsl:if test="$isBold=1">           <xsl:for-each select="xal:Locality">                <xsl:for-each select="xal:AddressLine">                 <xsl:variable name="value-of-template_159">                     <xsl:apply-templates/>                  </xsl:variable>                 <xsl:choose>                        <xsl:when test="contains(string($value-of-template_159),'&#x200B;')">                           <fo:block font-family="Arial" font-size="9pt" font-weight="bold">                               <xsl:copy-of select="$value-of-template_159"/>                          </fo:block>                     </xsl:when>                     <xsl:otherwise>                         <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                              <xsl:copy-of select="$value-of-template_159"/>                          </fo:inline>                        </xsl:otherwise>                    </xsl:choose>               </xsl:for-each>         </xsl:for-each>     </xsl:if>   </xsl:template> <xsl:template name="PostalCodeCity">        <xsl:if test="0=1">         <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>Postal code and city like &quot;6361 DV Nuth&quot;</xsl:text>         </fo:inline>            <fo:block/>     </xsl:if>       <xsl:for-each select="xal:Locality">            <xsl:for-each select="xal:PostalCode">              <xsl:for-each select="xal:PostalCodeNumber">                    <xsl:variable name="value-of-template_160">                     <xsl:apply-templates/>                  </xsl:variable>                 <xsl:choose>                        <xsl:when test="contains(string($value-of-template_160),'&#x200B;')">                           <fo:block font-family="Arial" font-size="9pt">                              <xsl:copy-of select="$value-of-template_160"/>                          </fo:block>                     </xsl:when>                     <xsl:otherwise>                         <fo:inline font-family="Arial" font-size="9pt">                             <xsl:copy-of select="$value-of-template_160"/>                          </fo:inline>                        </xsl:otherwise>                    </xsl:choose>               </xsl:for-each>         </xsl:for-each>         <xsl:if test="count(xal:PostalCode/xal:PostalCodeNumber[text() != &quot;&quot;]) &gt; 0 and count(xal:LocalityName[text() != &quot;&quot;]) &gt; 0">                <xsl:call-template name="Space"/>           </xsl:if>           <xsl:for-each select="xal:LocalityName">                <xsl:variable name="value-of-template_161">                 <xsl:apply-templates/>              </xsl:variable>             <xsl:choose>                    <xsl:when test="contains(string($value-of-template_161),'&#x200B;')">                       <fo:block font-family="Arial" font-size="9pt">                          <xsl:copy-of select="$value-of-template_161"/>                      </fo:block>                 </xsl:when>                 <xsl:otherwise>                     <fo:inline font-family="Arial" font-size="9pt">                         <xsl:copy-of select="$value-of-template_161"/>                      </fo:inline>                    </xsl:otherwise>                </xsl:choose>           </xsl:for-each>     </xsl:for-each> </xsl:template> <xsl:template name="PartyName">     <xsl:param name="isBold" select="0"/>       <xsl:choose>            <xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">                <xsl:if test="$isBold=0">                   <xsl:choose>                        <xsl:when test="./eml:AffiliationIdentifier/eml:RegisteredName[text() != &quot;&quot;]">                            <xsl:for-each select="eml:AffiliationIdentifier">                               <xsl:for-each select="eml:RegisteredName">                                  <xsl:variable name="value-of-template_162">                                     <xsl:apply-templates/>                                  </xsl:variable>                                 <xsl:choose>                                        <xsl:when test="contains(string($value-of-template_162),'&#x200B;')">                                           <fo:block font-family="Arial" font-size="9pt">                                              <xsl:copy-of select="$value-of-template_162"/>                                          </fo:block>                                     </xsl:when>                                     <xsl:otherwise>                                         <fo:inline font-family="Arial" font-size="9pt">                                             <xsl:copy-of select="$value-of-template_162"/>                                          </fo:inline>                                        </xsl:otherwise>                                    </xsl:choose>                               </xsl:for-each>                         </xsl:for-each>                     </xsl:when>                     <xsl:otherwise>                         <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>niet van toepassing (blanco lijst)</xsl:text>                                 </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:value-of select="$RP_PartyName_blancoLijst"/>                                  </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:otherwise>                    </xsl:choose>               </xsl:if>               <xsl:if test="$isBold=1">                   <xsl:choose>                        <xsl:when test="./eml:AffiliationIdentifier/eml:RegisteredName[text() != &quot;&quot;]">                            <xsl:for-each select="eml:AffiliationIdentifier">                               <xsl:for-each select="eml:RegisteredName">                                  <xsl:variable name="value-of-template_163">                                     <xsl:apply-templates/>                                  </xsl:variable>                                 <xsl:choose>                                        <xsl:when test="contains(string($value-of-template_163),'&#x200B;')">                                           <fo:block font-family="Arial" font-size="9pt" font-weight="bold">                                               <xsl:copy-of select="$value-of-template_163"/>                                          </fo:block>                                     </xsl:when>                                     <xsl:otherwise>                                         <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                              <xsl:copy-of select="$value-of-template_163"/>                                          </fo:inline>                                        </xsl:otherwise>                                    </xsl:choose>                               </xsl:for-each>                         </xsl:for-each>                     </xsl:when>                     <xsl:otherwise>                         <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:text>niet van toepassing (blanco lijst)</xsl:text>                                 </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:value-of select="$RP_PartyName_blancoLijst"/>                                  </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:otherwise>                    </xsl:choose>               </xsl:if>           </xsl:when>         <xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">                <fo:inline-container>                   <fo:block>                      <xsl:text>&#x200B;</xsl:text>                   </fo:block>             </fo:inline-container>              <fo:block font-family="Arial" font-size="9pt" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" margin-right="100% - 100%" white-space="pre" margin="0pt">                   <xsl:if test="$isBold=0">                       <xsl:choose>                            <xsl:when test="./eml:AffiliationIdentifier/eml:RegisteredName[text() != &quot;&quot;]">                                <xsl:for-each select="eml:AffiliationIdentifier">                                   <xsl:for-each select="eml:RegisteredName">                                      <xsl:variable name="value-of-template_164">                                         <xsl:apply-templates/>                                      </xsl:variable>                                     <xsl:choose>                                            <xsl:when test="contains(string($value-of-template_164),'&#x200B;')">                                               <fo:block font-family="Arial" font-size="9pt">                                                  <xsl:copy-of select="$value-of-template_164"/>                                              </fo:block>                                         </xsl:when>                                         <xsl:otherwise>                                             <fo:inline font-family="Arial" font-size="9pt">                                                 <xsl:copy-of select="$value-of-template_164"/>                                              </fo:inline>                                            </xsl:otherwise>                                        </xsl:choose>                                   </xsl:for-each>                             </xsl:for-each>                         </xsl:when>                         <xsl:otherwise>                             <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>niet van toepassing (blanco lijst)</xsl:text>                                     </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:value-of select="$RP_PartyName_blancoLijst"/>                                      </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:otherwise>                        </xsl:choose>                   </xsl:if>                   <xsl:if test="$isBold=1">                       <xsl:choose>                            <xsl:when test="./eml:AffiliationIdentifier/eml:RegisteredName[text() != &quot;&quot;]">                                <xsl:for-each select="eml:AffiliationIdentifier">                                   <xsl:for-each select="eml:RegisteredName">                                      <xsl:variable name="value-of-template_165">                                         <xsl:apply-templates/>                                      </xsl:variable>                                     <xsl:choose>                                            <xsl:when test="contains(string($value-of-template_165),'&#x200B;')">                                               <fo:block font-family="Arial" font-size="9pt" font-weight="bold">                                                   <xsl:copy-of select="$value-of-template_165"/>                                              </fo:block>                                         </xsl:when>                                         <xsl:otherwise>                                             <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                                  <xsl:copy-of select="$value-of-template_165"/>                                              </fo:inline>                                            </xsl:otherwise>                                        </xsl:choose>                                   </xsl:for-each>                             </xsl:for-each>                         </xsl:when>                         <xsl:otherwise>                             <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                          <xsl:text>niet van toepassing (blanco lijst)</xsl:text>                                     </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                          <xsl:value-of select="$RP_PartyName_blancoLijst"/>                                      </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:otherwise>                        </xsl:choose>                   </xsl:if>               </fo:block>         </xsl:when>     </xsl:choose>   </xsl:template> <xsl:template name="LastNameH1">        <xsl:param name="isBold" select="0"/>       <xsl:param name="fontSize" select="&apos;normal&apos;"/>        <xsl:param name="prefixToUppercase" select="0"/>        <xsl:if test="0=1">         <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>Displays the last name &quot;Baron van der Zaag jr.&quot; (name components a+b+c+d).</xsl:text>           </fo:inline>            <fo:block/>     </xsl:if>       <xsl:if test="$fontSize=&apos;normal&apos;">            <xsl:if test="$isBold=0">               <xsl:for-each select="xnl:PersonName">                  <xsl:for-each select="xnl:NamePrefix">                      <xsl:choose>                            <xsl:when test="$prefixToUppercase = 0">                                <xsl:variable name="value-of-template_166">                                 <xsl:apply-templates/>                              </xsl:variable>                             <xsl:choose>                                    <xsl:when test="contains(string($value-of-template_166),'&#x200B;')">                                       <fo:block font-family="Arial" font-size="9pt">                                          <xsl:copy-of select="$value-of-template_166"/>                                      </fo:block>                                 </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:copy-of select="$value-of-template_166"/>                                      </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:value-of select="concat(translate(substring(., 1, 1), &apos;abcdefghijklmnopqrstuvwxyz&apos;, &apos;ABCDEFGHIJKLMNOPQRSTUVWXYZ&apos;), substring(., 2))"/>                             </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                       <xsl:if test=". != &apos;&apos;">                           <xsl:call-template name="Space"/>                       </xsl:if>                   </xsl:for-each>                 <xsl:for-each select="xnl:LastName">                        <xsl:variable name="value-of-template_167">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_167),'&#x200B;')">                               <fo:block font-family="Arial" font-size="9pt">                                  <xsl:copy-of select="$value-of-template_167"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:copy-of select="$value-of-template_167"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:for-each>             </xsl:for-each>         </xsl:if>           <xsl:if test="$isBold=1">               <xsl:for-each select="xnl:PersonName">                  <xsl:for-each select="xnl:NamePrefix">                      <xsl:choose>                            <xsl:when test="$prefixToUppercase = 0">                                <xsl:variable name="value-of-template_168">                                 <xsl:apply-templates/>                              </xsl:variable>                             <xsl:choose>                                    <xsl:when test="contains(string($value-of-template_168),'&#x200B;')">                                       <fo:block font-family="Arial" font-size="9pt" font-weight="bold">                                           <xsl:copy-of select="$value-of-template_168"/>                                      </fo:block>                                 </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                          <xsl:copy-of select="$value-of-template_168"/>                                      </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:value-of select="concat(translate(substring(., 1, 1), &apos;abcdefghijklmnopqrstuvwxyz&apos;, &apos;ABCDEFGHIJKLMNOPQRSTUVWXYZ&apos;), substring(., 2))"/>                             </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                       <xsl:if test=". != &apos;&apos;">                           <xsl:call-template name="Space"/>                       </xsl:if>                   </xsl:for-each>                 <xsl:for-each select="xnl:LastName">                        <xsl:variable name="value-of-template_169">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_169),'&#x200B;')">                               <fo:block font-family="Arial" font-size="9pt" font-weight="bold">                                   <xsl:copy-of select="$value-of-template_169"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:copy-of select="$value-of-template_169"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:for-each>             </xsl:for-each>         </xsl:if>       </xsl:if>       <xsl:if test="$fontSize=&apos;smaller&apos;">           <xsl:if test="$isBold=0">               <xsl:for-each select="xnl:PersonName">                  <xsl:for-each select="xnl:NamePrefix">                      <xsl:choose>                            <xsl:when test="$prefixToUppercase = 0">                                <xsl:variable name="value-of-template_170">                                 <xsl:apply-templates/>                              </xsl:variable>                             <xsl:choose>                                    <xsl:when test="contains(string($value-of-template_170),'&#x200B;')">                                       <fo:block font-family="Arial" font-size="smaller">                                          <xsl:copy-of select="$value-of-template_170"/>                                      </fo:block>                                 </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="smaller">                                         <xsl:copy-of select="$value-of-template_170"/>                                      </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="smaller">                                 <xsl:value-of select="concat(translate(substring(., 1, 1), &apos;abcdefghijklmnopqrstuvwxyz&apos;, &apos;ABCDEFGHIJKLMNOPQRSTUVWXYZ&apos;), substring(., 2))"/>                             </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                       <xsl:if test=". != &apos;&apos;">                           <xsl:call-template name="Space">                                <xsl:with-param name="fontSize" select="$fontSize"/>                            </xsl:call-template>                        </xsl:if>                   </xsl:for-each>                 <xsl:for-each select="xnl:LastName">                        <xsl:variable name="value-of-template_171">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_171),'&#x200B;')">                               <fo:block font-family="Arial" font-size="smaller">                                  <xsl:copy-of select="$value-of-template_171"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="smaller">                                 <xsl:copy-of select="$value-of-template_171"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:for-each>             </xsl:for-each>         </xsl:if>           <xsl:if test="$isBold=1">               <xsl:for-each select="xnl:PersonName">                  <xsl:for-each select="xnl:NamePrefix">                      <xsl:choose>                            <xsl:when test="$prefixToUppercase = 0">                                <xsl:variable name="value-of-template_172">                                 <xsl:apply-templates/>                              </xsl:variable>                             <xsl:choose>                                    <xsl:when test="contains(string($value-of-template_172),'&#x200B;')">                                       <fo:block font-family="Arial" font-size="smaller" font-weight="bold">                                           <xsl:copy-of select="$value-of-template_172"/>                                      </fo:block>                                 </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                                          <xsl:copy-of select="$value-of-template_172"/>                                      </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                                  <xsl:value-of select="concat(translate(substring(., 1, 1), &apos;abcdefghijklmnopqrstuvwxyz&apos;, &apos;ABCDEFGHIJKLMNOPQRSTUVWXYZ&apos;), substring(., 2))"/>                             </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                       <xsl:if test=". != &apos;&apos;">                           <xsl:call-template name="Space">                                <xsl:with-param name="fontSize" select="$fontSize"/>                            </xsl:call-template>                        </xsl:if>                   </xsl:for-each>                 <xsl:for-each select="xnl:LastName">                        <xsl:variable name="value-of-template_173">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_173),'&#x200B;')">                               <fo:block font-family="Arial" font-size="smaller" font-weight="bold">                                   <xsl:copy-of select="$value-of-template_173"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                                  <xsl:copy-of select="$value-of-template_173"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:for-each>             </xsl:for-each>         </xsl:if>       </xsl:if>       <xsl:if test="$fontSize=&apos;x-small&apos;">           <xsl:if test="$isBold=0">               <xsl:for-each select="xnl:PersonName">                  <xsl:for-each select="xnl:NamePrefix">                      <xsl:choose>                            <xsl:when test="$prefixToUppercase = 0">                                <xsl:variable name="value-of-template_174">                                 <xsl:apply-templates/>                              </xsl:variable>                             <xsl:choose>                                    <xsl:when test="contains(string($value-of-template_174),'&#x200B;')">                                       <fo:block font-family="Arial" font-size="x-small">                                          <xsl:copy-of select="$value-of-template_174"/>                                      </fo:block>                                 </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="x-small">                                         <xsl:copy-of select="$value-of-template_174"/>                                      </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small">                                 <xsl:value-of select="concat(translate(substring(., 1, 1), &apos;abcdefghijklmnopqrstuvwxyz&apos;, &apos;ABCDEFGHIJKLMNOPQRSTUVWXYZ&apos;), substring(., 2))"/>                             </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                       <xsl:if test=". != &apos;&apos;">                           <xsl:call-template name="Space">                                <xsl:with-param name="fontSize" select="$fontSize"/>                            </xsl:call-template>                        </xsl:if>                   </xsl:for-each>                 <xsl:for-each select="xnl:LastName">                        <xsl:variable name="value-of-template_175">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_175),'&#x200B;')">                               <fo:block font-family="Arial" font-size="x-small">                                  <xsl:copy-of select="$value-of-template_175"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small">                                 <xsl:copy-of select="$value-of-template_175"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:for-each>             </xsl:for-each>         </xsl:if>           <xsl:if test="$isBold=1">               <xsl:for-each select="xnl:PersonName">                  <xsl:for-each select="xnl:NamePrefix">                      <xsl:choose>                            <xsl:when test="$prefixToUppercase = 0">                                <xsl:variable name="value-of-template_176">                                 <xsl:apply-templates/>                              </xsl:variable>                             <xsl:choose>                                    <xsl:when test="contains(string($value-of-template_176),'&#x200B;')">                                       <fo:block font-family="Arial" font-size="x-small" font-weight="bold">                                           <xsl:copy-of select="$value-of-template_176"/>                                      </fo:block>                                 </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                          <xsl:copy-of select="$value-of-template_176"/>                                      </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                  <xsl:value-of select="concat(translate(substring(., 1, 1), &apos;abcdefghijklmnopqrstuvwxyz&apos;, &apos;ABCDEFGHIJKLMNOPQRSTUVWXYZ&apos;), substring(., 2))"/>                             </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                       <xsl:if test=". != &apos;&apos;">                           <xsl:call-template name="Space">                                <xsl:with-param name="fontSize" select="$fontSize"/>                            </xsl:call-template>                        </xsl:if>                   </xsl:for-each>                 <xsl:for-each select="xnl:LastName">                        <xsl:variable name="value-of-template_177">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_177),'&#x200B;')">                               <fo:block font-family="Arial" font-size="x-small" font-weight="bold">                                   <xsl:copy-of select="$value-of-template_177"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                  <xsl:copy-of select="$value-of-template_177"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:for-each>             </xsl:for-each>         </xsl:if>       </xsl:if>   </xsl:template> <xsl:template name="FirstNameH1">       <xsl:param name="isBold" select="0"/>       <xsl:param name="fontSize" select="&apos;normal&apos;"/>        <xsl:if test="0=1">         <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>Displays the initials and first name like &quot;H.H.G. (Henk)&quot; (name components e+f).</xsl:text>         </fo:inline>            <fo:block/>     </xsl:if>       <xsl:if test="$fontSize=&apos;normal&apos;">            <xsl:if test="$isBold=0">               <xsl:for-each select="xnl:PersonName">                  <xsl:for-each select="xnl:NameLine">                        <xsl:variable name="value-of-template_178">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_178),'&#x200B;')">                               <fo:block font-family="Arial" font-size="9pt">                                  <xsl:copy-of select="$value-of-template_178"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:copy-of select="$value-of-template_178"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:for-each>                 <xsl:if test="count(xnl:NameLine[@NameType=&quot;Initials&quot; and text() != &quot;&quot;]) &gt; 0 and count(xnl:FirstName) &gt; 0">                       <xsl:call-template name="Space">                            <xsl:with-param name="fontSize" select="$fontSize"/>                        </xsl:call-template>                    </xsl:if>                   <xsl:for-each select="xnl:FirstName">                       <fo:inline font-family="Arial" font-size="9pt">                         <xsl:text>(</xsl:text>                      </fo:inline>                        <xsl:variable name="value-of-template_179">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_179),'&#x200B;')">                               <fo:block font-family="Arial" font-size="9pt">                                  <xsl:copy-of select="$value-of-template_179"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:copy-of select="$value-of-template_179"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                       <fo:inline font-family="Arial" font-size="9pt">                         <xsl:text>)</xsl:text>                      </fo:inline>                    </xsl:for-each>             </xsl:for-each>         </xsl:if>           <xsl:if test="$isBold=1">               <xsl:for-each select="xnl:PersonName">                  <xsl:for-each select="xnl:NameLine">                        <xsl:variable name="value-of-template_180">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_180),'&#x200B;')">                               <fo:block font-family="Arial" font-size="9pt" font-weight="bold">                                   <xsl:copy-of select="$value-of-template_180"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:copy-of select="$value-of-template_180"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:for-each>                 <xsl:if test="count(xnl:NameLine[@NameType=&quot;Initials&quot; and text() != &quot;&quot;]) &gt; 0 and count(xnl:FirstName) &gt; 0">                       <xsl:call-template name="Space">                            <xsl:with-param name="fontSize" select="$fontSize"/>                        </xsl:call-template>                    </xsl:if>                   <xsl:for-each select="xnl:FirstName">                       <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                          <xsl:text>(</xsl:text>                      </fo:inline>                        <xsl:variable name="value-of-template_181">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_181),'&#x200B;')">                               <fo:block font-family="Arial" font-size="9pt" font-weight="bold">                                   <xsl:copy-of select="$value-of-template_181"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:copy-of select="$value-of-template_181"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                       <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                          <xsl:text>)</xsl:text>                      </fo:inline>                    </xsl:for-each>             </xsl:for-each>         </xsl:if>       </xsl:if>       <xsl:if test="$fontSize=&apos;smaller&apos;">           <xsl:if test="$isBold=0">               <xsl:for-each select="xnl:PersonName">                  <xsl:for-each select="xnl:NameLine">                        <xsl:variable name="value-of-template_182">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_182),'&#x200B;')">                               <fo:block font-family="Arial" font-size="smaller">                                  <xsl:copy-of select="$value-of-template_182"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="smaller">                                 <xsl:copy-of select="$value-of-template_182"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:for-each>                 <xsl:if test="count(xnl:NameLine[@NameType=&quot;Initials&quot; and text() != &quot;&quot;]) &gt; 0 and count(xnl:FirstName) &gt; 0">                       <xsl:call-template name="Space">                            <xsl:with-param name="fontSize" select="$fontSize"/>                        </xsl:call-template>                    </xsl:if>                   <xsl:for-each select="xnl:FirstName">                       <fo:inline font-family="Arial" font-size="smaller">                         <xsl:text>(</xsl:text>                      </fo:inline>                        <xsl:variable name="value-of-template_183">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_183),'&#x200B;')">                               <fo:block font-family="Arial" font-size="smaller">                                  <xsl:copy-of select="$value-of-template_183"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="smaller">                                 <xsl:copy-of select="$value-of-template_183"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                       <fo:inline font-family="Arial" font-size="smaller">                         <xsl:text>)</xsl:text>                      </fo:inline>                    </xsl:for-each>             </xsl:for-each>         </xsl:if>           <xsl:if test="$isBold=1">               <xsl:for-each select="xnl:PersonName">                  <xsl:for-each select="xnl:NameLine">                        <xsl:variable name="value-of-template_184">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_184),'&#x200B;')">                               <fo:block font-family="Arial" font-size="smaller" font-weight="bold">                                   <xsl:copy-of select="$value-of-template_184"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                                  <xsl:copy-of select="$value-of-template_184"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:for-each>                 <xsl:if test="count(xnl:NameLine[@NameType=&quot;Initials&quot; and text() != &quot;&quot;]) &gt; 0 and count(xnl:FirstName) &gt; 0">                       <xsl:call-template name="Space">                            <xsl:with-param name="fontSize" select="$fontSize"/>                        </xsl:call-template>                    </xsl:if>                   <xsl:for-each select="xnl:FirstName">                       <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                          <xsl:text>(</xsl:text>                      </fo:inline>                        <xsl:variable name="value-of-template_185">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_185),'&#x200B;')">                               <fo:block font-family="Arial" font-size="smaller" font-weight="bold">                                   <xsl:copy-of select="$value-of-template_185"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                                  <xsl:copy-of select="$value-of-template_185"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                       <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                          <xsl:text>)</xsl:text>                      </fo:inline>                    </xsl:for-each>             </xsl:for-each>         </xsl:if>       </xsl:if>       <xsl:if test="$fontSize=&apos;x-small&apos;">           <xsl:if test="$isBold=0">               <xsl:for-each select="xnl:PersonName">                  <xsl:for-each select="xnl:NameLine">                        <xsl:variable name="value-of-template_186">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_186),'&#x200B;')">                               <fo:block font-family="Arial" font-size="x-small">                                  <xsl:copy-of select="$value-of-template_186"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small">                                 <xsl:copy-of select="$value-of-template_186"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:for-each>                 <xsl:if test="count(xnl:NameLine[@NameType=&quot;Initials&quot; and text() != &quot;&quot;]) &gt; 0 and count(xnl:FirstName) &gt; 0">                       <xsl:call-template name="Space">                            <xsl:with-param name="fontSize" select="$fontSize"/>                        </xsl:call-template>                    </xsl:if>                   <xsl:for-each select="xnl:FirstName">                       <fo:inline font-family="Arial" font-size="x-small">                         <xsl:text>(</xsl:text>                      </fo:inline>                        <xsl:variable name="value-of-template_187">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_187),'&#x200B;')">                               <fo:block font-family="Arial" font-size="x-small">                                  <xsl:copy-of select="$value-of-template_187"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small">                                 <xsl:copy-of select="$value-of-template_187"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                       <fo:inline font-family="Arial" font-size="x-small">                         <xsl:text>)</xsl:text>                      </fo:inline>                    </xsl:for-each>             </xsl:for-each>         </xsl:if>           <xsl:if test="$isBold=1">               <xsl:for-each select="xnl:PersonName">                  <xsl:for-each select="xnl:NameLine">                        <xsl:variable name="value-of-template_188">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_188),'&#x200B;')">                               <fo:block font-family="Arial" font-size="x-small" font-weight="bold">                                   <xsl:copy-of select="$value-of-template_188"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                  <xsl:copy-of select="$value-of-template_188"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:for-each>                 <xsl:if test="count(xnl:NameLine[@NameType=&quot;Initials&quot; and text() != &quot;&quot;]) &gt; 0 and count(xnl:FirstName) &gt; 0">                       <xsl:call-template name="Space">                            <xsl:with-param name="fontSize" select="$fontSize"/>                        </xsl:call-template>                    </xsl:if>                   <xsl:for-each select="xnl:FirstName">                       <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                          <xsl:text>(</xsl:text>                      </fo:inline>                        <xsl:variable name="value-of-template_189">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_189),'&#x200B;')">                               <fo:block font-family="Arial" font-size="x-small" font-weight="bold">                                   <xsl:copy-of select="$value-of-template_189"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                  <xsl:copy-of select="$value-of-template_189"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                       <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                          <xsl:text>)</xsl:text>                      </fo:inline>                    </xsl:for-each>             </xsl:for-each>         </xsl:if>       </xsl:if>   </xsl:template> <xsl:template name="Gender">        <xsl:param name="isBold" select="0"/>       <xsl:param name="fontSize" select="&apos;normal&apos;"/>        <xsl:if test="0=1">         <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>Displays the gender as &quot; (m)&quot; or &quot; (v)&quot; with preceding blank (name component g), if @PublishGender = &quot;true&quot;.</xsl:text>         </fo:inline>            <fo:block/>     </xsl:if>       <xsl:if test="$fontSize = &apos;normal&apos;">          <xsl:if test="$isBold=0">               <xsl:if test="../kr:ListData/@PublishGender=&quot;true&quot;">                  <xsl:for-each select="eml:Gender">                      <xsl:choose>                            <xsl:when test=".=&quot;male&quot;">                                <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text> (m)</xsl:text>                                       </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:value-of select="$RP_Gender_m"/>                                       </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:when>                         <xsl:when test=".=&quot;unknown&quot; or (.=&quot;female&quot; and ../../kr:ListData/@PublicationLanguage=&quot;fy&quot;)">                             <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text> (f)</xsl:text>                                       </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:value-of select="$RP_Gender_unknown"/>                                     </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:when>                         <xsl:when test=".=&quot;female&quot;">                              <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text> (v)</xsl:text>                                       </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:value-of select="$RP_Gender_v"/>                                       </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:when>                     </xsl:choose>                   </xsl:for-each>             </xsl:if>           </xsl:if>           <xsl:if test="$isBold=1">               <xsl:if test="../kr:ListData/@PublishGender=&quot;true&quot;">                  <xsl:for-each select="eml:Gender">                      <xsl:choose>                            <xsl:when test=".=&quot;male&quot;">                                <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                          <xsl:text> (m)</xsl:text>                                       </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                          <xsl:value-of select="$RP_Gender_m"/>                                       </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:when>                         <xsl:when test=".=&quot;unknown&quot; or (.=&quot;female&quot; and ../../kr:ListData/@PublicationLanguage=&quot;fy&quot;)">                             <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                          <xsl:text> (f)</xsl:text>                                       </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                          <xsl:value-of select="$RP_Gender_unknown"/>                                     </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:when>                         <xsl:when test=".=&quot;female&quot;">                              <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                          <xsl:text> (v)</xsl:text>                                       </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                          <xsl:value-of select="$RP_Gender_v"/>                                       </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:when>                     </xsl:choose>                   </xsl:for-each>             </xsl:if>           </xsl:if>       </xsl:if>       <xsl:if test="$fontSize = &apos;smaller&apos;">         <xsl:if test="$isBold=0">               <xsl:if test="../kr:ListData/@PublishGender=&quot;true&quot;">                  <xsl:for-each select="eml:Gender">                      <xsl:choose>                            <xsl:when test=".=&quot;male&quot;">                                <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="smaller">                                         <xsl:text> (m)</xsl:text>                                       </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="smaller">                                         <xsl:value-of select="$RP_Gender_m"/>                                       </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:when>                         <xsl:when test=".=&quot;unknown&quot; or (.=&quot;female&quot; and ../../kr:ListData/@PublicationLanguage=&quot;fy&quot;)">                             <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="smaller">                                         <xsl:text> (f)</xsl:text>                                       </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="smaller">                                         <xsl:value-of select="$RP_Gender_unknown"/>                                     </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:when>                         <xsl:when test=".=&quot;female&quot;">                              <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="smaller">                                         <xsl:text> (v)</xsl:text>                                       </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="smaller">                                         <xsl:value-of select="$RP_Gender_v"/>                                       </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:when>                     </xsl:choose>                   </xsl:for-each>             </xsl:if>           </xsl:if>           <xsl:if test="$isBold=1">               <xsl:if test="../kr:ListData/@PublishGender=&quot;true&quot;">                  <xsl:for-each select="eml:Gender">                      <xsl:choose>                            <xsl:when test=".=&quot;male&quot;">                                <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                                          <xsl:text> (m)</xsl:text>                                       </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                                          <xsl:value-of select="$RP_Gender_m"/>                                       </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:when>                         <xsl:when test=".=&quot;unknown&quot; or (.=&quot;female&quot; and ../../kr:ListData/@PublicationLanguage=&quot;fy&quot;)">                             <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                                          <xsl:text> (f)</xsl:text>                                       </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                                          <xsl:value-of select="$RP_Gender_unknown"/>                                     </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:when>                         <xsl:when test=".=&quot;female&quot;">                              <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                                          <xsl:text> (v)</xsl:text>                                       </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                                          <xsl:value-of select="$RP_Gender_v"/>                                       </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:when>                     </xsl:choose>                   </xsl:for-each>             </xsl:if>           </xsl:if>       </xsl:if>       <xsl:if test="$fontSize = &apos;x-small&apos;">         <xsl:if test="$isBold=0">               <xsl:if test="../kr:ListData/@PublishGender=&quot;true&quot;">                  <xsl:for-each select="eml:Gender">                      <xsl:choose>                            <xsl:when test=".=&quot;male&quot;">                                <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="x-small">                                         <xsl:text> (m)</xsl:text>                                       </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="x-small">                                         <xsl:value-of select="$RP_Gender_m"/>                                       </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:when>                         <xsl:when test=".=&quot;unknown&quot; or (.=&quot;female&quot; and ../../kr:ListData/@PublicationLanguage=&quot;fy&quot;)">                             <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="x-small">                                         <xsl:text> (f)</xsl:text>                                       </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="x-small">                                         <xsl:value-of select="$RP_Gender_unknown"/>                                     </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:when>                         <xsl:when test=".=&quot;female&quot;">                              <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="x-small">                                         <xsl:text> (v)</xsl:text>                                       </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="x-small">                                         <xsl:value-of select="$RP_Gender_v"/>                                       </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:when>                     </xsl:choose>                   </xsl:for-each>             </xsl:if>           </xsl:if>           <xsl:if test="$isBold=1">               <xsl:if test="../kr:ListData/@PublishGender=&quot;true&quot;">                  <xsl:for-each select="eml:Gender">                      <xsl:choose>                            <xsl:when test=".=&quot;male&quot;">                                <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                          <xsl:text> (m)</xsl:text>                                       </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                          <xsl:value-of select="$RP_Gender_m"/>                                       </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:when>                         <xsl:when test=".=&quot;unknown&quot; or (.=&quot;female&quot; and ../../kr:ListData/@PublicationLanguage=&quot;fy&quot;)">                             <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                          <xsl:text> (f)</xsl:text>                                       </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                          <xsl:value-of select="$RP_Gender_unknown"/>                                     </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:when>                         <xsl:when test=".=&quot;female&quot;">                              <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                          <xsl:text> (v)</xsl:text>                                       </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                          <xsl:value-of select="$RP_Gender_v"/>                                       </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:when>                     </xsl:choose>                   </xsl:for-each>             </xsl:if>           </xsl:if>       </xsl:if>   </xsl:template> <xsl:template name="GenderGeneral">     <xsl:param name="Gender"/>      <xsl:param name="PublishGender" select="&quot;true&quot;"/>     <xsl:param name="PublicationLanguage" select="&quot;nl&quot;"/>     <xsl:param name="isBold" select="0"/>       <xsl:param name="fontSize" select="&apos;normal&apos;"/>        <xsl:if test="0=1">         <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>Displays the gender as &quot; (m)&quot; or &quot; (v)&quot; or &quot; (f)&quot; with preceding blank (name component g) or not at all. Does not read from XML but from parameters.</xsl:text>         </fo:inline>            <fo:block/>     </xsl:if>       <xsl:if test="0=1">         <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>*** $Gender = &quot;</xsl:text>           </fo:inline>            <fo:inline font-family="Arial" font-size="9pt">             <xsl:value-of select="$Gender"/>            </fo:inline>            <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>&quot;, $PublicationLanguage = &quot;</xsl:text>          </fo:inline>            <fo:inline font-family="Arial" font-size="9pt">             <xsl:value-of select="$PublicationLanguage"/>           </fo:inline>            <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>&quot;, $PublishGender = &quot;</xsl:text>            </fo:inline>            <fo:inline font-family="Arial" font-size="9pt">             <xsl:value-of select="$PublishGender"/>         </fo:inline>            <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>&quot;, fontSize = &quot;</xsl:text>          </fo:inline>            <fo:inline font-family="Arial" font-size="9pt">             <xsl:value-of select="$fontSize"/>          </fo:inline>            <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>&quot;, isBold = &quot;</xsl:text>            </fo:inline>            <fo:inline font-family="Arial" font-size="9pt">             <xsl:value-of select="$isBold"/>            </fo:inline>            <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>&quot; ***</xsl:text>         </fo:inline>        </xsl:if>       <xsl:if test="$Gender != &quot;&quot; and $PublishGender = &quot;true&quot;">           <xsl:if test="$fontSize = &apos;normal&apos;">              <xsl:if test="$isBold=0">                   <xsl:choose>                        <xsl:when test="$Gender = &quot;male&quot;">                            <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text> (m)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:value-of select="$RP_Gender_m"/>                                   </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test="$Gender=&apos;unknown&apos; or ($Gender=&apos;female&apos; and $PublicationLanguage = &apos;fy&apos;)">                         <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text> (f)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:value-of select="$RP_Gender_unknown"/>                                 </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test="$Gender=&quot;female&quot;">                            <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text> (v)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:value-of select="$RP_Gender_v"/>                                   </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                 </xsl:choose>               </xsl:if>               <xsl:if test="$isBold=1">                   <xsl:choose>                        <xsl:when test="$Gender=&quot;male&quot;">                          <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:text> (m)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:value-of select="$RP_Gender_m"/>                                   </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test="$Gender=&quot;unknown&quot; or ($Gender=&quot;female&quot; and $PublicationLanguage = &quot;fy&quot;)">                         <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:text> (f)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:value-of select="$RP_Gender_unknown"/>                                 </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test="$Gender=&quot;female&quot;">                            <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:text> (v)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:value-of select="$RP_Gender_v"/>                                   </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                 </xsl:choose>               </xsl:if>           </xsl:if>           <xsl:if test="$fontSize = &apos;smaller&apos;">             <xsl:if test="$isBold=0">                   <xsl:choose>                        <xsl:when test="$Gender=&quot;male&quot;">                          <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="smaller">                                     <xsl:text> (m)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="smaller">                                     <xsl:value-of select="$RP_Gender_m"/>                                   </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test="$Gender=&quot;unknown&quot; or ($Gender=&quot;female&quot; and $PublicationLanguage = &quot;fy&quot;)">                         <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="smaller">                                     <xsl:text> (f)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="smaller">                                     <xsl:value-of select="$RP_Gender_unknown"/>                                 </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test="$Gender=&quot;female&quot;">                            <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="smaller">                                     <xsl:text> (v)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="smaller">                                     <xsl:value-of select="$RP_Gender_v"/>                                   </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                 </xsl:choose>               </xsl:if>               <xsl:if test="$isBold=1">                   <xsl:choose>                        <xsl:when test="$Gender=&quot;male&quot;">                          <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                                      <xsl:text> (m)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                                      <xsl:value-of select="$RP_Gender_m"/>                                   </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test="$Gender=&quot;unknown&quot; or ($Gender=&quot;female&quot; and $PublicationLanguage = &quot;fy&quot;)">                         <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                                      <xsl:text> (f)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                                      <xsl:value-of select="$RP_Gender_unknown"/>                                 </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test="$Gender=&quot;female&quot;">                            <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                                      <xsl:text> (v)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                                      <xsl:value-of select="$RP_Gender_v"/>                                   </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                 </xsl:choose>               </xsl:if>           </xsl:if>           <xsl:if test="$fontSize = &apos;x-small&apos;">             <xsl:if test="$isBold=0">                   <xsl:choose>                        <xsl:when test="$Gender=&quot;male&quot;">                          <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="x-small">                                     <xsl:text> (m)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="x-small">                                     <xsl:value-of select="$RP_Gender_m"/>                                   </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test="$Gender=&quot;unknown&quot; or ($Gender=&quot;female&quot; and $PublicationLanguage = &quot;fy&quot;)">                         <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="x-small">                                     <xsl:text> (f)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="x-small">                                     <xsl:value-of select="$RP_Gender_unknown"/>                                 </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test="$Gender=&quot;female&quot;">                            <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="x-small">                                     <xsl:text> (v)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="x-small">                                     <xsl:value-of select="$RP_Gender_v"/>                                   </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                 </xsl:choose>               </xsl:if>               <xsl:if test="$isBold=1">                   <xsl:choose>                        <xsl:when test="$Gender=&quot;male&quot;">                          <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                      <xsl:text> (m)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                      <xsl:value-of select="$RP_Gender_m"/>                                   </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test="$Gender=&quot;unknown&quot; or ($Gender=&quot;female&quot; and $PublicationLanguage = &quot;fy&quot;)">                         <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                      <xsl:text> (f)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                      <xsl:value-of select="$RP_Gender_unknown"/>                                 </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test="$Gender=&quot;female&quot;">                            <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                      <xsl:text> (v)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                      <xsl:value-of select="$RP_Gender_v"/>                                   </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                 </xsl:choose>               </xsl:if>           </xsl:if>       </xsl:if>   </xsl:template> <xsl:template name="CompleteAddress">       <xsl:param name="isBold" select="0"/>       <xsl:param name="fontSize" select="&apos;normal&apos;"/>        <xsl:if test="0=1">         <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>Complete adress like &quot;Dasstraat 17, 6361 DV Nuth&quot;</xsl:text>            </fo:inline>            <fo:block/>     </xsl:if>       <xsl:if test="$fontSize = &apos;normal&apos;">          <xsl:if test="$isBold=0">               <xsl:for-each select="xal:Locality">                    <xsl:for-each select="xal:AddressLine">                     <xsl:variable name="value-of-template_190">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_190),'&#x200B;')">                               <fo:block font-family="Arial" font-size="9pt">                                  <xsl:copy-of select="$value-of-template_190"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:copy-of select="$value-of-template_190"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                       <fo:inline font-family="Arial" font-size="9pt">                         <xsl:text>, </xsl:text>                     </fo:inline>                    </xsl:for-each>                 <xsl:for-each select="xal:PostalCode">                      <xsl:variable name="value-of-template_191">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_191),'&#x200B;')">                               <fo:block font-family="Arial" font-size="9pt">                                  <xsl:copy-of select="$value-of-template_191"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:copy-of select="$value-of-template_191"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                       <xsl:if test=".!=&quot;&quot;">                         <fo:inline font-family="Arial" font-size="9pt">                             <xsl:text>&#160;</xsl:text>                         </fo:inline>                        </xsl:if>                   </xsl:for-each>                 <xsl:for-each select="xal:LocalityName">                        <xsl:variable name="value-of-template_192">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_192),'&#x200B;')">                               <fo:block font-family="Arial" font-size="9pt">                                  <xsl:copy-of select="$value-of-template_192"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:copy-of select="$value-of-template_192"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:for-each>             </xsl:for-each>         </xsl:if>           <xsl:if test="$isBold=1">               <xsl:for-each select="xal:Locality">                    <xsl:for-each select="xal:AddressLine">                     <xsl:variable name="value-of-template_193">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_193),'&#x200B;')">                               <fo:block font-family="Arial" font-size="9pt" font-weight="bold">                                   <xsl:copy-of select="$value-of-template_193"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:copy-of select="$value-of-template_193"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                       <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                          <xsl:text>, </xsl:text>                     </fo:inline>                    </xsl:for-each>                 <xsl:for-each select="xal:PostalCode">                      <xsl:variable name="value-of-template_194">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_194),'&#x200B;')">                               <fo:block font-family="Arial" font-size="9pt" font-weight="bold">                                   <xsl:copy-of select="$value-of-template_194"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:copy-of select="$value-of-template_194"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                       <xsl:if test=".!=&quot;&quot;">                         <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                              <xsl:text>&#160;</xsl:text>                         </fo:inline>                        </xsl:if>                   </xsl:for-each>                 <xsl:for-each select="xal:LocalityName">                        <xsl:variable name="value-of-template_195">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_195),'&#x200B;')">                               <fo:block font-family="Arial" font-size="9pt" font-weight="bold">                                   <xsl:copy-of select="$value-of-template_195"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:copy-of select="$value-of-template_195"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:for-each>             </xsl:for-each>         </xsl:if>       </xsl:if>       <xsl:if test="$fontSize = &apos;x-small&apos;">         <xsl:if test="$isBold=0">               <xsl:for-each select="xal:Locality">                    <xsl:for-each select="xal:AddressLine">                     <xsl:variable name="value-of-template_196">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_196),'&#x200B;')">                               <fo:block font-family="Arial" font-size="x-small">                                  <xsl:copy-of select="$value-of-template_196"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small">                                 <xsl:copy-of select="$value-of-template_196"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                       <fo:inline font-family="Arial" font-size="x-small">                         <xsl:text>, </xsl:text>                     </fo:inline>                    </xsl:for-each>                 <xsl:for-each select="xal:PostalCode">                      <xsl:variable name="value-of-template_197">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_197),'&#x200B;')">                               <fo:block font-family="Arial" font-size="x-small">                                  <xsl:copy-of select="$value-of-template_197"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small">                                 <xsl:copy-of select="$value-of-template_197"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                       <xsl:if test=".!=&quot;&quot;">                         <fo:inline font-family="Arial" font-size="x-small">                             <xsl:text>&#160;</xsl:text>                         </fo:inline>                        </xsl:if>                   </xsl:for-each>                 <xsl:for-each select="xal:LocalityName">                        <xsl:variable name="value-of-template_198">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_198),'&#x200B;')">                               <fo:block font-family="Arial" font-size="x-small">                                  <xsl:copy-of select="$value-of-template_198"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small">                                 <xsl:copy-of select="$value-of-template_198"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:for-each>             </xsl:for-each>         </xsl:if>           <xsl:if test="$isBold=1">               <xsl:for-each select="xal:Locality">                    <xsl:for-each select="xal:AddressLine">                     <xsl:variable name="value-of-template_199">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_199),'&#x200B;')">                               <fo:block font-family="Arial" font-size="x-small" font-weight="bold">                                   <xsl:copy-of select="$value-of-template_199"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                  <xsl:copy-of select="$value-of-template_199"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                       <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                          <xsl:text>, </xsl:text>                     </fo:inline>                    </xsl:for-each>                 <xsl:for-each select="xal:PostalCode">                      <xsl:variable name="value-of-template_200">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_200),'&#x200B;')">                               <fo:block font-family="Arial" font-size="x-small" font-weight="bold">                                   <xsl:copy-of select="$value-of-template_200"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                  <xsl:copy-of select="$value-of-template_200"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                       <xsl:if test=".!=&quot;&quot;">                         <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                              <xsl:text>&#160;</xsl:text>                         </fo:inline>                        </xsl:if>                   </xsl:for-each>                 <xsl:for-each select="xal:LocalityName">                        <xsl:variable name="value-of-template_201">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_201),'&#x200B;')">                               <fo:block font-family="Arial" font-size="x-small" font-weight="bold">                                   <xsl:copy-of select="$value-of-template_201"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                  <xsl:copy-of select="$value-of-template_201"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:for-each>             </xsl:for-each>         </xsl:if>       </xsl:if>   </xsl:template> <xsl:template name="NameBCEF">      <xsl:param name="isBold" select="0"/>       <xsl:param name="prefixToUppercase" select="0"/>        <xsl:if test="0=1">         <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>Displays the name &quot;van der Zaag, H.H.G. (Henk)&quot; (name components b+c+e+f).</xsl:text>           </fo:inline>            <fo:block/>     </xsl:if>       <xsl:call-template name="LastNameH1">           <xsl:with-param name="isBold" select="$isBold"/>            <xsl:with-param name="prefixToUppercase" select="$prefixToUppercase"/>      </xsl:call-template>        <fo:inline font-family="Arial" font-size="9pt">         <xsl:text>, </xsl:text>     </fo:inline>        <xsl:call-template name="FirstNameH1">          <xsl:with-param name="isBold" select="$isBold"/>        </xsl:call-template>    </xsl:template> <xsl:template name="Kieskring">     <xsl:if test="./eml:ElectionIdentifier/kr:ElectionSubcategory[text()=&quot;TK&quot; or text()=&quot;EK&quot; or text()=&quot;PS2&quot;]  or ../eml:ElectionIdentifier/kr:ElectionSubcategory[text()=&quot;TK&quot; or text()=&quot;EK&quot; or text()=&quot;PS2&quot;] or ../eml:Election/eml:ElectionIdentifier/kr:ElectionSubcategory[text()=&quot;TK&quot; or text()=&quot;EK&quot; or text()=&quot;PS2&quot;]">         <xsl:choose>                <xsl:when test="$lang=0">                   <fo:inline font-family="Arial" font-size="9pt">                     <xsl:text> in kieskring </xsl:text>                 </fo:inline>                </xsl:when>             <xsl:otherwise>                 <fo:inline font-family="Arial" font-size="9pt">                     <xsl:value-of select="$RP_Kieskring_inKieskring"/>                  </fo:inline>                </xsl:otherwise>            </xsl:choose>           <xsl:choose>                <xsl:when test="eml:ContestIdentifier/@Id != &quot;alle&quot;">                 <xsl:call-template name="ContestIdentifier">                        <xsl:with-param name="isBold" select="1"/>                  </xsl:call-template>                </xsl:when>             <xsl:otherwise>                 <xsl:for-each select="rg:RG210">                        <xsl:call-template name="ContestIdentifier">                            <xsl:with-param name="isBold" select="1"/>                      </xsl:call-template>                    </xsl:for-each>             </xsl:otherwise>            </xsl:choose>       </xsl:if>   </xsl:template> <xsl:template name="City">      <xsl:param name="isBold" select="0"/>       <xsl:param name="fontSize" select="&apos;normal&apos;"/>        <xsl:if test="0=1">         <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>City (without postal code) &quot;DV Nuth&quot;</xsl:text>         </fo:inline>            <fo:block/>     </xsl:if>       <xsl:if test="$fontSize = &apos;normal&apos;">          <xsl:if test="$isBold=0">               <xsl:for-each select="xal:Locality">                    <xsl:for-each select="xal:LocalityName">                        <xsl:variable name="value-of-template_202">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_202),'&#x200B;')">                               <fo:block font-family="Arial" font-size="9pt">                                  <xsl:copy-of select="$value-of-template_202"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:copy-of select="$value-of-template_202"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:for-each>             </xsl:for-each>         </xsl:if>           <xsl:if test="$isBold=1">               <xsl:for-each select="xal:Locality">                    <xsl:for-each select="xal:LocalityName">                        <xsl:variable name="value-of-template_203">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_203),'&#x200B;')">                               <fo:block font-family="Arial" font-size="9pt" font-weight="bold">                                   <xsl:copy-of select="$value-of-template_203"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:copy-of select="$value-of-template_203"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:for-each>             </xsl:for-each>         </xsl:if>       </xsl:if>       <xsl:if test="$fontSize = &apos;x-small&apos;">         <xsl:if test="$isBold=0">               <xsl:for-each select="xal:Locality">                    <xsl:for-each select="xal:LocalityName">                        <xsl:variable name="value-of-template_204">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_204),'&#x200B;')">                               <fo:block font-family="Arial" font-size="x-small">                                  <xsl:copy-of select="$value-of-template_204"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small">                                 <xsl:copy-of select="$value-of-template_204"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:for-each>             </xsl:for-each>         </xsl:if>           <xsl:if test="$isBold=1">               <xsl:for-each select="xal:Locality">                    <xsl:for-each select="xal:LocalityName">                        <xsl:variable name="value-of-template_205">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_205),'&#x200B;')">                               <fo:block font-family="Arial" font-size="x-small" font-weight="bold">                                   <xsl:copy-of select="$value-of-template_205"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                  <xsl:copy-of select="$value-of-template_205"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:for-each>             </xsl:for-each>         </xsl:if>       </xsl:if>   </xsl:template> <xsl:template name="FootnoteSign">      <xsl:for-each select="eml:ElectionIdentifier">          <xsl:for-each select="kr:ElectionSubcategory">              <xsl:if test=".=&quot;TK&quot; or .=&quot;EK&quot; or .=&quot;PS2&quot;">                   <fo:inline font-family="Arial" font-size="9pt">                     <xsl:text> *)</xsl:text>                    </fo:inline>                </xsl:if>           </xsl:for-each>     </xsl:for-each> </xsl:template> <xsl:template name="FootnoteKieskring">     <xsl:for-each select="eml:ElectionIdentifier">          <xsl:for-each select="kr:ElectionSubcategory">              <xsl:if test=".=&quot;TK&quot; or .=&quot;EK&quot; or .=&quot;PS2&quot;">                   <fo:block>                      <fo:leader leader-pattern="space"/>                 </fo:block>                 <fo:inline-container>                       <fo:block>                          <xsl:text>&#x200B;</xsl:text>                       </fo:block>                 </fo:inline-container>                  <fo:block font-family="Arial" font-size="9pt" margin-right="100% - 100%" margin="0pt">                      <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:text>Voetnoten:</xsl:text>                             </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:value-of select="$RP_FootnoteKieskring_voetnoten"/>                                </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </fo:block>                 <fo:table font-family="Arial" font-size="9pt" alignment-baseline="before-edge" width="90%" table-layout="fixed" border-spacing="0">                     <fo:table-column column-width="3%"/>                        <fo:table-column column-width="100%"/>                      <xsl:variable name="altova:CurrContextGrid_206" select="."/>                        <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">                          <xsl:variable name="altova:tablerows">                              <fo:table-row font-family="Arial" font-size="9pt">                                  <fo:table-cell font-family="Arial" font-size="9pt" padding="0" display-align="before">                                      <fo:block text-align="left">                                            <fo:inline font-family="Arial" font-size="9pt">                                             <xsl:text>*)</xsl:text>                                         </fo:inline>                                        </fo:block>                                 </fo:table-cell>                                    <fo:table-cell font-family="Arial" font-size="9pt" padding="0" display-align="before">                                      <fo:block text-align="left">                                            <xsl:choose>                                                <xsl:when test="$lang=0">                                                   <fo:inline font-family="Arial" font-size="9pt">                                                     <xsl:text>Alleen in te vullen, indien het een verkiezing betreft van de leden van de Tweede Kamer of van provinciale staten van een provincie die uit meer dan één kieskring bestaat. Achter “kieskring” het nummer van de kieskring en tussen haakjes de naam van de gemeente waar het hoofdstembureau is gevestigd vermelden.</xsl:text>                                                  </fo:inline>                                                </xsl:when>                                             <xsl:otherwise>                                                 <fo:inline font-family="Arial" font-size="9pt">                                                     <xsl:value-of select="$RP_FootnoteKieskring_alleenInTeVullen"/>                                                 </fo:inline>                                                </xsl:otherwise>                                            </xsl:choose>                                       </fo:block>                                 </fo:table-cell>                                </fo:table-row>                         </xsl:variable>                         <xsl:choose>                                <xsl:when test="string($altova:tablerows)">                                 <xsl:copy-of select="$altova:tablerows"/>                               </xsl:when>                             <xsl:otherwise>                                 <fo:table-row>                                      <fo:table-cell>                                         <fo:block/>                                     </fo:table-cell>                                    </fo:table-row>                             </xsl:otherwise>                            </xsl:choose>                       </fo:table-body>                    </fo:table>             </xsl:if>           </xsl:for-each>     </xsl:for-each> </xsl:template> <xsl:template name="Date">      <xsl:param name="isBold" select="0"/>       <xsl:param name="fontSize" select="&apos;normal&apos;"/>        <xsl:if test="$fontSize = &apos;normal&apos;">          <xsl:if test="$isBold=0">               <xsl:if test="substring(text(),9, 1) != &quot;0&quot;">                 <fo:inline font-family="Arial" font-size="9pt">                     <xsl:value-of select="substring(text(),9, 1)"/>                 </fo:inline>                </xsl:if>               <fo:inline font-family="Arial" font-size="9pt">                 <xsl:value-of select="substring(text(),10, 1)"/>                </fo:inline>                <fo:inline font-family="Arial" font-size="9pt">                 <xsl:text>&#160;</xsl:text>             </fo:inline>                <xsl:choose>                    <xsl:when test="substring(text(),6, 2) = &quot;01&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>januari</xsl:text>                                </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:value-of select="$RP_Date_januari"/>                               </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;02&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>februari</xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:value-of select="$RP_Date_februari"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;03&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>maart</xsl:text>                              </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:value-of select="$RP_Date_maart"/>                             </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;04&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>april</xsl:text>                              </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:value-of select="$RP_Date_april"/>                             </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;05&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>mei</xsl:text>                                </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:value-of select="$RP_Date_mei"/>                               </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;06&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>juni</xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:value-of select="$RP_Date_juni"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;07&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>juli</xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:value-of select="$RP_Date_juli"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;08&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>augustus</xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:value-of select="$RP_Date_augustus"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;09&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>september</xsl:text>                              </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:value-of select="$RP_Date_september"/>                             </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;10&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>oktober</xsl:text>                                </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:value-of select="$RP_Date_oktober"/>                               </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;11&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>november</xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:value-of select="$RP_Date_november"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2)  = &quot;12&quot;">                      <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>december</xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:value-of select="$RP_Date_december"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>             </xsl:choose>               <fo:inline font-family="Arial" font-size="9pt">                 <xsl:text>&#160;</xsl:text>             </fo:inline>                <fo:inline font-family="Arial" font-size="9pt">                 <xsl:value-of select="substring(text(),1, 4)"/>             </fo:inline>            </xsl:if>           <xsl:if test="$isBold=1">               <xsl:if test="substring(text(),9, 1) != &quot;0&quot;">                 <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                      <xsl:value-of select="substring(text(),9, 1)"/>                 </fo:inline>                </xsl:if>               <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                  <xsl:value-of select="substring(text(),10, 1)"/>                </fo:inline>                <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                  <xsl:text>&#160;</xsl:text>             </fo:inline>                <xsl:choose>                    <xsl:when test="substring(text(),6, 2) = &quot;01&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:text>januari</xsl:text>                                </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:value-of select="$RP_Date_januari"/>                               </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;02&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:text>februari</xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:value-of select="$RP_Date_februari"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;03&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:text>maart</xsl:text>                              </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:value-of select="$RP_Date_maart"/>                             </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;04&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:text>april</xsl:text>                              </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:value-of select="$RP_Date_april"/>                             </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;05&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:text>mei</xsl:text>                                </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:value-of select="$RP_Date_mei"/>                               </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;06&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:text>juni</xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:value-of select="$RP_Date_juni"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;07&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:text>juli</xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:value-of select="$RP_Date_juli"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;08&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:text>augustus</xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:value-of select="$RP_Date_augustus"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;09&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:text>september</xsl:text>                              </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:value-of select="$RP_Date_september"/>                             </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;10&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:text>oktober</xsl:text>                                </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:value-of select="$RP_Date_oktober"/>                               </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;11&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:text>november</xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:value-of select="$RP_Date_november"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2)  = &quot;12&quot;">                      <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:text>december</xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:value-of select="$RP_Date_december"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>             </xsl:choose>               <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                  <xsl:text>&#160;</xsl:text>             </fo:inline>                <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                  <xsl:value-of select="substring(text(),1, 4)"/>             </fo:inline>            </xsl:if>       </xsl:if>       <xsl:if test="$fontSize = &apos;x-small&apos;">         <xsl:if test="$isBold=0">               <xsl:if test="substring(text(),9, 1) != &quot;0&quot;">                 <fo:inline font-family="Arial" font-size="x-small">                     <xsl:value-of select="substring(text(),9, 1)"/>                 </fo:inline>                </xsl:if>               <fo:inline font-family="Arial" font-size="x-small">                 <xsl:value-of select="substring(text(),10, 1)"/>                </fo:inline>                <fo:inline font-family="Arial" font-size="x-small">                 <xsl:text>&#160;</xsl:text>             </fo:inline>                <xsl:choose>                    <xsl:when test="substring(text(),6, 2) = &quot;01&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="x-small">                                 <xsl:text>januari</xsl:text>                                </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small">                                 <xsl:value-of select="$RP_Date_januari"/>                               </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;02&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="x-small">                                 <xsl:text>februari</xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small">                                 <xsl:value-of select="$RP_Date_februari"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;03&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="x-small">                                 <xsl:text>maart</xsl:text>                              </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small">                                 <xsl:value-of select="$RP_Date_maart"/>                             </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;04&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="x-small">                                 <xsl:text>april</xsl:text>                              </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small">                                 <xsl:value-of select="$RP_Date_april"/>                             </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;05&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="x-small">                                 <xsl:text>mei</xsl:text>                                </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small">                                 <xsl:value-of select="$RP_Date_mei"/>                               </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;06&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="x-small">                                 <xsl:text>juni</xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small">                                 <xsl:value-of select="$RP_Date_juni"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;07&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="x-small">                                 <xsl:text>juli</xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small">                                 <xsl:value-of select="$RP_Date_juli"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;08&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="x-small">                                 <xsl:text>augustus</xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small">                                 <xsl:value-of select="$RP_Date_augustus"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;09&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="x-small">                                 <xsl:text>september</xsl:text>                              </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small">                                 <xsl:value-of select="$RP_Date_september"/>                             </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;10&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="x-small">                                 <xsl:text>oktober</xsl:text>                                </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small">                                 <xsl:value-of select="$RP_Date_oktober"/>                               </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;11&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="x-small">                                 <xsl:text>november</xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small">                                 <xsl:value-of select="$RP_Date_november"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2)  = &quot;12&quot;">                      <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="x-small">                                 <xsl:text>december</xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small">                                 <xsl:value-of select="$RP_Date_december"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>             </xsl:choose>               <fo:inline font-family="Arial" font-size="x-small">                 <xsl:text>&#160;</xsl:text>             </fo:inline>                <fo:inline font-family="Arial" font-size="x-small">                 <xsl:value-of select="substring(text(),1, 4)"/>             </fo:inline>            </xsl:if>           <xsl:if test="$isBold=1">               <xsl:if test="substring(text(),9, 1) != &quot;0&quot;">                 <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                      <xsl:value-of select="substring(text(),9, 1)"/>                 </fo:inline>                </xsl:if>               <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                  <xsl:value-of select="substring(text(),10, 1)"/>                </fo:inline>                <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                  <xsl:text>&#160;</xsl:text>             </fo:inline>                <xsl:choose>                    <xsl:when test="substring(text(),6, 2) = &quot;01&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                  <xsl:text>januari</xsl:text>                                </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                  <xsl:value-of select="$RP_Date_januari"/>                               </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;02&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                  <xsl:text>februari</xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                  <xsl:value-of select="$RP_Date_februari"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;03&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                  <xsl:text>maart</xsl:text>                              </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                  <xsl:value-of select="$RP_Date_maart"/>                             </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;04&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                  <xsl:text>april</xsl:text>                              </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                  <xsl:value-of select="$RP_Date_april"/>                             </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;05&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                  <xsl:text>mei</xsl:text>                                </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                  <xsl:value-of select="$RP_Date_mei"/>                               </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;06&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                  <xsl:text>juni</xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                  <xsl:value-of select="$RP_Date_juni"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;07&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                  <xsl:text>juli</xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                  <xsl:value-of select="$RP_Date_juli"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;08&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                  <xsl:text>augustus</xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                  <xsl:value-of select="$RP_Date_augustus"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;09&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                  <xsl:text>september</xsl:text>                              </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                  <xsl:value-of select="$RP_Date_september"/>                             </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;10&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                  <xsl:text>oktober</xsl:text>                                </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                  <xsl:value-of select="$RP_Date_oktober"/>                               </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2) = &quot;11&quot;">                       <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                  <xsl:text>november</xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                  <xsl:value-of select="$RP_Date_november"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test="substring(text(),6, 2)  = &quot;12&quot;">                      <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                  <xsl:text>december</xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                  <xsl:value-of select="$RP_Date_december"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>             </xsl:choose>               <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                  <xsl:text>&#160;</xsl:text>             </fo:inline>                <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                  <xsl:value-of select="substring(text(),1, 4)"/>             </fo:inline>            </xsl:if>       </xsl:if>   </xsl:template> <xsl:template name="DateOfBirth">       <xsl:param name="isBold" select="0"/>       <xsl:param name="fontSize" select="&apos;normal&apos;"/>        <xsl:choose>            <xsl:when test="eml:DateOfBirth">               <xsl:for-each select="eml:DateOfBirth">                 <xsl:call-template name="Date">                     <xsl:with-param name="isBold" select="$isBold"/>                        <xsl:with-param name="fontSize" select="$fontSize"/>                    </xsl:call-template>                </xsl:for-each>         </xsl:when>         <xsl:otherwise>             <xsl:if test="$fontSize = &apos;normal&apos;">                  <xsl:if test="$isBold=0">                       <xsl:for-each select="kr:DateOfBirthAnnex">                         <fo:inline font-family="Arial" font-size="9pt">                             <xsl:text>XX </xsl:text>                            </fo:inline>                            <xsl:choose>                                <xsl:when test="substring(text(),4, 2) = &quot;01&quot;">                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>januari</xsl:text>                                    </fo:inline>                                </xsl:when>                             <xsl:when test="substring(text(),4, 2) = &quot;02&quot;">                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>februari</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:when test="substring(text(),4, 2) = &quot;03&quot;">                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>maart</xsl:text>                                  </fo:inline>                                </xsl:when>                             <xsl:when test="substring(text(),4, 2) = &quot;04&quot;">                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>april</xsl:text>                                  </fo:inline>                                </xsl:when>                             <xsl:when test="substring(text(),4, 2) = &quot;05&quot;">                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>mei</xsl:text>                                    </fo:inline>                                </xsl:when>                             <xsl:when test="substring(text(),4, 2) = &quot;06&quot;">                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>juni</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:when test="substring(text(),4, 2) = &quot;07&quot;">                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>juli</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:when test="substring(text(),4, 2) = &quot;08&quot;">                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>augustus</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:when test="substring(text(),4, 2) = &quot;09&quot;">                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>september</xsl:text>                                  </fo:inline>                                </xsl:when>                             <xsl:when test="substring(text(),4, 2) = &quot;10&quot;">                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>oktober</xsl:text>                                    </fo:inline>                                </xsl:when>                             <xsl:when test="substring(text(),4, 2) = &quot;11&quot;">                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>november</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:when test="substring(text(),4, 2)  = &quot;12&quot;">                                  <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>december</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:when test="substring(text(),4, 2)  = &quot;XX&quot;">                                  <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>XXX</xsl:text>                                    </fo:inline>                                </xsl:when>                         </xsl:choose>                           <fo:inline font-family="Arial" font-size="9pt">                             <xsl:text>&#160;</xsl:text>                         </fo:inline>                            <fo:inline font-family="Arial" font-size="9pt">                             <xsl:value-of select="substring(text(),7, 4)"/>                         </fo:inline>                        </xsl:for-each>                 </xsl:if>               </xsl:if>               <xsl:if test="$isBold = 1">                 <xsl:for-each select="kr:DateOfBirthAnnex">                     <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                          <xsl:text>XX </xsl:text>                        </fo:inline>                        <xsl:choose>                            <xsl:when test="substring(text(),4, 2) = &quot;01&quot;">                               <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:text>januari</xsl:text>                                </fo:inline>                            </xsl:when>                         <xsl:when test="substring(text(),4, 2) = &quot;02&quot;">                               <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:text>februari</xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:when test="substring(text(),4, 2) = &quot;03&quot;">                               <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:text>maart</xsl:text>                              </fo:inline>                            </xsl:when>                         <xsl:when test="substring(text(),4, 2) = &quot;04&quot;">                               <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:text>april</xsl:text>                              </fo:inline>                            </xsl:when>                         <xsl:when test="substring(text(),4, 2) = &quot;05&quot;">                               <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:text>mei</xsl:text>                                </fo:inline>                            </xsl:when>                         <xsl:when test="substring(text(),4, 2) = &quot;06&quot;">                               <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:text>juni</xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:when test="substring(text(),4, 2) = &quot;07&quot;">                               <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:text>juli</xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:when test="substring(text(),4, 2) = &quot;08&quot;">                               <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:text>augustus</xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:when test="substring(text(),4, 2) = &quot;09&quot;">                               <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:text>september</xsl:text>                              </fo:inline>                            </xsl:when>                         <xsl:when test="substring(text(),4, 2) = &quot;10&quot;">                               <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:text>oktober</xsl:text>                                </fo:inline>                            </xsl:when>                         <xsl:when test="substring(text(),4, 2) = &quot;11&quot;">                               <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:text>november</xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:when test="substring(text(),4, 2)  = &quot;12&quot;">                              <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:text>december</xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:when test="substring(text(),4, 2)  = &quot;XX&quot;">                              <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:text>XXX</xsl:text>                                </fo:inline>                            </xsl:when>                     </xsl:choose>                       <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                          <xsl:text>&#160;</xsl:text>                     </fo:inline>                        <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                          <xsl:value-of select="substring(text(),7, 4)"/>                     </fo:inline>                    </xsl:for-each>             </xsl:if>           </xsl:otherwise>        </xsl:choose>   </xsl:template> <xsl:template name="GenerateDate">      <fo:inline font-family="Arial" font-size="8pt">         <xsl:value-of select="$generateDate"/>      </fo:inline>    </xsl:template> <xsl:template name="HashCode">      <fo:inline font-family="Arial" font-size="8pt">         <xsl:value-of select="$hashCode"/>      </fo:inline>    </xsl:template> <xsl:template name="FooterWithoutHashcode">     <xsl:choose>            <xsl:when test="$lang=0">               <fo:inline font-family="Arial" font-size="9pt">                 <xsl:text>Datum: </xsl:text>                </fo:inline>            </xsl:when>         <xsl:otherwise>             <fo:inline font-family="Arial" font-size="9pt">                 <xsl:value-of select="$RP_FooterWithoutHashcode_datum"/>                </fo:inline>            </xsl:otherwise>        </xsl:choose>       <xsl:call-template name="GenerateDate"/>        <xsl:if test="$isDraft=&quot;true&quot;">           <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>&#160;&#160;&#160;&#160; -&#160;&#160;&#160;&#160; </xsl:text>            </fo:inline>            <xsl:choose>                <xsl:when test="$lang=0">                   <fo:inline font-family="Arial" font-size="9pt">                     <xsl:text>(Concept) </xsl:text>                 </fo:inline>                </xsl:when>             <xsl:otherwise>                 <fo:inline font-family="Arial" font-size="9pt">                     <xsl:value-of select="$RP_FooterWithoutHashcode_concept"/>                  </fo:inline>                </xsl:otherwise>            </xsl:choose>       </xsl:if>   </xsl:template> <xsl:template name="Checkbox">      <xsl:choose>            <xsl:when test="text()=&quot;true&quot;">               <xsl:choose>                    <xsl:when test="$lang=0">                       <fo:inline font-family="Arial" font-size="9pt">                         <xsl:text>■</xsl:text>                      </fo:inline>                    </xsl:when>                 <xsl:otherwise>                     <fo:inline font-family="Arial" font-size="9pt">                         <xsl:value-of select="$RP_Checkbox_iconChecked"/>                       </fo:inline>                    </xsl:otherwise>                </xsl:choose>               <fo:inline font-family="Arial" font-size="9pt">                 <xsl:text>  </xsl:text>             </fo:inline>            </xsl:when>         <xsl:otherwise>             <xsl:choose>                    <xsl:when test="$lang=0">                       <fo:inline font-family="Arial" font-size="9pt">                         <xsl:text>□</xsl:text>                      </fo:inline>                    </xsl:when>                 <xsl:otherwise>                     <fo:inline font-family="Arial" font-size="9pt">                         <xsl:value-of select="$RP_Checkbox_iconUnchecked"/>                     </fo:inline>                    </xsl:otherwise>                </xsl:choose>               <fo:inline font-family="Arial" font-size="9pt">                 <xsl:text>  </xsl:text>             </fo:inline>            </xsl:otherwise>        </xsl:choose>   </xsl:template> <xsl:template name="FooterWithHashcode">        <xsl:choose>            <xsl:when test="$isDraft=&quot;true&quot;">             <xsl:choose>                    <xsl:when test="$lang=0">                       <fo:inline font-family="Arial" font-size="9pt">                         <xsl:text>Datum: </xsl:text>                        </fo:inline>                    </xsl:when>                 <xsl:otherwise>                     <fo:inline font-family="Arial" font-size="9pt">                         <xsl:value-of select="$RP_FooterWithoutHashcode_datum"/>                        </fo:inline>                    </xsl:otherwise>                </xsl:choose>               <xsl:call-template name="GenerateDate"/>                <fo:inline font-family="Arial" font-size="9pt">                 <xsl:text>&#160;&#160;&#160;&#160; -&#160;&#160;&#160;&#160; </xsl:text>                </fo:inline>                <xsl:choose>                    <xsl:when test="$lang=0">                       <fo:inline font-family="Arial" font-size="9pt">                         <xsl:text>(Concept) </xsl:text>                     </fo:inline>                    </xsl:when>                 <xsl:otherwise>                     <fo:inline font-family="Arial" font-size="9pt">                         <xsl:value-of select="$RP_FooterWithoutHashcode_concept"/>                      </fo:inline>                    </xsl:otherwise>                </xsl:choose>           </xsl:when>         <xsl:otherwise>             <xsl:choose>                    <xsl:when test="$lang=0">                       <fo:inline font-family="Arial" font-size="8pt">                         <xsl:text>Datum: </xsl:text>                        </fo:inline>                    </xsl:when>                 <xsl:otherwise>                     <fo:inline font-family="Arial" font-size="8pt">                         <xsl:value-of select="$RP_FooterWithoutHashcode_datum"/>                        </fo:inline>                    </xsl:otherwise>                </xsl:choose>               <xsl:call-template name="GenerateDate"/>                <fo:inline font-family="Arial" font-size="9pt">                 <xsl:text>&#160;&#160;&#160;&#160; -&#160;&#160;&#160;&#160; </xsl:text>                </fo:inline>                <xsl:choose>                    <xsl:when test="$lang=0">                       <fo:inline font-family="Arial" font-size="8pt">                         <xsl:text>SHA-256-Hashcode: </xsl:text>                     </fo:inline>                    </xsl:when>                 <xsl:otherwise>                     <fo:inline font-family="Arial" font-size="8pt">                         <xsl:value-of select="$RP_FooterWithHashcode_hashcode"/>                        </fo:inline>                    </xsl:otherwise>                </xsl:choose>               <fo:block/>             <xsl:call-template name="HashCode"/>            </xsl:otherwise>        </xsl:choose>   </xsl:template> <xsl:template name="ElectionNameP2">        <xsl:if test="0=1">         <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>Election name without date</xsl:text>         </fo:inline>            <fo:block/>     </xsl:if>       <xsl:choose>            <xsl:when test="$lang=0">               <fo:inline font-family="Arial" font-size="9pt">                 <xsl:text>verkiezing van de leden van </xsl:text>               </fo:inline>            </xsl:when>         <xsl:otherwise>             <fo:inline font-family="Arial" font-size="9pt">                 <xsl:value-of select="$RP_ElectionNameP2_verkiezingLeden"/>             </fo:inline>            </xsl:otherwise>        </xsl:choose>       <xsl:call-template name="ElectionNameSimple">           <xsl:with-param name="isBold" select="1"/>      </xsl:call-template>        <xsl:call-template name="ElectionDomain">           <xsl:with-param name="isBold" select="1"/>      </xsl:call-template>    </xsl:template> <xsl:template name="PostalCode">        <xsl:param name="isBold" select="0"/>       <xsl:if test="0=1">         <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>Postal code and city like &quot;6361 DV&quot;</xsl:text>          </fo:inline>            <fo:block/>     </xsl:if>       <xsl:if test="$isBold=0">           <xsl:for-each select="xal:Locality">                <xsl:for-each select="xal:PostalCode">                  <xsl:for-each select="xal:PostalCodeNumber">                        <xsl:variable name="value-of-template_207">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_207),'&#x200B;')">                               <fo:block font-family="Arial" font-size="9pt">                                  <xsl:copy-of select="$value-of-template_207"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:copy-of select="$value-of-template_207"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:for-each>             </xsl:for-each>         </xsl:for-each>     </xsl:if>       <xsl:if test="$isBold=1">           <xsl:for-each select="xal:Locality">                <xsl:for-each select="xal:PostalCode">                  <xsl:for-each select="xal:PostalCodeNumber">                        <xsl:variable name="value-of-template_208">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_208),'&#x200B;')">                               <fo:block font-family="Arial" font-size="9pt" font-weight="bold">                                   <xsl:copy-of select="$value-of-template_208"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:copy-of select="$value-of-template_208"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:for-each>             </xsl:for-each>         </xsl:for-each>     </xsl:if>   </xsl:template> <xsl:template name="ElectionFraction">      <xsl:param name="smaller" select="0"/>      <xsl:for-each select="rg:Fraction">         <fo:inline font-family="Arial" font-size="9pt">             <xsl:value-of select="floor( @numerator  div  @denominator )"/>         </fo:inline>            <xsl:if test="@numerator - ( floor(@numerator div  @denominator ) * @denominator) != 0">                <fo:inline font-family="Arial" font-size="9pt">                 <xsl:text>&#160;</xsl:text>             </fo:inline>                <fo:inline font-family="Arial" font-size="9pt">                 <xsl:value-of select="@numerator - ( floor(@numerator div  @denominator ) * @denominator)"/>                </fo:inline>                <fo:inline font-family="Arial" font-size="9pt">                 <xsl:text>/</xsl:text>              </fo:inline>                <xsl:for-each select="@denominator">                    <fo:inline font-family="Arial" font-size="9pt">                     <xsl:value-of select="string(.)"/>                  </fo:inline>                </xsl:for-each>         </xsl:if>       </xsl:for-each> </xsl:template> <xsl:template name="Gender2">       <xsl:param name="isBold" select="0"/>       <xsl:param name="isSmaller" select="0"/>        <xsl:if test="0=1">         <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>Displays the gender as &quot; (m)&quot; or &quot; (v)&quot; with preceding blank (name component g).</xsl:text>           </fo:inline>            <fo:block/>     </xsl:if>       <xsl:if test="$isSmaller=0">            <xsl:if test="$isBold=0">               <xsl:for-each select="eml:Gender">                  <xsl:choose>                        <xsl:when test=".=&quot;male&quot;">                            <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text> (m)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:value-of select="$RP_Gender2_m"/>                                  </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test=".=&quot;female&quot;">                          <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text> (v)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:value-of select="$RP_Gender2_v"/>                                  </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test=".=&quot;unknown&quot;">                         <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text> (f)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:value-of select="$RP_Gender2_unknown"/>                                    </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                 </xsl:choose>               </xsl:for-each>         </xsl:if>           <xsl:if test="$isBold=1">               <xsl:for-each select="eml:Gender">                  <xsl:choose>                        <xsl:when test=".=&quot;male&quot;">                            <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:text> (m)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:value-of select="$RP_Gender2_m"/>                                  </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test=".=&quot;female&quot;">                          <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:text> (v)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:value-of select="$RP_Gender2_v"/>                                  </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test=".=&quot;unknown&quot;">                         <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:text> (f)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:value-of select="$RP_Gender2_unknown"/>                                    </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                 </xsl:choose>               </xsl:for-each>         </xsl:if>       </xsl:if>       <xsl:if test="$isSmaller=1">            <xsl:if test="$isBold=0">               <xsl:for-each select="eml:Gender">                  <xsl:choose>                        <xsl:when test=".=&quot;male&quot;">                            <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="smaller">                                     <xsl:text> (m)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="smaller">                                     <xsl:value-of select="$RP_Gender2_m"/>                                  </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test=".=&quot;female&quot;">                          <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="smaller">                                     <xsl:text> (v)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="smaller">                                     <xsl:value-of select="$RP_Gender2_v"/>                                  </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test=".=&quot;unknown&quot;">                         <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="smaller">                                     <xsl:text> (f)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="smaller">                                     <xsl:value-of select="$RP_Gender2_unknown"/>                                    </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                 </xsl:choose>               </xsl:for-each>         </xsl:if>           <xsl:if test="$isBold=1">               <xsl:for-each select="eml:Gender">                  <xsl:choose>                        <xsl:when test=".=&quot;male&quot;">                            <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                                      <xsl:text> (m)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                                      <xsl:value-of select="$RP_Gender2_m"/>                                  </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test=".=&quot;female&quot;">                          <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                                      <xsl:text> (v)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                                      <xsl:value-of select="$RP_Gender2_v"/>                                  </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test=".=&quot;unknown&quot;">                         <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                                      <xsl:text> (f)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                                      <xsl:value-of select="$RP_Gender2_unknown"/>                                    </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                 </xsl:choose>               </xsl:for-each>         </xsl:if>       </xsl:if>   </xsl:template> <xsl:template name="GenderInAffiliationVotes">      <xsl:param name="isBold" select="0"/>       <xsl:param name="isSmaller" select="0"/>        <xsl:if test="0=1">         <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>Displays the gender as &quot; (m)&quot; or &quot; (v)&quot; with preceding blank (name component g).</xsl:text>           </fo:inline>            <fo:block/>     </xsl:if>       <xsl:if test="$isSmaller=0">            <xsl:if test="$isBold=0">               <xsl:for-each select="eml:Gender">                  <xsl:choose>                        <xsl:when test=".=&quot;male&quot;">                            <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text> (m)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:value-of select="$RP_Gender2_m"/>                                  </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test=".=&quot;unknown&quot; or (.=&quot;female&quot; and ../../../@PublicationLanguage = &quot;fy&quot;)">                            <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text> (f)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:value-of select="$RP_Gender2_unknown"/>                                    </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test=".=&quot;female&quot;">                          <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text> (v)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:value-of select="$RP_Gender2_v"/>                                  </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                 </xsl:choose>               </xsl:for-each>         </xsl:if>           <xsl:if test="$isBold=1">               <xsl:for-each select="eml:Gender">                  <xsl:choose>                        <xsl:when test=".=&quot;male&quot;">                            <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:text> (m)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:value-of select="$RP_Gender2_m"/>                                  </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test=".=&quot;unknown&quot; or (.=&quot;female&quot; and ../../../@PublicationLanguage = &quot;fy&quot;)">                            <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:text> (f)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:value-of select="$RP_Gender2_unknown"/>                                    </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test=".=&quot;female&quot;">                          <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:text> (v)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:value-of select="$RP_Gender2_v"/>                                  </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                 </xsl:choose>               </xsl:for-each>         </xsl:if>       </xsl:if>       <xsl:if test="$isSmaller=1">            <xsl:if test="$isBold=0">               <xsl:for-each select="eml:Gender">                  <xsl:choose>                        <xsl:when test=".=&quot;male&quot;">                            <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="smaller">                                     <xsl:text> (m)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="smaller">                                     <xsl:value-of select="$RP_Gender2_m"/>                                  </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test=".=&quot;unknown&quot; or (.=&quot;female&quot; and ../../../@PublicationLanguage = &quot;fy&quot;)">                            <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="smaller">                                     <xsl:text> (f)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="smaller">                                     <xsl:value-of select="$RP_Gender2_unknown"/>                                    </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test=".=&quot;female&quot;">                          <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="smaller">                                     <xsl:text> (v)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="smaller">                                     <xsl:value-of select="$RP_Gender2_v"/>                                  </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                 </xsl:choose>               </xsl:for-each>         </xsl:if>           <xsl:if test="$isBold=1">               <xsl:for-each select="eml:Gender">                  <xsl:choose>                        <xsl:when test=".=&quot;male&quot;">                            <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                                      <xsl:text> (m)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                                      <xsl:value-of select="$RP_Gender2_m"/>                                  </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test=".=&quot;unknown&quot; or (.=&quot;female&quot; and ../../../@PublicationLanguage = &quot;fy&quot;)">                            <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                                      <xsl:text> (f)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                                      <xsl:value-of select="$RP_Gender2_unknown"/>                                    </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test=".=&quot;female&quot;">                          <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                                      <xsl:text> (v)</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                                      <xsl:value-of select="$RP_Gender2_v"/>                                  </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                 </xsl:choose>               </xsl:for-each>         </xsl:if>       </xsl:if>   </xsl:template> <xsl:template name="SignatureBlock">        <xsl:param name="distance" select="1"/>     <fo:table font-family="Arial" font-size="9pt" table-layout="fixed" width="100%" border-spacing="0">         <fo:table-column column-width="140pt"/>         <fo:table-column column-width="proportional-column-width(1)"/>          <xsl:variable name="altova:CurrContextGrid_210" select="."/>            <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">              <xsl:variable name="altova:tablerows">                  <fo:table-row font-family="Arial" font-size="9pt">                      <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                          <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                          <fo:block text-align="left">                                <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>Plaats: ........................................................</xsl:text>                                       </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:value-of select="$RP_SignatureBlock_plaats"/>                                      </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                               <fo:block/>                             <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>Datum: .......................................................</xsl:text>                                     </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:value-of select="$RP_SignatureBlock_datum"/>                                       </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                               <fo:block/>                             <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <xsl:if test="$distance &gt;= 1">                                   <fo:block>                                      <fo:leader leader-pattern="space"/>                                 </fo:block>                             </xsl:if>                               <xsl:if test="$distance &gt;= 2">                                   <fo:block>                                      <fo:leader leader-pattern="space"/>                                 </fo:block>                             </xsl:if>                               <fo:block/>                             <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>......................................................................, Voorzitter</xsl:text>                                     </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:value-of select="$RP_SignatureBlock_voorzitter"/>                                      </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                               <fo:block/>                             <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <xsl:if test="$distance &gt;= 1">                                   <fo:block>                                      <fo:leader leader-pattern="space"/>                                 </fo:block>                             </xsl:if>                               <xsl:if test="$distance &gt;= 2">                                   <fo:block>                                      <fo:leader leader-pattern="space"/>                                 </fo:block>                             </xsl:if>                               <fo:block/>                             <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>......................................................................</xsl:text>                                     </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:value-of select="$RP_SignatureBlock_emptyLine"/>                                       </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                               <fo:block/>                             <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <xsl:if test="$distance &gt;= 1">                                   <fo:block>                                      <fo:leader leader-pattern="space"/>                                 </fo:block>                             </xsl:if>                               <xsl:if test="$distance &gt;= 2">                                   <fo:block>                                      <fo:leader leader-pattern="space"/>                                 </fo:block>                             </xsl:if>                               <fo:block/>                             <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>......................................................................</xsl:text>                                     </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:value-of select="$RP_SignatureBlock_emptyLine"/>                                       </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                               <fo:block/>                             <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <xsl:if test="$distance &gt;= 1">                                   <fo:block>                                      <fo:leader leader-pattern="space"/>                                 </fo:block>                             </xsl:if>                               <xsl:if test="$distance &gt;= 2">                                   <fo:block>                                      <fo:leader leader-pattern="space"/>                                 </fo:block>                             </xsl:if>                               <fo:block/>                             <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>...................................................................... Leden</xsl:text>                                       </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:value-of select="$RP_SignatureBlock_leden"/>                                       </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                               <fo:block/>                             <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <xsl:if test="$distance &gt;= 1">                                   <fo:block>                                      <fo:leader leader-pattern="space"/>                                 </fo:block>                             </xsl:if>                               <xsl:if test="$distance &gt;= 2">                                   <fo:block>                                      <fo:leader leader-pattern="space"/>                                 </fo:block>                             </xsl:if>                               <fo:block/>                             <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>......................................................................</xsl:text>                                     </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:value-of select="$RP_SignatureBlock_emptyLine"/>                                       </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                               <fo:block/>                             <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <xsl:if test="$distance &gt;= 1">                                   <fo:block>                                      <fo:leader leader-pattern="space"/>                                 </fo:block>                             </xsl:if>                               <xsl:if test="$distance &gt;= 2">                                   <fo:block>                                      <fo:leader leader-pattern="space"/>                                 </fo:block>                             </xsl:if>                               <fo:block/>                             <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>......................................................................</xsl:text>                                     </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:value-of select="$RP_SignatureBlock_emptyLine"/>                                       </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                               <fo:block/>                             <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <xsl:if test="$distance &gt;= 1">                                   <fo:block>                                      <fo:leader leader-pattern="space"/>                                 </fo:block>                             </xsl:if>                               <xsl:if test="$distance &gt;= 2">                                   <fo:block>                                      <fo:leader leader-pattern="space"/>                                 </fo:block>                             </xsl:if>                               <fo:block/>                             <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>......................................................................</xsl:text>                                     </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:value-of select="$RP_SignatureBlock_emptyLine"/>                                       </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </fo:block>                     </fo:table-cell>                    </fo:table-row>             </xsl:variable>             <xsl:choose>                    <xsl:when test="string($altova:tablerows)">                     <xsl:copy-of select="$altova:tablerows"/>                   </xsl:when>                 <xsl:otherwise>                     <fo:table-row>                          <fo:table-cell>                             <fo:block/>                         </fo:table-cell>                        </fo:table-row>                 </xsl:otherwise>                </xsl:choose>           </fo:table-body>        </fo:table> </xsl:template> <xsl:template name="SignatureBlock-3">      <fo:table font-family="Arial" font-size="9pt" table-layout="fixed" width="100%" border-spacing="0">         <fo:table-column column-width="140pt"/>         <fo:table-column column-width="proportional-column-width(1)"/>          <xsl:variable name="altova:CurrContextGrid_211" select="."/>            <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">              <xsl:variable name="altova:tablerows">                  <fo:table-row font-family="Arial" font-size="9pt">                      <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                          <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                          <fo:block text-align="left">                                <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>Plaats: ........................................................</xsl:text>                                       </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:value-of select="$RP_SignatureBlock-3_plaats"/>                                        </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                               <fo:block/>                             <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>Datum: .......................................................</xsl:text>                                     </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:value-of select="$RP_SignatureBlock-3_datum"/>                                     </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                               <fo:block/>                             <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>............................................., Voorzitter</xsl:text>                                      </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:value-of select="$RP_SignatureBlock-3_voorzitter"/>                                        </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                               <fo:block/>                             <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>.............................................</xsl:text>                                      </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:value-of select="$RP_SignatureBlock-3_emptyLine"/>                                     </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                               <fo:block/>                             <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>............................................. Leden</xsl:text>                                        </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:value-of select="$RP_SignatureBlock-3_leden"/>                                     </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                               <fo:block/>                             <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>.............................................</xsl:text>                                      </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:value-of select="$RP_SignatureBlock-3_emptyLine"/>                                     </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </fo:block>                     </fo:table-cell>                    </fo:table-row>             </xsl:variable>             <xsl:choose>                    <xsl:when test="string($altova:tablerows)">                     <xsl:copy-of select="$altova:tablerows"/>                   </xsl:when>                 <xsl:otherwise>                     <fo:table-row>                          <fo:table-cell>                             <fo:block/>                         </fo:table-cell>                        </fo:table-row>                 </xsl:otherwise>                </xsl:choose>           </fo:table-body>        </fo:table> </xsl:template> <xsl:template name="ElectionNameSimple">        <xsl:param name="isBold" select="0"/>       <xsl:if test="0=1">         <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>Just election name</xsl:text>         </fo:inline>            <fo:block/>     </xsl:if>       <xsl:for-each select="eml:ElectionIdentifier">          <xsl:for-each select="eml:ElectionCategory">                <xsl:choose>                    <xsl:when test=".=&quot;EP&quot; or .=&quot;BC&quot; or .=&quot;AB&quot;">                      <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>het </xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:value-of select="$RP_ElectionNameSimple_het"/>                             </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:otherwise>                     <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>de </xsl:text>                                </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:value-of select="$RP_ElectionNameSimple_de"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:otherwise>                </xsl:choose>               <xsl:if test="$isBold=0">                   <xsl:choose>                        <xsl:when test=".= &quot;TK&quot;">                         <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>Tweede Kamer der Staten-Generaal</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:value-of select="$RP_ElectionNameSimple_tweedeKamer"/>                                 </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test=".=&quot;EK&quot;">                          <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>Eerste Kamer der Staten-Generaal</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:value-of select="$RP_ElectionNameSimple_eersteKamer"/>                                 </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test=".=&quot;PS&quot;">                          <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>provinciale staten van</xsl:text>                                 </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:value-of select="$RP_ElectionNameSimple_provincialeStaten"/>                                   </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test=".=&quot;AB&quot;">                          <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>algemeen bestuur van het </xsl:text>                                  </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:value-of select="$RP_ElectionNameSimple_algemeen_bestuur"/>                                    </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                           <xsl:call-template name="WaterschapTypeName">                               <xsl:with-param name="isBold" select="$isBold"/>                            </xsl:call-template>                        </xsl:when>                     <xsl:when test=".=&quot;EP&quot;">                          <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>Europees Parlement</xsl:text>                                 </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:value-of select="$RP_ElectionNameSimple_hetEuropeesParlement"/>                                    </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test=".=&quot;GR&quot;">                          <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>gemeenteraad</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:value-of select="$RP_ElectionNameSimple_raadVanDeGemeente"/>                                   </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test=".=&quot;ER&quot;">                          <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>eilandsraad</xsl:text>                                    </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:value-of select="$RP_ElectionNameSimple_eilandsraad"/>                                 </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test=".=&quot;BC&quot;">                          <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>algemeen bestuur van de bestuurscommissie</xsl:text>                                  </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:value-of select="$RP_ElectionNameSimple_bestuurscommissie"/>                                   </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test=".=&quot;GC&quot;">                          <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>gebiedscommissie</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:value-of select="$RP_ElectionNameSimple_gebiedscommissie"/>                                    </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                 </xsl:choose>               </xsl:if>               <xsl:if test="$isBold=1">                   <xsl:choose>                        <xsl:when test=".= &quot;TK&quot;">                         <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:text>Tweede Kamer der Staten-Generaal</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:value-of select="$RP_ElectionNameSimple_tweedeKamer"/>                                 </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test=".=&quot;EK&quot;">                          <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:text>Eerste Kamer der Staten-Generaal</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:value-of select="$RP_ElectionNameSimple_eersteKamer"/>                                 </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test=".=&quot;PS&quot;">                          <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:text>provinciale staten</xsl:text>                                 </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:value-of select="$RP_ElectionNameSimple_provincialeStaten"/>                                   </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test=".=&quot;AB&quot;">                          <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:text>algemeen bestuur van het </xsl:text>                                  </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:value-of select="$RP_ElectionNameSimple_algemeen_bestuur"/>                                    </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                           <xsl:call-template name="WaterschapTypeName">                               <xsl:with-param name="isBold" select="$isBold"/>                            </xsl:call-template>                        </xsl:when>                     <xsl:when test=".=&quot;EP&quot;">                          <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:text>Europees Parlement</xsl:text>                                 </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:value-of select="$RP_ElectionNameSimple_hetEuropeesParlement"/>                                    </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test=".=&quot;GR&quot;">                          <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:text>gemeenteraad</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:value-of select="$RP_ElectionNameSimple_raadVanDeGemeente"/>                                   </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test=".=&quot;ER&quot;">                          <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:text>eilandsraad</xsl:text>                                    </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:value-of select="$RP_ElectionNameSimple_eilandsraad"/>                                 </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test=".=&quot;BC&quot;">                          <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:text>algemeen bestuur van de bestuurscommissie</xsl:text>                                  </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:value-of select="$RP_ElectionNameSimple_bestuurscommissie"/>                                   </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                     <xsl:when test=".=&quot;GC&quot;">                          <xsl:choose>                                <xsl:when test="$lang=0">                                   <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:text>gebiedscommissie</xsl:text>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:value-of select="$RP_ElectionNameSimple_gebiedscommissie"/>                                    </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:when>                 </xsl:choose>               </xsl:if>               <xsl:choose>                    <xsl:when test=".=&quot;PS&quot;">                      <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text> van</xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:value-of select="$RP_ElectionNameSimple_van"/>                             </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test=".=&quot;GR&quot;">                      <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text> van</xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:value-of select="$RP_ElectionNameSimple_van"/>                             </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test=".=&quot;ER&quot;">                      <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text> van het openbaar lichaam</xsl:text>                              </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:value-of select="$RP_ElectionNameSimple_van_eilandsraad"/>                             </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:when test=".=&quot;BC&quot;">                      <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text> van stadsdeel</xsl:text>                             </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:value-of select="$RP_ElectionNameSimple_van_stadsdeel"/>                               </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>             </xsl:choose>           </xsl:for-each>     </xsl:for-each> </xsl:template> <xsl:template name="ObjectionsByVoters1">       <xsl:choose>            <xsl:when test="$lang=0">               <fo:inline font-family="Arial" font-size="9pt">                 <xsl:text>Door de in de zittingsruimte aanwezige kiezers zijn</xsl:text>                </fo:inline>            </xsl:when>         <xsl:otherwise>             <fo:inline font-family="Arial" font-size="9pt">                 <xsl:value-of select="$RP_ObjectionsByVoters1_aanwezigeKiezers"/>               </fo:inline>            </xsl:otherwise>        </xsl:choose>       <xsl:call-template name="LineBreakTable"/>      <xsl:call-template name="ObjectionsByVoters1b"/>    </xsl:template> <xsl:template name="ObjectionsByVoters2">       <xsl:for-each select="rg:ObjectionsByVoters">           <xsl:for-each select="rg:NotesOnObjections">                <xsl:choose>                    <xsl:when test="../rg:NotesOnObjections[text() != &quot;&quot;]">                       <xsl:choose>                            <xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">                                <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <fo:inline-container>                                   <fo:block>                                      <xsl:text>&#x200B;</xsl:text>                                   </fo:block>                             </fo:inline-container>                              <fo:block font-family="Arial" font-size="9pt" margin-right="100% - 100%" margin="0pt">                                  <xsl:variable name="value-of-template_212">                                     <xsl:apply-templates/>                                  </xsl:variable>                                 <xsl:choose>                                        <xsl:when test="contains(string($value-of-template_212),'&#x200B;')">                                           <fo:block font-family="Arial" font-size="9pt">                                              <xsl:copy-of select="$value-of-template_212"/>                                          </fo:block>                                     </xsl:when>                                     <xsl:otherwise>                                         <fo:inline font-family="Arial" font-size="9pt">                                             <xsl:copy-of select="$value-of-template_212"/>                                          </fo:inline>                                        </xsl:otherwise>                                    </xsl:choose>                               </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <fo:inline-container>                                   <fo:block>                                      <xsl:text>&#x200B;</xsl:text>                                   </fo:block>                             </fo:inline-container>                              <fo:block font-family="Arial" font-size="9pt" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" margin-right="100% - 100%" margin="0pt">                                 <xsl:variable name="value-of-template_213">                                     <xsl:apply-templates/>                                  </xsl:variable>                                 <xsl:choose>                                        <xsl:when test="contains(string($value-of-template_213),'&#x200B;')">                                           <fo:block font-family="Arial" font-size="9pt">                                              <xsl:copy-of select="$value-of-template_213"/>                                          </fo:block>                                     </xsl:when>                                     <xsl:otherwise>                                         <fo:inline font-family="Arial" font-size="9pt">                                             <xsl:copy-of select="$value-of-template_213"/>                                          </fo:inline>                                        </xsl:otherwise>                                    </xsl:choose>                               </fo:block>                         </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:otherwise>                     <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>.......................................................................................................................................</xsl:text>                                </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:value-of select="$RP_ObjectionsByVoters2_emptyLine"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                       <fo:block/>                     <fo:block>                          <fo:leader leader-pattern="space"/>                     </fo:block>                     <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>.......................................................................................................................................</xsl:text>                                </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:value-of select="$RP_ObjectionsByVoters2_emptyLine"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                       <fo:block/>                     <fo:block>                          <fo:leader leader-pattern="space"/>                     </fo:block>                     <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>.......................................................................................................................................</xsl:text>                                </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:value-of select="$RP_ObjectionsByVoters2_emptyLine"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                       <fo:block/>                     <fo:block>                          <fo:leader leader-pattern="space"/>                     </fo:block>                     <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>.......................................................................................................................................</xsl:text>                                </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:value-of select="$RP_ObjectionsByVoters2_emptyLine"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                       <fo:block/>                     <fo:block>                          <fo:leader leader-pattern="space"/>                     </fo:block>                     <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>.......................................................................................................................................</xsl:text>                                </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:value-of select="$RP_ObjectionsByVoters2_emptyLine"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:otherwise>                </xsl:choose>           </xsl:for-each>     </xsl:for-each> </xsl:template> <xsl:template name="ObjectionsByVoters2a">      <fo:block>          <fo:leader leader-pattern="space"/>     </fo:block>     <xsl:for-each select="rg:ObjectionsByVoters">           <xsl:for-each select="rg:Objections">               <xsl:choose>                    <xsl:when test="../rg:Objections[text() != &quot;&quot;]">                      <xsl:choose>                            <xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">                                <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <fo:inline-container>                                   <fo:block>                                      <xsl:text>&#x200B;</xsl:text>                                   </fo:block>                             </fo:inline-container>                              <fo:block font-family="Arial" font-size="9pt" margin-right="100% - 100%" margin="0pt">                                  <xsl:variable name="value-of-template_214">                                     <xsl:apply-templates/>                                  </xsl:variable>                                 <xsl:choose>                                        <xsl:when test="contains(string($value-of-template_214),'&#x200B;')">                                           <fo:block font-family="Arial" font-size="9pt">                                              <xsl:copy-of select="$value-of-template_214"/>                                          </fo:block>                                     </xsl:when>                                     <xsl:otherwise>                                         <fo:inline font-family="Arial" font-size="9pt">                                             <xsl:copy-of select="$value-of-template_214"/>                                          </fo:inline>                                        </xsl:otherwise>                                    </xsl:choose>                               </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:block>                                  <fo:leader leader-pattern="space"/>                             </fo:block>                             <fo:inline-container>                                   <fo:block>                                      <xsl:text>&#x200B;</xsl:text>                                   </fo:block>                             </fo:inline-container>                              <fo:block font-family="Arial" font-size="9pt" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" margin-right="100% - 100%" margin="0pt">                                 <xsl:variable name="value-of-template_215">                                     <xsl:apply-templates/>                                  </xsl:variable>                                 <xsl:choose>                                        <xsl:when test="contains(string($value-of-template_215),'&#x200B;')">                                           <fo:block font-family="Arial" font-size="9pt">                                              <xsl:copy-of select="$value-of-template_215"/>                                          </fo:block>                                     </xsl:when>                                     <xsl:otherwise>                                         <fo:inline font-family="Arial" font-size="9pt">                                             <xsl:copy-of select="$value-of-template_215"/>                                          </fo:inline>                                        </xsl:otherwise>                                    </xsl:choose>                               </fo:block>                         </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:otherwise>                     <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>.......................................................................................................................................</xsl:text>                                </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:value-of select="$RP_ObjectionsByVoters2a_emptyLine"/>                             </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                       <fo:block/>                     <fo:block>                          <fo:leader leader-pattern="space"/>                     </fo:block>                     <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>.......................................................................................................................................</xsl:text>                                </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:value-of select="$RP_ObjectionsByVoters2a_emptyLine"/>                             </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                       <fo:block/>                     <fo:block>                          <fo:leader leader-pattern="space"/>                     </fo:block>                     <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>.......................................................................................................................................</xsl:text>                                </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:value-of select="$RP_ObjectionsByVoters2a_emptyLine"/>                             </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                       <fo:block/>                     <fo:block>                          <fo:leader leader-pattern="space"/>                     </fo:block>                     <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>.......................................................................................................................................</xsl:text>                                </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:value-of select="$RP_ObjectionsByVoters2a_emptyLine"/>                             </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                       <fo:block/>                     <fo:block>                          <fo:leader leader-pattern="space"/>                     </fo:block>                     <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>.......................................................................................................................................</xsl:text>                                </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:value-of select="$RP_ObjectionsByVoters2a_emptyLine"/>                             </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:otherwise>                </xsl:choose>           </xsl:for-each>     </xsl:for-each> </xsl:template> <xsl:template name="LineBreak">     <xsl:choose>            <xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">                <fo:block>                  <fo:leader leader-pattern="space"/>             </fo:block>             <fo:inline-container>                   <fo:block>                      <xsl:text>&#x200B;</xsl:text>                   </fo:block>             </fo:inline-container>              <fo:block font-family="Arial" font-size="9pt" margin-right="100% - 100%" margin="0pt"/>         </xsl:when>         <xsl:otherwise>             <fo:block>                  <fo:leader leader-pattern="space"/>             </fo:block>             <fo:block>                  <fo:leader leader-pattern="space"/>             </fo:block>         </xsl:otherwise>        </xsl:choose>   </xsl:template> <xsl:template name="LineBreakPdf">      <xsl:if test="$SV_OutputFormat = &apos;PDF&apos;">          <fo:block>              <fo:leader leader-pattern="space"/>         </fo:block>     </xsl:if>   </xsl:template> <xsl:template name="SmallLineBreak">        <xsl:choose>            <xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">                <fo:block>                  <fo:leader leader-pattern="space"/>             </fo:block>             <fo:inline-container>                   <fo:block>                      <xsl:text>&#x200B;</xsl:text>                   </fo:block>             </fo:inline-container>              <fo:block font-family="Arial" font-size="9pt" margin-right="100% - 100%" margin="0pt"/>         </xsl:when>         <xsl:otherwise>             <fo:block>                  <fo:leader leader-pattern="space"/>             </fo:block>         </xsl:otherwise>        </xsl:choose>   </xsl:template> <xsl:template name="LineBreakTable">        <xsl:choose>            <xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">                <fo:block>                  <fo:leader leader-pattern="space"/>             </fo:block>             <fo:inline-container>                   <fo:block>                      <xsl:text>&#x200B;</xsl:text>                   </fo:block>             </fo:inline-container>              <fo:block font-family="Arial" font-size="9pt" margin-right="100% - 100%" margin="0pt"/>         </xsl:when>         <xsl:otherwise>             <fo:block>                  <fo:leader leader-pattern="space"/>             </fo:block>         </xsl:otherwise>        </xsl:choose>   </xsl:template> <xsl:template name="KieskringParty">        <xsl:if test="0=1">         <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>Additional information about the distrinct for which a centrally submitted list is nominated</xsl:text>           </fo:inline>        </xsl:if>       <xsl:choose>            <xsl:when test="eml:ContestIdentifier/@Id = &quot;alle&quot;">              <xsl:choose>                    <xsl:when test="$lang=0">                       <fo:inline font-family="Arial" font-size="9pt">                         <xsl:text> in alle kieskringen</xsl:text>                       </fo:inline>                    </xsl:when>                 <xsl:otherwise>                     <fo:inline font-family="Arial" font-size="9pt">                         <xsl:value-of select="$RP_KieskringParty_inAlleKieskringen"/>                       </fo:inline>                    </xsl:otherwise>                </xsl:choose>           </xsl:when>         <xsl:when test="eml:ContestIdentifier">             <xsl:choose>                    <xsl:when test="$lang=0">                       <fo:inline font-family="Arial" font-size="9pt">                         <xsl:text> in kieskring</xsl:text>                      </fo:inline>                    </xsl:when>                 <xsl:otherwise>                     <fo:inline font-family="Arial" font-size="9pt">                         <xsl:value-of select="$RP_KieskringParty_inKieskring"/>                     </fo:inline>                    </xsl:otherwise>                </xsl:choose>               <fo:inline font-family="Arial" font-size="9pt">                 <xsl:text>&#160;</xsl:text>             </fo:inline>                <xsl:call-template name="ContestIdentifier"/>           </xsl:when>     </xsl:choose>   </xsl:template> <xsl:template name="ElectionDomain">        <xsl:param name="isBold" select="0"/>       <xsl:param name="font-size" select="&apos;small&apos;"/>        <xsl:if test="0=1">         <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>Election domain as part of the elction name - if needed</xsl:text>            </fo:inline>        </xsl:if>       <xsl:if test="$isBold=0 and $font-size=&apos;small&apos;">          <xsl:for-each select="eml:ElectionIdentifier">              <xsl:choose>                    <xsl:when test="./eml:ElectionCategory[text()=&quot;PS&quot; or text()=&quot;AB&quot; or text()=&quot;GR&quot; or text()=&quot;ER&quot;]">                      <xsl:for-each select="kr:ElectionDomain">                           <fo:inline font-family="Arial" font-size="9pt">                             <xsl:text>&#160;</xsl:text>                         </fo:inline>                            <xsl:variable name="value-of-template_216">                             <xsl:apply-templates/>                          </xsl:variable>                         <xsl:choose>                                <xsl:when test="contains(string($value-of-template_216),'&#x200B;')">                                   <fo:block font-family="Arial" font-size="9pt">                                      <xsl:copy-of select="$value-of-template_216"/>                                  </fo:block>                             </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:copy-of select="$value-of-template_216"/>                                  </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:for-each>                 </xsl:when>                 <xsl:when test="./eml:ElectionCategory[ text()=&quot;BC&quot; or text()=&quot;GC&quot; ]">                      <xsl:for-each select="kr:ElectionDomain">                           <xsl:choose>                                <xsl:when test=". != &quot;Rotterdam - Centrum&quot;  and  . != &quot;Rotterdam - Pernis&quot;">                                    <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>&#160;</xsl:text>                                 </fo:inline>                                    <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:value-of select="substring( text() , 13 )"/>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>&#160;</xsl:text>                                 </fo:inline>                                    <xsl:variable name="value-of-template_217">                                     <xsl:apply-templates/>                                  </xsl:variable>                                 <xsl:choose>                                        <xsl:when test="contains(string($value-of-template_217),'&#x200B;')">                                           <fo:block font-family="Arial" font-size="9pt">                                              <xsl:copy-of select="$value-of-template_217"/>                                          </fo:block>                                     </xsl:when>                                     <xsl:otherwise>                                         <fo:inline font-family="Arial" font-size="9pt">                                             <xsl:copy-of select="$value-of-template_217"/>                                          </fo:inline>                                        </xsl:otherwise>                                    </xsl:choose>                               </xsl:otherwise>                            </xsl:choose>                       </xsl:for-each>                 </xsl:when>             </xsl:choose>           </xsl:for-each>     </xsl:if>       <xsl:if test="$isBold=1 and $font-size=&apos;small&apos;">          <xsl:for-each select="eml:ElectionIdentifier">              <xsl:choose>                    <xsl:when test="./eml:ElectionCategory[text()=&quot;PS&quot; or text()=&quot;AB&quot; or text()=&quot;GR&quot; or text()=&quot;ER&quot;]">                      <xsl:for-each select="kr:ElectionDomain">                           <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                              <xsl:text>&#160;</xsl:text>                         </fo:inline>                            <xsl:variable name="value-of-template_218">                             <xsl:apply-templates/>                          </xsl:variable>                         <xsl:choose>                                <xsl:when test="contains(string($value-of-template_218),'&#x200B;')">                                   <fo:block font-family="Arial" font-size="9pt" font-weight="bold">                                       <xsl:copy-of select="$value-of-template_218"/>                                  </fo:block>                             </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:copy-of select="$value-of-template_218"/>                                  </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:for-each>                 </xsl:when>                 <xsl:when test="./eml:ElectionCategory[ text()=&quot;BC&quot; or text()=&quot;GC&quot; ]">                      <xsl:for-each select="kr:ElectionDomain">                           <xsl:choose>                                <xsl:when test=". != &quot;Rotterdam - Centrum&quot;  and  . != &quot;Rotterdam - Pernis&quot;">                                    <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:text>&#160;</xsl:text>                                 </fo:inline>                                    <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:value-of select="substring( text() , 13 )"/>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:text>&#160;</xsl:text>                                 </fo:inline>                                    <xsl:variable name="value-of-template_219">                                     <xsl:apply-templates/>                                  </xsl:variable>                                 <xsl:choose>                                        <xsl:when test="contains(string($value-of-template_219),'&#x200B;')">                                           <fo:block font-family="Arial" font-size="9pt" font-weight="bold">                                               <xsl:copy-of select="$value-of-template_219"/>                                          </fo:block>                                     </xsl:when>                                     <xsl:otherwise>                                         <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                              <xsl:copy-of select="$value-of-template_219"/>                                          </fo:inline>                                        </xsl:otherwise>                                    </xsl:choose>                               </xsl:otherwise>                            </xsl:choose>                       </xsl:for-each>                 </xsl:when>             </xsl:choose>           </xsl:for-each>     </xsl:if>       <xsl:if test="$isBold=1 and $font-size=&apos;medium&apos;">         <xsl:for-each select="eml:ElectionIdentifier">              <xsl:choose>                    <xsl:when test="./eml:ElectionCategory[text()=&quot;PS&quot; or text()=&quot;AB&quot; or text()=&quot;GR&quot; or text()=&quot;ER&quot;]">                      <xsl:for-each select="kr:ElectionDomain">                           <fo:inline font-family="Arial" font-size="medium" font-weight="bold">                               <xsl:text>&#160;</xsl:text>                         </fo:inline>                            <xsl:variable name="value-of-template_220">                             <xsl:apply-templates/>                          </xsl:variable>                         <xsl:choose>                                <xsl:when test="contains(string($value-of-template_220),'&#x200B;')">                                   <fo:block font-family="Arial" font-size="medium" font-weight="bold">                                        <xsl:copy-of select="$value-of-template_220"/>                                  </fo:block>                             </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="medium" font-weight="bold">                                       <xsl:copy-of select="$value-of-template_220"/>                                  </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                       </xsl:for-each>                 </xsl:when>                 <xsl:when test="./eml:ElectionCategory[ text()=&quot;BC&quot; or text()=&quot;GC&quot; ]">                      <xsl:for-each select="kr:ElectionDomain">                           <xsl:choose>                                <xsl:when test=". != &quot;Rotterdam - Centrum&quot;  and  . != &quot;Rotterdam - Pernis&quot;">                                    <fo:inline font-family="Arial" font-size="medium" font-weight="bold">                                       <xsl:text>&#160;</xsl:text>                                 </fo:inline>                                    <fo:inline font-family="Arial" font-size="medium" font-weight="bold">                                       <xsl:value-of select="substring( text() , 13 )"/>                                   </fo:inline>                                </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="medium" font-weight="bold">                                       <xsl:text>&#160;</xsl:text>                                 </fo:inline>                                    <xsl:variable name="value-of-template_221">                                     <xsl:apply-templates/>                                  </xsl:variable>                                 <xsl:choose>                                        <xsl:when test="contains(string($value-of-template_221),'&#x200B;')">                                           <fo:block font-family="Arial" font-size="medium" font-weight="bold">                                                <xsl:copy-of select="$value-of-template_221"/>                                          </fo:block>                                     </xsl:when>                                     <xsl:otherwise>                                         <fo:inline font-family="Arial" font-size="medium" font-weight="bold">                                               <xsl:copy-of select="$value-of-template_221"/>                                          </fo:inline>                                        </xsl:otherwise>                                    </xsl:choose>                               </xsl:otherwise>                            </xsl:choose>                       </xsl:for-each>                 </xsl:when>             </xsl:choose>           </xsl:for-each>     </xsl:if>   </xsl:template> <xsl:template name="ContestIdentifier">     <xsl:param name="isBold" select="0"/>       <xsl:param name="fontSize" select="&apos;normal&apos;"/>        <xsl:if test="$fontSize = &apos;normal&apos;">          <xsl:if test="$isBold=0">               <xsl:for-each select="eml:ContestIdentifier">                   <xsl:for-each select="@Id">                     <fo:inline font-family="Arial" font-size="9pt">                         <xsl:value-of select="string(.)"/>                      </fo:inline>                    </xsl:for-each>                 <fo:inline font-family="Arial" font-size="9pt">                     <xsl:text> (</xsl:text>                 </fo:inline>                    <xsl:for-each select="eml:ContestName">                     <xsl:variable name="value-of-template_223">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_223),'&#x200B;')">                               <fo:block font-family="Arial" font-size="9pt">                                  <xsl:copy-of select="$value-of-template_223"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:copy-of select="$value-of-template_223"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:for-each>                 <fo:inline font-family="Arial" font-size="9pt">                     <xsl:text>)</xsl:text>                  </fo:inline>                </xsl:for-each>         </xsl:if>           <xsl:if test="$isBold=1">               <xsl:for-each select="eml:ContestIdentifier">                   <xsl:for-each select="@Id">                     <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                          <xsl:value-of select="string(.)"/>                      </fo:inline>                    </xsl:for-each>                 <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                      <xsl:text> (</xsl:text>                 </fo:inline>                    <xsl:for-each select="eml:ContestName">                     <xsl:variable name="value-of-template_225">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_225),'&#x200B;')">                               <fo:block font-family="Arial" font-size="9pt" font-weight="bold">                                   <xsl:copy-of select="$value-of-template_225"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:copy-of select="$value-of-template_225"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:for-each>                 <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                      <xsl:text>)</xsl:text>                  </fo:inline>                </xsl:for-each>         </xsl:if>       </xsl:if>       <xsl:if test="$fontSize = &apos;medium&apos;">          <xsl:if test="$isBold=0">               <xsl:for-each select="eml:ContestIdentifier">                   <xsl:for-each select="@Id">                     <fo:inline font-family="Arial" font-size="medium">                          <xsl:value-of select="string(.)"/>                      </fo:inline>                    </xsl:for-each>                 <fo:inline font-family="Arial" font-size="medium">                      <xsl:text> (</xsl:text>                 </fo:inline>                    <xsl:for-each select="eml:ContestName">                     <xsl:variable name="value-of-template_227">                         <xsl:apply-templates/>                      </xsl:variable>                     <xsl:choose>                            <xsl:when test="contains(string($value-of-template_227),'&#x200B;')">                               <fo:block font-family="Arial" font-size="medium">                                   <xsl:copy-of select="$value-of-template_227"/>                              </fo:block>                         </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="medium">                                  <xsl:copy-of select="$value-of-template_227"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:for-each>                 <fo:inline font-family="Arial" font-size="medium">                      <xsl:text>)</xsl:text>                  </fo:inline>                </xsl:for-each>         </xsl:if>       </xsl:if>   </xsl:template> <xsl:template name="ObjectionsByVoters1b">      <fo:table font-family="Arial" font-size="9pt" table-layout="fixed" width="100%" border-spacing="0">         <fo:table-column column-width="30pt"/>          <fo:table-column column-width="proportional-column-width(1)"/>          <xsl:variable name="altova:CurrContextGrid_228" select="."/>            <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">              <xsl:variable name="altova:tablerows">                  <fo:table-row font-family="Arial" font-size="9pt">                      <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                          <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                          <fo:block text-align="left">                                <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>□ geen bezwaren ingebracht.</xsl:text>                                        </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:value-of select="$RP_ObjectionsByVoters1b_geenBezwarenIngebracht"/>                                        </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </fo:block>                     </fo:table-cell>                    </fo:table-row>                 <fo:table-row font-family="Arial" font-size="9pt">                      <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                          <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                          <fo:block text-align="left">                                <xsl:choose>                                    <xsl:when test="string(rg:ObjectionsByVoters/rg:Objections) != &quot;&quot;">                                       <xsl:choose>                                            <xsl:when test="$lang=0">                                               <fo:inline font-family="Arial" font-size="9pt">                                                 <xsl:text>■</xsl:text>                                              </fo:inline>                                            </xsl:when>                                         <xsl:otherwise>                                             <fo:inline font-family="Arial" font-size="9pt">                                                 <xsl:value-of select="$RP_ObjectionsByVoters1b_iconChecked"/>                                               </fo:inline>                                            </xsl:otherwise>                                        </xsl:choose>                                   </xsl:when>                                 <xsl:otherwise>                                     <xsl:choose>                                            <xsl:when test="$lang=0">                                               <fo:inline font-family="Arial" font-size="9pt">                                                 <xsl:text>□</xsl:text>                                              </fo:inline>                                            </xsl:when>                                         <xsl:otherwise>                                             <fo:inline font-family="Arial" font-size="9pt">                                                 <xsl:value-of select="$RP_ObjectionsByVoters1b_iconUnchecked"/>                                             </fo:inline>                                            </xsl:otherwise>                                        </xsl:choose>                                   </xsl:otherwise>                                </xsl:choose>                               <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text> de volgende bezwaren ingebracht:</xsl:text>                                      </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:value-of select="$RP_ObjectionsByVoters1b_volgendeBezwarenIngebracht"/>                                        </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </fo:block>                     </fo:table-cell>                    </fo:table-row>             </xsl:variable>             <xsl:choose>                    <xsl:when test="string($altova:tablerows)">                     <xsl:copy-of select="$altova:tablerows"/>                   </xsl:when>                 <xsl:otherwise>                     <fo:table-row>                          <fo:table-cell>                             <fo:block/>                         </fo:table-cell>                        </fo:table-row>                 </xsl:otherwise>                </xsl:choose>           </fo:table-body>        </fo:table>     <xsl:call-template name="ObjectionsByVoters2a"/>    </xsl:template> <xsl:template name="Space">     <xsl:param name="fontSize" select="&apos;normal&apos;"/>        <xsl:choose>            <xsl:when test="$fontSize=&quot;normal&quot;">              <fo:inline font-family="Arial" font-size="9pt">                 <xsl:value-of select="&apos; &apos;"/>              </fo:inline>            </xsl:when>         <xsl:when test="$fontSize=&quot;smaller&quot;">             <fo:inline font-family="Arial" font-size="smaller">                 <xsl:value-of select="&apos; &apos;"/>              </fo:inline>            </xsl:when>         <xsl:when test="$fontSize=&apos;x-small&apos;">             <fo:inline font-family="Arial" font-size="x-small">                 <xsl:value-of select="&apos; &apos;"/>              </fo:inline>            </xsl:when>         <xsl:otherwise>             <fo:inline font-family="Arial" font-size="9pt">                 <xsl:value-of select="&apos; &apos;"/>              </fo:inline>            </xsl:otherwise>        </xsl:choose>   </xsl:template> <xsl:template name="ElectionFractionPart1">     <xsl:param name="smaller" select="0"/>      <xsl:param name="bold" select="0"/>     <xsl:choose>            <xsl:when test="$bold = 0">             <xsl:choose>                    <xsl:when test="$smaller = 1">                      <xsl:for-each select="rg:Fraction">                         <fo:inline font-family="Arial" font-size="smaller">                             <xsl:value-of select="floor( @numerator  div  @denominator )"/>                         </fo:inline>                        </xsl:for-each>                 </xsl:when>                 <xsl:otherwise>                     <xsl:for-each select="rg:Fraction">                         <fo:inline font-family="Arial" font-size="9pt">                             <xsl:value-of select="floor( @numerator  div  @denominator )"/>                         </fo:inline>                        </xsl:for-each>                 </xsl:otherwise>                </xsl:choose>           </xsl:when>         <xsl:otherwise>             <xsl:choose>                    <xsl:when test="$smaller = 1">                      <xsl:for-each select="rg:Fraction">                         <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                              <xsl:value-of select="floor( @numerator  div  @denominator )"/>                         </fo:inline>                        </xsl:for-each>                 </xsl:when>                 <xsl:otherwise>                     <xsl:for-each select="rg:Fraction">                         <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                              <xsl:value-of select="floor( @numerator  div  @denominator )"/>                         </fo:inline>                        </xsl:for-each>                 </xsl:otherwise>                </xsl:choose>           </xsl:otherwise>        </xsl:choose>   </xsl:template> <xsl:template name="ElectionFractionPart2">     <xsl:param name="smaller" select="0"/>      <xsl:param name="bold" select="0"/>     <xsl:choose>            <xsl:when test="$bold = 0">             <xsl:choose>                    <xsl:when test="$smaller = 1">                      <xsl:for-each select="rg:Fraction">                         <xsl:if test="@numerator - ( floor(@numerator div  @denominator ) * @denominator) != 0">                                <fo:inline font-family="Arial" font-size="smaller">                                 <xsl:value-of select="@numerator - ( floor(@numerator div  @denominator ) * @denominator)"/>                                </fo:inline>                                <fo:inline font-family="Arial" font-size="smaller">                                 <xsl:text>/</xsl:text>                              </fo:inline>                                <xsl:for-each select="@denominator">                                    <fo:inline font-family="Arial" font-size="smaller">                                     <xsl:value-of select="string(.)"/>                                  </fo:inline>                                </xsl:for-each>                         </xsl:if>                       </xsl:for-each>                 </xsl:when>                 <xsl:otherwise>                     <xsl:for-each select="rg:Fraction">                         <xsl:if test="@numerator - ( floor(@numerator div  @denominator ) * @denominator) != 0">                                <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:value-of select="@numerator - ( floor(@numerator div  @denominator ) * @denominator)"/>                                </fo:inline>                                <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>/</xsl:text>                              </fo:inline>                                <xsl:for-each select="@denominator">                                    <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:value-of select="string(.)"/>                                  </fo:inline>                                </xsl:for-each>                         </xsl:if>                       </xsl:for-each>                 </xsl:otherwise>                </xsl:choose>           </xsl:when>         <xsl:otherwise>             <xsl:choose>                    <xsl:when test="$smaller = 1">                      <xsl:for-each select="rg:Fraction">                         <xsl:if test="@numerator - ( floor(@numerator div  @denominator ) * @denominator) != 0">                                <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                                  <xsl:value-of select="@numerator - ( floor(@numerator div  @denominator ) * @denominator)"/>                                </fo:inline>                                <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                                  <xsl:text>/</xsl:text>                              </fo:inline>                                <xsl:for-each select="@denominator">                                    <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                                      <xsl:value-of select="string(.)"/>                                  </fo:inline>                                </xsl:for-each>                         </xsl:if>                       </xsl:for-each>                 </xsl:when>                 <xsl:otherwise>                     <xsl:for-each select="rg:Fraction">                         <xsl:if test="@numerator - ( floor(@numerator div  @denominator ) * @denominator) != 0">                                <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:value-of select="@numerator - ( floor(@numerator div  @denominator ) * @denominator)"/>                                </fo:inline>                                <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:text>/</xsl:text>                              </fo:inline>                                <xsl:for-each select="@denominator">                                    <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:value-of select="string(.)"/>                                  </fo:inline>                                </xsl:for-each>                         </xsl:if>                       </xsl:for-each>                 </xsl:otherwise>                </xsl:choose>           </xsl:otherwise>        </xsl:choose>   </xsl:template> <xsl:template name="Initials">      <xsl:if test="0=1">         <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>Displays the initials like &quot; H.H.G.&quot; (name components f) with preceding blank.</xsl:text>           </fo:inline>            <fo:block/>     </xsl:if>       <xsl:for-each select="xnl:PersonName">          <xsl:for-each select="xnl:NameLine">                <xsl:call-template name="Space"/>               <xsl:variable name="value-of-template_233">                 <xsl:apply-templates/>              </xsl:variable>             <xsl:choose>                    <xsl:when test="contains(string($value-of-template_233),'&#x200B;')">                       <fo:block font-family="Arial" font-size="9pt">                          <xsl:copy-of select="$value-of-template_233"/>                      </fo:block>                 </xsl:when>                 <xsl:otherwise>                     <fo:inline font-family="Arial" font-size="9pt">                         <xsl:copy-of select="$value-of-template_233"/>                      </fo:inline>                    </xsl:otherwise>                </xsl:choose>           </xsl:for-each>     </xsl:for-each> </xsl:template> <xsl:template name="Line">      <xsl:if test="$SV_OutputFormat = &apos;PDF&apos;">          <fo:inline font-family="Arial" font-size="small" margin-bottom="6pt" display-align="after">             <xsl:text>________</xsl:text>           </fo:inline>        </xsl:if>       <fo:inline font-family="Arial" font-size="small" margin-bottom="6pt" display-align="after">         <xsl:text>_________________________________________________________________________</xsl:text>      </fo:inline>        <fo:block/> </xsl:template> <xsl:template name="FooterLine">        <xsl:if test="$SV_OutputFormat = &apos;PDF&apos;">          <fo:inline font-family="Arial" font-size="9pt" margin-bottom="6pt" display-align="after">               <xsl:text>______</xsl:text>         </fo:inline>        </xsl:if>       <fo:inline font-family="Arial" font-size="9pt" margin-bottom="6pt" display-align="after">           <xsl:text>__________________________________________________________________</xsl:text>     </fo:inline>    </xsl:template> <xsl:template name="LegacyFooter">      <xsl:param name="isHashcode" select="1"/>       <xsl:param name="isPagenumber" select="1"/>     <fo:table font-family="Arial" font-size="9pt" table-layout="fixed" width="100%" border-spacing="2pt">           <fo:table-column column-width="83%"/>           <fo:table-column column-width="17%"/>           <xsl:variable name="altova:CurrContextGrid_234" select="."/>            <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">              <xsl:variable name="altova:tablerows">                  <fo:table-row font-family="Arial" font-size="9pt" height="30pt">                        <fo:table-cell number-columns-spanned="2" font-family="Arial" font-size="9pt" padding="0" display-align="center">                           <fo:block text-align="left"/>                       </fo:table-cell>                    </fo:table-row>                 <fo:table-row font-family="Arial" font-size="9pt">                      <fo:table-cell number-columns-spanned="2" font-family="Arial" font-size="9pt" padding="0" display-align="after">                            <fo:block text-align="left">                                <xsl:call-template name="FooterLine"/>                          </fo:block>                     </fo:table-cell>                    </fo:table-row>                 <fo:table-row font-family="Arial" font-size="9pt" height="30pt">                        <fo:table-cell font-family="Arial" font-size="9pt" padding="0" display-align="before">                          <fo:block text-align="left">                                <xsl:if test="$isHashcode=1">                                   <xsl:call-template name="FooterWithHashcode"/>                              </xsl:if>                               <xsl:if test="$isHashcode=0">                                   <xsl:call-template name="FooterWithoutHashcode"/>                               </xsl:if>                           </fo:block>                     </fo:table-cell>                        <fo:table-cell font-family="Arial" font-size="9pt" padding="0" display-align="before">                          <fo:block text-align="right">                               <xsl:if test="$isPagenumber=1">                                 <xsl:choose>                                        <xsl:when test="$lang=0">                                           <fo:inline font-family="Arial" font-size="9pt">                                             <xsl:text>pagina </xsl:text>                                            </fo:inline>                                        </xsl:when>                                     <xsl:otherwise>                                         <fo:inline font-family="Arial" font-size="9pt">                                             <xsl:value-of select="$RP_LegacyFooter_pagina"/>                                            </fo:inline>                                        </xsl:otherwise>                                    </xsl:choose>                                   <fo:page-number font-family="Arial" font-size="9pt"/>                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text> / </xsl:text>                                    </fo:inline>                                    <fo:page-number-citation ref-id="SV_RefID_PageTotal" font-family="Arial" font-size="9pt"/>                              </xsl:if>                           </fo:block>                     </fo:table-cell>                    </fo:table-row>             </xsl:variable>             <xsl:choose>                    <xsl:when test="string($altova:tablerows)">                     <xsl:copy-of select="$altova:tablerows"/>                   </xsl:when>                 <xsl:otherwise>                     <fo:table-row>                          <fo:table-cell>                             <fo:block/>                         </fo:table-cell>                        </fo:table-row>                 </xsl:otherwise>                </xsl:choose>           </fo:table-body>        </fo:table> </xsl:template> <xsl:template name="Contests">      <xsl:param name="separator" select="&apos;comma&apos;"/>        <xsl:param name="isBold" select="0"/>       <xsl:for-each select="eml:Affiliation">         <xsl:for-each select="kr:ListData">             <xsl:for-each select="kr:Contests">                 <xsl:for-each select="kr:Contest">                      <xsl:if test="$separator=&apos;newline&apos; and position()=1">                         <fo:block>                              <fo:leader leader-pattern="space"/>                         </fo:block>                     </xsl:if>                       <xsl:if test="$isBold = 1">                         <xsl:choose>                                <xsl:when test="$separator=&apos;comma&apos; and position()!=last()">                                   <xsl:variable name="value-of-template_235">                                     <xsl:apply-templates/>                                  </xsl:variable>                                 <xsl:choose>                                        <xsl:when test="contains(string($value-of-template_235),'&#x200B;')">                                           <fo:block font-family="Arial" font-size="9pt" font-weight="bold">                                               <xsl:copy-of select="$value-of-template_235"/>                                          </fo:block>                                     </xsl:when>                                     <xsl:otherwise>                                         <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                              <xsl:copy-of select="$value-of-template_235"/>                                          </fo:inline>                                        </xsl:otherwise>                                    </xsl:choose>                                   <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:text>, </xsl:text>                                 </fo:inline>                                </xsl:when>                             <xsl:when test="$separator=&apos;newline&apos;">                                    <xsl:variable name="value-of-template_236">                                     <xsl:apply-templates/>                                  </xsl:variable>                                 <xsl:choose>                                        <xsl:when test="contains(string($value-of-template_236),'&#x200B;')">                                           <fo:block font-family="Arial" font-size="9pt" font-weight="bold">                                               <xsl:copy-of select="$value-of-template_236"/>                                          </fo:block>                                     </xsl:when>                                     <xsl:otherwise>                                         <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                              <xsl:copy-of select="$value-of-template_236"/>                                          </fo:inline>                                        </xsl:otherwise>                                    </xsl:choose>                                   <fo:block/>                             </xsl:when>                             <xsl:otherwise>                                 <xsl:variable name="value-of-template_237">                                     <xsl:apply-templates/>                                  </xsl:variable>                                 <xsl:choose>                                        <xsl:when test="contains(string($value-of-template_237),'&#x200B;')">                                           <fo:block font-family="Arial" font-size="9pt" font-weight="bold">                                               <xsl:copy-of select="$value-of-template_237"/>                                          </fo:block>                                     </xsl:when>                                     <xsl:otherwise>                                         <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                              <xsl:copy-of select="$value-of-template_237"/>                                          </fo:inline>                                        </xsl:otherwise>                                    </xsl:choose>                               </xsl:otherwise>                            </xsl:choose>                       </xsl:if>                       <xsl:if test="$isBold = 0">                         <xsl:choose>                                <xsl:when test="$separator=&apos;comma&apos; and position()!=last()">                                   <xsl:variable name="value-of-template_238">                                     <xsl:apply-templates/>                                  </xsl:variable>                                 <xsl:choose>                                        <xsl:when test="contains(string($value-of-template_238),'&#x200B;')">                                           <fo:block font-family="Arial" font-size="9pt">                                              <xsl:copy-of select="$value-of-template_238"/>                                          </fo:block>                                     </xsl:when>                                     <xsl:otherwise>                                         <fo:inline font-family="Arial" font-size="9pt">                                             <xsl:copy-of select="$value-of-template_238"/>                                          </fo:inline>                                        </xsl:otherwise>                                    </xsl:choose>                                   <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:text>, </xsl:text>                                 </fo:inline>                                </xsl:when>                             <xsl:when test="$separator=&apos;newline&apos;">                                    <xsl:variable name="value-of-template_239">                                     <xsl:apply-templates/>                                  </xsl:variable>                                 <xsl:choose>                                        <xsl:when test="contains(string($value-of-template_239),'&#x200B;')">                                           <fo:block font-family="Arial" font-size="9pt">                                              <xsl:copy-of select="$value-of-template_239"/>                                          </fo:block>                                     </xsl:when>                                     <xsl:otherwise>                                         <fo:inline font-family="Arial" font-size="9pt">                                             <xsl:copy-of select="$value-of-template_239"/>                                          </fo:inline>                                        </xsl:otherwise>                                    </xsl:choose>                                   <fo:block/>                             </xsl:when>                             <xsl:otherwise>                                 <xsl:variable name="value-of-template_240">                                     <xsl:apply-templates/>                                  </xsl:variable>                                 <xsl:choose>                                        <xsl:when test="contains(string($value-of-template_240),'&#x200B;')">                                           <fo:block font-family="Arial" font-size="9pt">                                              <xsl:copy-of select="$value-of-template_240"/>                                          </fo:block>                                     </xsl:when>                                     <xsl:otherwise>                                         <fo:inline font-family="Arial" font-size="9pt">                                             <xsl:copy-of select="$value-of-template_240"/>                                          </fo:inline>                                        </xsl:otherwise>                                    </xsl:choose>                               </xsl:otherwise>                            </xsl:choose>                       </xsl:if>                   </xsl:for-each>             </xsl:for-each>         </xsl:for-each>     </xsl:for-each> </xsl:template> <xsl:template name="ObjectionsReference">       <xsl:param name="authority" select="&apos;hoofstembureau&apos;"/>       <xsl:param name="skipFirstSentence" select="0"/>        <xsl:if test="$skipFirstSentence = 0">          <xsl:choose>                <xsl:when test="$lang=0">                   <fo:inline font-family="Arial" font-size="9pt">                     <xsl:text>Door de in de zittingsruimte aanwezige kiezers zijn</xsl:text>                    </fo:inline>                </xsl:when>             <xsl:otherwise>                 <fo:inline font-family="Arial" font-size="9pt">                     <xsl:value-of select="$RP_ObjectionsReference_aanwezigeKiezers"/>                   </fo:inline>                </xsl:otherwise>            </xsl:choose>           <fo:block/>     </xsl:if>       <fo:table font-family="Arial" font-size="9pt" table-layout="fixed" width="100%" border-spacing="0">         <fo:table-column column-width="30pt"/>          <fo:table-column column-width="15pt"/>          <fo:table-column column-width="proportional-column-width(1)"/>          <xsl:variable name="altova:CurrContextGrid_241" select="."/>            <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">              <xsl:variable name="altova:tablerows">                  <fo:table-row font-family="Arial" font-size="9pt">                      <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="before">                          <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="before">                          <fo:block text-align="left">                                <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>□ </xsl:text>                                     </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:value-of select="$RP_ObjectionsReference_iconUnchecked"/>                                      </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </fo:block>                     </fo:table-cell>                        <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="before">                          <fo:block text-align="left">                                <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>geen bezwaren ingebracht.</xsl:text>                                      </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:value-of select="$RP_ObjectionsReference_geenBezwarenIngebracht"/>                                     </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </fo:block>                     </fo:table-cell>                    </fo:table-row>                 <fo:table-row font-family="Arial" font-size="9pt">                      <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="before">                          <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="before">                          <fo:block text-align="left">                                <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>□ </xsl:text>                                     </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:value-of select="$RP_ObjectionsReference_iconUnchecked"/>                                      </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </fo:block>                     </fo:table-cell>                        <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="before">                          <fo:block text-align="left">                                <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>de volgende bezwaren ingebracht (zie gewaarmerkte bijlage voor bezwaren en opmerkingen daarover van het </xsl:text>                                       </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:value-of select="$RP_ObjectionsReference_volgendeBezwarenIngebracht"/>                                     </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                               <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:value-of select="$authority"/>                             </fo:inline>                                <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>).</xsl:text>                             </fo:inline>                            </fo:block>                     </fo:table-cell>                    </fo:table-row>             </xsl:variable>             <xsl:choose>                    <xsl:when test="string($altova:tablerows)">                     <xsl:copy-of select="$altova:tablerows"/>                   </xsl:when>                 <xsl:otherwise>                     <fo:table-row>                          <fo:table-cell>                             <fo:block/>                         </fo:table-cell>                        </fo:table-row>                 </xsl:otherwise>                </xsl:choose>           </fo:table-body>        </fo:table> </xsl:template> <xsl:template name="LivingAddress">     <xsl:param name="isBold" select="0"/>       <xsl:if test="0=1">         <fo:inline font-family="Arial" font-size="9pt">             <xsl:text>City and Country code (if present) &quot;Amsterdam&quot; or &quot;Berlin (DE)&quot;</xsl:text>            </fo:inline>            <fo:block/>     </xsl:if>       <xsl:for-each select="kr:LivingAddress">            <xsl:if test="$isBold=0">               <xsl:for-each select="kr:LocalityName">                 <xsl:variable name="value-of-template_242">                     <xsl:apply-templates/>                  </xsl:variable>                 <xsl:choose>                        <xsl:when test="contains(string($value-of-template_242),'&#x200B;')">                           <fo:block font-family="Arial" font-size="9pt">                              <xsl:copy-of select="$value-of-template_242"/>                          </fo:block>                     </xsl:when>                     <xsl:otherwise>                         <fo:inline font-family="Arial" font-size="9pt">                             <xsl:copy-of select="$value-of-template_242"/>                          </fo:inline>                        </xsl:otherwise>                    </xsl:choose>               </xsl:for-each>             <xsl:for-each select="kr:CountryNameCode">                  <fo:inline font-family="Arial" font-size="9pt">                     <xsl:text> (</xsl:text>                 </fo:inline>                    <xsl:variable name="value-of-template_243">                     <xsl:apply-templates/>                  </xsl:variable>                 <xsl:choose>                        <xsl:when test="contains(string($value-of-template_243),'&#x200B;')">                           <fo:block font-family="Arial" font-size="9pt">                              <xsl:copy-of select="$value-of-template_243"/>                          </fo:block>                     </xsl:when>                     <xsl:otherwise>                         <fo:inline font-family="Arial" font-size="9pt">                             <xsl:copy-of select="$value-of-template_243"/>                          </fo:inline>                        </xsl:otherwise>                    </xsl:choose>                   <fo:inline font-family="Arial" font-size="9pt">                     <xsl:text>)</xsl:text>                  </fo:inline>                </xsl:for-each>         </xsl:if>           <xsl:if test="$isBold=1">               <xsl:for-each select="kr:LocalityName">                 <xsl:variable name="value-of-template_244">                     <xsl:apply-templates/>                  </xsl:variable>                 <xsl:choose>                        <xsl:when test="contains(string($value-of-template_244),'&#x200B;')">                           <fo:block font-family="Arial" font-size="9pt" font-weight="bold">                               <xsl:copy-of select="$value-of-template_244"/>                          </fo:block>                     </xsl:when>                     <xsl:otherwise>                         <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                              <xsl:copy-of select="$value-of-template_244"/>                          </fo:inline>                        </xsl:otherwise>                    </xsl:choose>               </xsl:for-each>             <xsl:for-each select="kr:CountryNameCode">                  <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                      <xsl:text> (</xsl:text>                 </fo:inline>                    <xsl:variable name="value-of-template_245">                     <xsl:apply-templates/>                  </xsl:variable>                 <xsl:choose>                        <xsl:when test="contains(string($value-of-template_245),'&#x200B;')">                           <fo:block font-family="Arial" font-size="9pt" font-weight="bold">                               <xsl:copy-of select="$value-of-template_245"/>                          </fo:block>                     </xsl:when>                     <xsl:otherwise>                         <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                              <xsl:copy-of select="$value-of-template_245"/>                          </fo:inline>                        </xsl:otherwise>                    </xsl:choose>                   <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                      <xsl:text>)</xsl:text>                  </fo:inline>                </xsl:for-each>         </xsl:if>       </xsl:for-each> </xsl:template> <xsl:template name="CompleteContactAddress">        <xsl:param name="isBold" select="0"/>       <xsl:param name="fontSize" select="&apos;normal&apos;"/>        <xsl:for-each select="eml:Contact">         <xsl:for-each select="eml:MailingAddress">              <xsl:call-template name="CompleteAddress">                  <xsl:with-param name="fontSize" select="$fontSize"/>                    <xsl:with-param name="isBold" select="$isBold"/>                </xsl:call-template>                <xsl:for-each select="xal:Country">                 <xsl:call-template name="CompleteAddress">                      <xsl:with-param name="fontSize" select="$fontSize"/>                        <xsl:with-param name="isBold" select="$isBold"/>                    </xsl:call-template>                    <xsl:for-each select="xal:CountryNameCode">                     <xsl:call-template name="Space"/>                       <xsl:if test="$fontSize = &apos;normal&apos;">                          <xsl:if test="$isBold = 0">                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>(</xsl:text>                              </fo:inline>                                <xsl:variable name="value-of-template_246">                                 <xsl:apply-templates/>                              </xsl:variable>                             <xsl:choose>                                    <xsl:when test="contains(string($value-of-template_246),'&#x200B;')">                                       <fo:block font-family="Arial" font-size="9pt">                                          <xsl:copy-of select="$value-of-template_246"/>                                      </fo:block>                                 </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:copy-of select="$value-of-template_246"/>                                      </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                               <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>)</xsl:text>                              </fo:inline>                            </xsl:if>                           <xsl:if test="$isBold = 1">                             <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:text>(</xsl:text>                              </fo:inline>                                <xsl:variable name="value-of-template_247">                                 <xsl:apply-templates/>                              </xsl:variable>                             <xsl:choose>                                    <xsl:when test="contains(string($value-of-template_247),'&#x200B;')">                                       <fo:block font-family="Arial" font-size="9pt" font-weight="bold">                                           <xsl:copy-of select="$value-of-template_247"/>                                      </fo:block>                                 </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                          <xsl:copy-of select="$value-of-template_247"/>                                      </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                               <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:text>)</xsl:text>                              </fo:inline>                            </xsl:if>                       </xsl:if>                       <xsl:if test="$fontSize = &apos;x-small&apos;">                         <xsl:if test="$isBold = 0">                             <fo:inline font-family="Arial" font-size="x-small">                                 <xsl:text>(</xsl:text>                              </fo:inline>                                <xsl:variable name="value-of-template_248">                                 <xsl:apply-templates/>                              </xsl:variable>                             <xsl:choose>                                    <xsl:when test="contains(string($value-of-template_248),'&#x200B;')">                                       <fo:block font-family="Arial" font-size="x-small">                                          <xsl:copy-of select="$value-of-template_248"/>                                      </fo:block>                                 </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="x-small">                                         <xsl:copy-of select="$value-of-template_248"/>                                      </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                               <fo:inline font-family="Arial" font-size="x-small">                                 <xsl:text>)</xsl:text>                              </fo:inline>                            </xsl:if>                           <xsl:if test="$isBold = 1">                             <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                  <xsl:text>(</xsl:text>                              </fo:inline>                                <xsl:variable name="value-of-template_249">                                 <xsl:apply-templates/>                              </xsl:variable>                             <xsl:choose>                                    <xsl:when test="contains(string($value-of-template_249),'&#x200B;')">                                       <fo:block font-family="Arial" font-size="x-small" font-weight="bold">                                           <xsl:copy-of select="$value-of-template_249"/>                                      </fo:block>                                 </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                          <xsl:copy-of select="$value-of-template_249"/>                                      </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                               <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                  <xsl:text>)</xsl:text>                              </fo:inline>                            </xsl:if>                       </xsl:if>                   </xsl:for-each>             </xsl:for-each>         </xsl:for-each>     </xsl:for-each> </xsl:template> <xsl:template name="QualifyingAddressCity">     <xsl:param name="isBold" select="0"/>       <xsl:param name="fontSize" select="&apos;normal&apos;"/>        <xsl:for-each select="eml:QualifyingAddress">           <xsl:call-template name="City">             <xsl:with-param name="isBold" select="$isBold"/>                <xsl:with-param name="fontSize" select="$fontSize"/>            </xsl:call-template>            <xsl:for-each select="xal:Country">             <xsl:call-template name="City">                 <xsl:with-param name="isBold" select="$isBold"/>                    <xsl:with-param name="fontSize" select="$fontSize"/>                </xsl:call-template>                <xsl:for-each select="xal:CountryNameCode">                 <xsl:call-template name="Space"/>                   <xsl:if test="$fontSize = &apos;normal&apos;">                      <xsl:if test="$isBold = 0">                         <fo:inline font-family="Arial" font-size="9pt">                             <xsl:text>(</xsl:text>                          </fo:inline>                            <xsl:variable name="value-of-template_250">                             <xsl:apply-templates/>                          </xsl:variable>                         <xsl:choose>                                <xsl:when test="contains(string($value-of-template_250),'&#x200B;')">                                   <fo:block font-family="Arial" font-size="9pt">                                      <xsl:copy-of select="$value-of-template_250"/>                                  </fo:block>                             </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt">                                     <xsl:copy-of select="$value-of-template_250"/>                                  </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                           <fo:inline font-family="Arial" font-size="9pt">                             <xsl:text>)</xsl:text>                          </fo:inline>                        </xsl:if>                       <xsl:if test="$isBold = 1">                         <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                              <xsl:text>(</xsl:text>                          </fo:inline>                            <xsl:variable name="value-of-template_251">                             <xsl:apply-templates/>                          </xsl:variable>                         <xsl:choose>                                <xsl:when test="contains(string($value-of-template_251),'&#x200B;')">                                   <fo:block font-family="Arial" font-size="9pt" font-weight="bold">                                       <xsl:copy-of select="$value-of-template_251"/>                                  </fo:block>                             </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                      <xsl:copy-of select="$value-of-template_251"/>                                  </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                           <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                              <xsl:text>)</xsl:text>                          </fo:inline>                        </xsl:if>                   </xsl:if>                   <xsl:if test="$fontSize = &apos;smaller&apos;">                     <xsl:if test="$isBold = 0">                         <fo:inline font-family="Arial" font-size="smaller">                             <xsl:text>(</xsl:text>                          </fo:inline>                            <xsl:variable name="value-of-template_252">                             <xsl:apply-templates/>                          </xsl:variable>                         <xsl:choose>                                <xsl:when test="contains(string($value-of-template_252),'&#x200B;')">                                   <fo:block font-family="Arial" font-size="smaller">                                      <xsl:copy-of select="$value-of-template_252"/>                                  </fo:block>                             </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="smaller">                                     <xsl:copy-of select="$value-of-template_252"/>                                  </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                           <fo:inline font-family="Arial" font-size="smaller">                             <xsl:text>)</xsl:text>                          </fo:inline>                        </xsl:if>                       <xsl:if test="$isBold = 1">                         <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                              <xsl:text>(</xsl:text>                          </fo:inline>                            <xsl:variable name="value-of-template_253">                             <xsl:apply-templates/>                          </xsl:variable>                         <xsl:choose>                                <xsl:when test="contains(string($value-of-template_253),'&#x200B;')">                                   <fo:block font-family="Arial" font-size="smaller" font-weight="bold">                                       <xsl:copy-of select="$value-of-template_253"/>                                  </fo:block>                             </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                                      <xsl:copy-of select="$value-of-template_253"/>                                  </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                           <fo:inline font-family="Arial" font-size="smaller" font-weight="bold">                              <xsl:text>)</xsl:text>                          </fo:inline>                        </xsl:if>                   </xsl:if>                   <xsl:if test="$fontSize = &apos;x-small&apos;">                     <xsl:if test="$isBold = 0">                         <fo:inline font-family="Arial" font-size="x-small">                             <xsl:text>(</xsl:text>                          </fo:inline>                            <xsl:variable name="value-of-template_254">                             <xsl:apply-templates/>                          </xsl:variable>                         <xsl:choose>                                <xsl:when test="contains(string($value-of-template_254),'&#x200B;')">                                   <fo:block font-family="Arial" font-size="x-small">                                      <xsl:copy-of select="$value-of-template_254"/>                                  </fo:block>                             </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="x-small">                                     <xsl:copy-of select="$value-of-template_254"/>                                  </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                           <fo:inline font-family="Arial" font-size="x-small">                             <xsl:text>)</xsl:text>                          </fo:inline>                        </xsl:if>                       <xsl:if test="$isBold = 1">                         <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                              <xsl:text>(</xsl:text>                          </fo:inline>                            <xsl:variable name="value-of-template_255">                             <xsl:apply-templates/>                          </xsl:variable>                         <xsl:choose>                                <xsl:when test="contains(string($value-of-template_255),'&#x200B;')">                                   <fo:block font-family="Arial" font-size="x-small" font-weight="bold">                                       <xsl:copy-of select="$value-of-template_255"/>                                  </fo:block>                             </xsl:when>                             <xsl:otherwise>                                 <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                                      <xsl:copy-of select="$value-of-template_255"/>                                  </fo:inline>                                </xsl:otherwise>                            </xsl:choose>                           <fo:inline font-family="Arial" font-size="x-small" font-weight="bold">                              <xsl:text>)</xsl:text>                          </fo:inline>                        </xsl:if>                   </xsl:if>               </xsl:for-each>         </xsl:for-each>     </xsl:for-each> </xsl:template> <xsl:template name="ChapterElection">       <xsl:param name="isH3" select="0"/>     <xsl:param name="isU16" select="0"/>        <xsl:param name="province" select="&apos;&apos;"/>      <fo:inline font-family="Arial" font-size="11pt" font-weight="bold" margin-bottom="6pt">         <xsl:text>1. </xsl:text>        </fo:inline>        <xsl:choose>            <xsl:when test="$lang=0">               <fo:inline font-family="Arial" font-size="11pt" font-weight="bold" margin-bottom="6pt">                 <xsl:text>Verkiezing</xsl:text>             </fo:inline>            </xsl:when>         <xsl:otherwise>             <fo:inline font-family="Arial" font-size="11pt" font-weight="bold" margin-bottom="6pt">                 <xsl:value-of select="$RP_ChapterElection_Verkiezing"/>             </fo:inline>            </xsl:otherwise>        </xsl:choose>       <fo:block/>     <fo:block>          <fo:leader leader-pattern="space"/>     </fo:block>     <xsl:choose>            <xsl:when test="$isH3 = 0">             <xsl:choose>                    <xsl:when test="$isU16 = 0">                        <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>Het gaat om de verkiezing van:</xsl:text>                             </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:value-of select="$RP_ChapterElection_HetGaatOmVerkiezing"/>                                </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:otherwise>                     <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>Het gaat om de verkiezing van de leden van:</xsl:text>                                </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:value-of select="$RP_ChapterElection_HetGaatOmVerkiezingVanLeden"/>                                </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:otherwise>                </xsl:choose>           </xsl:when>         <xsl:otherwise>             <xsl:choose>                    <xsl:when test="$lang=0">                       <fo:inline font-family="Arial" font-size="9pt">                         <xsl:text>Het gaat om de kandidatenlijst voor de verkiezing van:</xsl:text>                     </fo:inline>                    </xsl:when>                 <xsl:otherwise>                     <fo:inline font-family="Arial" font-size="9pt">                         <xsl:value-of select="$RP_ChapterElection_HetGaatOmKandidatenlijst"/>                       </fo:inline>                    </xsl:otherwise>                </xsl:choose>           </xsl:otherwise>        </xsl:choose>       <fo:block/>     <fo:block>          <fo:leader leader-pattern="space"/>     </fo:block>     <xsl:call-template name="ElectionNameShort">            <xsl:with-param name="isBold" select="1"/>      </xsl:call-template>        <xsl:choose>            <xsl:when test="$province = &apos;Bonaire&apos; or $province = &apos;Sint Eustatius&apos; or $province = &apos;Saba&apos;">             <xsl:choose>                    <xsl:when test="$lang=0">                       <fo:inline font-family="Arial" font-size="9pt">                         <xsl:text> voor het openbaar lichaam </xsl:text>                        </fo:inline>                    </xsl:when>                 <xsl:otherwise>                     <fo:inline font-family="Arial" font-size="9pt">                         <xsl:value-of select="$RP_ChapterElection_VoorHetOpenbaarLichaam"/>                     </fo:inline>                    </xsl:otherwise>                </xsl:choose>               <xsl:for-each select="$province">                   <xsl:variable name="value-of-template_256">                     <xsl:choose>                            <xsl:when test="self::*">                               <xsl:apply-templates/>                          </xsl:when>                         <xsl:otherwise>                             <xsl:value-of select="."/>                          </xsl:otherwise>                        </xsl:choose>                   </xsl:variable>                 <xsl:choose>                        <xsl:when test="contains(string($value-of-template_256),'&#x200B;')">                           <fo:block font-family="Arial" font-size="9pt" font-weight="bold">                               <xsl:copy-of select="$value-of-template_256"/>                          </fo:block>                     </xsl:when>                     <xsl:otherwise>                         <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                              <xsl:copy-of select="$value-of-template_256"/>                          </fo:inline>                        </xsl:otherwise>                    </xsl:choose>               </xsl:for-each>         </xsl:when>         <xsl:when test="$province != &apos;&apos;">             <xsl:choose>                    <xsl:when test="$lang=0">                       <fo:inline font-family="Arial" font-size="9pt">                         <xsl:text> voor de provincie </xsl:text>                        </fo:inline>                    </xsl:when>                 <xsl:otherwise>                     <fo:inline font-family="Arial" font-size="9pt">                         <xsl:value-of select="$RP_ChapterElection_VoorDeProvincie"/>                        </fo:inline>                    </xsl:otherwise>                </xsl:choose>               <xsl:for-each select="$province">                   <xsl:variable name="value-of-template_257">                     <xsl:choose>                            <xsl:when test="self::*">                               <xsl:apply-templates/>                          </xsl:when>                         <xsl:otherwise>                             <xsl:value-of select="."/>                          </xsl:otherwise>                        </xsl:choose>                   </xsl:variable>                 <xsl:choose>                        <xsl:when test="contains(string($value-of-template_257),'&#x200B;')">                           <fo:block font-family="Arial" font-size="9pt" font-weight="bold">                               <xsl:copy-of select="$value-of-template_257"/>                          </fo:block>                     </xsl:when>                     <xsl:otherwise>                         <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                              <xsl:copy-of select="$value-of-template_257"/>                          </fo:inline>                        </xsl:otherwise>                    </xsl:choose>               </xsl:for-each>         </xsl:when>     </xsl:choose>       <xsl:for-each select="eml:ElectionIdentifier">          <xsl:for-each select="eml:ElectionCategory[.=&apos;EK&apos;]"/>     </xsl:for-each> </xsl:template> <xsl:template name="ChapterDistrictsOptions">       <xsl:choose>            <xsl:when test="eml:ContestIdentifier[@Id != &quot;alle&quot;]">                <xsl:choose>                    <xsl:when test="$lang=0">                       <fo:inline font-family="Arial" font-size="9pt">                         <xsl:text>uitsluitend voor de volgende kieskring(en): </xsl:text>                       </fo:inline>                    </xsl:when>                 <xsl:otherwise>                     <fo:inline font-family="Arial" font-size="9pt">                         <xsl:value-of select="$RP_ChapterDistrictOptions_uitsluitend"/>                     </fo:inline>                    </xsl:otherwise>                </xsl:choose>               <xsl:choose>                    <xsl:when test="count(eml:Affiliation/kr:ListData/kr:Contests/kr:Contest) &gt; 0">                      <xsl:call-template name="Contests">                         <xsl:with-param name="isBold" select="1"/>                      </xsl:call-template>                    </xsl:when>                 <xsl:otherwise>                     <xsl:for-each select="eml:ContestIdentifier">                           <xsl:for-each select="eml:ContestName">                             <xsl:variable name="value-of-template_258">                                 <xsl:apply-templates/>                              </xsl:variable>                             <xsl:choose>                                    <xsl:when test="contains(string($value-of-template_258),'&#x200B;')">                                       <fo:block font-family="Arial" font-size="9pt" font-weight="bold">                                           <xsl:copy-of select="$value-of-template_258"/>                                      </fo:block>                                 </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                          <xsl:copy-of select="$value-of-template_258"/>                                      </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:for-each>                     </xsl:for-each>                 </xsl:otherwise>                </xsl:choose>           </xsl:when>         <xsl:otherwise>             <xsl:choose>                    <xsl:when test="$lang=0">                       <fo:inline font-family="Arial" font-size="9pt">                         <xsl:text>voor </xsl:text>                      </fo:inline>                    </xsl:when>                 <xsl:otherwise>                     <fo:inline font-family="Arial" font-size="9pt">                         <xsl:value-of select="$RP_ChapterDistrictOptions_voor"/>                        </fo:inline>                    </xsl:otherwise>                </xsl:choose>               <xsl:choose>                    <xsl:when test="$lang=0">                       <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                          <xsl:text>alle kieskringen</xsl:text>                       </fo:inline>                    </xsl:when>                 <xsl:otherwise>                     <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                          <xsl:value-of select="$RP_ChapterDistrictOptions_alleKieskringen"/>                     </fo:inline>                    </xsl:otherwise>                </xsl:choose>               <xsl:choose>                    <xsl:when test="$lang=0">                       <fo:inline font-family="Arial" font-size="9pt">                         <xsl:text> waarvoor de kandidatenlijst wordt ingeleverd.</xsl:text>                     </fo:inline>                    </xsl:when>                 <xsl:otherwise>                     <fo:inline font-family="Arial" font-size="9pt">                         <xsl:value-of select="$RP_ChapterDistrictOptions_waarvoorIngeleverd"/>                      </fo:inline>                    </xsl:otherwise>                </xsl:choose>           </xsl:otherwise>        </xsl:choose>       <fo:block/> </xsl:template> <xsl:template name="ChapterDistrictsTitle">     <xsl:choose>            <xsl:when test="$lang=0">               <fo:inline font-family="Arial" font-size="11pt" font-weight="bold" margin-bottom="6pt">                 <xsl:text>Kieskringen</xsl:text>                </fo:inline>            </xsl:when>         <xsl:otherwise>             <fo:inline font-family="Arial" font-size="11pt" font-weight="bold" margin-bottom="6pt">                 <xsl:value-of select="$RP_ChapterDistrictTitle_Kieskringen"/>               </fo:inline>            </xsl:otherwise>        </xsl:choose>       <fo:inline font-family="Arial" font-size="11pt" font-weight="bold" margin-bottom="6pt">         <xsl:text>&#160;</xsl:text>     </fo:inline>        <xsl:choose>            <xsl:when test="$lang = 0">             <fo:inline font-family="Arial" font-size="9pt" font-style="italic">                 <xsl:text>(alleen invullen bij de verkiezing van de Tweede Kamer, Eerste Kamer, of de provinciale staten van een provincie met meer dan één kieskring)</xsl:text>               </fo:inline>            </xsl:when>         <xsl:otherwise>             <fo:inline font-family="Arial" font-size="9pt" font-style="italic">                 <xsl:value-of select="$RP_ChapterDistrictTitle_alleenInvullen"/>                </fo:inline>            </xsl:otherwise>        </xsl:choose>   </xsl:template> <xsl:template name="ChapterPartyName">      <xsl:param name="isH3" select="0"/>     <fo:block>          <fo:leader leader-pattern="space"/>     </fo:block>     <fo:block>          <fo:leader leader-pattern="space"/>     </fo:block>     <fo:inline font-family="Arial" font-size="11pt" font-weight="bold" margin-bottom="6pt">         <xsl:text>3. </xsl:text>        </fo:inline>        <xsl:choose>            <xsl:when test="$isH3 = 1">             <xsl:choose>                    <xsl:when test="//eml:ElectionCategory[.!=&quot;BC&quot;]">                     <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="11pt" font-weight="bold" margin-bottom="6pt">                                 <xsl:text>Aanduiding van de politieke groepering</xsl:text>                             </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="11pt" font-weight="bold" margin-bottom="6pt">                                 <xsl:value-of select="$RP_ChapterPartyName_AanduidingVan_H3"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:otherwise>                     <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="11pt" font-weight="bold" margin-bottom="6pt">                                 <xsl:text>Aanduiding van de (politieke) groepering</xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="11pt" font-weight="bold" margin-bottom="6pt">                                 <xsl:value-of select="$RP_ChapterPartyName_AanduidingVan_BC_H3"/>                               </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:otherwise>                </xsl:choose>           </xsl:when>         <xsl:when test="$isH3 = 2">             <xsl:choose>                    <xsl:when test="//eml:ElectionCategory[.!=&quot;BC&quot;]">                     <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="11pt" font-weight="bold" margin-bottom="6pt">                                 <xsl:text>Aanduiding van de politieke groeperingen</xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="11pt" font-weight="bold" margin-bottom="6pt">                                 <xsl:value-of select="$RP_ChapterPartyName_AanduidingVan_H3_2"/>                                </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:otherwise>                     <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="11pt" font-weight="bold" margin-bottom="6pt">                                 <xsl:text>Aanduiding van de (politieke) groeperingen</xsl:text>                             </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="11pt" font-weight="bold" margin-bottom="6pt">                                 <xsl:value-of select="$RP_ChapterPartyName_AanduidingVan_BC_H3_2"/>                             </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:otherwise>                </xsl:choose>           </xsl:when>         <xsl:otherwise>             <xsl:choose>                    <xsl:when test="//eml:ElectionCategory[.!=&quot;BC&quot;]">                     <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="11pt" font-weight="bold" margin-bottom="6pt">                                 <xsl:text>Aanduiding van de politieke groepering</xsl:text>                             </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="11pt" font-weight="bold" margin-bottom="6pt">                                 <xsl:value-of select="$RP_ChapterPartyName_AanduidingVan"/>                             </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:otherwise>                     <xsl:choose>                            <xsl:when test="$lang=0">                               <fo:inline font-family="Arial" font-size="11pt" font-weight="bold" margin-bottom="6pt">                                 <xsl:text>Aanduiding van de (politieke) groepering</xsl:text>                               </fo:inline>                            </xsl:when>                         <xsl:otherwise>                             <fo:inline font-family="Arial" font-size="11pt" font-weight="bold" margin-bottom="6pt">                                 <xsl:value-of select="$RP_ChapterPartyName_AanduidingVan_BC"/>                              </fo:inline>                            </xsl:otherwise>                        </xsl:choose>                   </xsl:otherwise>                </xsl:choose>           </xsl:otherwise>        </xsl:choose>       <fo:block/>     <fo:block>          <fo:leader leader-pattern="space"/>     </fo:block>     <xsl:choose>            <xsl:when test="$isH3 = 1">             <xsl:choose>                    <xsl:when test="$lang = 0">                     <fo:inline font-family="Arial" font-size="9pt">                         <xsl:text>De geregistreerde aanduiding van de politieke groepering: </xsl:text>                     </fo:inline>                    </xsl:when>                 <xsl:otherwise>                     <fo:inline font-family="Arial" font-size="9pt">                         <xsl:value-of select="$RP_ChapterPartyName_geregistreerdeAanduiding"/>                      </fo:inline>                    </xsl:otherwise>                </xsl:choose>           </xsl:when>         <xsl:when test="$isH3 = 2">             <xsl:choose>                    <xsl:when test="$lang = 0">                     <fo:inline font-family="Arial" font-size="9pt">                         <xsl:text>De samengevoegde aanduiding van de politieke groeperingen: </xsl:text>                        </fo:inline>                    </xsl:when>                 <xsl:otherwise>                     <fo:inline font-family="Arial" font-size="9pt">                         <xsl:value-of select="$RP_ChapterPartyName_samengevoegdeAanduiding"/>                       </fo:inline>                    </xsl:otherwise>                </xsl:choose>           </xsl:when>         <xsl:otherwise>             <xsl:choose>                    <xsl:when test="$lang = 0">                     <fo:inline font-family="Arial" font-size="9pt">                         <xsl:text>Aanduiding boven de kandidatenlijst: </xsl:text>                      </fo:inline>                    </xsl:when>                 <xsl:otherwise>                     <fo:inline font-family="Arial" font-size="9pt">                         <xsl:value-of select="$RP_ChapterPartyName_AanduidingBoven"/>                       </fo:inline>                    </xsl:otherwise>                </xsl:choose>           </xsl:otherwise>        </xsl:choose>       <fo:block/>     <fo:block>          <fo:leader leader-pattern="space"/>     </fo:block>     <xsl:for-each select="eml:Affiliation">         <xsl:call-template name="PartyName">                <xsl:with-param name="isBold" select="1"/>          </xsl:call-template>        </xsl:for-each>     <fo:block/> </xsl:template> <xsl:template name="Filter0">       <xsl:param name="isBold" select="0"/>       <xsl:choose>            <xsl:when test="text() = &quot;0&quot;">                <fo:inline font-family="Arial" font-size="9pt" line-height="13.5pt">                    <xsl:text>________________</xsl:text>               </fo:inline>            </xsl:when>         <xsl:when test="$isBold = 1">               <xsl:variable name="value-of-template_259">                 <xsl:choose>                        <xsl:when test="self::*">                           <xsl:apply-templates/>                      </xsl:when>                     <xsl:otherwise>                         <xsl:value-of select="string(.)"/>                      </xsl:otherwise>                    </xsl:choose>               </xsl:variable>             <xsl:choose>                    <xsl:when test="contains(string($value-of-template_259),'&#x200B;')">                       <fo:block font-family="Arial" font-size="9pt" font-weight="bold">                           <xsl:copy-of select="$value-of-template_259"/>                      </fo:block>                 </xsl:when>                 <xsl:otherwise>                     <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                          <xsl:copy-of select="$value-of-template_259"/>                      </fo:inline>                    </xsl:otherwise>                </xsl:choose>           </xsl:when>         <xsl:otherwise>             <xsl:variable name="value-of-template_260">                 <xsl:choose>                        <xsl:when test="self::*">                           <xsl:apply-templates/>                      </xsl:when>                     <xsl:otherwise>                         <xsl:value-of select="string(.)"/>                      </xsl:otherwise>                    </xsl:choose>               </xsl:variable>             <xsl:choose>                    <xsl:when test="contains(string($value-of-template_260),'&#x200B;')">                       <fo:block font-family="Arial" font-size="9pt">                          <xsl:copy-of select="$value-of-template_260"/>                      </fo:block>                 </xsl:when>                 <xsl:otherwise>                     <fo:inline font-family="Arial" font-size="9pt">                         <xsl:copy-of select="$value-of-template_260"/>                      </fo:inline>                    </xsl:otherwise>                </xsl:choose>           </xsl:otherwise>        </xsl:choose>   </xsl:template> <xsl:template name="AffiliationVotes">      <fo:block>          <fo:leader leader-pattern="space"/>     </fo:block>     <fo:inline-container>           <fo:block>              <xsl:text>&#x200B;</xsl:text>           </fo:block>     </fo:inline-container>      <fo:block font-family="Arial" font-size="9pt" margin-right="100% - 100%" margin="0pt">          <xsl:for-each select="rg:AffiliationVotes">             <xsl:if test="position() != 1">                 <xsl:call-template name="LineBreakPdf"/>                </xsl:if>               <fo:block/>             <fo:table font-family="Arial" font-size="9pt" table-layout="fixed" width="100%" border-spacing="0">                 <fo:table-column column-width="160pt"/>                 <fo:table-column column-width="290pt"/>                 <xsl:variable name="altova:CurrContextGrid_261" select="."/>                    <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">                      <xsl:variable name="altova:tablerows">                          <xsl:choose>                                <xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">                                    <fo:table-row font-family="Arial" font-size="9pt" height="18pt">                                        <fo:table-cell font-family="Arial" font-size="9pt" margin-bottom="10pt" padding="1" display-align="center">                                         <fo:block text-align="left">                                                <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                                  <xsl:text>Lijstnaam</xsl:text>                                              </fo:inline>                                            </fo:block>                                     </fo:table-cell>                                        <fo:table-cell font-family="Arial" font-size="9pt" margin-bottom="10pt" padding="1" display-align="center">                                         <fo:block text-align="left">                                                <xsl:for-each select="eml:AffiliationIdentifier">                                                   <xsl:for-each select="eml:RegisteredName">                                                      <xsl:variable name="value-of-template_262">                                                         <xsl:apply-templates/>                                                      </xsl:variable>                                                     <xsl:choose>                                                            <xsl:when test="contains(string($value-of-template_262),'&#x200B;')">                                                               <fo:block font-family="Arial" font-size="9pt">                                                                  <xsl:copy-of select="$value-of-template_262"/>                                                              </fo:block>                                                         </xsl:when>                                                         <xsl:otherwise>                                                             <fo:inline font-family="Arial" font-size="9pt">                                                                 <xsl:copy-of select="$value-of-template_262"/>                                                              </fo:inline>                                                            </xsl:otherwise>                                                        </xsl:choose>                                                   </xsl:for-each>                                             </xsl:for-each>                                         </fo:block>                                     </fo:table-cell>                                    </fo:table-row>                             </xsl:when>                             <xsl:otherwise/>                            </xsl:choose>                           <xsl:choose>                                <xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">                                    <fo:table-row font-family="Arial" font-size="9pt">                                      <fo:table-cell border-left-color="#C0C0C0" border-left-style="solid" border-left-width="0.01in" border-top-color="#C0C0C0" border-top-style="solid" border-top-width="0.01in" font-family="Arial" font-size="9pt" line-height="16pt" padding="1" display-align="center">                                            <fo:block text-align="left">                                                <fo:inline-container>                                                   <fo:block>                                                      <xsl:text>&#x200B;</xsl:text>                                                   </fo:block>                                             </fo:inline-container>                                              <fo:block font-family="Arial" font-size="9pt" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" margin-right="100% - 100%" white-space="pre" margin="0pt">                                                   <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                                      <xsl:text>Lijstnaam</xsl:text>                                                  </fo:inline>                                                </fo:block>                                         </fo:block>                                     </fo:table-cell>                                        <fo:table-cell border-right-color="#C0C0C0" border-right-style="solid" border-right-width="0.01in" border-top-color="#C0C0C0" border-top-style="solid" border-top-width="0.01in" font-family="Arial" font-size="9pt" line-height="16pt" padding="1" display-align="center">                                         <fo:block text-align="left">                                                <fo:inline-container>                                                   <fo:block>                                                      <xsl:text>&#x200B;</xsl:text>                                                   </fo:block>                                             </fo:inline-container>                                              <fo:block font-family="Arial" font-size="9pt" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" margin-right="100% - 100%" white-space="pre" margin="0pt">                                                   <xsl:for-each select="eml:AffiliationIdentifier">                                                       <xsl:for-each select="eml:RegisteredName">                                                          <xsl:variable name="value-of-template_263">                                                             <xsl:apply-templates/>                                                          </xsl:variable>                                                         <xsl:choose>                                                                <xsl:when test="contains(string($value-of-template_263),'&#x200B;')">                                                                   <fo:block font-family="Arial" font-size="9pt">                                                                      <xsl:copy-of select="$value-of-template_263"/>                                                                  </fo:block>                                                             </xsl:when>                                                             <xsl:otherwise>                                                                 <fo:inline font-family="Arial" font-size="9pt">                                                                     <xsl:copy-of select="$value-of-template_263"/>                                                                  </fo:inline>                                                                </xsl:otherwise>                                                            </xsl:choose>                                                       </xsl:for-each>                                                 </xsl:for-each>                                             </fo:block>                                         </fo:block>                                     </fo:table-cell>                                    </fo:table-row>                             </xsl:when>                             <xsl:otherwise/>                            </xsl:choose>                           <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-left-color="#C0C0C0" border-left-style="solid" border-left-width="0.01in" font-family="Arial" font-size="9pt" margin-bottom="4pt" padding="1" display-align="center">                                 <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                          <xsl:text>Lijstnummer</xsl:text>                                        </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-right-color="#C0C0C0" border-right-style="solid" border-right-width="0.01in" font-family="Arial" font-size="9pt" margin-bottom="4pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <xsl:for-each select="eml:AffiliationIdentifier">                                           <xsl:for-each select="@Id">                                             <fo:inline font-family="Arial" font-size="9pt">                                                 <xsl:value-of select="string(.)"/>                                              </fo:inline>                                            </xsl:for-each>                                     </xsl:for-each>                                 </fo:block>                             </fo:table-cell>                            </fo:table-row>                     </xsl:variable>                     <xsl:choose>                            <xsl:when test="string($altova:tablerows)">                             <xsl:copy-of select="$altova:tablerows"/>                           </xsl:when>                         <xsl:otherwise>                             <fo:table-row>                                  <fo:table-cell>                                     <fo:block/>                                 </fo:table-cell>                                </fo:table-row>                         </xsl:otherwise>                        </xsl:choose>                   </fo:table-body>                </fo:table>             <xsl:choose>                    <xsl:when test="rg:CandidateVotes">                     <xsl:if test="rg:CandidateVotes">                           <fo:table font-family="Arial" font-size="9pt" table-layout="fixed" width="100%" border-spacing="0">                             <fo:table-column column-width="60pt"/>                              <fo:table-column column-width="312pt"/>                             <fo:table-column column-width="78pt"/>                              <xsl:variable name="altova:CurrContextGrid_265" select="."/>                                <fo:table-header font-family="Arial" font-size="9pt" start-indent="0pt">                                    <xsl:variable name="altova:tablerows">                                      <fo:table-row font-family="Arial" font-size="9pt">                                          <fo:table-cell border-bottom-color="#C0C0C0" border-bottom-style="solid" border-bottom-width="0.01in" border-left-color="#C0C0C0" border-left-style="solid" border-left-width="0.01in" border-right-color="#C0C0C0" border-right-style="solid" border-right-width="0.01in" border-top-color="#C0C0C0" border-top-style="solid" border-top-width="0.01in" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                                <fo:block text-align="left">                                                    <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                                      <xsl:text>Nummer</xsl:text>                                                 </fo:inline>                                                    <fo:block/>                                                 <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                                      <xsl:text>op de lijst</xsl:text>                                                    </fo:inline>                                                </fo:block>                                         </fo:table-cell>                                            <fo:table-cell border-bottom-color="#C0C0C0" border-bottom-style="solid" border-bottom-width="0.01in" border-left-color="#C0C0C0" border-left-style="solid" border-left-width="0.01in" border-right-color="#C0C0C0" border-right-style="solid" border-right-width="0.01in" border-top-color="#C0C0C0" border-top-style="solid" border-top-width="0.01in" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                                <fo:block text-align="left">                                                    <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                                      <xsl:text>Naam kandidaat</xsl:text>                                                 </fo:inline>                                                </fo:block>                                         </fo:table-cell>                                            <fo:table-cell border-bottom-color="#C0C0C0" border-bottom-style="solid" border-bottom-width="0.01in" border-left-color="#C0C0C0" border-left-style="solid" border-left-width="0.01in" border-right-color="#C0C0C0" border-right-style="solid" border-right-width="0.01in" border-top-color="#C0C0C0" border-top-style="solid" border-top-width="0.01in" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                                <fo:block text-align="left">                                                    <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                                      <xsl:text>Aantal stemmen</xsl:text>                                                 </fo:inline>                                                </fo:block>                                         </fo:table-cell>                                        </fo:table-row>                                 </xsl:variable>                                 <xsl:choose>                                        <xsl:when test="string($altova:tablerows)">                                         <xsl:copy-of select="$altova:tablerows"/>                                       </xsl:when>                                     <xsl:otherwise>                                         <fo:table-row>                                              <fo:table-cell>                                                 <fo:block/>                                             </fo:table-cell>                                            </fo:table-row>                                     </xsl:otherwise>                                    </xsl:choose>                               </fo:table-header>                              <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">                                  <xsl:variable name="altova:tablerows">                                      <xsl:for-each select="rg:CandidateVotes">                                           <xsl:sort select="eml:Candidate/eml:CandidateIdentifier/@Id" data-type="number" order="ascending"/>                                         <fo:table-row font-family="Arial" font-size="9pt">                                              <fo:table-cell border-bottom-color="#C0C0C0" border-bottom-style="solid" border-bottom-width="0.01in" border-left-color="#C0C0C0" border-left-style="solid" border-left-width="0.01in" border-right-color="#C0C0C0" border-right-style="solid" border-right-width="0.01in" border-top-color="#C0C0C0" border-top-style="solid" border-top-width="0.01in" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                                    <fo:block text-align="left">                                                        <xsl:for-each select="eml:Candidate">                                                           <xsl:for-each select="eml:CandidateIdentifier">                                                             <xsl:for-each select="@Id">                                                                 <fo:inline font-family="Arial" font-size="9pt">                                                                     <xsl:value-of select="string(.)"/>                                                                  </fo:inline>                                                                </xsl:for-each>                                                         </xsl:for-each>                                                     </xsl:for-each>                                                 </fo:block>                                             </fo:table-cell>                                                <fo:table-cell border-bottom-color="#C0C0C0" border-bottom-style="solid" border-bottom-width="0.01in" border-left-color="#C0C0C0" border-left-style="solid" border-left-width="0.01in" border-right-color="#C0C0C0" border-right-style="solid" border-right-width="0.01in" border-top-color="#C0C0C0" border-top-style="solid" border-top-width="0.01in" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                                    <fo:block text-align="left">                                                        <xsl:for-each select="eml:Candidate">                                                           <xsl:for-each select="eml:CandidateFullName">                                                               <xsl:call-template name="LastNameH1"/>                                                              <fo:inline font-family="Arial" font-size="9pt">                                                                 <xsl:text>, </xsl:text>                                                             </fo:inline>                                                                <xsl:call-template name="FirstNameH1"/>                                                         </xsl:for-each>                                                         <xsl:call-template name="GenderInAffiliationVotes"/>                                                        </xsl:for-each>                                                 </fo:block>                                             </fo:table-cell>                                                <fo:table-cell border-bottom-color="#C0C0C0" border-bottom-style="solid" border-bottom-width="0.01in" border-left-color="#C0C0C0" border-left-style="solid" border-left-width="0.01in" border-right-color="#C0C0C0" border-right-style="solid" border-right-width="0.01in" border-top-color="#C0C0C0" border-top-style="solid" border-top-width="0.01in" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                                    <fo:block text-align="right">                                                       <xsl:for-each select="rg:ValidVotes">                                                           <xsl:variable name="value-of-template_267">                                                             <xsl:apply-templates/>                                                          </xsl:variable>                                                         <xsl:choose>                                                                <xsl:when test="contains(string($value-of-template_267),'&#x200B;')">                                                                   <fo:block font-family="Arial" font-size="9pt">                                                                      <xsl:copy-of select="$value-of-template_267"/>                                                                  </fo:block>                                                             </xsl:when>                                                             <xsl:otherwise>                                                                 <fo:inline font-family="Arial" font-size="9pt">                                                                     <xsl:copy-of select="$value-of-template_267"/>                                                                  </fo:inline>                                                                </xsl:otherwise>                                                            </xsl:choose>                                                       </xsl:for-each>                                                 </fo:block>                                             </fo:table-cell>                                            </fo:table-row>                                     </xsl:for-each>                                     <fo:table-row font-family="Arial" font-size="9pt">                                          <fo:table-cell border-bottom-color="#C0C0C0" border-bottom-style="solid" border-bottom-width="0.01in" border-left-color="#C0C0C0" border-left-style="solid" border-left-width="0.01in" border-right-color="#C0C0C0" border-right-style="solid" border-right-width="0.01in" border-top-color="#C0C0C0" border-top-style="solid" border-top-width="0.01in" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                                <fo:block text-align="right"/>                                          </fo:table-cell>                                            <fo:table-cell border-bottom-color="#C0C0C0" border-bottom-style="solid" border-bottom-width="0.01in" border-left-color="#C0C0C0" border-left-style="solid" border-left-width="0.01in" border-right-color="#C0C0C0" border-right-style="solid" border-right-width="0.01in" border-top-color="#C0C0C0" border-top-style="solid" border-top-width="0.01in" font-family="Arial" font-size="9pt" padding-right="5pt" padding="1" display-align="before">                                                <fo:block text-align="right">                                                   <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                                      <xsl:text>Totaal (stemcijfer)</xsl:text>                                                    </fo:inline>                                                </fo:block>                                         </fo:table-cell>                                            <fo:table-cell border-bottom-color="#C0C0C0" border-bottom-style="solid" border-bottom-width="0.01in" border-left-color="#C0C0C0" border-left-style="solid" border-left-width="0.01in" border-right-color="#C0C0C0" border-right-style="solid" border-right-width="0.01in" border-top-color="#C0C0C0" border-top-style="solid" border-top-width="0.01in" font-family="Arial" font-size="9pt" padding="1" display-align="before">                                                <fo:block text-align="right">                                                   <xsl:for-each select="rg:ValidVotes">                                                       <xsl:variable name="value-of-template_268">                                                         <xsl:apply-templates/>                                                      </xsl:variable>                                                     <xsl:choose>                                                            <xsl:when test="contains(string($value-of-template_268),'&#x200B;')">                                                               <fo:block font-family="Arial" font-size="9pt" font-weight="bold">                                                                   <xsl:copy-of select="$value-of-template_268"/>                                                              </fo:block>                                                         </xsl:when>                                                         <xsl:otherwise>                                                             <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                                                  <xsl:copy-of select="$value-of-template_268"/>                                                              </fo:inline>                                                            </xsl:otherwise>                                                        </xsl:choose>                                                   </xsl:for-each>                                             </fo:block>                                         </fo:table-cell>                                        </fo:table-row>                                 </xsl:variable>                                 <xsl:choose>                                        <xsl:when test="string($altova:tablerows)">                                         <xsl:copy-of select="$altova:tablerows"/>                                       </xsl:when>                                     <xsl:otherwise>                                         <fo:table-row>                                              <fo:table-cell>                                                 <fo:block/>                                             </fo:table-cell>                                            </fo:table-row>                                     </xsl:otherwise>                                    </xsl:choose>                               </fo:table-body>                            </fo:table>                     </xsl:if>                   </xsl:when>                 <xsl:otherwise>                     <fo:table font-family="Arial" font-size="9pt" table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="2pt">                           <fo:table-column column-width="proportional-column-width(1)"/>                          <fo:table-column column-width="proportional-column-width(1)"/>                          <xsl:variable name="altova:CurrContextGrid_269" select="."/>                            <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">                              <xsl:variable name="altova:tablerows">                                  <fo:table-row font-family="Arial" font-size="9pt" alignment-baseline="before-edge">                                     <fo:table-cell font-family="Arial" font-size="9pt" border="solid 1pt gray" padding="2pt" display-align="center">                                            <fo:block text-align="left">                                                <fo:inline font-family="Arial" font-size="9pt">                                                 <xsl:text>Totale aantal op de lijst</xsl:text>                                              </fo:inline>                                                <fo:block/>                                             <fo:inline font-family="Arial" font-size="9pt">                                                 <xsl:text>uitgebrachte geldige stemmen</xsl:text>                                               </fo:inline>                                                <fo:block/>                                         </fo:block>                                     </fo:table-cell>                                        <fo:table-cell font-family="Arial" font-size="9pt" border="solid 1pt gray" padding="2pt" display-align="after">                                         <fo:block text-align="left">                                                <xsl:for-each select="rg:ValidVotes">                                                   <xsl:variable name="value-of-template_270">                                                     <xsl:apply-templates/>                                                  </xsl:variable>                                                 <xsl:choose>                                                        <xsl:when test="contains(string($value-of-template_270),'&#x200B;')">                                                           <fo:block font-family="Arial" font-size="9pt">                                                              <xsl:copy-of select="$value-of-template_270"/>                                                          </fo:block>                                                     </xsl:when>                                                     <xsl:otherwise>                                                         <fo:inline font-family="Arial" font-size="9pt">                                                             <xsl:copy-of select="$value-of-template_270"/>                                                          </fo:inline>                                                        </xsl:otherwise>                                                    </xsl:choose>                                               </xsl:for-each>                                         </fo:block>                                     </fo:table-cell>                                    </fo:table-row>                             </xsl:variable>                             <xsl:choose>                                    <xsl:when test="string($altova:tablerows)">                                     <xsl:copy-of select="$altova:tablerows"/>                                   </xsl:when>                                 <xsl:otherwise>                                     <fo:table-row>                                          <fo:table-cell>                                             <fo:block/>                                         </fo:table-cell>                                        </fo:table-row>                                 </xsl:otherwise>                                </xsl:choose>                           </fo:table-body>                        </fo:table>                 </xsl:otherwise>                </xsl:choose>               <xsl:call-template name="LineBreakPdf"/>                <fo:block/>             <fo:block break-after="page">                   <fo:leader leader-pattern="space"/>             </fo:block>         </xsl:for-each>     </fo:block> </xsl:template> <xsl:template name="WaterschapTypeName">        <xsl:param name="contestId" select="//kr:ElectionDomain/@Id"/>      <xsl:param name="isBold" select="0"/>       <xsl:param name="font-size" select="&apos;small&apos;"/>        <xsl:choose>            <xsl:when test="$font-size = &apos;medium&apos;">               <xsl:choose>                    <xsl:when test="$isBold = 0">                       <xsl:choose>                            <xsl:when test="$contestId = 2">                                <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="medium">                                          <xsl:text>wetterskip</xsl:text>                                     </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="medium">                                          <xsl:value-of select="$RP_WaterschapTypeName_Wetterskip"/>                                      </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:when>                         <xsl:when test="$contestId = 9  or $contestId = 11">                                <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="medium">                                          <xsl:text>hoogheemraadschap</xsl:text>                                      </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="medium">                                          <xsl:value-of select="$RP_WaterschapTypeName_Hoogheemraadschap"/>                                       </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:when>                         <xsl:when test="$contestId = 12 or $contestId = 13 or $contestId = 14">                             <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="medium">                                          <xsl:text>hoogheemraadschap van</xsl:text>                                      </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="medium">                                          <xsl:value-of select="$RP_WaterschapTypeName_Hoogheemraadschap_van"/>                                       </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:when>                         <xsl:otherwise>                             <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="medium">                                          <xsl:text>waterschap</xsl:text>                                     </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="medium">                                          <xsl:value-of select="$RP_WaterschapTypeName_Waterschap"/>                                      </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:otherwise>                     <xsl:choose>                            <xsl:when test="$contestId = 2">                                <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="medium" font-weight="bold">                                           <xsl:text>wetterskip</xsl:text>                                     </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="medium" font-weight="bold">                                           <xsl:value-of select="$RP_WaterschapTypeName_Wetterskip"/>                                      </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:when>                         <xsl:when test="$contestId = 9  or $contestId = 11">                                <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="medium" font-weight="bold">                                           <xsl:text>hoogheemraadschap</xsl:text>                                      </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="medium" font-weight="bold">                                           <xsl:value-of select="$RP_WaterschapTypeName_Hoogheemraadschap"/>                                       </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:when>                         <xsl:when test="$contestId = 12 or $contestId = 13 or $contestId = 14">                             <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="medium" font-weight="bold">                                           <xsl:text>hoogheemraadschap van</xsl:text>                                      </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="medium" font-weight="bold">                                           <xsl:value-of select="$RP_WaterschapTypeName_Hoogheemraadschap_van"/>                                       </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:when>                         <xsl:otherwise>                             <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="medium" font-weight="bold">                                           <xsl:text>waterschap</xsl:text>                                     </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="medium" font-weight="bold">                                           <xsl:value-of select="$RP_WaterschapTypeName_Waterschap"/>                                      </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:otherwise>                        </xsl:choose>                   </xsl:otherwise>                </xsl:choose>           </xsl:when>         <xsl:otherwise>             <xsl:choose>                    <xsl:when test="$isBold = 0">                       <xsl:choose>                            <xsl:when test="$contestId = 2">                                <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>wetterskip</xsl:text>                                     </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:value-of select="$RP_WaterschapTypeName_Wetterskip"/>                                      </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:when>                         <xsl:when test="$contestId = 9  or $contestId = 11">                                <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>hoogheemraadschap</xsl:text>                                      </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:value-of select="$RP_WaterschapTypeName_Hoogheemraadschap"/>                                       </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:when>                         <xsl:when test="$contestId = 12 or $contestId = 13 or $contestId = 14">                             <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>hoogheemraadschap van</xsl:text>                                      </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:value-of select="$RP_WaterschapTypeName_Hoogheemraadschap_van"/>                                       </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:when>                         <xsl:otherwise>                             <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>waterschap</xsl:text>                                     </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:value-of select="$RP_WaterschapTypeName_Waterschap"/>                                      </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:otherwise>                        </xsl:choose>                   </xsl:when>                 <xsl:otherwise>                     <xsl:choose>                            <xsl:when test="$contestId = 2">                                <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                          <xsl:text>wetterskip</xsl:text>                                     </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                          <xsl:value-of select="$RP_WaterschapTypeName_Wetterskip"/>                                      </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:when>                         <xsl:when test="$contestId = 9  or $contestId = 11">                                <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                          <xsl:text>hoogheemraadschap</xsl:text>                                      </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                          <xsl:value-of select="$RP_WaterschapTypeName_Hoogheemraadschap"/>                                       </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:when>                         <xsl:when test="$contestId = 12 or $contestId = 13 or $contestId = 14">                             <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                          <xsl:text>hoogheemraadschap van</xsl:text>                                      </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                          <xsl:value-of select="$RP_WaterschapTypeName_Hoogheemraadschap_van"/>                                       </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:when>                         <xsl:otherwise>                             <xsl:choose>                                    <xsl:when test="$lang=0">                                       <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                          <xsl:text>waterschap</xsl:text>                                     </fo:inline>                                    </xsl:when>                                 <xsl:otherwise>                                     <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                          <xsl:value-of select="$RP_WaterschapTypeName_Waterschap"/>                                      </fo:inline>                                    </xsl:otherwise>                                </xsl:choose>                           </xsl:otherwise>                        </xsl:choose>                   </xsl:otherwise>                </xsl:choose>           </xsl:otherwise>        </xsl:choose>   </xsl:template> <xsl:template name="CommitteeMemberNames">      <xsl:param name="membertitle" select="&apos;&apos;"/>       <xsl:param name="no_of_lines" select="14"/>     <fo:table font-family="Arial" font-size="9pt" table-layout="fixed" width="100%" border-spacing="0">         <fo:table-column column-width="226pt"/>         <fo:table-column column-width="24pt"/>          <fo:table-column column-width="24pt"/>          <fo:table-column column-width="16pt"/>          <fo:table-column column-width="24pt"/>          <fo:table-column column-width="24pt"/>          <fo:table-column column-width="16pt"/>          <fo:table-column column-width="24pt"/>          <fo:table-column column-width="24pt"/>          <fo:table-column column-width="24pt"/>          <fo:table-column column-width="24pt"/>          <fo:table-column column-width="1pt"/>           <xsl:variable name="altova:CurrContextGrid_271" select="."/>            <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">              <xsl:variable name="altova:tablerows">                  <fo:table-row font-family="Arial" font-size="9pt">                      <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                          <fo:block text-align="right">                               <fo:inline font-family="Arial" font-size="9pt" font-style="italic" font-weight="bold" margin-right="20pt">                                  <xsl:text>Datum:</xsl:text>                             </fo:inline>                            </fo:block>                     </fo:table-cell>                        <fo:table-cell number-columns-spanned="2" border-top="1pt solid #cccccc" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="center">                              <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>dag</xsl:text>                                </fo:inline>                            </fo:block>                     </fo:table-cell>                        <fo:table-cell background-color="#e8e8e8" border-left="1pt solid #cccccc" border-right="1pt solid #cccccc" border-top="1pt solid #cccccc" font-family="Arial" font-size="9pt" padding="1" display-align="center">                           <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell number-columns-spanned="2" border-top="1pt solid #cccccc" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="center">                              <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>maand</xsl:text>                              </fo:inline>                            </fo:block>                     </fo:table-cell>                        <fo:table-cell background-color="#e8e8e8" border-left="1pt solid #cccccc" border-right="1pt solid #cccccc" border-top="1pt solid #cccccc" font-family="Arial" font-size="9pt" padding="1" display-align="center">                           <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell number-columns-spanned="4" border-top="1pt solid #cccccc" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="center">                              <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>jaar</xsl:text>                               </fo:inline>                            </fo:block>                     </fo:table-cell>                        <fo:table-cell border-top="1pt solid #cccccc" font-family="Arial" font-size="9pt" padding="1" display-align="center">                           <fo:block text-align="center"/>                     </fo:table-cell>                    </fo:table-row>                 <fo:table-row font-family="Arial" font-size="9pt" line-height="8pt">                        <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                          <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell number-columns-spanned="2" border-left="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell background-color="#e8e8e8" border-left="1pt solid #000" font-family="Arial" font-size="9pt" line-height="8pt" padding="1" display-align="center">                            <fo:block text-align="left">                                <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>&#160;</xsl:text>                             </fo:inline>                            </fo:block>                     </fo:table-cell>                        <fo:table-cell number-columns-spanned="2" border-left="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell background-color="#e8e8e8" border-left="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                          <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell number-columns-spanned="4" border-left="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell border-left="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                         <fo:block text-align="left"/>                       </fo:table-cell>                    </fo:table-row>                 <fo:table-row font-family="Arial" font-size="9pt" line-height="8pt">                        <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                          <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-right="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-right="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell background-color="#e8e8e8" font-family="Arial" font-size="9pt" line-height="8pt" padding="1" display-align="center">                         <fo:block text-align="left">                                <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>&#160;</xsl:text>                             </fo:inline>                            </fo:block>                     </fo:table-cell>                        <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-right="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-right="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell background-color="#e8e8e8" font-family="Arial" font-size="9pt" padding="1" display-align="center">                           <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-right="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-right="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-right="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-right="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                          <fo:block text-align="left"/>                       </fo:table-cell>                    </fo:table-row>             </xsl:variable>             <xsl:choose>                    <xsl:when test="string($altova:tablerows)">                     <xsl:copy-of select="$altova:tablerows"/>                   </xsl:when>                 <xsl:otherwise>                     <fo:table-row>                          <fo:table-cell>                             <fo:block/>                         </fo:table-cell>                        </fo:table-row>                 </xsl:otherwise>                </xsl:choose>           </fo:table-body>        </fo:table>     <fo:block>          <fo:leader leader-pattern="space"/>     </fo:block>     <fo:table font-family="Arial" font-size="9pt" table-layout="fixed" width="100%" border-spacing="0">         <fo:table-column column-width="48pt"/>          <fo:table-column column-width="386pt"/>         <xsl:variable name="altova:CurrContextGrid_272" select="."/>            <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">              <xsl:variable name="altova:tablerows">                  <fo:table-row font-family="Arial" font-size="9pt">                      <fo:table-cell background-color="#e8e8e8" border-top="1pt solid #cccccc" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell background-color="#e8e8e8" border-top="1pt solid #cccccc" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="left">                                <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:text>Naam voorzitter</xsl:text>                                </fo:inline>                            </fo:block>                     </fo:table-cell>                    </fo:table-row>                 <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 7">                           <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="30pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>1.</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &lt; 8">                           <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="60pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>1.</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <fo:table-row font-family="Arial" font-size="9pt">                      <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                          <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                          <fo:block text-align="left"/>                       </fo:table-cell>                    </fo:table-row>                 <fo:table-row font-family="Arial" font-size="9pt">                      <fo:table-cell background-color="#e8e8e8" border-top="1pt solid #cccccc" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell background-color="#e8e8e8" border-top="1pt solid #cccccc" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="left">                                <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:text>Naam </xsl:text>                              </fo:inline>                                <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:value-of select="$membertitle"/>                               </fo:inline>                            </fo:block>                     </fo:table-cell>                    </fo:table-row>                 <xsl:choose>                        <xsl:when test="$no_of_lines &lt; 8">                           <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="60pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>2.</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 2 and $no_of_lines &lt; 8">                           <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="60pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>3.</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 3 and $no_of_lines &lt; 8">                           <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="60pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>4.</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 4 and $no_of_lines &lt; 8">                           <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="60pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>5.</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 5 and $no_of_lines &lt; 8">                           <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="60pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>6.</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 6 and $no_of_lines &lt; 8">                           <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="60pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>7.</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 7">                           <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="30pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>2.</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 7">                           <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="30pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>3.</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 7">                           <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="30pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>4.</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 7">                           <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="30pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>5.</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 7">                           <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="30pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>6.</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 7">                           <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="30pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>7.</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 7">                           <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="30pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>8.</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 8">                           <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="30pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>9.</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 9">                           <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="30pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>10.</xsl:text>                                        </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 10">                          <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="30pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>11.</xsl:text>                                        </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 11">                          <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="30pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>12.</xsl:text>                                        </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 12">                          <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="30pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>13.</xsl:text>                                        </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 13">                          <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="30pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>14.</xsl:text>                                        </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>               </xsl:variable>             <xsl:choose>                    <xsl:when test="string($altova:tablerows)">                     <xsl:copy-of select="$altova:tablerows"/>                   </xsl:when>                 <xsl:otherwise>                     <fo:table-row>                          <fo:table-cell>                             <fo:block/>                         </fo:table-cell>                        </fo:table-row>                 </xsl:otherwise>                </xsl:choose>           </fo:table-body>        </fo:table> </xsl:template> <xsl:template name="CommitteeMemberSignatures">     <xsl:param name="membertitle" select="&apos;&apos;"/>       <xsl:param name="no_of_lines" select="14"/>     <fo:table font-family="Arial" font-size="9pt" table-layout="fixed" width="100%" border-spacing="0">         <fo:table-column column-width="226pt"/>         <fo:table-column column-width="24pt"/>          <fo:table-column column-width="24pt"/>          <fo:table-column column-width="16pt"/>          <fo:table-column column-width="24pt"/>          <fo:table-column column-width="24pt"/>          <fo:table-column column-width="16pt"/>          <fo:table-column column-width="24pt"/>          <fo:table-column column-width="24pt"/>          <fo:table-column column-width="24pt"/>          <fo:table-column column-width="24pt"/>          <fo:table-column column-width="1pt"/>           <xsl:variable name="altova:CurrContextGrid_273" select="."/>            <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">              <xsl:variable name="altova:tablerows">                  <fo:table-row font-family="Arial" font-size="9pt">                      <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                          <fo:block text-align="right">                               <fo:inline font-family="Arial" font-size="9pt" font-style="italic" font-weight="bold" margin-right="20pt">                                  <xsl:text>Datum:</xsl:text>                             </fo:inline>                            </fo:block>                     </fo:table-cell>                        <fo:table-cell number-columns-spanned="2" border-top="1pt solid #cccccc" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="center">                              <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>dag</xsl:text>                                </fo:inline>                            </fo:block>                     </fo:table-cell>                        <fo:table-cell background-color="#e8e8e8" border-left="1pt solid #cccccc" border-right="1pt solid #cccccc" border-top="1pt solid #cccccc" font-family="Arial" font-size="9pt" padding="1" display-align="center">                           <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell number-columns-spanned="2" border-top="1pt solid #cccccc" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="center">                              <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>maand</xsl:text>                              </fo:inline>                            </fo:block>                     </fo:table-cell>                        <fo:table-cell background-color="#e8e8e8" border-left="1pt solid #cccccc" border-right="1pt solid #cccccc" border-top="1pt solid #cccccc" font-family="Arial" font-size="9pt" padding="1" display-align="center">                           <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell number-columns-spanned="4" border-top="1pt solid #cccccc" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="center">                              <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>jaar</xsl:text>                               </fo:inline>                            </fo:block>                     </fo:table-cell>                        <fo:table-cell border-top="1pt solid #cccccc" font-family="Arial" font-size="9pt" padding="1" display-align="center">                           <fo:block text-align="center"/>                     </fo:table-cell>                    </fo:table-row>                 <fo:table-row font-family="Arial" font-size="9pt" line-height="8pt">                        <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                          <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell number-columns-spanned="2" border-left="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell background-color="#e8e8e8" border-left="1pt solid #000" font-family="Arial" font-size="9pt" line-height="8pt" padding="1" display-align="center">                            <fo:block text-align="left">                                <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>&#160;</xsl:text>                             </fo:inline>                            </fo:block>                     </fo:table-cell>                        <fo:table-cell number-columns-spanned="2" border-left="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell background-color="#e8e8e8" border-left="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                          <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell number-columns-spanned="4" border-left="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell border-left="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                         <fo:block text-align="left"/>                       </fo:table-cell>                    </fo:table-row>                 <fo:table-row font-family="Arial" font-size="9pt" line-height="8pt">                        <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                          <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-right="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-right="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell background-color="#e8e8e8" font-family="Arial" font-size="9pt" line-height="8pt" padding="1" display-align="center">                         <fo:block text-align="left">                                <fo:inline font-family="Arial" font-size="9pt">                                 <xsl:text>&#160;</xsl:text>                             </fo:inline>                            </fo:block>                     </fo:table-cell>                        <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-right="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-right="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell background-color="#e8e8e8" font-family="Arial" font-size="9pt" padding="1" display-align="center">                           <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-right="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-right="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-right="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-right="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                          <fo:block text-align="left"/>                       </fo:table-cell>                    </fo:table-row>             </xsl:variable>             <xsl:choose>                    <xsl:when test="string($altova:tablerows)">                     <xsl:copy-of select="$altova:tablerows"/>                   </xsl:when>                 <xsl:otherwise>                     <fo:table-row>                          <fo:table-cell>                             <fo:block/>                         </fo:table-cell>                        </fo:table-row>                 </xsl:otherwise>                </xsl:choose>           </fo:table-body>        </fo:table>     <fo:block>          <fo:leader leader-pattern="space"/>     </fo:block>     <fo:table font-family="Arial" font-size="9pt" table-layout="fixed" width="100%" border-spacing="0">         <fo:table-column column-width="48pt"/>          <fo:table-column column-width="386pt"/>         <xsl:variable name="altova:CurrContextGrid_274" select="."/>            <fo:table-body font-family="Arial" font-size="9pt" start-indent="0pt">              <xsl:variable name="altova:tablerows">                  <fo:table-row font-family="Arial" font-size="9pt">                      <fo:table-cell background-color="#e8e8e8" border-top="1pt solid #cccccc" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell background-color="#e8e8e8" border-top="1pt solid #cccccc" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="left">                                <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:text>Handtekening voorzitter</xsl:text>                                </fo:inline>                            </fo:block>                     </fo:table-cell>                    </fo:table-row>                 <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 7">                           <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="30pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>1.</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &lt; 8">                           <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="60pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>1.</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <fo:table-row font-family="Arial" font-size="9pt">                      <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                          <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell font-family="Arial" font-size="9pt" padding="1" display-align="center">                          <fo:block text-align="left"/>                       </fo:table-cell>                    </fo:table-row>                 <fo:table-row font-family="Arial" font-size="9pt">                      <fo:table-cell background-color="#e8e8e8" border-top="1pt solid #cccccc" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="left"/>                       </fo:table-cell>                        <fo:table-cell background-color="#e8e8e8" border-top="1pt solid #cccccc" font-family="Arial" font-size="9pt" padding="1" display-align="center">                            <fo:block text-align="left">                                <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:text>Handtekening </xsl:text>                              </fo:inline>                                <fo:inline font-family="Arial" font-size="9pt" font-weight="bold">                                  <xsl:value-of select="$membertitle"/>                               </fo:inline>                            </fo:block>                     </fo:table-cell>                    </fo:table-row>                 <xsl:choose>                        <xsl:when test="$no_of_lines &lt; 8">                           <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="60pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>2.</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 2 and $no_of_lines &lt; 8">                           <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="60pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>3.</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 3 and $no_of_lines &lt; 8">                           <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="60pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>4.</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 4 and $no_of_lines &lt; 8">                           <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="60pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>5.</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 5 and $no_of_lines &lt; 8">                           <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="60pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>6.</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 6 and $no_of_lines &lt; 8">                           <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="60pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>7.</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 7">                           <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="30pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>2.</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 7">                           <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="30pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>3.</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 7">                           <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="30pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>4.</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 7">                           <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="30pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>5.</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 7">                           <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="30pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>6.</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 7">                           <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="30pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>7.</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 7">                           <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="30pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>8.</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 8">                           <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="30pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>9.</xsl:text>                                     </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 9">                           <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="30pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>10.</xsl:text>                                        </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 10">                          <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="30pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>11.</xsl:text>                                        </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 11">                          <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="30pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>12.</xsl:text>                                        </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 12">                          <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="30pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>13.</xsl:text>                                        </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>                   <xsl:choose>                        <xsl:when test="$no_of_lines &gt; 13">                          <fo:table-row font-family="Arial" font-size="9pt">                              <fo:table-cell border-bottom="1pt solid #000" border-right="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" line-height="30pt" padding="1" display-align="center">                                  <fo:block text-align="left">                                        <fo:inline font-family="Arial" font-size="9pt">                                         <xsl:text>14.</xsl:text>                                        </fo:inline>                                    </fo:block>                             </fo:table-cell>                                <fo:table-cell border-bottom="1pt solid #000" border-left="1pt solid #000" border-top="1pt solid #000" font-family="Arial" font-size="9pt" padding="1" display-align="center">                                  <fo:block text-align="left"/>                               </fo:table-cell>                            </fo:table-row>                     </xsl:when>                     <xsl:otherwise/>                    </xsl:choose>               </xsl:variable>             <xsl:choose>                    <xsl:when test="string($altova:tablerows)">                     <xsl:copy-of select="$altova:tablerows"/>                   </xsl:when>                 <xsl:otherwise>                     <fo:table-row>                          <fo:table-cell>                             <fo:block/>                         </fo:table-cell>                        </fo:table-row>                 </xsl:otherwise>                </xsl:choose>           </fo:table-body>        </fo:table> </xsl:template> <xsl:template name="altova:double-backslash">       <xsl:param name="text"/>        <xsl:param name="text-length"/>     <xsl:variable name="text-after-bs" select="substring-after($text, '\')"/>       <xsl:variable name="text-after-bs-length" select="string-length($text-after-bs)"/>      <xsl:choose>            <xsl:when test="$text-after-bs-length = 0">             <xsl:choose>                    <xsl:when test="substring($text, $text-length) = '\'">                      <xsl:value-of select="concat(substring($text,1,$text-length - 1), '\\')"/>                  </xsl:when>                 <xsl:otherwise>                     <xsl:value-of select="$text"/>                  </xsl:otherwise>                </xsl:choose>           </xsl:when>         <xsl:otherwise>             <xsl:value-of select="concat(substring($text,1,$text-length - $text-after-bs-length - 1), '\\')"/>              <xsl:call-template name="altova:double-backslash">                  <xsl:with-param name="text" select="$text-after-bs"/>                   <xsl:with-param name="text-length" select="$text-after-bs-length"/>             </xsl:call-template>            </xsl:otherwise>        </xsl:choose>   </xsl:template> <xsl:template name="altova:MakeValueAbsoluteIfPixels">      <xsl:param name="sValue"/>      <xsl:variable name="sBeforePx" select="substring-before($sValue, 'px')"/>       <xsl:choose>            <xsl:when test="$sBeforePx">                <xsl:variable name="nLengthOfInteger">                  <xsl:call-template name="altova:GetCharCountOfIntegerAtEndOfString">                        <xsl:with-param name="sText" select="$sBeforePx"/>                  </xsl:call-template>                </xsl:variable>             <xsl:variable name="nPosOfInteger" select="string-length($sBeforePx) - $nLengthOfInteger + 1"/>             <xsl:variable name="nValuePx" select="substring($sBeforePx, $nPosOfInteger)"/>              <xsl:variable name="nValueIn" select="number($nValuePx) div number($altova:nPxPerIn)"/>             <xsl:variable name="nLengthBeforeInteger" select="string-length($sBeforePx) - $nLengthOfInteger"/>              <xsl:variable name="sRest">                 <xsl:call-template name="altova:MakeValueAbsoluteIfPixels">                     <xsl:with-param name="sValue" select="substring-after($sValue, 'px')"/>                 </xsl:call-template>                </xsl:variable>             <xsl:value-of select="concat(substring($sBeforePx, 1, $nLengthBeforeInteger), string($nValueIn), 'in', $sRest)"/>           </xsl:when>         <xsl:otherwise>             <xsl:value-of select="$sValue"/>            </xsl:otherwise>        </xsl:choose>   </xsl:template> <xsl:template name="altova:GetCharCountOfIntegerAtEndOfString">     <xsl:param name="sText"/>       <xsl:variable name="sLen" select="string-length($sText)"/>      <xsl:variable name="cLast" select="substring($sText, $sLen)"/>      <xsl:choose>            <xsl:when test="number($cLast) &gt;= 0 and number($cLast) &lt;= 9">             <xsl:variable name="nResultOfRest">                 <xsl:call-template name="altova:GetCharCountOfIntegerAtEndOfString">                        <xsl:with-param name="sText" select="substring($sText, 1, $sLen - 1)"/>                 </xsl:call-template>                </xsl:variable>             <xsl:value-of select="$nResultOfRest + 1"/>         </xsl:when>         <xsl:otherwise>             <xsl:text>0</xsl:text>          </xsl:otherwise>        </xsl:choose>   </xsl:template></xsl:stylesheet>