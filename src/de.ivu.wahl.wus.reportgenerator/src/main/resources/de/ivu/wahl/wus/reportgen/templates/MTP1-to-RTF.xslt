<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2011 - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:clitype="clitype" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:iso4217="http://www.xbrl.org/2003/iso4217" xmlns:ix="http://www.xbrl.org/2008/inlineXBRL" xmlns:java="java" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:mtp="http://www.ivu.de" xmlns:xbrldi="http://xbrl.org/2006/xbrldi" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:altova="http://www.altova.com" exclude-result-prefixes="clitype fn iso4217 ix java link mtp xbrldi xbrli xlink xs xsi altova">
    <xsl:import href="D:/projekte/de.ivu.wahl.wus.reportgenerator/src/main/resources/de/ivu/wahl/wus/reportgen/templates/MTP1-text.xslt"/>
  <xsl:output method="text" encoding="UTF-8"/>
    <xsl:param name="SV_OutputFormat" select="'RTF'"/>
    <xsl:param name="isDraft" select="'true'"/>
    <xsl:variable name="XML" select="/"/>
    <xsl:variable name="altova:nPxPerIn" select="96"/>
    <xsl:template match="/">
        <xsl:variable name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:variable name="templatetablelevel" select="0"/>
        <xsl:text>{\rtf1\ansi\deff0</xsl:text>
        <xsl:text>{\fonttbl{\f0\fnil Times New Roman;}{\f1\fnil Arial;}{\f2\fnil Symbol;}{\f3\fnil Wingdings;}}</xsl:text>
        <xsl:text>{\colortbl;\red0\green0\blue0;\red0\green0\blue128;\red0\green0\blue139;\red0\green0\blue205;\red0\green0\blue255;\red0\green100\blue0;\red0\green128\blue0;\red0\green128\blue128;\red0\green139\blue139;\red0\green191\blue255;\red0\green206\blue209;\red0\green250\blue154;\red0\green255\blue0;\red0\green255\blue127;\red0\green255\blue255;\red0\green255\blue255;\red25\green25\blue112;\red30\green144\blue255;\red32\green178\blue170;\red34\green139\blue34;\red46\green139\blue87;\red47\green79\blue79;\red50\green205\blue50;\red60\green179\blue113;\red64\green224\blue208;\red65\green105\blue225;\red70\green130\blue180;\red72\green61\blue139;\red72\green209\blue204;\red75\green0\blue130;\red85\green107\blue47;\red95\green158\blue160;\red100\green149\blue237;\red102\green205\blue170;\red105\green105\blue105;\red106\green90\blue205;\red107\green142\blue35;\red112\green128\blue144;\red119\green136\blue153;\red123\green104\blue238;\red124\green252\blue0;\red127\green255\blue0;\red127\green255\blue212;\red128\green0\blue0;\red128\green0\blue128;\red128\green128\blue0;\red128\green128\blue128;\red135\green206\blue235;\red135\green206\blue250;\red138\green43\blue226;\red139\green0\blue0;\red139\green0\blue139;\red139\green69\blue19;\red143\green188\blue139;\red144\green238\blue144;\red147\green112\blue219;\red148\green0\blue211;\red152\green251\blue152;\red153\green50\blue204;\red154\green205\blue50;\red160\green82\blue45;\red165\green42\blue42;\red169\green169\blue169;\red173\green216\blue230;\red173\green255\blue47;\red175\green238\blue238;\red176\green196\blue222;\red176\green224\blue230;\red178\green34\blue34;\red184\green134\blue11;\red186\green85\blue211;\red188\green143\blue143;\red189\green183\blue107;\red192\green192\blue192;\red199\green21\blue133;\red205\green92\blue92;\red205\green133\blue63;\red210\green105\blue30;\red210\green180\blue140;\red211\green211\blue211;\red216\green191\blue216;\red218\green112\blue214;\red218\green165\blue32;\red219\green112\blue147;\red220\green20\blue60;\red220\green220\blue220;\red221\green160\blue221;\red222\green184\blue135;\red224\green255\blue255;\red230\green230\blue250;\red233\green150\blue122;\red238\green130\blue238;\red238\green232\blue170;\red240\green128\blue128;\red240\green230\blue140;\red240\green248\blue255;\red240\green255\blue240;\red240\green255\blue255;\red244\green164\blue96;\red245\green222\blue179;\red245\green245\blue220;\red245\green245\blue245;\red245\green255\blue250;\red248\green248\blue255;\red250\green128\blue114;\red250\green235\blue215;\red250\green240\blue230;\red250\green250\blue210;\red253\green245\blue230;\red255\green0\blue0;\red255\green0\blue255;\red255\green0\blue255;\red255\green20\blue147;\red255\green69\blue0;\red255\green99\blue71;\red255\green105\blue180;\red255\green127\blue80;\red255\green140\blue0;\red255\green160\blue122;\red255\green165\blue0;\red255\green182\blue193;\red255\green192\blue203;\red255\green215\blue0;\red255\green218\blue185;\red255\green222\blue173;\red255\green228\blue181;\red255\green228\blue196;\red255\green228\blue225;\red255\green235\blue205;\red255\green239\blue213;\red255\green240\blue245;\red255\green245\blue238;\red255\green248\blue220;\red255\green250\blue205;\red255\green250\blue240;\red255\green250\blue250;\red255\green255\blue0;\red255\green255\blue224;\red255\green255\blue240;\red255\green255\blue255;\red170\green170\blue170;\red172\green168\blue153;\red236\green233\blue216;}</xsl:text>
        <xsl:text>{\stylesheet</xsl:text>
        <xsl:text>{\s0\f0\fs24\sl0\snext0 Normal;}</xsl:text>
        <xsl:text>{\s1\f0\fs24\sl0\snext0 Paragraph;}</xsl:text>
        <xsl:text>{\s2\f0\fs24\i\snext0 Address;}</xsl:text>
        <xsl:text>{\s3\qc\f0\fs24\snext0 Center;}</xsl:text>
        <xsl:text>{\s4\lin720\f0\fs24\snext0 Blockquote;}</xsl:text>
        <xsl:text>{\s5\lin60\rin60\brdrs\brdrcf47\brdrw15\f0\fs24\snext0 Fieldset;}</xsl:text>
        <xsl:text>{\s6\f1\fs24\snext0 Preformatted;}</xsl:text>
        <xsl:text>{\s7\f1\fs24\snext0 Preformatted and wrapping;}</xsl:text>
        <xsl:text>{\s8\f1\fs48\b\snext0 Heading 1;}</xsl:text>
        <xsl:text>{\s9\f1\fs36\b\snext0 Heading 2;}</xsl:text>
        <xsl:text>{\s10\f1\fs26\b\snext0 Heading 3;}</xsl:text>
        <xsl:text>{\s11\f1\fs22\b\sl0\fs26\b\snext0 Heading 4;}</xsl:text>
        <xsl:text>{\s12\f1\fs18\b\snext0 Heading 5;}</xsl:text>
        <xsl:text>{\s13\f1\fs16\b\snext0 Heading 6;}</xsl:text>
        <xsl:text>{\s15\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s16\sl0\snext0 div;}</xsl:text>
        <xsl:text>{\s17\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s18\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s19\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s21\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s22\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s24\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s25\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s27\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s28\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s30\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s31\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s33\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s34\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s36\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s37\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s39\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s40\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s42\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s43\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s45\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s46\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s47\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s48\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s50\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s51\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s53\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s54\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s56\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s57\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s59\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s60\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s62\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s63\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s65\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s66\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s68\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s69\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s71\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s72\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s74\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s75\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s77\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s78\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s80\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s81\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s83\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s84\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s86\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s87\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s89\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s90\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s92\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s93\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s101\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s102\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s126\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s127\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s130\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s131\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s133\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s134\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s136\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s137\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s145\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s146\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s148\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s149\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s151\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s152\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s154\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s155\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s157\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s158\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s166\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s167\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s169\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s170\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s183\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s184\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s186\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s187\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s189\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s190\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s203\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s204\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s206\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s207\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s213\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s214\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s216\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s217\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s219\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s220\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s226\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s227\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s229\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s230\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s259\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s260\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s284\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s285\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s287\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s288\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s290\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s291\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s297\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s298\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s312\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s313\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s317\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s318\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s320\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s321\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s325\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s326\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s328\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s329\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s331\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s332\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s346\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s347\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\s349\sl0\f1\snext0 *;}</xsl:text>
        <xsl:text>{\s350\sl0\snext0 p;}</xsl:text>
        <xsl:text>{\*\cs20\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs23\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs26\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs29\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs32\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs35\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs38\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs41\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs44\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs49\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs52\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs55\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs58\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs61\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs64\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs67\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs70\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs73\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs76\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs79\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs82\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs85\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs88\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs91\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs95\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs96\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs97\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs98\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs99\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs100\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs103\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs104\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs105\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs106\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs107\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs108\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs109\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs110\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs111\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs112\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs113\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs114\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs115\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs116\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs117\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs118\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs119\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs120\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs121\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs122\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs123\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs124\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs125\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs128\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs129\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs132\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs135\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs139\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs140\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs141\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs142\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs143\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs144\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs147\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs150\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs153\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs156\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs160\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs161\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs162\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs163\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs164\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs165\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs168\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs172\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs173\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs174\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs175\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs176\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs177\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs178\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs179\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs180\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs181\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs182\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs185\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs188\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs192\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs193\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs194\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs195\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs196\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs197\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs198\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs199\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs200\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs201\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs202\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs205\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs209\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs210\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs211\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs212\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs215\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs218\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs222\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs223\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs224\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs225\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs228\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs232\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs233\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs234\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs235\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs236\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs237\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs238\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs239\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs240\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs241\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs242\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs243\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs244\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs245\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs246\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs247\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs248\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs249\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs250\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs251\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs252\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs253\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs254\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs255\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs256\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs257\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs258\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs262\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs263\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs264\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs265\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs266\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs267\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs268\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs269\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs270\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs271\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs272\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs273\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs274\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs275\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs276\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs277\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs278\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs279\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs280\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs281\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs282\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs283\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs286\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs289\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs293\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs294\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs295\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs296\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs300\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs301\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs302\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs303\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs304\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs305\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs306\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs307\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs308\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs309\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs310\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs311\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs315\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs316\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs319\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs323\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs324\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs327\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs330\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs334\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs335\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs337\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs338\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs339\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs340\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs341\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs342\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs343\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs344\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs345\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs348\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs352\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs353\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs354\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs355\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs356\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs357\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs358\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs359\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs360\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs361\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs362\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs363\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs364\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs365\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs366\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs367\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs368\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs369\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs370\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs372\f1\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\ts94\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts138\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts159\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts171\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts191\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts208\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts221\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts231\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts261\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts292\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts299\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts314\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts322\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts333\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts336\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts351\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts371\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts373\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>}</xsl:text>
        <xsl:text>{\*\generator Altova StyleVision Enterprise Edition;}\viewkind1\viewzk0\viewscale100\newtblstyruls </xsl:text>
        <xsl:text>\dntblnsbdb\fs24\f0 </xsl:text>
        <xsl:call-template name="altova:DocumentSection_04979538">
            <xsl:with-param name="altova:nMaxWidthIn" select="7.07"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel"/>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
    </xsl:template>
    <xsl:template name="altova:DocumentSection_04979538">
        <xsl:param name="altova:nMaxWidthIn"/>
        <xsl:param name="templatetablelevel"/>
        <xsl:text>\sectd\facingp\pgwsxn11900\pghsxn16820\margtsxn1120\marglsxn860\margbsxn1720\margrsxn860\headery0\footery0\cols1\colsx720\pgndec</xsl:text>
        <xsl:text>{</xsl:text>
        <xsl:text>\headerl </xsl:text>
        <xsl:call-template name="altova:Section_04979538_HeaderLeft"/>
        <xsl:text>}</xsl:text>
        <xsl:text>{</xsl:text>
        <xsl:text>\headerr </xsl:text>
        <xsl:call-template name="altova:Section_04979538_HeaderRight"/>
        <xsl:text>}</xsl:text>
        <xsl:text>{</xsl:text>
        <xsl:text>\footerl </xsl:text>
        <xsl:call-template name="altova:Section_04979538_FooterLeft"/>
        <xsl:text>}</xsl:text>
        <xsl:text>{</xsl:text>
        <xsl:text>\footerr </xsl:text>
        <xsl:call-template name="altova:Section_04979538_FooterRight"/>
        <xsl:text>}</xsl:text>
        <xsl:text>\par</xsl:text>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 0"/>
        <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1 </xsl:text>
        <xsl:for-each select="$XML">
            <xsl:for-each select="mtp:Registration">
                <xsl:text>\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s3\qc\f0\fs24\s17\sl0\f1 </xsl:text>
                <xsl:if test="$SV_OutputFormat = &apos;PDF&apos;">
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s3\qc\f0\fs24\s17\sl0\f1\s0\f0\fs24\sl0\s18\s19\sl0\f1 </xsl:text>
                    <xsl:text>{\cs20\f1 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                    <xsl:text>\par\pard\s0\s0\f0\f0\ql\f0</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1\s3\qc\f0\fs24\s17\sl0\f1 </xsl:text>
                    <xsl:text>\par</xsl:text>
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s3\qc\f0\fs24\s17\sl0\f1\s0\f0\fs24\sl0\s21\s22\sl0\f1 </xsl:text>
                    <xsl:text>{\cs23\f1 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                    <xsl:text>\par\pard\s0\s0\s0\f0\f0\ql\f0</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1\s3\qc\f0\fs24\s17\sl0\f1 </xsl:text>
                    <xsl:text>\par</xsl:text>
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s3\qc\f0\fs24\s17\sl0\f1\s0\f0\fs24\sl0\s24\s25\sl0\f1 </xsl:text>
                    <xsl:text>{\cs26\f1 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                    <xsl:text>\par\pard\s0\s0\s0\f0\f0\ql\f0</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1\s3\qc\f0\fs24\s17\sl0\f1 </xsl:text>
                    <xsl:text>\par</xsl:text>
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s3\qc\f0\fs24\s17\sl0\f1\s0\f0\fs24\sl0\s27\s28\sl0\f1 </xsl:text>
                    <xsl:text>{\cs29\f1 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                    <xsl:text>\par\pard\s0\s0\s0\f0\f0\ql\f0</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1\s3\qc\f0\fs24\s17\sl0\f1 </xsl:text>
                    <xsl:text>\par</xsl:text>
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s3\qc\f0\fs24\s17\sl0\f1\s0\f0\fs24\sl0\s30\s31\sl0\f1 </xsl:text>
                    <xsl:text>{\cs32\f1 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                    <xsl:text>\par\pard\s0\s0\s0\f0\f0\ql\f0</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1\s3\qc\f0\fs24\s17\sl0\f1 </xsl:text>
                    <xsl:text>\par</xsl:text>
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s3\qc\f0\fs24\s17\sl0\f1\s0\f0\fs24\sl0\s33\s34\sl0\f1 </xsl:text>
                    <xsl:text>{\cs35\f1 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                    <xsl:text>\s0\s0\s0\f0\f0\ql\f0</xsl:text>
                </xsl:if>
                <xsl:text>\par\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s3\qc\f0\fs24\s17\sl0\f1\s0\f0\fs24\sl0\s36\s37\sl0\f1\fs36 </xsl:text>
                <xsl:text>{\cs38\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>HELPDESK OVEREENKOMST</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par\pard\s0\s0\s0\f0\f0\ql\f0\fs24</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1\s3\qc\f0\fs24\s17\sl0\f1 </xsl:text>
                <xsl:if test="$SV_OutputFormat = &apos;PDF&apos;">
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s3\qc\f0\fs24\s17\sl0\f1\s0\f0\fs24\sl0\s39\s40\sl0\f1 </xsl:text>
                    <xsl:text>{\cs41\f1 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                    <xsl:text>\s0\s0\f0\f0\ql\f0</xsl:text>
                </xsl:if>
                <xsl:text>\par\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s3\qc\f0\fs24\s17\sl0\f1\s0\f0\fs24\sl0\s42\s43\sl0\f1\fs28 </xsl:text>
                <xsl:text>{\cs44\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>inzake </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par\pard\s0\s0\s0\f0\f0\ql\f0\fs24</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1\s3\qc\f0\fs24\s17\sl0\f1 </xsl:text>
                <xsl:if test="$SV_OutputFormat = &apos;PDF&apos;">
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s3\qc\f0\fs24\s17\sl0\f1\s0\f0\fs24\sl0\s45\s46\sl0\f1 </xsl:text>
                    <xsl:text>\s0\s0\f0\f0\ql\f0</xsl:text>
                </xsl:if>
                <xsl:text>\par\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s3\qc\f0\fs24\s17\sl0\f1\s0\f0\fs24\sl0\s47\s48\sl0\f1\fs36 </xsl:text>
                <xsl:text>{\cs49\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>PROGRAMMA 4 ‘SAMENVOEGEN STEMTOTALEN’</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par\pard\s0\s0\s0\f0\f0\ql\f0\fs24</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1\s3\qc\f0\fs24\s17\sl0\f1 </xsl:text>
                <xsl:if test="$SV_OutputFormat = &apos;PDF&apos;">
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s3\qc\f0\fs24\s17\sl0\f1\s0\f0\fs24\sl0\s50\s51\sl0\f1 </xsl:text>
                    <xsl:text>{\cs52\f1 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                    <xsl:text>\s0\s0\f0\f0\ql\f0</xsl:text>
                </xsl:if>
                <xsl:text>\par\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s3\qc\f0\fs24\s17\sl0\f1\s0\f0\fs24\sl0\s53\s54\sl0\f1\fs28 </xsl:text>
                <xsl:text>{\cs55\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>van de Ondersteunende Software Verkiezingsproces</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par\pard\s0\s0\s0\f0\f0\ql\f0\fs24</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1\s3\qc\f0\fs24\s17\sl0\f1 </xsl:text>
                <xsl:if test="$SV_OutputFormat = &apos;PDF&apos;">
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s3\qc\f0\fs24\s17\sl0\f1\s0\f0\fs24\sl0\s56\s57\sl0\f1 </xsl:text>
                    <xsl:text>{\cs58\f1 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                    <xsl:text>\s0\s0\f0\f0\ql\f0</xsl:text>
                </xsl:if>
                <xsl:text>\par\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s3\qc\f0\fs24\s17\sl0\f1\s0\f0\fs24\sl0\s59\s60\sl0\f1\fs28 </xsl:text>
                <xsl:text>{\cs61\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>tussen</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par\pard\s0\s0\s0\f0\f0\ql\f0\fs24</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1\s3\qc\f0\fs24\s17\sl0\f1 </xsl:text>
                <xsl:if test="$SV_OutputFormat = &apos;PDF&apos;">
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s3\qc\f0\fs24\s17\sl0\f1\s0\f0\fs24\sl0\s62\s63\sl0\f1 </xsl:text>
                    <xsl:text>{\cs64\f1 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                    <xsl:text>\s0\s0\f0\f0\ql\f0</xsl:text>
                </xsl:if>
                <xsl:text>\par\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s3\qc\f0\fs24\s17\sl0\f1\s0\f0\fs24\sl0\s65\s66\sl0\f1\fs28 </xsl:text>
                <xsl:text>{\cs67\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>IVU Benelux BV</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par\pard\s0\s0\s0\f0\f0\ql\f0\fs24</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1\s3\qc\f0\fs24\s17\sl0\f1 </xsl:text>
                <xsl:if test="$SV_OutputFormat = &apos;PDF&apos;">
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s3\qc\f0\fs24\s17\sl0\f1\s0\f0\fs24\sl0\s68\s69\sl0\f1 </xsl:text>
                    <xsl:text>{\cs70\f1 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                    <xsl:text>\s0\s0\f0\f0\ql\f0</xsl:text>
                </xsl:if>
                <xsl:text>\par\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s3\qc\f0\fs24\s17\sl0\f1\s0\f0\fs24\sl0\s71\s72\sl0\f1\fs28 </xsl:text>
                <xsl:text>{\cs73\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>en</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par\pard\s0\s0\s0\f0\f0\ql\f0\fs24</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1\s3\qc\f0\fs24\s17\sl0\f1 </xsl:text>
                <xsl:if test="$SV_OutputFormat = &apos;PDF&apos;">
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s3\qc\f0\fs24\s17\sl0\f1\s0\f0\fs24\sl0\s74\s75\sl0\f1 </xsl:text>
                    <xsl:text>{\cs76\f1 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                    <xsl:text>\s0\s0\f0\f0\ql\f0</xsl:text>
                </xsl:if>
                <xsl:text>\par\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s3\qc\f0\fs24\s17\sl0\f1\s0\f0\fs24\sl0\s77\s78\sl0\f1\fs28 </xsl:text>
                <xsl:text>{\cs79\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>opdrachtgever</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\s0\s0\s0\f0\f0\ql\f0\fs24</xsl:text>
                <xsl:text>\par\pard\s0\s0\f0\f0\ql</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1 </xsl:text>
                <xsl:text>\page </xsl:text>
                <xsl:if test="$SV_OutputFormat = &apos;PDF&apos;">
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s80\s81\sl0\f1 </xsl:text>
                    <xsl:text>{\cs82\f1 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                    <xsl:text>\s0\f0\f0</xsl:text>
                </xsl:if>
                <xsl:text>\par\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s83\s84\sl0\f1\fs28 </xsl:text>
                <xsl:text>{\cs85\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Overeenkomst</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par\pard\s0\s0\f0\f0\fs24</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1 </xsl:text>
                <xsl:text>\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s86\s87\sl0\f1 </xsl:text>
                <xsl:text>{\cs88\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>De ondergetekenden:</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par\pard\s0\s0\f0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1 </xsl:text>
                <xsl:if test="$SV_OutputFormat = &apos;PDF&apos;">
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s89\s90\sl0\f1 </xsl:text>
                    <xsl:text>{\cs91\f1 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                    <xsl:text>\s0\f0\f0</xsl:text>
                </xsl:if>
                <xsl:text>\par\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s92\s93\sl0\f1 </xsl:text>
                <xsl:variable name="altova:CurrContextGrid_04985E60" select="."/>
                <xsl:variable name="altova:nTableWidthIn_0" select="$altova:nMaxWidthIn * 1.00000"/>
                <xsl:variable name="altova:nTableWidthTw_0" select="$altova:nTableWidthIn_0 * 1440"/>
                <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_0" select="round($altova:nTableWidthTw_0 * 0.25)"/>
                <xsl:variable name="altova:nTableIndentTw_0" select="0"/>
                <xsl:variable name="altova:nSumColumnWidthsTw_0" select="round(400.50)"/>
                <xsl:variable name="altova:TableWidthFactor_0">
                    <xsl:choose>
                        <xsl:when test="$altova:nSumColumnWidthsTw_0 &gt; $altova:nTableWidthTw_0">
                            <xsl:value-of select="($altova:nTableWidthTw_0 - $altova:SumDefaultColumnsForWideTableTw_0) div $altova:nSumColumnWidthsTw_0"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="1"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnsWithDefaultWidth_0" select="round(1)"/>
                <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_0">
                    <xsl:choose>
                        <xsl:when test="$altova:nColumnsWithDefaultWidth_0 = 0">
                            <xsl:value-of select="round(1)"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="$altova:nColumnsWithDefaultWidth_0"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nDefaultColumnWidthTw_0">
                    <xsl:choose>
                        <xsl:when test="$altova:TableWidthFactor_0 &lt; 1">
                            <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_0 div $altova:nColumnsWithDefaultWidthNotZero_0"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="round(($altova:nTableWidthTw_0 - $altova:nSumColumnWidthsTw_0) div $altova:nColumnsWithDefaultWidthNotZero_0)"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnWidthTw_0_0" select="round(0.28 * 1440 * $altova:TableWidthFactor_0)"/>
                <xsl:variable name="altova:nColumnWidthTw_0_1" select="$altova:nDefaultColumnWidthTw_0"/>
                <xsl:text>\pard\s0\s0\f0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:variable name="tablestyle0">
                    <xsl:text>\trowd\trleft</xsl:text>
                    <xsl:value-of select="$altova:nTableIndentTw_0"/>
                    <xsl:text>\ts94\trspdl15\trspdt15\trspdb15\trspdr15\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt30\trpaddl30\trpaddb30\trpaddr30\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
                </xsl:variable>
                <xsl:variable name="rowend0">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\row\pard</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="cellend0">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\cell</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestcell</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:RowStyle0">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl0" select="$altova:nTableIndentTw_0"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl0_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl0 + $altova:nColumnWidthTw_0_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl0_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl0_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl0_Col0_AfterColumn + $altova:nColumnWidthTw_0_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl0_Col1_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle0"/>
                    <xsl:value-of select="$altova:RowStyle0"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs95\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>A.</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend0"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs96\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>  IVU Benelux BV, statutair gevestigd te Veenendaal,</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>{\cs97\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>te deze rechtsgeldig vertegenwoordigd door R.E.A. Mulder (statutair directeur) van</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>{\cs98\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>IVU Benelux BV</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>{\cs99\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Wiltonstraat 36</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>{\cs100\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>NL 3905 KW  Veenendaal, </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22\s0\f0\fs24\sl0\s101\s102\sl0\f1 </xsl:text>
                <xsl:text>{\cs103\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text> </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par\pard\s0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\par\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs104\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>hierna te noemen: Opdrachtnemer</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend0"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle0"/>
                <xsl:value-of select="$altova:RowStyle0"/>
                <xsl:value-of select="$rowend0"/>
                <xsl:variable name="altova:RowStyle1">
                    <xsl:text>\trrh600</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl0" select="$altova:nTableIndentTw_0"/>
                    <xsl:text>\clvertalc\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl0_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl0 + $altova:nColumnWidthTw_0_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl0_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl0_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl0_Col0_AfterColumn + $altova:nColumnWidthTw_0_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl0_Col1_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle0"/>
                    <xsl:value-of select="$altova:RowStyle1"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs105\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>en</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend0"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend0"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle0"/>
                <xsl:value-of select="$altova:RowStyle1"/>
                <xsl:value-of select="$rowend0"/>
                <xsl:variable name="altova:RowStyle2">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl0" select="$altova:nTableIndentTw_0"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl0_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl0 + $altova:nColumnWidthTw_0_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl0_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl0_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl0_Col0_AfterColumn + $altova:nColumnWidthTw_0_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl0_Col1_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle0"/>
                    <xsl:value-of select="$altova:RowStyle2"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs106\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>B.</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend0"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs107\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>   </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:for-each select="mtp:Address">
                    <xsl:for-each select="mtp:Name">
                        <xsl:text>{\cs108\f1 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_0_1 div 1440) - 0.02083 - 0.02083"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
                <xsl:text>{\cs109\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>, statutair gevestigd te </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:for-each select="mtp:Address">
                    <xsl:for-each select="mtp:City">
                        <xsl:text>{\cs110\f1 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_0_1 div 1440) - 0.02083 - 0.02083"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
                <xsl:text>{\cs111\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>,</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>{\cs112\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>te deze rechtsgeldig vertegenwoordigd door </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:for-each select="mtp:Contacts">
                    <xsl:for-each select="mtp:Contact">
                        <xsl:if test="mtp:Person/mtp:Persontype  = &quot;contractmanager&quot;">
                            <xsl:for-each select="mtp:Person">
                                <xsl:for-each select="mtp:Initials">
                                    <xsl:text>{\cs113\f1 </xsl:text>
                                    <xsl:apply-templates>
                                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_0_1 div 1440) - 0.02083 - 0.02083"/>
                                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                                    </xsl:apply-templates>
                                    <xsl:text>}</xsl:text>
                                </xsl:for-each>
                                <xsl:text>{\cs114\f1 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text> </xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                                <xsl:for-each select="mtp:Lastname">
                                    <xsl:text>{\cs115\f1 </xsl:text>
                                    <xsl:apply-templates>
                                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_0_1 div 1440) - 0.02083 - 0.02083"/>
                                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                                    </xsl:apply-templates>
                                    <xsl:text>}</xsl:text>
                                </xsl:for-each>
                                <xsl:text>{\cs116\f1 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text> (</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                                <xsl:for-each select="mtp:Occupation">
                                    <xsl:text>{\cs117\f1 </xsl:text>
                                    <xsl:apply-templates>
                                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_0_1 div 1440) - 0.02083 - 0.02083"/>
                                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                                    </xsl:apply-templates>
                                    <xsl:text>}</xsl:text>
                                </xsl:for-each>
                                <xsl:text>{\cs118\f1 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>) van</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:for-each>
                        </xsl:if>
                    </xsl:for-each>
                </xsl:for-each>
                <xsl:text>\par </xsl:text>
                <xsl:for-each select="mtp:Address">
                    <xsl:for-each select="mtp:Name">
                        <xsl:text>{\cs119\f1 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_0_1 div 1440) - 0.02083 - 0.02083"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                    <xsl:text>\par </xsl:text>
                    <xsl:for-each select="mtp:Street">
                        <xsl:text>{\cs120\f1 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_0_1 div 1440) - 0.02083 - 0.02083"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                    <xsl:text>\par </xsl:text>
                    <xsl:text>{\cs121\f1 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>NL </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                    <xsl:for-each select="mtp:Postcode">
                        <xsl:text>{\cs122\f1 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_0_1 div 1440) - 0.02083 - 0.02083"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                    <xsl:text>{\cs123\f1 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                    <xsl:for-each select="mtp:City">
                        <xsl:text>{\cs124\f1 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_0_1 div 1440) - 0.02083 - 0.02083"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
                <xsl:text>{\cs125\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>,</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22\s0\f0\fs24\sl0\s126\s127\sl0\f1 </xsl:text>
                <xsl:text>{\cs128\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text> </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par\pard\s0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\par\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs129\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>hierna te noemen: Opdrachtgever</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend0"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle0"/>
                <xsl:value-of select="$altova:RowStyle2"/>
                <xsl:value-of select="$rowend0"/>
                <xsl:text>\pard\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s92\s93\sl0\f1</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text> </xsl:text>
                <xsl:text>\par\pard\s0\s0\f0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1 </xsl:text>
                <xsl:text>\page </xsl:text>
                <xsl:if test="$SV_OutputFormat = &apos;PDF&apos;">
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s130\s131\sl0\f1 </xsl:text>
                    <xsl:text>{\cs132\f1 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                    <xsl:text>\s0\f0\f0</xsl:text>
                </xsl:if>
                <xsl:text>\par\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s133\s134\sl0\f1 </xsl:text>
                <xsl:text>{\cs135\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>OVERWEGENDE:</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par\pard\s0\s0\f0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1 </xsl:text>
                <xsl:text>\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s136\s137\sl0\f1 </xsl:text>
                <xsl:variable name="altova:CurrContextGrid_0498C598" select="."/>
                <xsl:variable name="altova:nTableWidthIn_1" select="$altova:nMaxWidthIn * 1.00000"/>
                <xsl:variable name="altova:nTableWidthTw_1" select="$altova:nTableWidthIn_1 * 1440"/>
                <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_1" select="round($altova:nTableWidthTw_1 * 0.25)"/>
                <xsl:variable name="altova:nTableIndentTw_1" select="0"/>
                <xsl:variable name="altova:nSumColumnWidthsTw_1" select="round(400.50)"/>
                <xsl:variable name="altova:TableWidthFactor_1">
                    <xsl:choose>
                        <xsl:when test="$altova:nSumColumnWidthsTw_1 &gt; $altova:nTableWidthTw_1">
                            <xsl:value-of select="($altova:nTableWidthTw_1 - $altova:SumDefaultColumnsForWideTableTw_1) div $altova:nSumColumnWidthsTw_1"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="1"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnsWithDefaultWidth_1" select="round(1)"/>
                <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_1">
                    <xsl:choose>
                        <xsl:when test="$altova:nColumnsWithDefaultWidth_1 = 0">
                            <xsl:value-of select="round(1)"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="$altova:nColumnsWithDefaultWidth_1"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nDefaultColumnWidthTw_1">
                    <xsl:choose>
                        <xsl:when test="$altova:TableWidthFactor_1 &lt; 1">
                            <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_1 div $altova:nColumnsWithDefaultWidthNotZero_1"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="round(($altova:nTableWidthTw_1 - $altova:nSumColumnWidthsTw_1) div $altova:nColumnsWithDefaultWidthNotZero_1)"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnWidthTw_1_0" select="round(0.28 * 1440 * $altova:TableWidthFactor_1)"/>
                <xsl:variable name="altova:nColumnWidthTw_1_1" select="$altova:nDefaultColumnWidthTw_1"/>
                <xsl:text>\pard\s0\s0\f0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:variable name="tablestyle1">
                    <xsl:text>\trowd\trleft</xsl:text>
                    <xsl:value-of select="$altova:nTableIndentTw_1"/>
                    <xsl:text>\ts138\trspdl15\trspdt15\trspdb15\trspdr15\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt30\trpaddl30\trpaddb30\trpaddr30\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
                </xsl:variable>
                <xsl:variable name="rowend1">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\row\pard</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="cellend1">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\cell</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestcell</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:RowStyle3">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl1" select="$altova:nTableIndentTw_1"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl1_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl1 + $altova:nColumnWidthTw_1_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl1_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl1_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl1_Col0_AfterColumn + $altova:nColumnWidthTw_1_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl1_Col1_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle1"/>
                    <xsl:value-of select="$altova:RowStyle3"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs139\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>-</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs140\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>  dat Opdrachtgever het programma 4 ‘samenvoegen stemtotalen’ wenst in te zetten ter ondersteuning bij het verkiezingsproces;</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend1"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle1"/>
                <xsl:value-of select="$altova:RowStyle3"/>
                <xsl:value-of select="$rowend1"/>
                <xsl:variable name="altova:RowStyle4">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl1" select="$altova:nTableIndentTw_1"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl1_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl1 + $altova:nColumnWidthTw_1_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl1_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl1_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl1_Col0_AfterColumn + $altova:nColumnWidthTw_1_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl1_Col1_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle1"/>
                    <xsl:value-of select="$altova:RowStyle4"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs141\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>-</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs142\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>  dat Opdrachtgever gebruik wenst te maken van Opdrachtnemer als partij om ondersteuning te verlenen op het programma 4 ‘samenvoegen stemtotalen’ tijdens de verkiezingsweken van de Europese Parlementsverkiezingen 2009;</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend1"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle1"/>
                <xsl:value-of select="$altova:RowStyle4"/>
                <xsl:value-of select="$rowend1"/>
                <xsl:variable name="altova:RowStyle5">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl1" select="$altova:nTableIndentTw_1"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl1_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl1 + $altova:nColumnWidthTw_1_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl1_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl1_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl1_Col0_AfterColumn + $altova:nColumnWidthTw_1_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl1_Col1_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle1"/>
                    <xsl:value-of select="$altova:RowStyle5"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs143\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>-</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs144\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>  dat partijen de wederzijdse rechten en plichten schriftelijk wensen vast te leggen in een helpdeskovereenkomst (deze overeenkomst).</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend1"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle1"/>
                <xsl:value-of select="$altova:RowStyle5"/>
                <xsl:value-of select="$rowend1"/>
                <xsl:text>\pard\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s136\s137\sl0\f1</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text> </xsl:text>
                <xsl:text>\par\pard\s0\s0\f0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1 </xsl:text>
                <xsl:text>\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s145\s146\sl0\f1 </xsl:text>
                <xsl:text>{\cs147\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>VERKLAREN TE ZIJN OVEREENGEKOMEN ALS VOLGT:</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par\pard\s0\s0\f0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1 </xsl:text>
                <xsl:text>\page </xsl:text>
                <xsl:if test="$SV_OutputFormat = &apos;PDF&apos;">
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s148\s149\sl0\f1 </xsl:text>
                    <xsl:text>{\cs150\f1 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                    <xsl:text>\s0\f0\f0</xsl:text>
                </xsl:if>
                <xsl:text>\par\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s151\s152\sl0\f1\fs28 </xsl:text>
                <xsl:text>{\cs153\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>1.    Begrippen</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par\pard\s0\s0\f0\f0\fs24</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1 </xsl:text>
                <xsl:text>\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s154\s155\sl0\f1 </xsl:text>
                <xsl:text>{\cs156\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>In deze helpdesk overeenkomst worden de navolgende begrippen met een beginhoofdletter gebruikt. Onder deze begrippen wordt verstaan:</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par\pard\s0\s0\f0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1 </xsl:text>
                <xsl:text>\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s157\s158\sl0\f1 </xsl:text>
                <xsl:variable name="altova:CurrContextGrid_0498E538" select="."/>
                <xsl:variable name="altova:nTableWidthIn_2" select="$altova:nMaxWidthIn * 1.00000"/>
                <xsl:variable name="altova:nTableWidthTw_2" select="$altova:nTableWidthIn_2 * 1440"/>
                <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_2" select="round($altova:nTableWidthTw_2 * 0.25)"/>
                <xsl:variable name="altova:nTableIndentTw_2" select="0"/>
                <xsl:variable name="altova:nSumColumnWidthsTw_2" select="round(600.50)"/>
                <xsl:variable name="altova:TableWidthFactor_2">
                    <xsl:choose>
                        <xsl:when test="$altova:nSumColumnWidthsTw_2 &gt; $altova:nTableWidthTw_2">
                            <xsl:value-of select="($altova:nTableWidthTw_2 - $altova:SumDefaultColumnsForWideTableTw_2) div $altova:nSumColumnWidthsTw_2"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="1"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnsWithDefaultWidth_2" select="round(1)"/>
                <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_2">
                    <xsl:choose>
                        <xsl:when test="$altova:nColumnsWithDefaultWidth_2 = 0">
                            <xsl:value-of select="round(1)"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="$altova:nColumnsWithDefaultWidth_2"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nDefaultColumnWidthTw_2">
                    <xsl:choose>
                        <xsl:when test="$altova:TableWidthFactor_2 &lt; 1">
                            <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_2 div $altova:nColumnsWithDefaultWidthNotZero_2"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="round(($altova:nTableWidthTw_2 - $altova:nSumColumnWidthsTw_2) div $altova:nColumnsWithDefaultWidthNotZero_2)"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnWidthTw_2_0" select="round(0.42 * 1440 * $altova:TableWidthFactor_2)"/>
                <xsl:variable name="altova:nColumnWidthTw_2_1" select="$altova:nDefaultColumnWidthTw_2"/>
                <xsl:text>\pard\s0\s0\f0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:variable name="tablestyle2">
                    <xsl:text>\trowd\trleft</xsl:text>
                    <xsl:value-of select="$altova:nTableIndentTw_2"/>
                    <xsl:text>\ts159\trspdl15\trspdt15\trspdb15\trspdr15\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt30\trpaddl30\trpaddb30\trpaddr30\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
                </xsl:variable>
                <xsl:variable name="rowend2">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\row\pard</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="cellend2">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\cell</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestcell</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:RowStyle6">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl2" select="$altova:nTableIndentTw_2"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl2_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl2 + $altova:nColumnWidthTw_2_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl2_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col0_AfterColumn + $altova:nColumnWidthTw_2_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col1_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle2"/>
                    <xsl:value-of select="$altova:RowStyle6"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs160\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>1.1</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend2"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs161\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>  Helpdesk overeenkomst: </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>{\cs162\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>deze overeenkomst.</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend2"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle2"/>
                <xsl:value-of select="$altova:RowStyle6"/>
                <xsl:value-of select="$rowend2"/>
                <xsl:variable name="altova:RowStyle7">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl2" select="$altova:nTableIndentTw_2"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl2_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl2 + $altova:nColumnWidthTw_2_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl2_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col0_AfterColumn + $altova:nColumnWidthTw_2_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col1_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle2"/>
                    <xsl:value-of select="$altova:RowStyle7"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs163\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>1.2</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend2"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs164\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>      Werkdagen: </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>{\cs165\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>kalenderdagen, behoudens weekenden en algemeen erkende feestdagen in Nederland.</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend2"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle2"/>
                <xsl:value-of select="$altova:RowStyle7"/>
                <xsl:value-of select="$rowend2"/>
                <xsl:text>\pard\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s157\s158\sl0\f1</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text> </xsl:text>
                <xsl:text>\par\pard\s0\s0\f0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1 </xsl:text>
                <xsl:text>\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s166\s167\sl0\f1\fs28 </xsl:text>
                <xsl:text>{\cs168\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>2.    Voorwerp en looptijd van de Overeenkomst</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par\pard\s0\s0\f0\f0\fs24</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1 </xsl:text>
                <xsl:text>\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s169\s170\sl0\f1 </xsl:text>
                <xsl:variable name="altova:CurrContextGrid_0498FF68" select="."/>
                <xsl:variable name="altova:nTableWidthIn_3" select="$altova:nMaxWidthIn * 1.00000"/>
                <xsl:variable name="altova:nTableWidthTw_3" select="$altova:nTableWidthIn_3 * 1440"/>
                <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_3" select="round($altova:nTableWidthTw_3 * 0.25)"/>
                <xsl:variable name="altova:nTableIndentTw_3" select="0"/>
                <xsl:variable name="altova:nSumColumnWidthsTw_3" select="round(600.50)"/>
                <xsl:variable name="altova:TableWidthFactor_3">
                    <xsl:choose>
                        <xsl:when test="$altova:nSumColumnWidthsTw_3 &gt; $altova:nTableWidthTw_3">
                            <xsl:value-of select="($altova:nTableWidthTw_3 - $altova:SumDefaultColumnsForWideTableTw_3) div $altova:nSumColumnWidthsTw_3"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="1"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnsWithDefaultWidth_3" select="round(1)"/>
                <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_3">
                    <xsl:choose>
                        <xsl:when test="$altova:nColumnsWithDefaultWidth_3 = 0">
                            <xsl:value-of select="round(1)"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="$altova:nColumnsWithDefaultWidth_3"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nDefaultColumnWidthTw_3">
                    <xsl:choose>
                        <xsl:when test="$altova:TableWidthFactor_3 &lt; 1">
                            <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_3 div $altova:nColumnsWithDefaultWidthNotZero_3"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="round(($altova:nTableWidthTw_3 - $altova:nSumColumnWidthsTw_3) div $altova:nColumnsWithDefaultWidthNotZero_3)"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnWidthTw_3_0" select="round(0.42 * 1440 * $altova:TableWidthFactor_3)"/>
                <xsl:variable name="altova:nColumnWidthTw_3_1" select="$altova:nDefaultColumnWidthTw_3"/>
                <xsl:text>\pard\s0\s0\f0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:variable name="tablestyle3">
                    <xsl:text>\trowd\trleft</xsl:text>
                    <xsl:value-of select="$altova:nTableIndentTw_3"/>
                    <xsl:text>\ts171\trspdl15\trspdt15\trspdb15\trspdr15\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt30\trpaddl30\trpaddb30\trpaddr30\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
                </xsl:variable>
                <xsl:variable name="rowend3">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\row\pard</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="cellend3">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\cell</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestcell</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:RowStyle8">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl3" select="$altova:nTableIndentTw_3"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl3_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl3 + $altova:nColumnWidthTw_3_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl3_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl3_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl3_Col0_AfterColumn + $altova:nColumnWidthTw_3_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl3_Col1_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle3"/>
                    <xsl:value-of select="$altova:RowStyle8"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs172\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>2.1</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend3"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs173\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>  Deze Helpdesk overeenkomst heeft betrekking op het programma 4 ‘samenvoegen stemtotalen’ van de Ondersteunende Software Verkiezingsproces voor de Europese Parlementsverkiezingen 2009, beschikbaar gesteld door De Kiesraad aan de Opdrachtgever. De Kiesraad is uitdrukkelijk geen partij in deze overeenkomst.</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend3"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle3"/>
                <xsl:value-of select="$altova:RowStyle8"/>
                <xsl:value-of select="$rowend3"/>
                <xsl:variable name="altova:RowStyle9">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl3" select="$altova:nTableIndentTw_3"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl3_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl3 + $altova:nColumnWidthTw_3_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl3_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl3_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl3_Col0_AfterColumn + $altova:nColumnWidthTw_3_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl3_Col1_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle3"/>
                    <xsl:value-of select="$altova:RowStyle9"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs174\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>2.2</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend3"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs175\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>  Met deze helpdesk overeenkomst verstrekt Opdrachtgever aan Opdrachtnemer, gelijk Opdrachtnemer aanvaardt, de opdracht tot het verrichten van de onder 2.3. vermelde aanvullende diensten.</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend3"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle3"/>
                <xsl:value-of select="$altova:RowStyle9"/>
                <xsl:value-of select="$rowend3"/>
                <xsl:variable name="altova:RowStyle10">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl3" select="$altova:nTableIndentTw_3"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl3_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl3 + $altova:nColumnWidthTw_3_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl3_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl3_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl3_Col0_AfterColumn + $altova:nColumnWidthTw_3_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl3_Col1_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle3"/>
                    <xsl:value-of select="$altova:RowStyle10"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs176\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>2.3</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend3"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs177\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>  De dienstverlening waartoe Opdrachtnemer zich verplicht betreft het verrichten van de volgende soorten diensten, die nader zijn uitgewerkt in deze overeenkomst:</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>{\cs178\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>-  Ondersteuning bij installatie en ingebruikname;</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>{\cs179\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>-  Helpdesk;</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>{\cs180\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>-  Urgentieservice.</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend3"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle3"/>
                <xsl:value-of select="$altova:RowStyle10"/>
                <xsl:value-of select="$rowend3"/>
                <xsl:variable name="altova:RowStyle11">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl3" select="$altova:nTableIndentTw_3"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl3_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl3 + $altova:nColumnWidthTw_3_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl3_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl3_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl3_Col0_AfterColumn + $altova:nColumnWidthTw_3_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl3_Col1_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle3"/>
                    <xsl:value-of select="$altova:RowStyle11"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs181\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>2.4</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend3"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs182\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>  De Helpdesk overeenkomst wordt gesloten voor de periode die begint op maandag 15 mei 2009 en eindigt op maandag 15 juni 2009.  </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend3"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle3"/>
                <xsl:value-of select="$altova:RowStyle11"/>
                <xsl:value-of select="$rowend3"/>
                <xsl:text>\pard\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s169\s170\sl0\f1</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text> </xsl:text>
                <xsl:text>\par\pard\s0\s0\f0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1 </xsl:text>
                <xsl:text>\page </xsl:text>
                <xsl:if test="$SV_OutputFormat = &apos;PDF&apos;">
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s183\s184\sl0\f1 </xsl:text>
                    <xsl:text>{\cs185\f1 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                    <xsl:text>\s0\f0\f0</xsl:text>
                </xsl:if>
                <xsl:text>\par\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s186\s187\sl0\f1\fs28 </xsl:text>
                <xsl:text>{\cs188\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>3.    Helpdesk</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par\pard\s0\s0\f0\f0\fs24</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1 </xsl:text>
                <xsl:text>\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s189\s190\sl0\f1 </xsl:text>
                <xsl:variable name="altova:CurrContextGrid_04992960" select="."/>
                <xsl:variable name="altova:nTableWidthIn_4" select="$altova:nMaxWidthIn * 1.00000"/>
                <xsl:variable name="altova:nTableWidthTw_4" select="$altova:nTableWidthIn_4 * 1440"/>
                <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_4" select="round($altova:nTableWidthTw_4 * 0.25)"/>
                <xsl:variable name="altova:nTableIndentTw_4" select="0"/>
                <xsl:variable name="altova:nSumColumnWidthsTw_4" select="round(600.50)"/>
                <xsl:variable name="altova:TableWidthFactor_4">
                    <xsl:choose>
                        <xsl:when test="$altova:nSumColumnWidthsTw_4 &gt; $altova:nTableWidthTw_4">
                            <xsl:value-of select="($altova:nTableWidthTw_4 - $altova:SumDefaultColumnsForWideTableTw_4) div $altova:nSumColumnWidthsTw_4"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="1"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnsWithDefaultWidth_4" select="round(1)"/>
                <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_4">
                    <xsl:choose>
                        <xsl:when test="$altova:nColumnsWithDefaultWidth_4 = 0">
                            <xsl:value-of select="round(1)"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="$altova:nColumnsWithDefaultWidth_4"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nDefaultColumnWidthTw_4">
                    <xsl:choose>
                        <xsl:when test="$altova:TableWidthFactor_4 &lt; 1">
                            <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_4 div $altova:nColumnsWithDefaultWidthNotZero_4"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="round(($altova:nTableWidthTw_4 - $altova:nSumColumnWidthsTw_4) div $altova:nColumnsWithDefaultWidthNotZero_4)"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnWidthTw_4_0" select="round(0.42 * 1440 * $altova:TableWidthFactor_4)"/>
                <xsl:variable name="altova:nColumnWidthTw_4_1" select="$altova:nDefaultColumnWidthTw_4"/>
                <xsl:text>\pard\s0\s0\f0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:variable name="tablestyle4">
                    <xsl:text>\trowd\trleft</xsl:text>
                    <xsl:value-of select="$altova:nTableIndentTw_4"/>
                    <xsl:text>\ts191\trspdl15\trspdt15\trspdb15\trspdr15\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt30\trpaddl30\trpaddb30\trpaddr30\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
                </xsl:variable>
                <xsl:variable name="rowend4">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\row\pard</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="cellend4">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\cell</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestcell</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:RowStyle12">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl4" select="$altova:nTableIndentTw_4"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl4_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl4 + $altova:nColumnWidthTw_4_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl4_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col0_AfterColumn + $altova:nColumnWidthTw_4_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col1_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle4"/>
                    <xsl:value-of select="$altova:RowStyle12"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs192\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>3.1</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend4"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs193\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>  Opdrachtnemer houdt een eerstelijns helpdesk beschikbaar ten behoeve van Opdrachtgever. </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend4"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle4"/>
                <xsl:value-of select="$altova:RowStyle12"/>
                <xsl:value-of select="$rowend4"/>
                <xsl:variable name="altova:RowStyle13">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl4" select="$altova:nTableIndentTw_4"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl4_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl4 + $altova:nColumnWidthTw_4_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl4_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col0_AfterColumn + $altova:nColumnWidthTw_4_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col1_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle4"/>
                    <xsl:value-of select="$altova:RowStyle13"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs194\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>3.2</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend4"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs195\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>  Opdrachtnemer zal ervoor zorgen, dat de helpdesk telefonisch bereikbaar is via:</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>{\cs196\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>0318-765000, operationeel vanaf 22 April 2009,</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>{\cs197\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>per email via osv@ivu.nl,</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>{\cs198\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>en via het internet bereikbaar is via www.osv-support.nl</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend4"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle4"/>
                <xsl:value-of select="$altova:RowStyle13"/>
                <xsl:value-of select="$rowend4"/>
                <xsl:variable name="altova:RowStyle14">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl4" select="$altova:nTableIndentTw_4"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl4_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl4 + $altova:nColumnWidthTw_4_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl4_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col0_AfterColumn + $altova:nColumnWidthTw_4_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col1_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle4"/>
                    <xsl:value-of select="$altova:RowStyle14"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs199\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>3.3</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend4"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs200\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>  Opdrachtnemer staat er voor in, dat de kwalitatieve en kwantitatieve capaciteit van de helpdesk voldoende zal zijn om alle vragen correct te beantwoorden en alle meldingen van Gebreken correct af te handelen: zowel functioneel als technisch van karakter, zowel afkomstig van gebruikers als van applicatie- of systeembeheerders.</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend4"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle4"/>
                <xsl:value-of select="$altova:RowStyle14"/>
                <xsl:value-of select="$rowend4"/>
                <xsl:variable name="altova:RowStyle15">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl4" select="$altova:nTableIndentTw_4"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl4_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl4 + $altova:nColumnWidthTw_4_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl4_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col0_AfterColumn + $altova:nColumnWidthTw_4_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col1_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle4"/>
                    <xsl:value-of select="$altova:RowStyle15"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs201\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>3.4</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend4"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs202\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>  De helpdesk biedt op verzoek ook tweedelijns-ondersteuning aan Opdrachtgever.</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend4"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle4"/>
                <xsl:value-of select="$altova:RowStyle15"/>
                <xsl:value-of select="$rowend4"/>
                <xsl:text>\pard\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s189\s190\sl0\f1</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text> </xsl:text>
                <xsl:text>\par\pard\s0\s0\f0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1 </xsl:text>
                <xsl:text>\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s203\s204\sl0\f1\fs28 </xsl:text>
                <xsl:text>{\cs205\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>4.    Urgentieservice</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par\pard\s0\s0\f0\f0\fs24</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1 </xsl:text>
                <xsl:text>\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s206\s207\sl0\f1 </xsl:text>
                <xsl:variable name="altova:CurrContextGrid_04994EF8" select="."/>
                <xsl:variable name="altova:nTableWidthIn_5" select="$altova:nMaxWidthIn * 1.00000"/>
                <xsl:variable name="altova:nTableWidthTw_5" select="$altova:nTableWidthIn_5 * 1440"/>
                <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_5" select="round($altova:nTableWidthTw_5 * 0.25)"/>
                <xsl:variable name="altova:nTableIndentTw_5" select="0"/>
                <xsl:variable name="altova:nSumColumnWidthsTw_5" select="round(600.50)"/>
                <xsl:variable name="altova:TableWidthFactor_5">
                    <xsl:choose>
                        <xsl:when test="$altova:nSumColumnWidthsTw_5 &gt; $altova:nTableWidthTw_5">
                            <xsl:value-of select="($altova:nTableWidthTw_5 - $altova:SumDefaultColumnsForWideTableTw_5) div $altova:nSumColumnWidthsTw_5"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="1"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnsWithDefaultWidth_5" select="round(1)"/>
                <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_5">
                    <xsl:choose>
                        <xsl:when test="$altova:nColumnsWithDefaultWidth_5 = 0">
                            <xsl:value-of select="round(1)"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="$altova:nColumnsWithDefaultWidth_5"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nDefaultColumnWidthTw_5">
                    <xsl:choose>
                        <xsl:when test="$altova:TableWidthFactor_5 &lt; 1">
                            <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_5 div $altova:nColumnsWithDefaultWidthNotZero_5"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="round(($altova:nTableWidthTw_5 - $altova:nSumColumnWidthsTw_5) div $altova:nColumnsWithDefaultWidthNotZero_5)"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnWidthTw_5_0" select="round(0.42 * 1440 * $altova:TableWidthFactor_5)"/>
                <xsl:variable name="altova:nColumnWidthTw_5_1" select="$altova:nDefaultColumnWidthTw_5"/>
                <xsl:text>\pard\s0\s0\f0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:variable name="tablestyle5">
                    <xsl:text>\trowd\trleft</xsl:text>
                    <xsl:value-of select="$altova:nTableIndentTw_5"/>
                    <xsl:text>\ts208\trspdl15\trspdt15\trspdb15\trspdr15\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt30\trpaddl30\trpaddb30\trpaddr30\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
                </xsl:variable>
                <xsl:variable name="rowend5">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\row\pard</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="cellend5">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\cell</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestcell</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:RowStyle16">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl5" select="$altova:nTableIndentTw_5"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl5_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl5 + $altova:nColumnWidthTw_5_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl5_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col0_AfterColumn + $altova:nColumnWidthTw_5_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col1_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle5"/>
                    <xsl:value-of select="$altova:RowStyle16"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs209\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>4.1</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend5"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs210\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>  De urgentiedagen zijn op de kalenderdagen van woensdag 3 juni 2009 t/m donderdag 11 juni 2009. </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend5"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle5"/>
                <xsl:value-of select="$altova:RowStyle16"/>
                <xsl:value-of select="$rowend5"/>
                <xsl:variable name="altova:RowStyle17">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl5" select="$altova:nTableIndentTw_5"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl5_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl5 + $altova:nColumnWidthTw_5_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl5_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col0_AfterColumn + $altova:nColumnWidthTw_5_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col1_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle5"/>
                    <xsl:value-of select="$altova:RowStyle17"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs211\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>4.2</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend5"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs212\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>  Gedurende Urgentiedagen zal Opdrachtnemer een verhoogde staat van paraatheid van de helpdesk bieden, waarbij Opdrachtnemer geen lagere prioriteit toekent aan calls dan ‘Top’ of ‘Hoog’.</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend5"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle5"/>
                <xsl:value-of select="$altova:RowStyle17"/>
                <xsl:value-of select="$rowend5"/>
                <xsl:text>\pard\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s206\s207\sl0\f1</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text> </xsl:text>
                <xsl:text>\par\pard\s0\s0\f0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1 </xsl:text>
                <xsl:text>\page </xsl:text>
                <xsl:if test="$SV_OutputFormat = &apos;PDF&apos;">
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s213\s214\sl0\f1 </xsl:text>
                    <xsl:text>{\cs215\f1 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                    <xsl:text>\s0\f0\f0</xsl:text>
                </xsl:if>
                <xsl:text>\par\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s216\s217\sl0\f1\fs28 </xsl:text>
                <xsl:text>{\cs218\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text> 5.   Prioriteitsgraden</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par\pard\s0\s0\f0\f0\fs24</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1 </xsl:text>
                <xsl:text>\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s219\s220\sl0\f1 </xsl:text>
                <xsl:variable name="altova:CurrContextGrid_04996840" select="."/>
                <xsl:variable name="altova:nTableWidthIn_6" select="$altova:nMaxWidthIn * 1.00000"/>
                <xsl:variable name="altova:nTableWidthTw_6" select="$altova:nTableWidthIn_6 * 1440"/>
                <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_6" select="round($altova:nTableWidthTw_6 * 0.25)"/>
                <xsl:variable name="altova:nTableIndentTw_6" select="0"/>
                <xsl:variable name="altova:nSumColumnWidthsTw_6" select="round(600.50)"/>
                <xsl:variable name="altova:TableWidthFactor_6">
                    <xsl:choose>
                        <xsl:when test="$altova:nSumColumnWidthsTw_6 &gt; $altova:nTableWidthTw_6">
                            <xsl:value-of select="($altova:nTableWidthTw_6 - $altova:SumDefaultColumnsForWideTableTw_6) div $altova:nSumColumnWidthsTw_6"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="1"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnsWithDefaultWidth_6" select="round(1)"/>
                <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_6">
                    <xsl:choose>
                        <xsl:when test="$altova:nColumnsWithDefaultWidth_6 = 0">
                            <xsl:value-of select="round(1)"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="$altova:nColumnsWithDefaultWidth_6"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nDefaultColumnWidthTw_6">
                    <xsl:choose>
                        <xsl:when test="$altova:TableWidthFactor_6 &lt; 1">
                            <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_6 div $altova:nColumnsWithDefaultWidthNotZero_6"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="round(($altova:nTableWidthTw_6 - $altova:nSumColumnWidthsTw_6) div $altova:nColumnsWithDefaultWidthNotZero_6)"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnWidthTw_6_0" select="round(0.42 * 1440 * $altova:TableWidthFactor_6)"/>
                <xsl:variable name="altova:nColumnWidthTw_6_1" select="$altova:nDefaultColumnWidthTw_6"/>
                <xsl:text>\pard\s0\s0\f0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:variable name="tablestyle6">
                    <xsl:text>\trowd\trleft</xsl:text>
                    <xsl:value-of select="$altova:nTableIndentTw_6"/>
                    <xsl:text>\ts221\trspdl15\trspdt15\trspdb15\trspdr15\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt30\trpaddl30\trpaddb30\trpaddr30\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
                </xsl:variable>
                <xsl:variable name="rowend6">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\row\pard</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="cellend6">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\cell</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestcell</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:RowStyle18">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl6" select="$altova:nTableIndentTw_6"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl6_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl6 + $altova:nColumnWidthTw_6_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl6_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col0_AfterColumn + $altova:nColumnWidthTw_6_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col1_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle6"/>
                    <xsl:value-of select="$altova:RowStyle18"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs222\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>5.1</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend6"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs223\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>  Aan de bij de helpdesk binnenkomende meldingen wordt een prioriteit toegekend op basis van de onderstaande tabellen. Er wordt onderscheid gemaakt naar twee periodes, te weten:</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>{\cs224\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>-  tijdens de looptijd van de helpdeskovereenkomst op normale werkdagen</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>{\cs225\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>-  tijdens de looptijd van de helpdeskovereenkomst op urgentiedagen</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend6"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle6"/>
                <xsl:value-of select="$altova:RowStyle18"/>
                <xsl:value-of select="$rowend6"/>
                <xsl:text>\pard\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s219\s220\sl0\f1</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text> </xsl:text>
                <xsl:text>\par\pard\s0\s0\f0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1 </xsl:text>
                <xsl:text>\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s226\s227\sl0\f1 </xsl:text>
                <xsl:text>{\cs228\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Prioriteitsbepaling geschiedt steeds voorlopig door Opdrachtnemer:</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par\pard\s0\s0\f0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1 </xsl:text>
                <xsl:text>\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s229\s230\sl0\f1 </xsl:text>
                <xsl:variable name="altova:CurrContextGrid_04997A68" select="."/>
                <xsl:variable name="altova:nTableWidthIn_7" select="$altova:nMaxWidthIn * 1.00000"/>
                <xsl:variable name="altova:nTableWidthTw_7" select="$altova:nTableWidthIn_7 * 1440"/>
                <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_7" select="round($altova:nTableWidthTw_7 * 0.25)"/>
                <xsl:variable name="altova:nTableIndentTw_7" select="15"/>
                <xsl:variable name="altova:nSumColumnWidthsTw_7" select="round(4000.50)"/>
                <xsl:variable name="altova:TableWidthFactor_7">
                    <xsl:choose>
                        <xsl:when test="$altova:nSumColumnWidthsTw_7 &gt; $altova:nTableWidthTw_7">
                            <xsl:value-of select="($altova:nTableWidthTw_7 - $altova:SumDefaultColumnsForWideTableTw_7) div $altova:nSumColumnWidthsTw_7"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="1"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnsWithDefaultWidth_7" select="round(4)"/>
                <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_7">
                    <xsl:choose>
                        <xsl:when test="$altova:nColumnsWithDefaultWidth_7 = 0">
                            <xsl:value-of select="round(4)"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="$altova:nColumnsWithDefaultWidth_7"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nDefaultColumnWidthTw_7">
                    <xsl:choose>
                        <xsl:when test="$altova:TableWidthFactor_7 &lt; 1">
                            <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_7 div $altova:nColumnsWithDefaultWidthNotZero_7"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="round(($altova:nTableWidthTw_7 - $altova:nSumColumnWidthsTw_7) div $altova:nColumnsWithDefaultWidthNotZero_7)"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnWidthTw_7_0" select="$altova:nDefaultColumnWidthTw_7"/>
                <xsl:variable name="altova:nColumnWidthTw_7_1" select="round(2.78 * 1440 * $altova:TableWidthFactor_7)"/>
                <xsl:variable name="altova:nColumnWidthTw_7_2" select="$altova:nDefaultColumnWidthTw_7"/>
                <xsl:variable name="altova:nColumnWidthTw_7_3" select="$altova:nDefaultColumnWidthTw_7"/>
                <xsl:variable name="altova:nColumnWidthTw_7_4" select="$altova:nDefaultColumnWidthTw_7"/>
                <xsl:text>\pard\s0\s0\f0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:variable name="tablestyle7">
                    <xsl:text>\trowd\trleft</xsl:text>
                    <xsl:value-of select="$altova:nTableIndentTw_7"/>
                    <xsl:text>\ts231\trspdl15\trspdt15\trspdb15\trspdr15\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt30\trpaddl30\trpaddb30\trpaddr30\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrs\brdrcf141\brdrw15\trbrdrl\brdrs\brdrcf141\brdrw15\trbrdrb\brdrs\brdrcf141\brdrw15\trbrdrr\brdrs\brdrcf141\brdrw15</xsl:text>
                </xsl:variable>
                <xsl:variable name="rowend7">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\row\pard</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="cellend7">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\cell</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestcell</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:RowStyle19">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl7" select="$altova:nTableIndentTw_7"/>
                    <xsl:text>\clvertalc\clmgf\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl7_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl7 + $altova:nColumnWidthTw_7_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl7_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clmrg\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl7_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl7_Col0_AfterColumn + $altova:nColumnWidthTw_7_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl7_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalc\clmrg\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl7_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl7_Col1_AfterColumn + $altova:nColumnWidthTw_7_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl7_Col2_AfterColumn)"/>
                    <xsl:text>\clvertalc\clmrg\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl7_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl7_Col2_AfterColumn + $altova:nColumnWidthTw_7_3"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl7_Col3_AfterColumn)"/>
                    <xsl:text>\clvertalc\clmrg\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl7_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl7_Col3_AfterColumn + $altova:nColumnWidthTw_7_4"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl7_Col4_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle7"/>
                    <xsl:value-of select="$altova:RowStyle19"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs232\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Normale werkdagen tijdens de Helpdesk overeenkomst periode</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend7"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend7"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend7"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend7"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend7"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle7"/>
                <xsl:value-of select="$altova:RowStyle19"/>
                <xsl:value-of select="$rowend7"/>
                <xsl:variable name="altova:RowStyle20">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl7" select="$altova:nTableIndentTw_7"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl7_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl7 + $altova:nColumnWidthTw_7_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl7_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl7_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl7_Col0_AfterColumn + $altova:nColumnWidthTw_7_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl7_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl7_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl7_Col1_AfterColumn + $altova:nColumnWidthTw_7_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl7_Col2_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl7_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl7_Col2_AfterColumn + $altova:nColumnWidthTw_7_3"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl7_Col3_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl7_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl7_Col3_AfterColumn + $altova:nColumnWidthTw_7_4"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl7_Col4_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle7"/>
                    <xsl:value-of select="$altova:RowStyle20"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs233\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Prioriteit</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend7"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs234\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Omschrijving</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend7"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs235\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Responstijd</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend7"/>
                <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs236\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Start</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>{\cs237\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>uiterlijk na</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>{\cs238\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>aanvang</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>{\cs239\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>responstijd</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend7"/>
                <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs240\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Oplossing</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>{\cs241\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>uiterlijk</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>{\cs242\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>na aanvang</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>{\cs243\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>responstijd</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend7"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle7"/>
                <xsl:value-of select="$altova:RowStyle20"/>
                <xsl:value-of select="$rowend7"/>
                <xsl:variable name="altova:RowStyle21">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl7" select="$altova:nTableIndentTw_7"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl7_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl7 + $altova:nColumnWidthTw_7_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl7_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl7_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl7_Col0_AfterColumn + $altova:nColumnWidthTw_7_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl7_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl7_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl7_Col1_AfterColumn + $altova:nColumnWidthTw_7_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl7_Col2_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl7_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl7_Col2_AfterColumn + $altova:nColumnWidthTw_7_3"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl7_Col3_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl7_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl7_Col3_AfterColumn + $altova:nColumnWidthTw_7_4"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl7_Col4_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle7"/>
                    <xsl:value-of select="$altova:RowStyle21"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs244\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Hoog</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend7"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs245\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Hinderlijke verstoring van hetverkiezingsproces, voortgangmet vertraging mogelijk, of ergere Gebreken.</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend7"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs246\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>3 uren</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend7"/>
                <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs247\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>3 uren</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend7"/>
                <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs248\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>6 uren</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend7"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle7"/>
                <xsl:value-of select="$altova:RowStyle21"/>
                <xsl:value-of select="$rowend7"/>
                <xsl:variable name="altova:RowStyle22">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl7" select="$altova:nTableIndentTw_7"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl7_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl7 + $altova:nColumnWidthTw_7_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl7_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl7_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl7_Col0_AfterColumn + $altova:nColumnWidthTw_7_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl7_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl7_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl7_Col1_AfterColumn + $altova:nColumnWidthTw_7_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl7_Col2_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl7_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl7_Col2_AfterColumn + $altova:nColumnWidthTw_7_3"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl7_Col3_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl7_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl7_Col3_AfterColumn + $altova:nColumnWidthTw_7_4"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl7_Col4_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle7"/>
                    <xsl:value-of select="$altova:RowStyle22"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs249\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Normaal</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend7"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs250\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Onhandigheden, kleineverstoringen die zijn te omzeilen,verkiezingsproces komt niet in gevaar.</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend7"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs251\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>1 dag</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend7"/>
                <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs252\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>1 dag</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend7"/>
                <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs253\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>2 dagen</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend7"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle7"/>
                <xsl:value-of select="$altova:RowStyle22"/>
                <xsl:value-of select="$rowend7"/>
                <xsl:variable name="altova:RowStyle23">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl7" select="$altova:nTableIndentTw_7"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl7_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl7 + $altova:nColumnWidthTw_7_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl7_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl7_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl7_Col0_AfterColumn + $altova:nColumnWidthTw_7_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl7_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl7_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl7_Col1_AfterColumn + $altova:nColumnWidthTw_7_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl7_Col2_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl7_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl7_Col2_AfterColumn + $altova:nColumnWidthTw_7_3"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl7_Col3_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl7_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl7_Col3_AfterColumn + $altova:nColumnWidthTw_7_4"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl7_Col4_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle7"/>
                    <xsl:value-of select="$altova:RowStyle23"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs254\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Laag</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend7"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs255\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Onhandigheden, kleineverstoringen die zijn te omzeilen,verkiezingsproces wordt niet geraakt.</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend7"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs256\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>1 week</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend7"/>
                <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs257\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>In overleg</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend7"/>
                <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs258\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>In overleg</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend7"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle7"/>
                <xsl:value-of select="$altova:RowStyle23"/>
                <xsl:value-of select="$rowend7"/>
                <xsl:text>\pard\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s229\s230\sl0\f1</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text> </xsl:text>
                <xsl:text>\par\pard\s0\s0\f0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1 </xsl:text>
                <xsl:text>\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s259\s260\sl0\f1 </xsl:text>
                <xsl:variable name="altova:CurrContextGrid_0499C410" select="."/>
                <xsl:variable name="altova:nTableWidthIn_8" select="$altova:nMaxWidthIn * 1.00000"/>
                <xsl:variable name="altova:nTableWidthTw_8" select="$altova:nTableWidthIn_8 * 1440"/>
                <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_8" select="round($altova:nTableWidthTw_8 * 0.25)"/>
                <xsl:variable name="altova:nTableIndentTw_8" select="15"/>
                <xsl:variable name="altova:nSumColumnWidthsTw_8" select="round(4000.50)"/>
                <xsl:variable name="altova:TableWidthFactor_8">
                    <xsl:choose>
                        <xsl:when test="$altova:nSumColumnWidthsTw_8 &gt; $altova:nTableWidthTw_8">
                            <xsl:value-of select="($altova:nTableWidthTw_8 - $altova:SumDefaultColumnsForWideTableTw_8) div $altova:nSumColumnWidthsTw_8"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="1"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnsWithDefaultWidth_8" select="round(4)"/>
                <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_8">
                    <xsl:choose>
                        <xsl:when test="$altova:nColumnsWithDefaultWidth_8 = 0">
                            <xsl:value-of select="round(4)"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="$altova:nColumnsWithDefaultWidth_8"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nDefaultColumnWidthTw_8">
                    <xsl:choose>
                        <xsl:when test="$altova:TableWidthFactor_8 &lt; 1">
                            <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_8 div $altova:nColumnsWithDefaultWidthNotZero_8"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="round(($altova:nTableWidthTw_8 - $altova:nSumColumnWidthsTw_8) div $altova:nColumnsWithDefaultWidthNotZero_8)"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnWidthTw_8_0" select="$altova:nDefaultColumnWidthTw_8"/>
                <xsl:variable name="altova:nColumnWidthTw_8_1" select="round(2.78 * 1440 * $altova:TableWidthFactor_8)"/>
                <xsl:variable name="altova:nColumnWidthTw_8_2" select="$altova:nDefaultColumnWidthTw_8"/>
                <xsl:variable name="altova:nColumnWidthTw_8_3" select="$altova:nDefaultColumnWidthTw_8"/>
                <xsl:variable name="altova:nColumnWidthTw_8_4" select="$altova:nDefaultColumnWidthTw_8"/>
                <xsl:text>\pard\s0\s0\f0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:variable name="tablestyle8">
                    <xsl:text>\trowd\trleft</xsl:text>
                    <xsl:value-of select="$altova:nTableIndentTw_8"/>
                    <xsl:text>\ts261\trspdl15\trspdt15\trspdb15\trspdr15\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt30\trpaddl30\trpaddb30\trpaddr30\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrs\brdrcf141\brdrw15\trbrdrl\brdrs\brdrcf141\brdrw15\trbrdrb\brdrs\brdrcf141\brdrw15\trbrdrr\brdrs\brdrcf141\brdrw15</xsl:text>
                </xsl:variable>
                <xsl:variable name="rowend8">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\row\pard</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="cellend8">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\cell</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestcell</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:RowStyle24">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl8" select="$altova:nTableIndentTw_8"/>
                    <xsl:text>\clvertalc\clmgf\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl8_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl8 + $altova:nColumnWidthTw_8_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl8_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clmrg\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl8_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl8_Col0_AfterColumn + $altova:nColumnWidthTw_8_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl8_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalc\clmrg\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl8_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl8_Col1_AfterColumn + $altova:nColumnWidthTw_8_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl8_Col2_AfterColumn)"/>
                    <xsl:text>\clvertalc\clmrg\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl8_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl8_Col2_AfterColumn + $altova:nColumnWidthTw_8_3"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl8_Col3_AfterColumn)"/>
                    <xsl:text>\clvertalc\clmrg\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl8_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl8_Col3_AfterColumn + $altova:nColumnWidthTw_8_4"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl8_Col4_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle8"/>
                    <xsl:value-of select="$altova:RowStyle24"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs262\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Urgentiedagen tijdens de Helpdesk overeenkomst periode</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend8"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend8"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend8"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend8"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend8"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle8"/>
                <xsl:value-of select="$altova:RowStyle24"/>
                <xsl:value-of select="$rowend8"/>
                <xsl:variable name="altova:RowStyle25">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl8" select="$altova:nTableIndentTw_8"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl8_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl8 + $altova:nColumnWidthTw_8_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl8_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl8_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl8_Col0_AfterColumn + $altova:nColumnWidthTw_8_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl8_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl8_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl8_Col1_AfterColumn + $altova:nColumnWidthTw_8_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl8_Col2_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl8_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl8_Col2_AfterColumn + $altova:nColumnWidthTw_8_3"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl8_Col3_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl8_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl8_Col3_AfterColumn + $altova:nColumnWidthTw_8_4"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl8_Col4_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle8"/>
                    <xsl:value-of select="$altova:RowStyle25"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs263\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Prioriteit</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend8"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs264\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Omschrijving</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend8"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs265\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Responstijd</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend8"/>
                <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs266\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Start</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>{\cs267\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>uiterlijk na</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>{\cs268\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>aanvang</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>{\cs269\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>responstijd</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend8"/>
                <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs270\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Oplossing</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>{\cs271\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>uiterlijk</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>{\cs272\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>na aanvang</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>{\cs273\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>responstijd</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend8"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle8"/>
                <xsl:value-of select="$altova:RowStyle25"/>
                <xsl:value-of select="$rowend8"/>
                <xsl:variable name="altova:RowStyle26">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl8" select="$altova:nTableIndentTw_8"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl8_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl8 + $altova:nColumnWidthTw_8_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl8_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl8_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl8_Col0_AfterColumn + $altova:nColumnWidthTw_8_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl8_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl8_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl8_Col1_AfterColumn + $altova:nColumnWidthTw_8_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl8_Col2_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl8_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl8_Col2_AfterColumn + $altova:nColumnWidthTw_8_3"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl8_Col3_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl8_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl8_Col3_AfterColumn + $altova:nColumnWidthTw_8_4"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl8_Col4_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle8"/>
                    <xsl:value-of select="$altova:RowStyle26"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs274\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Top</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend8"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs275\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Hinderlijke verstoring van hetverkiezingsproces, voortgangmet vertraging mogelijk, of ergere Gebreken.</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend8"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs276\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>10 minuten</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend8"/>
                <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs277\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>10 minuten</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend8"/>
                <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs278\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>1 uur</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend8"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle8"/>
                <xsl:value-of select="$altova:RowStyle26"/>
                <xsl:value-of select="$rowend8"/>
                <xsl:variable name="altova:RowStyle27">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl8" select="$altova:nTableIndentTw_8"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl8_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl8 + $altova:nColumnWidthTw_8_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl8_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl8_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl8_Col0_AfterColumn + $altova:nColumnWidthTw_8_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl8_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl8_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl8_Col1_AfterColumn + $altova:nColumnWidthTw_8_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl8_Col2_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl8_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl8_Col2_AfterColumn + $altova:nColumnWidthTw_8_3"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl8_Col3_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl8_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl8_Col3_AfterColumn + $altova:nColumnWidthTw_8_4"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl8_Col4_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle8"/>
                    <xsl:value-of select="$altova:RowStyle27"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs279\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Hoog</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend8"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs280\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Niet ‘Top’</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend8"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs281\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>3 uren</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend8"/>
                <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs282\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>3 uren</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend8"/>
                <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs283\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>6 uren</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend8"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle8"/>
                <xsl:value-of select="$altova:RowStyle27"/>
                <xsl:value-of select="$rowend8"/>
                <xsl:text>\pard\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s259\s260\sl0\f1</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text> </xsl:text>
                <xsl:text>\par\pard\s0\s0\f0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1 </xsl:text>
                <xsl:text>\page </xsl:text>
                <xsl:if test="$SV_OutputFormat = &apos;PDF&apos;">
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s284\s285\sl0\f1 </xsl:text>
                    <xsl:text>{\cs286\f1 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                    <xsl:text>\par\pard\s0\f0\f0</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1 </xsl:text>
                    <xsl:text>\par</xsl:text>
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s287\s288\sl0\f1 </xsl:text>
                    <xsl:text>{\cs289\f1 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                    <xsl:text>\s0\s0\f0\f0</xsl:text>
                </xsl:if>
                <xsl:text>\par\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s290\s291\sl0\f1 </xsl:text>
                <xsl:variable name="altova:CurrContextGrid_049A0760" select="."/>
                <xsl:variable name="altova:nTableWidthIn_9" select="$altova:nMaxWidthIn * 1.00000"/>
                <xsl:variable name="altova:nTableWidthTw_9" select="$altova:nTableWidthIn_9 * 1440"/>
                <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_9" select="round($altova:nTableWidthTw_9 * 0.25)"/>
                <xsl:variable name="altova:nTableIndentTw_9" select="0"/>
                <xsl:variable name="altova:nSumColumnWidthsTw_9" select="round(600.50)"/>
                <xsl:variable name="altova:TableWidthFactor_9">
                    <xsl:choose>
                        <xsl:when test="$altova:nSumColumnWidthsTw_9 &gt; $altova:nTableWidthTw_9">
                            <xsl:value-of select="($altova:nTableWidthTw_9 - $altova:SumDefaultColumnsForWideTableTw_9) div $altova:nSumColumnWidthsTw_9"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="1"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnsWithDefaultWidth_9" select="round(1)"/>
                <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_9">
                    <xsl:choose>
                        <xsl:when test="$altova:nColumnsWithDefaultWidth_9 = 0">
                            <xsl:value-of select="round(1)"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="$altova:nColumnsWithDefaultWidth_9"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nDefaultColumnWidthTw_9">
                    <xsl:choose>
                        <xsl:when test="$altova:TableWidthFactor_9 &lt; 1">
                            <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_9 div $altova:nColumnsWithDefaultWidthNotZero_9"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="round(($altova:nTableWidthTw_9 - $altova:nSumColumnWidthsTw_9) div $altova:nColumnsWithDefaultWidthNotZero_9)"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnWidthTw_9_0" select="round(0.42 * 1440 * $altova:TableWidthFactor_9)"/>
                <xsl:variable name="altova:nColumnWidthTw_9_1" select="$altova:nDefaultColumnWidthTw_9"/>
                <xsl:text>\pard\s0\s0\f0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:variable name="tablestyle9">
                    <xsl:text>\trowd\trleft</xsl:text>
                    <xsl:value-of select="$altova:nTableIndentTw_9"/>
                    <xsl:text>\ts292\trspdl15\trspdt15\trspdb15\trspdr15\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt30\trpaddl30\trpaddb30\trpaddr30\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
                </xsl:variable>
                <xsl:variable name="rowend9">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\row\pard</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="cellend9">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\cell</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestcell</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:RowStyle28">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl9" select="$altova:nTableIndentTw_9"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl9_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl9 + $altova:nColumnWidthTw_9_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl9_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl9_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl9_Col0_AfterColumn + $altova:nColumnWidthTw_9_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl9_Col1_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle9"/>
                    <xsl:value-of select="$altova:RowStyle28"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs293\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>5.2</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend9"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs294\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>  De in de tabellen van artikel 5.1 opgenomen ‘responstijd’ geeft aan binnen welke tijd nadat de melding is binnengekomen de melder van Opdrachtgever uitsluitsel ontvangt over het moment waarop Opdrachtnemer start met het werken aan de melding. In de kolom ‘Start (…)’ is de uiterlijke termijn opgenomen waarbinnen Opdrachtnemer de werkzaamheden start gericht op het feitelijk oplossen van de melding. De kolom ‘oplossing’ geeft aan wat de uiterlijke termijn is waarbinnen de oplossing moet zijn verwezenlijkt. </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend9"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle9"/>
                <xsl:value-of select="$altova:RowStyle28"/>
                <xsl:value-of select="$rowend9"/>
                <xsl:variable name="altova:RowStyle29">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl9" select="$altova:nTableIndentTw_9"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl9_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl9 + $altova:nColumnWidthTw_9_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl9_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl9_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl9_Col0_AfterColumn + $altova:nColumnWidthTw_9_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl9_Col1_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle9"/>
                    <xsl:value-of select="$altova:RowStyle29"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs295\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>5.3</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend9"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs296\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>  De bereikbaarheidstijden van de helpdesk, zijnde tevens de werktijden waarop aan oplossing van het gemelde Gebrek wordt gewerkt, zijn als volgt. </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend9"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle9"/>
                <xsl:value-of select="$altova:RowStyle29"/>
                <xsl:value-of select="$rowend9"/>
                <xsl:text>\pard\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s290\s291\sl0\f1</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text> </xsl:text>
                <xsl:text>\par\pard\s0\s0\f0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1 </xsl:text>
                <xsl:text>\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s297\s298\sl0\f1 </xsl:text>
                <xsl:variable name="altova:CurrContextGrid_049A1D80" select="."/>
                <xsl:variable name="altova:nTableWidthIn_10" select="$altova:nMaxWidthIn * 1.00000"/>
                <xsl:variable name="altova:nTableWidthTw_10" select="$altova:nTableWidthIn_10 * 1440"/>
                <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_10" select="round($altova:nTableWidthTw_10 * 0.25)"/>
                <xsl:variable name="altova:nTableIndentTw_10" select="15"/>
                <xsl:variable name="altova:nSumColumnWidthsTw_10" select="round(4000.50)"/>
                <xsl:variable name="altova:TableWidthFactor_10">
                    <xsl:choose>
                        <xsl:when test="$altova:nSumColumnWidthsTw_10 &gt; $altova:nTableWidthTw_10">
                            <xsl:value-of select="($altova:nTableWidthTw_10 - $altova:SumDefaultColumnsForWideTableTw_10) div $altova:nSumColumnWidthsTw_10"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="1"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnsWithDefaultWidth_10" select="round(2)"/>
                <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_10">
                    <xsl:choose>
                        <xsl:when test="$altova:nColumnsWithDefaultWidth_10 = 0">
                            <xsl:value-of select="round(2)"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="$altova:nColumnsWithDefaultWidth_10"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nDefaultColumnWidthTw_10">
                    <xsl:choose>
                        <xsl:when test="$altova:TableWidthFactor_10 &lt; 1">
                            <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_10 div $altova:nColumnsWithDefaultWidthNotZero_10"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="round(($altova:nTableWidthTw_10 - $altova:nSumColumnWidthsTw_10) div $altova:nColumnsWithDefaultWidthNotZero_10)"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnWidthTw_10_0" select="round(2.78 * 1440 * $altova:TableWidthFactor_10)"/>
                <xsl:variable name="altova:nColumnWidthTw_10_1" select="$altova:nDefaultColumnWidthTw_10"/>
                <xsl:variable name="altova:nColumnWidthTw_10_2" select="$altova:nDefaultColumnWidthTw_10"/>
                <xsl:text>\pard\s0\s0\f0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:variable name="tablestyle10">
                    <xsl:text>\trowd\trleft</xsl:text>
                    <xsl:value-of select="$altova:nTableIndentTw_10"/>
                    <xsl:text>\ts299\trspdl15\trspdt15\trspdb15\trspdr15\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt30\trpaddl30\trpaddb30\trpaddr30\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrs\brdrcf141\brdrw15\trbrdrl\brdrs\brdrcf141\brdrw15\trbrdrb\brdrs\brdrcf141\brdrw15\trbrdrr\brdrs\brdrcf141\brdrw15</xsl:text>
                </xsl:variable>
                <xsl:variable name="rowend10">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\row\pard</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="cellend10">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\cell</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestcell</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:RowStyle30">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl10" select="$altova:nTableIndentTw_10"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl10_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl10 + $altova:nColumnWidthTw_10_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl10_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl10_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl10_Col0_AfterColumn + $altova:nColumnWidthTw_10_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl10_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl10_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl10_Col1_AfterColumn + $altova:nColumnWidthTw_10_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl10_Col2_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle10"/>
                    <xsl:value-of select="$altova:RowStyle30"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs300\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Periode</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend10"/>
                <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs301\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Werkdagen</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend10"/>
                <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs302\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Weekends</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend10"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle10"/>
                <xsl:value-of select="$altova:RowStyle30"/>
                <xsl:value-of select="$rowend10"/>
                <xsl:variable name="altova:RowStyle31">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl10" select="$altova:nTableIndentTw_10"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl10_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl10 + $altova:nColumnWidthTw_10_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl10_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl10_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl10_Col0_AfterColumn + $altova:nColumnWidthTw_10_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl10_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl10_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl10_Col1_AfterColumn + $altova:nColumnWidthTw_10_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl10_Col2_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle10"/>
                    <xsl:value-of select="$altova:RowStyle31"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs303\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Normale werkdagen tijdens de Helpdesk overeenkomst periode</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend10"/>
                <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs304\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>08:30-17:30</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend10"/>
                <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs305\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Gesloten</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend10"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle10"/>
                <xsl:value-of select="$altova:RowStyle31"/>
                <xsl:value-of select="$rowend10"/>
                <xsl:variable name="altova:RowStyle32">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl10" select="$altova:nTableIndentTw_10"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl10_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl10 + $altova:nColumnWidthTw_10_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl10_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl10_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl10_Col0_AfterColumn + $altova:nColumnWidthTw_10_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl10_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl10_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl10_Col1_AfterColumn + $altova:nColumnWidthTw_10_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl10_Col2_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle10"/>
                    <xsl:value-of select="$altova:RowStyle32"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs306\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Urgentiedagen tijdens de Helpdesk overeenkomst periode</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend10"/>
                <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs307\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>08:00-18:00</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend10"/>
                <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs308\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>09:00-17:00</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend10"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle10"/>
                <xsl:value-of select="$altova:RowStyle32"/>
                <xsl:value-of select="$rowend10"/>
                <xsl:variable name="altova:RowStyle33">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl10" select="$altova:nTableIndentTw_10"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl10_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl10 + $altova:nColumnWidthTw_10_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl10_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl10_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl10_Col0_AfterColumn + $altova:nColumnWidthTw_10_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl10_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf142\brdrw15\clbrdrb\brdrs\brdrcf143\brdrw15\clbrdrl\brdrs\brdrcf142\brdrw15\clbrdrr\brdrs\brdrcf143\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl10_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl10_Col1_AfterColumn + $altova:nColumnWidthTw_10_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl10_Col2_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle10"/>
                    <xsl:value-of select="$altova:RowStyle33"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs309\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Verkiezingsdag en de dag erna</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend10"/>
                <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs310\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>00:00-24:00</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend10"/>
                <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs311\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>nvt</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend10"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle10"/>
                <xsl:value-of select="$altova:RowStyle33"/>
                <xsl:value-of select="$rowend10"/>
                <xsl:text>\pard\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s297\s298\sl0\f1</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text> </xsl:text>
                <xsl:text>\par\pard\s0\s0\f0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1 </xsl:text>
                <xsl:text>\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s312\s313\sl0\f1 </xsl:text>
                <xsl:variable name="altova:CurrContextGrid_049A40E8" select="."/>
                <xsl:variable name="altova:nTableWidthIn_11" select="$altova:nMaxWidthIn * 1.00000"/>
                <xsl:variable name="altova:nTableWidthTw_11" select="$altova:nTableWidthIn_11 * 1440"/>
                <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_11" select="round($altova:nTableWidthTw_11 * 0.25)"/>
                <xsl:variable name="altova:nTableIndentTw_11" select="0"/>
                <xsl:variable name="altova:nSumColumnWidthsTw_11" select="round(600.50)"/>
                <xsl:variable name="altova:TableWidthFactor_11">
                    <xsl:choose>
                        <xsl:when test="$altova:nSumColumnWidthsTw_11 &gt; $altova:nTableWidthTw_11">
                            <xsl:value-of select="($altova:nTableWidthTw_11 - $altova:SumDefaultColumnsForWideTableTw_11) div $altova:nSumColumnWidthsTw_11"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="1"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnsWithDefaultWidth_11" select="round(1)"/>
                <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_11">
                    <xsl:choose>
                        <xsl:when test="$altova:nColumnsWithDefaultWidth_11 = 0">
                            <xsl:value-of select="round(1)"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="$altova:nColumnsWithDefaultWidth_11"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nDefaultColumnWidthTw_11">
                    <xsl:choose>
                        <xsl:when test="$altova:TableWidthFactor_11 &lt; 1">
                            <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_11 div $altova:nColumnsWithDefaultWidthNotZero_11"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="round(($altova:nTableWidthTw_11 - $altova:nSumColumnWidthsTw_11) div $altova:nColumnsWithDefaultWidthNotZero_11)"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnWidthTw_11_0" select="round(0.42 * 1440 * $altova:TableWidthFactor_11)"/>
                <xsl:variable name="altova:nColumnWidthTw_11_1" select="$altova:nDefaultColumnWidthTw_11"/>
                <xsl:text>\pard\s0\s0\f0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:variable name="tablestyle11">
                    <xsl:text>\trowd\trleft</xsl:text>
                    <xsl:value-of select="$altova:nTableIndentTw_11"/>
                    <xsl:text>\ts314\trspdl15\trspdt15\trspdb15\trspdr15\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt30\trpaddl30\trpaddb30\trpaddr30\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
                </xsl:variable>
                <xsl:variable name="rowend11">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\row\pard</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="cellend11">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\cell</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestcell</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:RowStyle34">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl11" select="$altova:nTableIndentTw_11"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl11_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl11 + $altova:nColumnWidthTw_11_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl11_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl11_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl11_Col0_AfterColumn + $altova:nColumnWidthTw_11_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl11_Col1_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle11"/>
                    <xsl:value-of select="$altova:RowStyle34"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs315\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>5.4</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend11"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs316\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>  De in de tabellen van artikel 5.1 opgenomen termijnen worden opgeschort gedurende de periodes die vallen buiten de werktijden die in artikel 5.3 zijn opgenomen.</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend11"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle11"/>
                <xsl:value-of select="$altova:RowStyle34"/>
                <xsl:value-of select="$rowend11"/>
                <xsl:text>\pard\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s312\s313\sl0\f1</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text> </xsl:text>
                <xsl:text>\par\pard\s0\s0\f0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1 </xsl:text>
                <xsl:text>\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s317\s318\sl0\f1\fs28 </xsl:text>
                <xsl:text>{\cs319\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>6.    Ondersteuning bij installatie en ingebruikname</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par\pard\s0\s0\f0\f0\fs24</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1 </xsl:text>
                <xsl:text>\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s320\s321\sl0\f1 </xsl:text>
                <xsl:variable name="altova:CurrContextGrid_049A5170" select="."/>
                <xsl:variable name="altova:nTableWidthIn_12" select="$altova:nMaxWidthIn * 1.00000"/>
                <xsl:variable name="altova:nTableWidthTw_12" select="$altova:nTableWidthIn_12 * 1440"/>
                <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_12" select="round($altova:nTableWidthTw_12 * 0.25)"/>
                <xsl:variable name="altova:nTableIndentTw_12" select="0"/>
                <xsl:variable name="altova:nSumColumnWidthsTw_12" select="round(600.50)"/>
                <xsl:variable name="altova:TableWidthFactor_12">
                    <xsl:choose>
                        <xsl:when test="$altova:nSumColumnWidthsTw_12 &gt; $altova:nTableWidthTw_12">
                            <xsl:value-of select="($altova:nTableWidthTw_12 - $altova:SumDefaultColumnsForWideTableTw_12) div $altova:nSumColumnWidthsTw_12"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="1"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnsWithDefaultWidth_12" select="round(1)"/>
                <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_12">
                    <xsl:choose>
                        <xsl:when test="$altova:nColumnsWithDefaultWidth_12 = 0">
                            <xsl:value-of select="round(1)"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="$altova:nColumnsWithDefaultWidth_12"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nDefaultColumnWidthTw_12">
                    <xsl:choose>
                        <xsl:when test="$altova:TableWidthFactor_12 &lt; 1">
                            <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_12 div $altova:nColumnsWithDefaultWidthNotZero_12"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="round(($altova:nTableWidthTw_12 - $altova:nSumColumnWidthsTw_12) div $altova:nColumnsWithDefaultWidthNotZero_12)"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnWidthTw_12_0" select="round(0.42 * 1440 * $altova:TableWidthFactor_12)"/>
                <xsl:variable name="altova:nColumnWidthTw_12_1" select="$altova:nDefaultColumnWidthTw_12"/>
                <xsl:text>\pard\s0\s0\f0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:variable name="tablestyle12">
                    <xsl:text>\trowd\trleft</xsl:text>
                    <xsl:value-of select="$altova:nTableIndentTw_12"/>
                    <xsl:text>\ts322\trspdl15\trspdt15\trspdb15\trspdr15\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt30\trpaddl30\trpaddb30\trpaddr30\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
                </xsl:variable>
                <xsl:variable name="rowend12">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\row\pard</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="cellend12">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\cell</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestcell</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:RowStyle35">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl12" select="$altova:nTableIndentTw_12"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl12_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl12 + $altova:nColumnWidthTw_12_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl12_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl12_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl12_Col0_AfterColumn + $altova:nColumnWidthTw_12_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl12_Col1_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle12"/>
                    <xsl:value-of select="$altova:RowStyle35"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs323\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>  6.1</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend12"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs324\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>  Op verzoek van Opdrachtgever zal Opdrachtnemer Opdrachtgever ondersteunen bij het installeren, implementeren en in gebruik nemen van de Programmatuur op locatie. Deze ondersteuning zal Opdrachtnemer in onderling overleg met de Opdrachtgever inplannen.</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend12"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle12"/>
                <xsl:value-of select="$altova:RowStyle35"/>
                <xsl:value-of select="$rowend12"/>
                <xsl:text>\pard\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s320\s321\sl0\f1</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text> </xsl:text>
                <xsl:text>\par\pard\s0\s0\f0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1 </xsl:text>
                <xsl:text>\page </xsl:text>
                <xsl:if test="$SV_OutputFormat = &apos;PDF&apos;">
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s325\s326\sl0\f1 </xsl:text>
                    <xsl:text>{\cs327\f1 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                    <xsl:text>\s0\f0\f0</xsl:text>
                </xsl:if>
                <xsl:text>\par\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s328\s329\sl0\f1\fs28 </xsl:text>
                <xsl:text>{\cs330\f1\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>7.    Vergoedingen</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par\pard\s0\s0\f0\f0\fs24</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1 </xsl:text>
                <xsl:text>\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s331\s332\sl0\f1 </xsl:text>
                <xsl:variable name="altova:CurrContextGrid_049A63B0" select="."/>
                <xsl:variable name="altova:nTableWidthIn_13" select="$altova:nMaxWidthIn * 1.00000"/>
                <xsl:variable name="altova:nTableWidthTw_13" select="$altova:nTableWidthIn_13 * 1440"/>
                <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_13" select="round($altova:nTableWidthTw_13 * 0.25)"/>
                <xsl:variable name="altova:nTableIndentTw_13" select="0"/>
                <xsl:variable name="altova:nSumColumnWidthsTw_13" select="round(600.50)"/>
                <xsl:variable name="altova:TableWidthFactor_13">
                    <xsl:choose>
                        <xsl:when test="$altova:nSumColumnWidthsTw_13 &gt; $altova:nTableWidthTw_13">
                            <xsl:value-of select="($altova:nTableWidthTw_13 - $altova:SumDefaultColumnsForWideTableTw_13) div $altova:nSumColumnWidthsTw_13"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="1"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnsWithDefaultWidth_13" select="round(1)"/>
                <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_13">
                    <xsl:choose>
                        <xsl:when test="$altova:nColumnsWithDefaultWidth_13 = 0">
                            <xsl:value-of select="round(1)"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="$altova:nColumnsWithDefaultWidth_13"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nDefaultColumnWidthTw_13">
                    <xsl:choose>
                        <xsl:when test="$altova:TableWidthFactor_13 &lt; 1">
                            <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_13 div $altova:nColumnsWithDefaultWidthNotZero_13"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="round(($altova:nTableWidthTw_13 - $altova:nSumColumnWidthsTw_13) div $altova:nColumnsWithDefaultWidthNotZero_13)"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnWidthTw_13_0" select="round(0.42 * 1440 * $altova:TableWidthFactor_13)"/>
                <xsl:variable name="altova:nColumnWidthTw_13_1" select="$altova:nDefaultColumnWidthTw_13"/>
                <xsl:text>\pard\s0\s0\f0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:variable name="tablestyle13">
                    <xsl:text>\trowd\trleft</xsl:text>
                    <xsl:value-of select="$altova:nTableIndentTw_13"/>
                    <xsl:text>\ts333\trspdl15\trspdt15\trspdb15\trspdr15\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt30\trpaddl30\trpaddb30\trpaddr30\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
                </xsl:variable>
                <xsl:variable name="rowend13">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\row\pard</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="cellend13">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\cell</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestcell</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:RowStyle36">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl13" select="$altova:nTableIndentTw_13"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl13_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl13 + $altova:nColumnWidthTw_13_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl13_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl13_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl13_Col0_AfterColumn + $altova:nColumnWidthTw_13_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl13_Col1_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle13"/>
                    <xsl:value-of select="$altova:RowStyle36"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs334\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>7.1</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend13"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs335\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>  Opdrachtnemer en Opdrachtgever komen, met betrekking tot vergoeding voor de in de krachtens deze Helpdesk overeenkomst te leveren diensten, het volgende overeen:</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:variable name="altova:CurrContextGrid_049A70A8" select="."/>
                <xsl:variable name="altova:nTableWidthIn_14" select="$altova:nColumnWidthTw_13_1 div 1440 * 1.00000 - 0.02083 - 0.02083"/>
                <xsl:variable name="altova:nTableWidthTw_14" select="$altova:nTableWidthIn_14 * 1440"/>
                <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_14" select="round($altova:nTableWidthTw_14 * 0.25)"/>
                <xsl:variable name="altova:nTableIndentTw_14" select="0"/>
                <xsl:variable name="altova:nSumColumnWidthsTw_14" select="round(400.50)"/>
                <xsl:variable name="altova:TableWidthFactor_14">
                    <xsl:choose>
                        <xsl:when test="$altova:nSumColumnWidthsTw_14 &gt; $altova:nTableWidthTw_14">
                            <xsl:value-of select="($altova:nTableWidthTw_14 - $altova:SumDefaultColumnsForWideTableTw_14) div $altova:nSumColumnWidthsTw_14"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="1"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnsWithDefaultWidth_14" select="round(1)"/>
                <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_14">
                    <xsl:choose>
                        <xsl:when test="$altova:nColumnsWithDefaultWidth_14 = 0">
                            <xsl:value-of select="round(1)"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="$altova:nColumnsWithDefaultWidth_14"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nDefaultColumnWidthTw_14">
                    <xsl:choose>
                        <xsl:when test="$altova:TableWidthFactor_14 &lt; 1">
                            <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_14 div $altova:nColumnsWithDefaultWidthNotZero_14"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="round(($altova:nTableWidthTw_14 - $altova:nSumColumnWidthsTw_14) div $altova:nColumnsWithDefaultWidthNotZero_14)"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnWidthTw_14_0" select="round(0.28 * 1440 * $altova:TableWidthFactor_14)"/>
                <xsl:variable name="altova:nColumnWidthTw_14_1" select="$altova:nDefaultColumnWidthTw_14"/>
                <xsl:text>\pard\f0\fs24</xsl:text>
                <xsl:if test="$templatetablelevel + 2 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 2"/>
                <xsl:variable name="tablestyle14">
                    <xsl:text>\trowd\trleft</xsl:text>
                    <xsl:value-of select="$altova:nTableIndentTw_14"/>
                    <xsl:text>\ts336\trspdl15\trspdt15\trspdb15\trspdr15\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt30\trpaddl30\trpaddb30\trpaddr30\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
                </xsl:variable>
                <xsl:variable name="rowend14">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 2 = 1">
                            <xsl:text>\row\pard</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="cellend14">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 2 = 1">
                            <xsl:text>\cell</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestcell</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:RowStyle37">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl14" select="$altova:nTableIndentTw_14"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl14_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl14 + $altova:nColumnWidthTw_14_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl14_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl14_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl14_Col0_AfterColumn + $altova:nColumnWidthTw_14_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl14_Col1_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 2 = 1">
                    <xsl:value-of select="$tablestyle14"/>
                    <xsl:value-of select="$altova:RowStyle37"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 2 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 2"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs337\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>a)</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend14"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs338\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>  Voor de in de artikelen 3, 4 en 5 omschreven diensten betaalt Opdrachtgever aan Opdrachtnemer een éénmalige vaste vergoeding van € 250,- exclusief BTW.</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend14"/>
                <xsl:if test="$templatetablelevel + 2 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle14"/>
                <xsl:value-of select="$altova:RowStyle37"/>
                <xsl:value-of select="$rowend14"/>
                <xsl:variable name="altova:RowStyle38">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl14" select="$altova:nTableIndentTw_14"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl14_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl14 + $altova:nColumnWidthTw_14_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl14_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl14_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl14_Col0_AfterColumn + $altova:nColumnWidthTw_14_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl14_Col1_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 2 = 1">
                    <xsl:value-of select="$tablestyle14"/>
                    <xsl:value-of select="$altova:RowStyle38"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 2 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 2"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs339\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>b)</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend14"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs340\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>  Voor diensten als bedoeld in artikel 6 betaalt Opdrachtgever aan Opdrachtnemer </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>{\cs341\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>€  115,- exclusief BTW per uur voor de tijd die is besteed bij de Opdrachtgever door een gekwalificeerde consultant + € 0,62 exclusief BTW per kilometer aan voorrijkosten, gerekend vanaf de Wiltonstraat 36 in Veenendaal;</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend14"/>
                <xsl:if test="$templatetablelevel + 2 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle14"/>
                <xsl:value-of select="$altova:RowStyle38"/>
                <xsl:value-of select="$rowend14"/>
                <xsl:text>\pard\ql\sl0\f1\fs22</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text> </xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend13"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle13"/>
                <xsl:value-of select="$altova:RowStyle36"/>
                <xsl:value-of select="$rowend13"/>
                <xsl:variable name="altova:RowStyle39">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl13" select="$altova:nTableIndentTw_13"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl13_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl13 + $altova:nColumnWidthTw_13_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl13_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl13_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl13_Col0_AfterColumn + $altova:nColumnWidthTw_13_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl13_Col1_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle13"/>
                    <xsl:value-of select="$altova:RowStyle39"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs342\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>7.2</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend13"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs343\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>  Opdrachtnemer zal de vaste vergoedingen bedoeld in artikel 7.1 onder a) op 14 mei 2009 factureren.  Opdrachtnemer zal de variabele vergoedingen bedoeld in artikel  7.1. onder b) factureren op nacalculatiebasis, telkens na het verstrijken van de betreffende kalendermaand.</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend13"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle13"/>
                <xsl:value-of select="$altova:RowStyle39"/>
                <xsl:value-of select="$rowend13"/>
                <xsl:variable name="altova:RowStyle40">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl13" select="$altova:nTableIndentTw_13"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl13_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl13 + $altova:nColumnWidthTw_13_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl13_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl13_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl13_Col0_AfterColumn + $altova:nColumnWidthTw_13_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl13_Col1_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle13"/>
                    <xsl:value-of select="$altova:RowStyle40"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs344\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>7.3</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend13"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs345\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>  Opdrachtgever zal de onder 7.2. genoemde facturen binnen 60 dagen na factuurdatum betalen aan Opdrachtnemer.</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend13"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle13"/>
                <xsl:value-of select="$altova:RowStyle40"/>
                <xsl:value-of select="$rowend13"/>
                <xsl:text>\pard\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s331\s332\sl0\f1</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text> </xsl:text>
                <xsl:text>\par\pard\s0\s0\f0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1 </xsl:text>
                <xsl:text>\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s346\s347\sl0\f1 </xsl:text>
                <xsl:text>{\cs348\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Aldus op de laatste van de twee hierna genoemde data overeengekomen en in tweevoud ondertekend.</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par\pard\s0\s0\f0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1 </xsl:text>
                <xsl:text>\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s349\s350\sl0\f1 </xsl:text>
                <xsl:variable name="altova:CurrContextGrid_049A9A98" select="."/>
                <xsl:variable name="altova:nTableWidthIn_15" select="$altova:nMaxWidthIn * 1.00000"/>
                <xsl:variable name="altova:nTableWidthTw_15" select="$altova:nTableWidthIn_15 * 1440"/>
                <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_15" select="round($altova:nTableWidthTw_15 * 0.25)"/>
                <xsl:variable name="altova:nTableIndentTw_15" select="0"/>
                <xsl:variable name="altova:nSumColumnWidthsTw_15" select="round(5401.00)"/>
                <xsl:variable name="altova:TableWidthFactor_15">
                    <xsl:choose>
                        <xsl:when test="$altova:nSumColumnWidthsTw_15 &gt; $altova:nTableWidthTw_15">
                            <xsl:value-of select="($altova:nTableWidthTw_15 - $altova:SumDefaultColumnsForWideTableTw_15) div $altova:nSumColumnWidthsTw_15"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="1"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnsWithDefaultWidth_15" select="round(1)"/>
                <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_15">
                    <xsl:choose>
                        <xsl:when test="$altova:nColumnsWithDefaultWidth_15 = 0">
                            <xsl:value-of select="round(1)"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="$altova:nColumnsWithDefaultWidth_15"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nDefaultColumnWidthTw_15">
                    <xsl:choose>
                        <xsl:when test="$altova:TableWidthFactor_15 &lt; 1">
                            <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_15 div $altova:nColumnsWithDefaultWidthNotZero_15"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="round(($altova:nTableWidthTw_15 - $altova:nSumColumnWidthsTw_15) div $altova:nColumnsWithDefaultWidthNotZero_15)"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnWidthTw_15_0" select="round(2.08 * 1440 * $altova:TableWidthFactor_15)"/>
                <xsl:variable name="altova:nColumnWidthTw_15_1" select="round(1.67 * 1440 * $altova:TableWidthFactor_15)"/>
                <xsl:variable name="altova:nColumnWidthTw_15_2" select="$altova:nDefaultColumnWidthTw_15"/>
                <xsl:text>\pard\s0\s0\f0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:variable name="tablestyle15">
                    <xsl:text>\trowd\trleft</xsl:text>
                    <xsl:value-of select="$altova:nTableIndentTw_15"/>
                    <xsl:text>\ts351\trspdl15\trspdt15\trspdb15\trspdr15\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt30\trpaddl30\trpaddb30\trpaddr30\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
                </xsl:variable>
                <xsl:variable name="rowend15">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\row\pard</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="cellend15">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\cell</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestcell</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:RowStyle41">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl15" select="$altova:nTableIndentTw_15"/>
                    <xsl:text>\clvertalc\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl15_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl15 + $altova:nColumnWidthTw_15_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl15_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl15_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl15_Col0_AfterColumn + $altova:nColumnWidthTw_15_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl15_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl15_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl15_Col1_AfterColumn + $altova:nColumnWidthTw_15_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl15_Col2_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle15"/>
                    <xsl:value-of select="$altova:RowStyle41"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs352\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Veenendaal, </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend15"/>
                <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs353\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Plaats   </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend15"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="mtp:Address">
                    <xsl:for-each select="mtp:City">
                        <xsl:text>{\cs354\f1 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_15_2 div 1440) - 0.02083 - 0.02083"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend15"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle15"/>
                <xsl:value-of select="$altova:RowStyle41"/>
                <xsl:value-of select="$rowend15"/>
                <xsl:variable name="altova:RowStyle42">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl15" select="$altova:nTableIndentTw_15"/>
                    <xsl:text>\clvertalc\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl15_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl15 + $altova:nColumnWidthTw_15_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl15_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl15_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl15_Col0_AfterColumn + $altova:nColumnWidthTw_15_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl15_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl15_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl15_Col1_AfterColumn + $altova:nColumnWidthTw_15_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl15_Col2_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle15"/>
                    <xsl:value-of select="$altova:RowStyle42"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs355\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>10 april 2009</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend15"/>
                <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs356\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Datum   </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend15"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs357\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="substring( mtp:Createdon, 0, 11)"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend15"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle15"/>
                <xsl:value-of select="$altova:RowStyle42"/>
                <xsl:value-of select="$rowend15"/>
                <xsl:variable name="altova:RowStyle43">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl15" select="$altova:nTableIndentTw_15"/>
                    <xsl:text>\clvertalc\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl15_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl15 + $altova:nColumnWidthTw_15_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl15_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl15_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl15_Col0_AfterColumn + $altova:nColumnWidthTw_15_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl15_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl15_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl15_Col1_AfterColumn + $altova:nColumnWidthTw_15_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl15_Col2_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle15"/>
                    <xsl:value-of select="$altova:RowStyle43"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs358\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>IVU Benelux BV            </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend15"/>
                <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs359\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Gemeente   </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend15"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="mtp:Address">
                    <xsl:for-each select="mtp:Name">
                        <xsl:text>{\cs360\f1 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_15_2 div 1440) - 0.02083 - 0.02083"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend15"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle15"/>
                <xsl:value-of select="$altova:RowStyle43"/>
                <xsl:value-of select="$rowend15"/>
                <xsl:variable name="altova:RowStyle44">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl15" select="$altova:nTableIndentTw_15"/>
                    <xsl:text>\clvertalc\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl15_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl15 + $altova:nColumnWidthTw_15_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl15_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl15_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl15_Col0_AfterColumn + $altova:nColumnWidthTw_15_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl15_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalc\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl15_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl15_Col1_AfterColumn + $altova:nColumnWidthTw_15_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl15_Col2_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle15"/>
                    <xsl:value-of select="$altova:RowStyle44"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\field{\*\fldinst{\ul0\chcbpat140 INCLUDEPICTURE "</xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:if test="substring(string(&apos;plugins/de.ivu.wahl.wus.reportgenerator_1.0.0/de/ivu/wahl/wus/reportgen/images/signing.bmp&apos;), 2, 1) = ':'">
                            <xsl:text>file:///</xsl:text>
                        </xsl:if>
                        <xsl:value-of select="translate(string(&apos;plugins/de.ivu.wahl.wus.reportgenerator_1.0.0/de/ivu/wahl/wus/reportgen/images/signing.bmp&apos;), '&#x5c;', '/')"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>" \\* MERGEFORMAT \\d }}}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend15"/>
                <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs361\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>   </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend15"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend15"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle15"/>
                <xsl:value-of select="$altova:RowStyle44"/>
                <xsl:value-of select="$rowend15"/>
                <xsl:variable name="altova:RowStyle45">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl15" select="$altova:nTableIndentTw_15"/>
                    <xsl:text>\clvertalc\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl15_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl15 + $altova:nColumnWidthTw_15_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl15_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl15_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl15_Col0_AfterColumn + $altova:nColumnWidthTw_15_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl15_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl15_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl15_Col1_AfterColumn + $altova:nColumnWidthTw_15_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl15_Col2_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle15"/>
                    <xsl:value-of select="$altova:RowStyle45"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs362\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Ing. R.E.A. Mulder </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend15"/>
                <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs363\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Naam   </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend15"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="mtp:Contacts">
                    <xsl:for-each select="mtp:Contact">
                        <xsl:if test="mtp:Person/mtp:Persontype  = &quot;contractmanager&quot;">
                            <xsl:for-each select="mtp:Person">
                                <xsl:for-each select="mtp:Initials">
                                    <xsl:text>{\cs364\f1 </xsl:text>
                                    <xsl:apply-templates>
                                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_15_2 div 1440) - 0.02083 - 0.02083"/>
                                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                                    </xsl:apply-templates>
                                    <xsl:text>}</xsl:text>
                                </xsl:for-each>
                                <xsl:text>{\cs365\f1 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text> </xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                                <xsl:for-each select="mtp:Lastname">
                                    <xsl:text>{\cs366\f1 </xsl:text>
                                    <xsl:apply-templates>
                                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_15_2 div 1440) - 0.02083 - 0.02083"/>
                                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                                    </xsl:apply-templates>
                                    <xsl:text>}</xsl:text>
                                </xsl:for-each>
                            </xsl:for-each>
                        </xsl:if>
                    </xsl:for-each>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend15"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle15"/>
                <xsl:value-of select="$altova:RowStyle45"/>
                <xsl:value-of select="$rowend15"/>
                <xsl:variable name="altova:RowStyle46">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl15" select="$altova:nTableIndentTw_15"/>
                    <xsl:text>\clvertalc\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl15_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl15 + $altova:nColumnWidthTw_15_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl15_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl15_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl15_Col0_AfterColumn + $altova:nColumnWidthTw_15_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl15_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl15_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl15_Col1_AfterColumn + $altova:nColumnWidthTw_15_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl15_Col2_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle15"/>
                    <xsl:value-of select="$altova:RowStyle46"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs367\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Algemeen directeur</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend15"/>
                <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                <xsl:text>{\cs368\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Functie   </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend15"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="mtp:Contacts">
                    <xsl:for-each select="mtp:Contact">
                        <xsl:if test="mtp:Person/mtp:Persontype  = &quot;contractmanager&quot;">
                            <xsl:for-each select="mtp:Person">
                                <xsl:for-each select="mtp:Occupation">
                                    <xsl:text>{\cs369\f1 </xsl:text>
                                    <xsl:apply-templates>
                                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_15_2 div 1440) - 0.02083 - 0.02083"/>
                                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                                    </xsl:apply-templates>
                                    <xsl:text>}</xsl:text>
                                </xsl:for-each>
                            </xsl:for-each>
                        </xsl:if>
                    </xsl:for-each>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend15"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle15"/>
                <xsl:value-of select="$altova:RowStyle46"/>
                <xsl:value-of select="$rowend15"/>
                <xsl:text>\pard\s1\f0\fs24\sl0\s15\s16\sl0\f1\s0\f0\fs24\sl0\s349\s350\sl0\f1</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text> </xsl:text>
                <xsl:text>\par\pard\s0\s0\f0\f0</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\par\s1\f0\fs24\sl0\s15\s16\sl0\f1 </xsl:text>
                <xsl:text>{\cs370\f1 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>  </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\s0\f0</xsl:text>
    </xsl:template>
    <xsl:template name="legacy_footerall">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:variable name="altova:CurrContextGrid_049AF270" select="."/>
        <xsl:variable name="altova:nTableWidthIn_16" select="$altova:nMaxWidthIn * 1.00000"/>
        <xsl:variable name="altova:nTableWidthTw_16" select="$altova:nTableWidthIn_16 * 1440"/>
        <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_16" select="round($altova:nTableWidthTw_16 * 0.25)"/>
        <xsl:variable name="altova:nTableIndentTw_16" select="0"/>
        <xsl:variable name="altova:nSumColumnWidthsTw_16" select="round(0.00)"/>
        <xsl:variable name="altova:nColumnsWithDefaultWidth_16" select="round(1)"/>
        <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_16">
            <xsl:choose>
                <xsl:when test="$altova:nColumnsWithDefaultWidth_16 = 0">
                    <xsl:value-of select="round(1)"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="$altova:nColumnsWithDefaultWidth_16"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nDefaultColumnWidthTw_16">
            <xsl:value-of select="$altova:nTableWidthTw_16 div $altova:nColumnsWithDefaultWidthNotZero_16"/>
        </xsl:variable>
        <xsl:variable name="altova:nColumnWidthTw_16_0" select="$altova:nDefaultColumnWidthTw_16"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:variable name="tablestyle16">
            <xsl:text>\trowd\trleft</xsl:text>
            <xsl:value-of select="$altova:nTableIndentTw_16"/>
            <xsl:text>\ts371\trspdl15\trspdt15\trspdb15\trspdr15\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt30\trpaddl30\trpaddb30\trpaddr30\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
        </xsl:variable>
        <xsl:variable name="rowend16">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\row\pard</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="cellend16">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\cell</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestcell</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:RowStyle47">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl16" select="$altova:nTableIndentTw_16"/>
            <xsl:text>\clvertalc\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl16_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl16 + $altova:nColumnWidthTw_16_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl16_Col0_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle16"/>
            <xsl:value-of select="$altova:RowStyle47"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>\cs372</xsl:text>
        <xsl:text>\chpgn</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend16"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle16"/>
        <xsl:value-of select="$altova:RowStyle47"/>
        <xsl:value-of select="$rowend16"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 0"/>
        <xsl:text> </xsl:text>
    </xsl:template>
    <xsl:template name="legacy_headerall">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:variable name="altova:CurrContextGrid_049AF920" select="."/>
        <xsl:variable name="altova:nTableWidthIn_17" select="$altova:nMaxWidthIn * 1.00000"/>
        <xsl:variable name="altova:nTableWidthTw_17" select="$altova:nTableWidthIn_17 * 1440"/>
        <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_17" select="round($altova:nTableWidthTw_17 * 0.25)"/>
        <xsl:variable name="altova:nTableIndentTw_17" select="0"/>
        <xsl:variable name="altova:nSumColumnWidthsTw_17" select="round(0.00)"/>
        <xsl:variable name="altova:nColumnsWithDefaultWidth_17" select="round(1)"/>
        <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_17">
            <xsl:choose>
                <xsl:when test="$altova:nColumnsWithDefaultWidth_17 = 0">
                    <xsl:value-of select="round(1)"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="$altova:nColumnsWithDefaultWidth_17"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nDefaultColumnWidthTw_17">
            <xsl:value-of select="$altova:nTableWidthTw_17 div $altova:nColumnsWithDefaultWidthNotZero_17"/>
        </xsl:variable>
        <xsl:variable name="altova:nColumnWidthTw_17_0" select="$altova:nDefaultColumnWidthTw_17"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:variable name="tablestyle17">
            <xsl:text>\trowd\trleft</xsl:text>
            <xsl:value-of select="$altova:nTableIndentTw_17"/>
            <xsl:text>\ts373\trspdl15\trspdt15\trspdb15\trspdr15\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt30\trpaddl30\trpaddb30\trpaddr30\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
        </xsl:variable>
        <xsl:variable name="rowend17">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\row\pard</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="cellend17">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\cell</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestcell</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:RowStyle48">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl17" select="$altova:nTableIndentTw_17"/>
            <xsl:text>\clvertalc\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl17_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl17 + $altova:nColumnWidthTw_17_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl17_Col0_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle17"/>
            <xsl:value-of select="$altova:RowStyle48"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\field{\*\fldinst{\ul0\chcbpat140 INCLUDEPICTURE "</xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:if test="substring(string(&apos;plugins/de.ivu.wahl.wus.reportgenerator_1.0.0/de/ivu/wahl/wus/reportgen/images/Logo_rgb_auf_transparent.gif&apos;), 2, 1) = ':'">
                    <xsl:text>file:///</xsl:text>
                </xsl:if>
                <xsl:value-of select="translate(string(&apos;plugins/de.ivu.wahl.wus.reportgenerator_1.0.0/de/ivu/wahl/wus/reportgen/images/Logo_rgb_auf_transparent.gif&apos;), '&#x5c;', '/')"/>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>" \\* MERGEFORMAT \\d }}}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend17"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle17"/>
        <xsl:value-of select="$altova:RowStyle48"/>
        <xsl:value-of select="$rowend17"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 0"/>
        <xsl:text> </xsl:text>
    </xsl:template>
    <xsl:template name="altova:Section_04979538_FooterRight">
        <xsl:variable name="altova:nMaxWidthIn" select="7.07"/>
        <xsl:variable name="templatetablelevel" select="0"/>
        <xsl:call-template name="legacy_footerall">
            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
        </xsl:call-template>
    </xsl:template>
    <xsl:template name="altova:Section_04979538_FooterLeft">
        <xsl:variable name="altova:nMaxWidthIn" select="7.07"/>
        <xsl:variable name="templatetablelevel" select="0"/>
        <xsl:call-template name="legacy_footerall">
            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
        </xsl:call-template>
    </xsl:template>
    <xsl:template name="altova:Section_04979538_HeaderRight">
        <xsl:variable name="altova:nMaxWidthIn" select="7.07"/>
        <xsl:variable name="templatetablelevel" select="0"/>
        <xsl:call-template name="legacy_headerall">
            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
        </xsl:call-template>
    </xsl:template>
    <xsl:template name="altova:Section_04979538_HeaderLeft">
        <xsl:variable name="altova:nMaxWidthIn" select="7.07"/>
        <xsl:variable name="templatetablelevel" select="0"/>
        <xsl:call-template name="legacy_headerall">
            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
        </xsl:call-template>
    </xsl:template>
    <xsl:template name="write-text">
        <xsl:param name="text"/>
        <xsl:param name="bEscape" select="true()"/>
        <xsl:choose>
            <xsl:when test="$bEscape">
                <xsl:variable name="sLinefeed" select="'&#x0A;'"/>
                <xsl:choose>
                    <xsl:when test="contains($text, $sLinefeed)">
                        <xsl:variable name="first-line" select="substring-before($text, $sLinefeed)"/>
                        <xsl:variable name="rest" select="substring-after($text, $sLinefeed)"/>
                        <xsl:call-template name="write-text-line">
                            <xsl:with-param name="text" select="$first-line"/>
                        </xsl:call-template>
                        <xsl:text>\u13?</xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text" select="$rest"/>
                        </xsl:call-template>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:call-template name="write-text-line">
                            <xsl:with-param name="text" select="$text"/>
                        </xsl:call-template>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:when>
            <xsl:otherwise>
                <xsl:value-of select="string($text)"/>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="write-text-line">
        <xsl:param name="text"/>
        <xsl:variable name="text-length" select="string-length($text)"/>
        <xsl:variable name="text-after-bs" select="substring-after($text, '\')"/>
        <xsl:variable name="text-after-bs-length" select="string-length($text-after-bs)"/>
        <xsl:choose>
            <xsl:when test="$text-after-bs-length = 0">
                <xsl:choose>
                    <xsl:when test="substring($text, $text-length) = '\'">
                        <xsl:call-template name="write-text-ob">
                            <xsl:with-param name="text" select="concat(substring($text,1,$text-length - 1), '\\')"/>
                            <xsl:with-param name="text-length" select="$text-length + 1"/>
                        </xsl:call-template>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:call-template name="write-text-ob">
                            <xsl:with-param name="text" select="$text"/>
                            <xsl:with-param name="text-length" select="$text-length"/>
                        </xsl:call-template>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:when>
            <xsl:otherwise>
                <xsl:call-template name="write-text-ob">
                    <xsl:with-param name="text" select="concat(substring($text,1,$text-length - $text-after-bs-length - 1), '\\')"/>
                    <xsl:with-param name="text-length" select="$text-length - $text-after-bs-length + 1"/>
                </xsl:call-template>
                <xsl:call-template name="write-text-line">
                    <xsl:with-param name="text" select="$text-after-bs"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="write-text-ob">
        <xsl:param name="text"/>
        <xsl:param name="text-length"/>
        <xsl:variable name="text-after-ob" select="substring-after($text, '{')"/>
        <xsl:variable name="text-after-ob-length" select="string-length($text-after-ob)"/>
        <xsl:choose>
            <xsl:when test="$text-after-ob-length = 0">
                <xsl:choose>
                    <xsl:when test="substring($text, $text-length) = '{'">
                        <xsl:call-template name="write-text-cb">
                            <xsl:with-param name="text" select="concat(substring($text,1,$text-length - 1), '\{')"/>
                            <xsl:with-param name="text-length" select="$text-length + 1"/>
                        </xsl:call-template>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:call-template name="write-text-cb">
                            <xsl:with-param name="text" select="$text"/>
                            <xsl:with-param name="text-length" select="$text-length"/>
                        </xsl:call-template>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:when>
            <xsl:otherwise>
                <xsl:call-template name="write-text-cb">
                    <xsl:with-param name="text" select="concat(substring($text,1,$text-length - $text-after-ob-length - 1), '\{')"/>
                    <xsl:with-param name="text-length" select="$text-length - $text-after-ob-length + 1"/>
                </xsl:call-template>
                <xsl:call-template name="write-text-ob">
                    <xsl:with-param name="text" select="$text-after-ob"/>
                    <xsl:with-param name="text-length" select="$text-after-ob-length"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="write-text-cb">
        <xsl:param name="text"/>
        <xsl:param name="text-length"/>
        <xsl:variable name="text-after-cb" select="substring-after($text, '}')"/>
        <xsl:variable name="text-after-cb-length" select="string-length($text-after-cb)"/>
        <xsl:choose>
            <xsl:when test="$text-after-cb-length = 0">
                <xsl:choose>
                    <xsl:when test="substring($text, $text-length) = '}'">
                        <xsl:value-of select="concat(substring($text,1,$text-length - 1), '\}')"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:value-of select="$text"/>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:when>
            <xsl:otherwise>
                <xsl:value-of select="concat(substring($text,1,$text-length - $text-after-cb-length - 1), '\}')"/>
                <xsl:call-template name="write-text-cb">
                    <xsl:with-param name="text" select="$text-after-cb"/>
                    <xsl:with-param name="text-length" select="$text-after-cb-length"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template match="text()|@*">
        <xsl:call-template name="write-text">
            <xsl:with-param name="text" select="."/>
        </xsl:call-template>
    </xsl:template>
    <xsl:template name="altova:GetColorID">
        <xsl:param name="text"/>
        <xsl:variable name="txt" select="translate($text, 'abcdefghijklmnopqrstuvwxyz#', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' )"/>
        <xsl:choose>
            <xsl:when test="$txt = 'WHITE'">
                <xsl:text>140</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'IVORY'">
                <xsl:text>139</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTYELLOW'">
                <xsl:text>138</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'YELLOW'">
                <xsl:text>137</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'SNOW'">
                <xsl:text>136</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FLORALWHITE'">
                <xsl:text>135</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LEMONCHIFFON'">
                <xsl:text>134</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'CORNSILK'">
                <xsl:text>133</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'SEASHELL'">
                <xsl:text>132</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LAVENDERBLUSH'">
                <xsl:text>131</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'PAPAYAWHIP'">
                <xsl:text>130</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'BLANCHEDALMOND'">
                <xsl:text>129</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MISTYROSE'">
                <xsl:text>128</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'BISQUE'">
                <xsl:text>127</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MOCCASIN'">
                <xsl:text>126</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'NAVAJOWHITE'">
                <xsl:text>125</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'PEACHPUFF'">
                <xsl:text>124</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'GOLD'">
                <xsl:text>123</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'PINK'">
                <xsl:text>122</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTPINK'">
                <xsl:text>121</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'ORANGE'">
                <xsl:text>120</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTSALMON'">
                <xsl:text>119</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKORANGE'">
                <xsl:text>118</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'CORAL'">
                <xsl:text>117</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'HOTPINK'">
                <xsl:text>116</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'TOMATO'">
                <xsl:text>115</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'ORANGERED'">
                <xsl:text>114</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DEEPPINK'">
                <xsl:text>113</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FUCHSIA'">
                <xsl:text>112</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MAGENTA'">
                <xsl:text>111</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'RED'">
                <xsl:text>110</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'OLDLACE'">
                <xsl:text>109</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTGOLDENRODYELLOW'">
                <xsl:text>108</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LINEN'">
                <xsl:text>107</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'ANTIQUEWHITE'">
                <xsl:text>106</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'SALMON'">
                <xsl:text>105</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'GHOSTWHITE'">
                <xsl:text>104</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MINTCREAM'">
                <xsl:text>103</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'WHITESMOKE'">
                <xsl:text>102</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'BEIGE'">
                <xsl:text>101</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'WHEAT'">
                <xsl:text>100</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'SANDYBROWN'">
                <xsl:text>99</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'AZURE'">
                <xsl:text>98</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'HONEYDEW'">
                <xsl:text>97</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'ALICEBLUE'">
                <xsl:text>96</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'KHAKI'">
                <xsl:text>95</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTCORAL'">
                <xsl:text>94</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'PALEGOLDENROD'">
                <xsl:text>93</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'VIOLET'">
                <xsl:text>92</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKSALMON'">
                <xsl:text>91</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LAVENDER'">
                <xsl:text>90</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTCYAN'">
                <xsl:text>89</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'BURLYWOOD'">
                <xsl:text>88</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'PLUM'">
                <xsl:text>87</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'GAINSBORO'">
                <xsl:text>86</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'CRIMSON'">
                <xsl:text>85</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'PALEVIOLETRED'">
                <xsl:text>84</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'GOLDENROD'">
                <xsl:text>83</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'ORCHID'">
                <xsl:text>82</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'THISTLE'">
                <xsl:text>81</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTGRAY'">
                <xsl:text>80</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'TAN'">
                <xsl:text>79</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'CHOCOLATE'">
                <xsl:text>78</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'PERU'">
                <xsl:text>77</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'INDIANRED'">
                <xsl:text>76</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MEDIUMVIOLETRED'">
                <xsl:text>75</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'SILVER'">
                <xsl:text>74</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKKHAKI'">
                <xsl:text>73</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'ROSYBROWN'">
                <xsl:text>72</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MEDIUMORCHID'">
                <xsl:text>71</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKGOLDENROD'">
                <xsl:text>70</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FIREBRICK'">
                <xsl:text>69</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'POWDERBLUE'">
                <xsl:text>68</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTSTEELBLUE'">
                <xsl:text>67</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'PALETURQUOISE'">
                <xsl:text>66</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'GREENYELLOW'">
                <xsl:text>65</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTBLUE'">
                <xsl:text>64</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKGRAY'">
                <xsl:text>63</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'BROWN'">
                <xsl:text>62</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'SIENNA'">
                <xsl:text>61</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'YELLOWGREEN'">
                <xsl:text>60</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKORCHID'">
                <xsl:text>59</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'PALEGREEN'">
                <xsl:text>58</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKVIOLET'">
                <xsl:text>57</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MEDIUMPURPLE'">
                <xsl:text>56</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTGREEN'">
                <xsl:text>55</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKSEAGREEN'">
                <xsl:text>54</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'SADDLEBROWN'">
                <xsl:text>53</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKMAGENTA'">
                <xsl:text>52</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKRED'">
                <xsl:text>51</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'BLUEVIOLET'">
                <xsl:text>50</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTSKYBLUE'">
                <xsl:text>49</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'SKYBLUE'">
                <xsl:text>48</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'GRAY'">
                <xsl:text>47</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'OLIVE'">
                <xsl:text>46</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'PURPLE'">
                <xsl:text>45</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MAROON'">
                <xsl:text>44</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'AQUAMARINE'">
                <xsl:text>43</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'CHARTREUSE'">
                <xsl:text>42</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LAWNGREEN'">
                <xsl:text>41</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MEDIUMSLATEBLUE'">
                <xsl:text>40</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTSLATEGRAY'">
                <xsl:text>39</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'SLATEGRAY'">
                <xsl:text>38</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'OLIVEDRAB'">
                <xsl:text>37</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'SLATEBLUE'">
                <xsl:text>36</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DIMGRAY'">
                <xsl:text>35</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MEDIUMAQUAMARINE'">
                <xsl:text>34</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'CORNFLOWERBLUE'">
                <xsl:text>33</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'CADETBLUE'">
                <xsl:text>32</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKOLIVEGREEN'">
                <xsl:text>31</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'INDIGO'">
                <xsl:text>30</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MEDIUMTURQUOISE'">
                <xsl:text>29</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKSLATEBLUE'">
                <xsl:text>28</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'STEELBLUE'">
                <xsl:text>27</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'ROYALBLUE'">
                <xsl:text>26</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'TURQUOISE'">
                <xsl:text>25</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MEDIUMSEAGREEN'">
                <xsl:text>24</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIMEGREEN'">
                <xsl:text>23</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKSLATEGRAY'">
                <xsl:text>22</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'SEAGREEN'">
                <xsl:text>21</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FORESTGREEN'">
                <xsl:text>20</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTSEAGREEN'">
                <xsl:text>19</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DODGERBLUE'">
                <xsl:text>18</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MIDNIGHTBLUE'">
                <xsl:text>17</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'CYAN'">
                <xsl:text>16</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'AQUA'">
                <xsl:text>15</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'SPRINGGREEN'">
                <xsl:text>14</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIME'">
                <xsl:text>13</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MEDIUMSPRINGGREEN'">
                <xsl:text>12</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKTURQUOISE'">
                <xsl:text>11</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DEEPSKYBLUE'">
                <xsl:text>10</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKCYAN'">
                <xsl:text>9</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'TEAL'">
                <xsl:text>8</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'GREEN'">
                <xsl:text>7</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKGREEN'">
                <xsl:text>6</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'BLUE'">
                <xsl:text>5</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MEDIUMBLUE'">
                <xsl:text>4</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKBLUE'">
                <xsl:text>3</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'NAVY'">
                <xsl:text>2</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'BLACK'">
                <xsl:text>1</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFFFFF'">
                <xsl:text>140</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFFFF0'">
                <xsl:text>139</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFFFE0'">
                <xsl:text>138</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFFF00'">
                <xsl:text>137</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFFAFA'">
                <xsl:text>136</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFFAF0'">
                <xsl:text>135</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFFACD'">
                <xsl:text>134</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFF8DC'">
                <xsl:text>133</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFF5EE'">
                <xsl:text>132</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFF0F5'">
                <xsl:text>131</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFEFD5'">
                <xsl:text>130</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFEBCD'">
                <xsl:text>129</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFE4E1'">
                <xsl:text>128</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFE4C4'">
                <xsl:text>127</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFE4B5'">
                <xsl:text>126</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFDEAD'">
                <xsl:text>125</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFDAB9'">
                <xsl:text>124</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFD700'">
                <xsl:text>123</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFC0CB'">
                <xsl:text>122</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFB6C1'">
                <xsl:text>121</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFA500'">
                <xsl:text>120</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFA07A'">
                <xsl:text>119</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FF8C00'">
                <xsl:text>118</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FF7F50'">
                <xsl:text>117</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FF69B4'">
                <xsl:text>116</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FF6347'">
                <xsl:text>115</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FF4500'">
                <xsl:text>114</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FF1493'">
                <xsl:text>113</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FF00FF'">
                <xsl:text>112</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FF00FF'">
                <xsl:text>111</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FF0000'">
                <xsl:text>110</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FDF5E6'">
                <xsl:text>109</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FAFAD2'">
                <xsl:text>108</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FAF0E6'">
                <xsl:text>107</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FAEBD7'">
                <xsl:text>106</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FA8072'">
                <xsl:text>105</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'F8F8FF'">
                <xsl:text>104</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'F5FFFA'">
                <xsl:text>103</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'F5F5F5'">
                <xsl:text>102</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'F5F5DC'">
                <xsl:text>101</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'F5DEB3'">
                <xsl:text>100</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'F4A460'">
                <xsl:text>99</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'F0FFFF'">
                <xsl:text>98</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'F0FFF0'">
                <xsl:text>97</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'F0F8FF'">
                <xsl:text>96</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'F0E68C'">
                <xsl:text>95</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'F08080'">
                <xsl:text>94</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'EEE8AA'">
                <xsl:text>93</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'EE82EE'">
                <xsl:text>92</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'E9967A'">
                <xsl:text>91</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'E6E6FA'">
                <xsl:text>90</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'E0FFFF'">
                <xsl:text>89</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DEB887'">
                <xsl:text>88</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DDA0DD'">
                <xsl:text>87</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DCDCDC'">
                <xsl:text>86</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DC143C'">
                <xsl:text>85</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DB7093'">
                <xsl:text>84</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DAA520'">
                <xsl:text>83</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DA70D6'">
                <xsl:text>82</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'D8BFD8'">
                <xsl:text>81</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'D3D3D3'">
                <xsl:text>80</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'D2B48C'">
                <xsl:text>79</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'D2691E'">
                <xsl:text>78</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'CD853F'">
                <xsl:text>77</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'CD5C5C'">
                <xsl:text>76</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'C71585'">
                <xsl:text>75</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'C0C0C0'">
                <xsl:text>74</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'BDB76B'">
                <xsl:text>73</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'BC8F8F'">
                <xsl:text>72</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'BA55D3'">
                <xsl:text>71</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'B8860B'">
                <xsl:text>70</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'B22222'">
                <xsl:text>69</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'B0E0E6'">
                <xsl:text>68</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'B0C4DE'">
                <xsl:text>67</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'AFEEEE'">
                <xsl:text>66</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'ADFF2F'">
                <xsl:text>65</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'ADD8E6'">
                <xsl:text>64</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'A9A9A9'">
                <xsl:text>63</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'A52A2A'">
                <xsl:text>62</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'A0522D'">
                <xsl:text>61</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '9ACD32'">
                <xsl:text>60</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '9932CC'">
                <xsl:text>59</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '98FB98'">
                <xsl:text>58</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '9400D3'">
                <xsl:text>57</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '9370DB'">
                <xsl:text>56</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '90EE90'">
                <xsl:text>55</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '8FBC8B'">
                <xsl:text>54</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '8B4513'">
                <xsl:text>53</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '8B008B'">
                <xsl:text>52</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '8B0000'">
                <xsl:text>51</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '8A2BE2'">
                <xsl:text>50</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '87CEFA'">
                <xsl:text>49</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '87CEEB'">
                <xsl:text>48</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '808080'">
                <xsl:text>47</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '808000'">
                <xsl:text>46</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '800080'">
                <xsl:text>45</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '800000'">
                <xsl:text>44</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '7FFFD4'">
                <xsl:text>43</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '7FFF00'">
                <xsl:text>42</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '7CFC00'">
                <xsl:text>41</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '7B68EE'">
                <xsl:text>40</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '778899'">
                <xsl:text>39</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '708090'">
                <xsl:text>38</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '6B8E23'">
                <xsl:text>37</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '6A5ACD'">
                <xsl:text>36</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '696969'">
                <xsl:text>35</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '66CDAA'">
                <xsl:text>34</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '6495ED'">
                <xsl:text>33</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '5F9EA0'">
                <xsl:text>32</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '556B2F'">
                <xsl:text>31</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '4B0082'">
                <xsl:text>30</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '48D1CC'">
                <xsl:text>29</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '483D8B'">
                <xsl:text>28</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '4682B4'">
                <xsl:text>27</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '4169E1'">
                <xsl:text>26</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '40E0D0'">
                <xsl:text>25</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '3CB371'">
                <xsl:text>24</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '32CD32'">
                <xsl:text>23</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '2F4F4F'">
                <xsl:text>22</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '2E8B57'">
                <xsl:text>21</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '228B22'">
                <xsl:text>20</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '20B2AA'">
                <xsl:text>19</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '1E90FF'">
                <xsl:text>18</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '191970'">
                <xsl:text>17</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '00FFFF'">
                <xsl:text>16</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '00FFFF'">
                <xsl:text>15</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '00FF7F'">
                <xsl:text>14</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '00FF00'">
                <xsl:text>13</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '00FA9A'">
                <xsl:text>12</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '00CED1'">
                <xsl:text>11</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '00BFFF'">
                <xsl:text>10</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '008B8B'">
                <xsl:text>9</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '008080'">
                <xsl:text>8</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '008000'">
                <xsl:text>7</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '006400'">
                <xsl:text>6</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '0000FF'">
                <xsl:text>5</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '0000CD'">
                <xsl:text>4</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '00008B'">
                <xsl:text>3</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '000080'">
                <xsl:text>2</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '000000'">
                <xsl:text>1</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>0</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="altova:GetFontID">
        <xsl:param name="font"/>
        <xsl:variable name="font-upper" select="translate($font, 'abcdefghijklmnopqrstuvwxyz#', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' )"/>
        <xsl:choose>
            <xsl:when test="$font-upper = 'TIMES NEW ROMAN'">
                <xsl:text>0</xsl:text>
            </xsl:when>
            <xsl:when test="$font-upper = 'ARIAL'">
                <xsl:text>1</xsl:text>
            </xsl:when>
            <xsl:when test="$font-upper = 'SYMBOL'">
                <xsl:text>2</xsl:text>
            </xsl:when>
            <xsl:when test="$font-upper = 'WINGDINGS'">
                <xsl:text>3</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>0</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="altova:GetRtfBorderStyle">
        <xsl:param name="style"/>
        <xsl:choose>
            <xsl:when test="$style='none'">
                <xsl:text>\brdrnil</xsl:text>
            </xsl:when>
            <xsl:when test="$style='hidden'">
                <xsl:text>\brdrnone</xsl:text>
            </xsl:when>
            <xsl:when test="$style='dotted'">
                <xsl:text>\brdrdot</xsl:text>
            </xsl:when>
            <xsl:when test="$style='dashed'">
                <xsl:text>\brdrdash</xsl:text>
            </xsl:when>
            <xsl:when test="$style='solid'">
                <xsl:text>\brdrs</xsl:text>
            </xsl:when>
            <xsl:when test="$style='double'">
                <xsl:text>\brdrd</xsl:text>
            </xsl:when>
            <xsl:when test="$style='groove'">
                <xsl:text>\brdrengrave</xsl:text>
            </xsl:when>
            <xsl:when test="$style='ridge'">
                <xsl:text>\brdremboss</xsl:text>
            </xsl:when>
            <xsl:when test="$style='inset'">
                <xsl:text>\brdrinset</xsl:text>
            </xsl:when>
            <xsl:when test="$style='outset'">
                <xsl:text>\brdroutset</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>\brdrnil</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="altova:ConvertWidthToTwips">
        <xsl:param name="width"/>
        <xsl:variable name="normal-width" select="normalize-space($width)"/>
        <xsl:choose>
            <xsl:when test="contains($normal-width,'px')">
                <xsl:value-of select="(number(substring-before($normal-width,'px')) * 1440) div $altova:nPxPerIn"/>
            </xsl:when>
            <xsl:when test="contains($normal-width,'cm')">
                <xsl:value-of select="(number(substring-before($normal-width,'cm')) * 1440) div 2.54"/>
            </xsl:when>
            <xsl:when test="contains($normal-width,'mm')">
                <xsl:value-of select="(number(substring-before($normal-width,'mm')) * 1440) div 25.4"/>
            </xsl:when>
            <xsl:when test="contains($normal-width,'in')">
                <xsl:value-of select="number(substring-before($normal-width,'in')) * 1440"/>
            </xsl:when>
            <xsl:when test="contains($normal-width,'pc')">
                <xsl:value-of select="number(substring-before($normal-width,'pc')) * 240"/>
            </xsl:when>
            <xsl:when test="contains($normal-width,'pt')">
                <xsl:value-of select="number(substring-before($normal-width,'pt')) * 20"/>
            </xsl:when>
            <xsl:when test="$normal-width='thin'">
                <xsl:value-of select="30"/>
            </xsl:when>
            <xsl:when test="$normal-width='medium'">
                <xsl:value-of select="60"/>
            </xsl:when>
            <xsl:when test="$normal-width='thick'">
                <xsl:value-of select="80"/>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>0</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
</xsl:stylesheet>
