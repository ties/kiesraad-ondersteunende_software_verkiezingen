<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2011 sp1 - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:clitype="clitype" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:eml="urn:oasis:names:tc:evs:schema:eml" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:iso4217="http://www.xbrl.org/2003/iso4217" xmlns:ix="http://www.xbrl.org/2008/inlineXBRL" xmlns:java="java" xmlns:kr="http://www.kiesraad.nl/extensions" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:rg="http://www.kiesraad.nl/reportgenerator" xmlns:ts="urn:oasis:names:tc:evs:schema:eml:ts" xmlns:xal="urn:oasis:names:tc:ciq:xsdschema:xAL:2.0" xmlns:xbrldi="http://xbrl.org/2006/xbrldi" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xnl="urn:oasis:names:tc:ciq:xsdschema:xNL:2.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:altova="http://www.altova.com" exclude-result-prefixes="clitype ds eml fn iso4217 ix java kr link rg ts xal xbrldi xbrli xlink xnl xs xsi altova">
    <xsl:import href="D:\projekte\de.ivu.wahl.wus.reportgenerator\src\main\resources\de\ivu\wahl\wus\reportgen\text\nl\reused-parts-text.xslt"/>
    <xsl:import href="D:\projekte\de.ivu.wahl.wus.reportgenerator\src\main\resources\de\ivu\wahl\wus\reportgen\text\nl\reused-parts-P22-text.xslt"/>
    <xsl:import href="D:\projekte\de.ivu.wahl.wus.reportgenerator\src\main\resources\de\ivu\wahl\wus\reportgen\text\nl\U16-text.xslt"/>
    <xsl:output method="text" encoding="UTF-8"/>
    <xsl:param name="SV_OutputFormat" select="'RTF'"/>
    <xsl:param name="generateDate" select="'30-11-2010 13:48:41'"/>
    <xsl:param name="hashCode" select="'01 23 45 67 89 0A BC DE D4 DC AF BE 4C 55 BF 28 22 8F C4 49'"/>
    <xsl:param name="isDraft" select="'false'"/>
    <xsl:param name="lang" select="'1'"/>
    <xsl:variable name="XML" select="/"/>
    <xsl:variable name="altova:nPxPerIn" select="96"/>
    <xsl:template match="/">
        <xsl:variable name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:variable name="templatetablelevel" select="0"/>
        <xsl:text>{\rtf1\ansi\deff0</xsl:text>
        <xsl:text>{\fonttbl{\f0\fnil Times New Roman;}{\f1\fnil Arial;}{\f2\fnil Symbol;}{\f3\fnil Wingdings;}}</xsl:text>
        <xsl:text>{\colortbl;\red0\green0\blue0;\red0\green0\blue128;\red0\green0\blue139;\red0\green0\blue205;\red0\green0\blue255;\red0\green100\blue0;\red0\green128\blue0;\red0\green128\blue128;\red0\green139\blue139;\red0\green191\blue255;\red0\green206\blue209;\red0\green250\blue154;\red0\green255\blue0;\red0\green255\blue127;\red0\green255\blue255;\red0\green255\blue255;\red25\green25\blue112;\red30\green144\blue255;\red32\green178\blue170;\red34\green139\blue34;\red46\green139\blue87;\red47\green79\blue79;\red50\green205\blue50;\red60\green179\blue113;\red64\green224\blue208;\red65\green105\blue225;\red70\green130\blue180;\red72\green61\blue139;\red72\green209\blue204;\red75\green0\blue130;\red85\green107\blue47;\red95\green158\blue160;\red100\green149\blue237;\red102\green205\blue170;\red105\green105\blue105;\red106\green90\blue205;\red107\green142\blue35;\red112\green128\blue144;\red119\green136\blue153;\red123\green104\blue238;\red124\green252\blue0;\red127\green255\blue0;\red127\green255\blue212;\red128\green0\blue0;\red128\green0\blue128;\red128\green128\blue0;\red128\green128\blue128;\red135\green206\blue235;\red135\green206\blue250;\red138\green43\blue226;\red139\green0\blue0;\red139\green0\blue139;\red139\green69\blue19;\red143\green188\blue139;\red144\green238\blue144;\red147\green112\blue219;\red148\green0\blue211;\red152\green251\blue152;\red153\green50\blue204;\red154\green205\blue50;\red160\green82\blue45;\red165\green42\blue42;\red169\green169\blue169;\red173\green216\blue230;\red173\green255\blue47;\red175\green238\blue238;\red176\green196\blue222;\red176\green224\blue230;\red178\green34\blue34;\red184\green134\blue11;\red186\green85\blue211;\red188\green143\blue143;\red189\green183\blue107;\red192\green192\blue192;\red199\green21\blue133;\red205\green92\blue92;\red205\green133\blue63;\red210\green105\blue30;\red210\green180\blue140;\red211\green211\blue211;\red216\green191\blue216;\red218\green112\blue214;\red218\green165\blue32;\red219\green112\blue147;\red220\green20\blue60;\red220\green220\blue220;\red221\green160\blue221;\red222\green184\blue135;\red224\green255\blue255;\red230\green230\blue250;\red233\green150\blue122;\red238\green130\blue238;\red238\green232\blue170;\red240\green128\blue128;\red240\green230\blue140;\red240\green248\blue255;\red240\green255\blue240;\red240\green255\blue255;\red244\green164\blue96;\red245\green222\blue179;\red245\green245\blue220;\red245\green245\blue245;\red245\green255\blue250;\red248\green248\blue255;\red250\green128\blue114;\red250\green235\blue215;\red250\green240\blue230;\red250\green250\blue210;\red253\green245\blue230;\red255\green0\blue0;\red255\green0\blue255;\red255\green0\blue255;\red255\green20\blue147;\red255\green69\blue0;\red255\green99\blue71;\red255\green105\blue180;\red255\green127\blue80;\red255\green140\blue0;\red255\green160\blue122;\red255\green165\blue0;\red255\green182\blue193;\red255\green192\blue203;\red255\green215\blue0;\red255\green218\blue185;\red255\green222\blue173;\red255\green228\blue181;\red255\green228\blue196;\red255\green228\blue225;\red255\green235\blue205;\red255\green239\blue213;\red255\green240\blue245;\red255\green245\blue238;\red255\green248\blue220;\red255\green250\blue205;\red255\green250\blue240;\red255\green250\blue250;\red255\green255\blue0;\red255\green255\blue224;\red255\green255\blue240;\red255\green255\blue255;}</xsl:text>
        <xsl:text>{\stylesheet</xsl:text>
        <xsl:text>{\s0\f0\fs24\sl0\fs22\snext0 Normal;}</xsl:text>
        <xsl:text>{\s1\f0\fs24\sl0\fs22\snext0 Paragraph;}</xsl:text>
        <xsl:text>{\s2\f0\fs24\i\snext0 Address;}</xsl:text>
        <xsl:text>{\s3\qc\f0\fs24\snext0 Center;}</xsl:text>
        <xsl:text>{\s4\lin720\f0\fs24\snext0 Blockquote;}</xsl:text>
        <xsl:text>{\s5\lin60\rin60\brdrs\brdrcf47\brdrw15\f0\fs24\snext0 Fieldset;}</xsl:text>
        <xsl:text>{\s6\f1\fs24\snext0 Preformatted;}</xsl:text>
        <xsl:text>{\s7\f1\fs24\snext0 Preformatted and wrapping;}</xsl:text>
        <xsl:text>{\s8\f1\fs48\b\snext0 Heading 1;}</xsl:text>
        <xsl:text>{\s9\f1\fs36\b\snext0 Heading 2;}</xsl:text>
        <xsl:text>{\s10\f1\fs26\b\snext0 Heading 3;}</xsl:text>
        <xsl:text>{\s11\f1\fs22\b\sl0\fs22\b\snext0 Heading 4;}</xsl:text>
        <xsl:text>{\s12\f1\fs18\b\snext0 Heading 5;}</xsl:text>
        <xsl:text>{\s13\f1\fs16\b\snext0 Heading 6;}</xsl:text>
        <xsl:text>{\s15\sl0\f1\fs22\snext0 *;}</xsl:text>
        <xsl:text>{\s16\sl0\fs22\b\snext0 h4;}</xsl:text>
        <xsl:text>{\s19\sl0\f1\fs22\snext0 *;}</xsl:text>
        <xsl:text>{\s20\sl0\fs22\snext0 div;}</xsl:text>
        <xsl:text>{\s35\sl0\f1\fs22\snext0 *;}</xsl:text>
        <xsl:text>{\s36\sl0\fs22\b\snext0 h4;}</xsl:text>
        <xsl:text>{\s90\sl0\f1\fs22\snext0 *;}</xsl:text>
        <xsl:text>{\s91\sl0\fs22\b\snext0 h4;}</xsl:text>
        <xsl:text>{\s96\sl0\f1\fs22\snext0 *;}</xsl:text>
        <xsl:text>{\s97\sl0\fs22\snext0 p;}</xsl:text>
        <xsl:text>{\s100\sl0\f1\fs22\snext0 *;}</xsl:text>
        <xsl:text>{\s101\sl0\fs22\b\snext0 h4;}</xsl:text>
        <xsl:text>{\s104\sl0\f1\fs22\snext0 *;}</xsl:text>
        <xsl:text>{\s105\sl0\fs22\b\snext0 h4;}</xsl:text>
        <xsl:text>{\s108\sl0\f1\fs22\snext0 *;}</xsl:text>
        <xsl:text>{\s109\sl0\fs22\b\snext0 h4;}</xsl:text>
        <xsl:text>{\s112\sl0\f1\fs22\snext0 *;}</xsl:text>
        <xsl:text>{\s113\sl0\fs22\b\snext0 h4;}</xsl:text>
        <xsl:text>{\s116\sl0\f1\fs22\snext0 *;}</xsl:text>
        <xsl:text>{\s117\sl0\fs22\b\snext0 h4;}</xsl:text>
        <xsl:text>{\s120\sl0\f1\fs22\snext0 *;}</xsl:text>
        <xsl:text>{\s121\sl0\fs22\b\snext0 h4;}</xsl:text>
        <xsl:text>{\s124\sl0\f1\fs22\snext0 *;}</xsl:text>
        <xsl:text>{\s125\sl0\fs22\b\snext0 h4;}</xsl:text>
        <xsl:text>{\s128\sl0\f1\fs22\snext0 *;}</xsl:text>
        <xsl:text>{\s129\sl0\fs22\b\snext0 h4;}</xsl:text>
        <xsl:text>{\s134\sl0\f1\fs22\snext0 *;}</xsl:text>
        <xsl:text>{\s135\sl0\fs22\b\snext0 h4;}</xsl:text>
        <xsl:text>{\s207\sl0\f1\fs22\snext0 *;}</xsl:text>
        <xsl:text>{\s208\sl0\fs22\snext0 div;}</xsl:text>
        <xsl:text>{\s213\sl0\f1\fs22\snext0 *;}</xsl:text>
        <xsl:text>{\s214\sl0\fs22\snext0 div;}</xsl:text>
        <xsl:text>{\s1229\sl0\f1\fs22\snext0 *;}</xsl:text>
        <xsl:text>{\s1230\sl0\fs22\snext0 p;}</xsl:text>
        <xsl:text>{\s1513\sl0\f1\fs22\snext0 *;}</xsl:text>
        <xsl:text>{\s1514\sl0\fs22\snext0 p;}</xsl:text>
        <xsl:text>{\s1515\sl0\f1\fs22\snext0 *;}</xsl:text>
        <xsl:text>{\s1516\sl0\fs22\snext0 p;}</xsl:text>
        <xsl:text>{\s1888\sl0\f1\fs22\snext0 *;}</xsl:text>
        <xsl:text>{\s1889\sl0\fs22\snext0 p;}</xsl:text>
        <xsl:text>{\s1890\sl0\f1\fs22\snext0 *;}</xsl:text>
        <xsl:text>{\s1891\sl0\fs22\snext0 p;}</xsl:text>
        <xsl:text>{\*\cs17\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs18\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs21\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs22\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs23\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs24\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs25\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs26\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs27\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs28\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs29\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs30\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs31\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs32\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs33\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs34\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs37\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs38\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs39\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs40\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs41\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs42\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs43\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs44\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs45\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs46\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs47\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs48\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs49\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs50\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs54\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs55\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs56\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs57\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs58\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs59\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs60\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs61\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs62\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs63\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs64\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs65\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs66\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs67\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs68\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs69\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs70\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs71\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs72\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs73\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs74\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs75\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs76\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs77\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs78\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs79\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs80\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs81\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs82\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs83\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs84\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs85\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs86\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs87\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs88\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs89\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs92\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs93\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs94\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs95\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs98\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs99\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs102\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs103\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs106\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs107\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs110\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs111\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs114\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs115\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs118\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs119\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs122\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs123\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs126\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs127\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs130\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs131\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs132\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs133\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs136\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs137\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs141\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs142\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs143\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs144\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs145\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs146\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs147\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs148\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs149\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs150\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs151\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs152\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs153\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs154\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs155\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs156\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs157\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs158\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs159\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs160\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs161\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs162\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs163\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs164\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs165\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs166\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs167\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs168\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs169\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs170\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs174\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs175\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs176\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs177\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs178\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs179\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs180\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs181\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs182\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs183\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs184\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs185\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs186\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs187\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs188\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs189\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs190\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs191\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs192\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs193\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs194\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs195\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs196\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs197\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs198\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs199\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs200\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs201\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs202\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs203\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs209\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs210\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs211\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs212\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs215\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs216\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs220\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs221\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs222\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs223\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs224\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs225\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs226\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs227\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs228\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs229\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs230\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs231\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs232\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs233\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs234\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs235\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs236\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs237\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs238\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs239\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs240\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs241\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs242\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs243\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs244\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs245\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs246\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs247\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs248\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs249\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs250\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs251\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs252\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs253\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs254\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs255\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs256\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs257\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs258\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs259\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs260\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs261\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs262\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs263\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs264\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs265\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs266\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs267\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs268\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs269\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs270\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs271\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs272\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs273\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs274\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs275\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs276\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs277\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs278\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs279\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs280\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs281\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs282\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs283\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs284\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs285\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs286\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs287\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs288\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs289\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs290\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs291\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs292\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs293\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs294\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs295\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs296\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs297\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs298\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs299\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs300\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs301\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs302\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs303\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs304\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs308\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs309\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs310\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs311\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs312\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs313\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs314\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs315\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs316\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs317\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs318\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs319\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs320\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs321\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs322\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs323\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs324\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs325\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs326\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs327\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs328\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs329\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs330\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs331\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs332\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs333\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs334\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs335\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs336\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs337\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs338\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs339\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs340\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs341\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs342\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs343\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs344\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs345\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs346\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs347\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs348\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs349\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs350\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs351\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs352\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs353\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs354\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs355\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs356\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs357\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs358\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs359\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs360\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs361\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs362\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs363\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs364\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs365\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs366\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs367\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs368\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs369\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs370\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs371\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs372\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs373\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs374\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs375\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs376\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs377\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs378\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs379\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs380\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs381\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs382\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs383\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs384\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs385\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs386\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs387\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs388\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs389\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs390\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs391\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs392\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs393\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs394\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs395\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs396\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs397\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs398\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs399\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs400\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs401\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs402\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs403\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs404\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs405\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs409\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs410\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs411\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs412\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs413\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs414\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs415\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs416\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs417\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs418\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs419\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs420\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs421\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs422\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs423\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs424\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs425\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs426\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs427\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs428\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs429\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs430\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs431\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs432\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs433\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs434\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs435\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs436\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs437\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs438\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs439\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs440\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs441\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs442\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs443\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs444\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs445\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs446\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs447\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs448\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs449\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs450\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs451\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs452\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs453\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs454\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs455\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs456\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs457\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs458\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs459\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs460\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs461\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs462\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs463\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs464\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs465\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs466\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs467\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs468\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs469\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs470\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs471\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs472\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs473\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs474\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs475\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs476\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs477\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs478\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs479\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs480\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs481\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs482\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs483\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs484\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs485\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs486\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs487\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs488\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs489\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs490\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs491\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs492\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs493\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs497\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs498\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs499\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs500\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs501\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs502\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs503\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs504\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs505\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs506\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs507\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs508\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs509\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs510\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs511\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs515\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs516\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs517\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs518\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs519\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs520\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs521\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs522\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs523\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs524\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs525\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs526\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs527\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs528\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs529\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs530\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs531\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs532\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs533\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs534\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs535\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs536\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs537\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs538\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs539\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs540\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs541\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs542\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs543\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs544\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs545\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs546\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs547\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs548\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs549\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs550\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs551\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs552\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs553\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs554\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs555\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs556\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs557\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs558\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs559\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs560\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs561\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs562\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs563\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs564\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs565\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs566\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs567\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs568\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs569\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs570\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs571\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs572\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs573\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs577\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs578\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs579\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs580\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs581\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs582\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs583\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs584\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs585\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs586\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs587\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs588\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs589\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs590\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs591\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs595\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs596\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs597\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs598\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs599\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs600\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs601\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs602\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs603\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs604\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs605\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs606\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs607\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs608\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs609\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs610\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs611\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs612\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs613\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs614\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs615\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs616\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs617\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs618\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs619\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs620\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs621\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs622\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs623\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs624\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs625\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs626\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs627\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs628\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs629\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs630\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs631\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs632\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs636\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs637\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs638\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs639\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs640\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs641\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs642\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs643\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs644\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs645\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs646\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs647\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs648\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs649\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs650\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs651\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs652\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs653\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs654\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs655\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs656\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs657\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs658\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs659\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs663\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs664\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs665\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs666\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs667\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs668\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs669\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs670\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs671\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs672\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs673\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs674\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs675\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs676\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs680\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs681\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs682\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs683\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs684\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs685\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs686\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs687\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs688\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs689\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs690\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs691\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs692\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs693\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs694\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs695\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs696\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs697\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs698\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs699\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs700\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs701\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs702\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs703\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs704\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs705\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs706\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs707\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs708\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs709\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs710\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs714\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs715\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs716\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs717\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs718\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs719\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs720\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs721\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs722\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs723\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs724\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs725\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs726\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs727\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs728\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs729\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs730\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs731\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs732\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs733\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs734\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs735\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs736\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs737\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs738\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs739\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs740\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs741\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs742\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs743\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs744\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs745\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs749\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs750\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs751\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs752\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs753\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs754\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs755\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs756\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs757\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs758\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs762\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs763\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs764\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs765\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs766\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs767\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs768\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs769\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs770\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs771\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs772\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs773\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs774\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs775\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs776\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs777\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs778\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs779\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs780\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs781\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs782\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs783\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs784\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs785\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs786\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs787\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs788\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs789\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs790\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs791\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs792\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs793\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs794\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs795\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs796\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs797\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs798\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs799\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs800\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs801\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs802\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs803\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs804\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs805\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs806\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs807\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs808\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs809\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs810\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs811\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs812\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs813\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs814\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs815\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs816\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs817\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs818\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs819\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs820\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs821\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs822\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs823\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs824\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs825\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs826\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs827\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs828\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs829\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs830\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs831\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs835\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs836\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs837\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs838\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs839\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs840\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs841\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs842\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs843\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs844\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs845\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs846\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs847\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs848\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs849\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs850\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs851\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs852\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs853\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs857\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs858\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs859\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs860\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs861\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs862\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs863\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs864\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs865\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs866\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs867\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs868\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs869\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs870\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs874\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs875\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs876\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs877\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs878\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs879\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs880\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs881\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs882\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs883\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs887\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs888\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs889\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs890\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs891\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs892\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs893\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs894\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs895\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs899\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs900\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs901\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs902\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs903\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs904\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs905\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs906\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs907\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs908\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs909\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs910\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs911\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs912\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs913\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs914\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs915\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs916\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs917\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs918\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs919\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs920\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs921\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs922\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs923\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs927\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs928\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs929\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs930\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs931\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs932\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs933\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs934\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs935\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs936\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs937\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs938\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs939\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs940\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs941\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs942\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs943\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs944\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs945\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs946\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs950\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs951\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs952\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs953\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs954\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs955\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs956\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs957\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs958\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs959\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs960\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs961\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs962\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs963\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs964\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs965\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs966\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs967\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs968\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs969\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs973\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs974\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs975\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs976\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs977\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs978\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs979\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs980\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs981\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs982\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs983\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs984\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs985\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs986\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs987\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs988\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs989\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs990\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs991\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs992\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs993\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs994\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs995\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs999\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1000\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1001\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1002\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1003\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1004\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1005\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1006\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1007\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1008\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1009\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1010\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1011\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1012\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1013\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1014\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1015\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1016\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1017\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1018\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1019\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1020\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1021\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1022\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1023\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1024\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1025\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1026\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1027\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1028\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1029\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1030\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1031\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1032\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1033\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1034\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1035\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1036\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1037\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1038\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1039\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1040\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1041\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1042\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1043\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1044\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1045\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1046\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1047\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1048\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1049\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1050\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1051\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1052\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1053\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1054\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1055\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1056\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1057\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1058\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1059\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1060\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1061\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1062\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1063\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1064\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1065\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1066\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1067\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1068\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1069\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1070\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1071\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1072\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1073\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1074\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1075\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1076\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1077\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1078\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1079\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1080\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1081\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1082\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1083\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1084\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1085\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1086\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1087\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1091\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1092\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1093\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1094\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1095\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1096\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1097\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1098\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1099\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1100\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1101\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1102\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1103\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1104\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1105\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1106\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1107\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1108\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1109\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1110\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1111\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1112\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1113\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1114\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1115\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1116\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1117\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1118\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1119\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1120\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1121\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1122\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1123\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1124\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1125\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1126\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1127\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1128\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1129\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1133\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1134\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1135\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1136\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1137\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1138\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1139\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1140\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1141\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1142\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1143\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1144\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1145\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1146\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1147\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1148\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1149\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1150\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1151\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1152\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1153\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1154\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1155\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1156\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1157\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1158\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1159\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1160\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1161\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1162\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1163\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1164\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1165\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1166\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1167\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1168\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1169\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1170\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1171\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1172\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1173\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1174\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1175\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1176\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1180\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1181\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1182\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1183\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1184\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1185\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1186\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1187\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1188\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1189\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1190\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1191\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1192\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1193\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1194\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1195\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1196\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1197\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1198\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1199\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1200\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1201\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1202\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1203\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1204\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1205\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1206\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1207\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1208\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1209\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1210\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1211\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1212\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1213\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1214\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1215\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1216\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1217\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1218\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1219\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1220\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1221\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1222\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1223\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1224\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1225\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1226\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1227\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1228\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1231\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1232\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1233\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1234\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1235\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1236\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1237\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1238\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1239\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1240\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1241\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1242\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1243\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1244\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1245\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1246\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1247\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1248\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1249\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1253\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1254\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1255\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1256\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1257\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1258\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1259\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1260\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1261\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1262\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1263\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1264\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1265\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1266\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1267\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1268\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1272\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1273\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1274\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1275\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1276\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1277\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1278\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1279\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1280\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1281\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1282\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1283\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1284\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1285\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1286\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1287\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1288\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1292\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1293\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1294\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1295\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1296\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1297\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1298\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1299\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1300\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1301\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1302\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1303\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1304\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1305\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1306\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1307\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1308\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1309\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1313\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1314\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1315\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1316\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1317\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1318\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1319\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1320\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1321\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1322\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1323\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1324\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1325\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1326\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1330\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1331\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1332\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1333\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1334\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1335\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1336\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1337\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1338\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1339\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1340\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1341\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1342\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1343\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1347\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1348\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1349\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1350\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1351\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1352\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1353\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1354\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1355\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1356\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1357\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1358\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1362\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1363\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1364\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1365\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1366\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1367\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1368\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1369\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1370\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1374\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1375\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1376\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1377\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1378\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1379\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1380\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1381\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1382\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1383\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1384\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1385\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1386\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1387\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1388\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1389\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1390\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1391\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1392\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1393\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1394\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1395\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1399\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1400\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1401\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1402\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1403\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1404\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1405\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1406\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1407\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1408\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1409\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1410\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1411\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1412\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1413\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1414\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1415\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1416\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1417\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1418\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1419\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1420\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1424\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1425\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1426\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1427\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1428\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1429\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1430\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1431\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1432\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1433\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1437\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1438\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1439\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1440\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1441\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1442\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1443\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1444\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1445\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1446\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1447\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1448\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1449\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1450\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1451\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1452\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1453\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1454\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1455\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1456\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1457\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1458\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1459\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1460\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1461\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1462\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1463\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1464\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1465\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1466\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1467\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1468\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1469\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1470\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1471\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1472\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1473\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1474\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1475\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1476\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1477\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1478\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1479\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1480\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1481\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1482\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1483\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1484\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1485\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1486\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1487\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1488\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1489\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1490\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1491\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1492\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1493\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1494\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1495\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1496\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1497\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1498\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1499\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1500\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1501\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1502\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1503\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1504\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1505\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1506\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1507\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1508\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1509\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1510\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1511\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1512\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1517\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1518\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1519\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1523\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1524\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1525\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1526\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1527\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1528\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1529\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1530\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1531\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1532\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1533\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1534\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1535\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1536\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1537\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1538\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1539\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1540\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1541\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1542\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1543\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1544\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1545\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1546\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1547\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1548\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1549\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1550\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1551\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1552\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1553\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1554\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1555\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1556\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1557\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1558\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1559\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1560\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1561\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1562\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1563\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1564\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1565\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1566\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1567\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1568\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1569\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1570\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1571\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1572\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1573\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1574\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1575\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1576\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1577\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1578\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1579\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1580\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1581\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1582\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1583\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1584\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1585\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1586\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1587\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1588\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1589\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1590\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1591\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1592\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1593\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1594\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1595\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1596\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1597\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1598\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1599\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1600\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1601\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1602\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1603\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1604\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1605\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1606\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1607\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1608\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1609\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1610\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1611\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1612\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1613\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1614\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1615\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1616\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1617\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1618\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1619\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1620\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1621\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1622\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1623\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1624\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1625\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1626\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1627\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1628\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1629\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1630\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1631\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1632\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1633\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1634\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1635\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1636\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1637\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1638\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1639\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1640\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1641\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1642\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1643\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1644\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1645\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1646\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1647\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1648\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1649\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1650\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1651\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1652\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1653\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1654\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1655\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1656\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1657\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1658\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1659\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1660\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1661\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1662\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1663\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1664\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1665\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1666\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1667\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1668\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1669\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1670\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1671\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1672\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1673\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1674\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1675\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1676\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1677\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1678\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1679\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1680\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1681\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1682\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1683\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1684\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1685\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1686\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1687\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1688\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1689\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1690\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1691\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1692\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1693\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1694\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1695\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1696\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1697\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1698\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1699\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1700\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1701\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1702\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1703\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1704\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1705\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1706\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1707\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1708\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1709\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1710\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1711\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1712\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1713\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1714\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1715\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1716\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1717\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1718\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1719\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1720\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1721\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1722\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1723\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1724\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1725\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1726\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1727\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1728\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1729\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1730\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1731\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1732\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1733\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1734\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1735\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1736\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1737\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1738\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1739\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1740\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1741\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1742\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1743\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1744\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1745\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1746\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1747\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1748\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1749\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1750\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1751\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1752\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1753\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1754\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1755\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1756\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1757\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1758\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1759\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1760\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1761\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1762\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1763\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1764\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1765\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1766\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1767\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1768\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1769\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1770\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1771\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1772\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1773\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1774\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1775\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1776\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1777\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1778\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1779\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1780\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1781\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1782\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1783\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1784\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1785\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1786\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1787\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1788\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1789\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1790\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1791\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1792\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1793\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1794\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1795\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1796\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1797\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1798\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1799\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1800\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1801\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1802\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1803\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1804\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1805\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1806\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1807\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1808\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1809\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1810\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1811\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1812\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1813\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1814\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1815\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1816\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1817\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1818\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1819\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1820\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1821\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1822\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1823\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1824\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1825\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1826\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1827\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1828\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1829\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1830\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1831\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1832\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1833\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1837\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1838\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1839\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1840\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1841\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1842\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1843\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1844\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1845\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1846\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1847\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1848\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1849\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1850\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1851\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1852\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1853\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1854\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1855\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1856\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1857\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1858\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1859\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1860\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1861\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1862\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1863\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1864\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1865\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1866\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1867\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1868\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1869\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1870\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1871\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1872\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1873\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1874\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1875\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1876\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1877\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1878\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1879\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1880\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1881\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1882\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1883\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1884\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1885\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1886\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1887\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1892\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1893\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1894\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1895\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1896\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1897\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1898\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1899\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1900\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1901\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1902\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1903\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1904\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1905\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1906\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1907\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1908\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1909\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1910\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1911\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1912\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1913\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1914\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1915\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1916\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1917\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1918\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1919\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1920\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1921\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1922\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1923\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1924\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1925\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1926\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1927\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1928\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1929\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1930\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1931\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1932\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1933\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1934\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1935\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1936\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1937\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1938\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1942\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1943\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1944\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1945\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1946\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1947\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1948\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1952\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1953\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1954\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1955\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1956\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1957\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1958\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1959\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1960\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1961\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1962\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1963\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1964\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1965\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1966\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1967\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1968\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1969\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1970\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1971\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1972\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1973\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1974\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1975\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1976\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1977\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1978\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1979\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1980\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1981\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1982\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1983\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1984\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1985\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1986\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1987\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\cs1988\f1\fs22\snext0 Character *;}</xsl:text>
        <xsl:text>{\*\ts51\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts52\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts53\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts138\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts139\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts140\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts171\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts172\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts173\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts204\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts205\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts206\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts217\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts218\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts219\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts305\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts306\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts307\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts406\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts407\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts408\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts494\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts495\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts496\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts512\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts513\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts514\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts574\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts575\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts576\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts592\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts593\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts594\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts633\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts634\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts635\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts660\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts661\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts662\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts677\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts678\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts679\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts711\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts712\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts713\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts746\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts747\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts748\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts759\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts760\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts761\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts832\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts833\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts834\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts854\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts855\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts856\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts871\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts872\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts873\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts884\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts885\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts886\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts896\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts897\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts898\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts924\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts925\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts926\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts947\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts948\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts949\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts970\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts971\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts972\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts996\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts997\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts998\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1088\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1089\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1090\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1130\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1131\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1132\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1177\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1178\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1179\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1250\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1251\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1252\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1269\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1270\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1271\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1289\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1290\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1291\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1310\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1311\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1312\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1327\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1328\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1329\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1344\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1345\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1346\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1359\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1360\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1361\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1371\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1372\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1373\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1396\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1397\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1398\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1421\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1422\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1423\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1434\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1435\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1436\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1520\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1521\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1522\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1834\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1835\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1836\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1939\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1940\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1941\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1949\tsrowd\ql\f1\fs22\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1950\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>{\*\ts1951\tsrowd\ql\f1\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>}</xsl:text>
        <xsl:text>{\*\generator Altova StyleVision Enterprise Edition;}\viewkind1\viewzk0\viewscale100\newtblstyruls </xsl:text>
        <xsl:text>\dntblnsbdb\fs24\f0 </xsl:text>
        <xsl:call-template name="altova:DocumentSection_06624E60">
            <xsl:with-param name="altova:nMaxWidthIn" select="7.07"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel"/>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
    </xsl:template>
    <xsl:template name="altova:DocumentSection_06624E60">
        <xsl:param name="altova:nMaxWidthIn"/>
        <xsl:param name="templatetablelevel"/>
        <xsl:text>\sectd\facingp\pgwsxn11900\pghsxn16820\margtsxn1120\marglsxn860\margbsxn1720\margrsxn860\headery0\footery0\cols1\colsx720\pgndec</xsl:text>
        <xsl:text>{</xsl:text>
        <xsl:text>\headerl </xsl:text>
        <xsl:call-template name="EmptyHeader"/>
        <xsl:text>}</xsl:text>
        <xsl:text>{</xsl:text>
        <xsl:text>\headerr </xsl:text>
        <xsl:call-template name="EmptyHeader"/>
        <xsl:text>}</xsl:text>
        <xsl:text>{</xsl:text>
        <xsl:text>\footerl </xsl:text>
        <xsl:call-template name="altova:Section_06624E60_FooterLeft"/>
        <xsl:text>}</xsl:text>
        <xsl:text>{</xsl:text>
        <xsl:text>\footerr </xsl:text>
        <xsl:call-template name="altova:Section_06624E60_FooterRight"/>
        <xsl:text>}</xsl:text>
        <xsl:text>\par\par</xsl:text>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 0"/>
        <xsl:text>\s11\f1\fs22\b\sl0\fs22\b\s15\s16\sl0\f1\fs22\b </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs17\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Model U 16. Proces-verbaal van de zitting van het centraal stembureau voor de verkiezing van de leden van de Eerste Kamer der Staten-Generaal tot het vaststellen en het bekendmaken van de uitslag van de verkiezing</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs18\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$U16_010_Title"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:call-template name="PostTitle">
            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
        </xsl:call-template>
        <xsl:text>\par\pard\s0\f0\fs24\b0\b0\f0\fs24</xsl:text>
        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 0"/>
        <xsl:text>\par </xsl:text>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 0"/>
        <xsl:text>\s1\f0\fs24\sl0\fs22\s19\s20\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="$XML">
            <xsl:for-each select="eml:EML">
                <xsl:for-each select="eml:Result">
                    <xsl:text>\par </xsl:text>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs21\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>Het centraal stembureau voor de verkiezing van de leden van de Eerste Kamer der Staten-Generaal heeft overeenkomstig artikel U 16 van de Kieswet op </xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs22\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$U16_020_centraal_stembureau_artikel_U16"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:for-each select="rg:RG520">
                        <xsl:for-each select="rg:DateOfMeetingO1P20">
                            <xsl:call-template name="Date">
                                <xsl:with-param name="isBold" select="1"/>
                                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                            </xsl:call-template>
                        </xsl:for-each>
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs23\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>, om </xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs24\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$U16_030_om"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:for-each select="rg:TimeOfMeetingP20">
                            <xsl:text>{\cs25\f1\fs22\b </xsl:text>
                            <xsl:apply-templates>
                                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                            </xsl:apply-templates>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs26\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text> uur</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs27\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$U16_040_uur"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:for-each>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs28\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>, in de daarvoor aangewezen ruimte zitting gehouden.</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs29\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$U16_050_ruimte_zitting"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:text>\par </xsl:text>
                    <xsl:text>\par </xsl:text>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs30\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>Het centraal stembureau heeft op deze zitting de uitslag vastgesteld en bekendgemaakt van </xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs31\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$U16_060_uitslag_gehouden"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:for-each select="eml:Election">
                        <xsl:call-template name="ElectionName">
                            <xsl:with-param name="isBold" select="1"/>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:call-template>
                    </xsl:for-each>
                    <xsl:text>{\cs32\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>.</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                    <xsl:text>\par </xsl:text>
                    <xsl:text>\par </xsl:text>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs33\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>Het centraal stembureau heeft deze uitslag op grond van de processen-verbaal die ingevolge artikel T 11, derde lid, van de Kieswet naar het centraal stembureau zijn overgebracht, als volgt vastgesteld en bekendgemaakt:</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs34\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$U16_070_centraal_stembureau_artikel_T11"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:text>\page </xsl:text>
                    <xsl:text>\par\par</xsl:text>
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\s1\f0\fs24\sl0\fs22\s19\s20\sl0\f1\fs22\s11\f1\fs22\b\sl0\fs22\b\s35\s36\ql\sl0\f1\fs22\b </xsl:text>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs37\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>A. VASTSTELLING VAN DE STEMWAARDEN</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs38\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$U16_080_A_Vaststelling"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:call-template name="PostTitle">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                    <xsl:text>\par\pard\s0\s0\f0\fs24\f0\fs24\b0\b0\f0\fs24</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\par\s1\f0\fs24\sl0\fs22\s19\s20\sl0\f1\fs22 </xsl:text>
                    <xsl:for-each select="rg:RG520">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs39\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>Het centraal stembureau heeft overeenkomstig artikel U 2 van de Kieswet de waarde van de stemmen die door de leden van de staten van de onderscheidene provincies zijn uitgebracht, aan de hand van de door het Centraal Bureau voor de Statistiek uiterlijk drie weken voor de dag van kandidaatstelling (Stcrt. </xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs40\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$U16_090_01_artikel_U2"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:for-each select="rg:PublicationVoteValuesDate">
                            <xsl:text>{\cs41\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="substring(text(),9, 2)"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                            <xsl:text>{\cs42\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>-</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                            <xsl:text>{\cs43\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="substring(text(),6, 2)"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                            <xsl:text>{\cs44\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>-</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                            <xsl:text>{\cs45\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="substring(text(),1, 4)"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs46\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text> nr. </xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs47\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$U16_090_02_artikel_U2"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:for-each select="rg:PublicationVoteValuesNumber">
                            <xsl:text>{\cs48\f1\fs22 </xsl:text>
                            <xsl:apply-templates>
                                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                            </xsl:apply-templates>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs49\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>) gepubliceerde inwonertallen van de provincies per 1 januari van het jaar waarin de verkiezing plaatsvindt, voor de verschillende provincies als volgt vastgesteld:</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs50\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$U16_090_03_artikel_U2"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:text>\par </xsl:text>
                        <xsl:text>\par </xsl:text>
                        <xsl:for-each select="rg:ElectoralDistrictsOverview">
                            <xsl:variable name="altova:CurrContextGrid_0675AFA0" select="."/>
                            <xsl:variable name="altova:nTableWidthIn_0" select="$altova:nMaxWidthIn * 1.00000"/>
                            <xsl:variable name="altova:nTableWidthTw_0" select="$altova:nTableWidthIn_0 * 1440"/>
                            <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_0" select="round($altova:nTableWidthTw_0 * 0.25)"/>
                            <xsl:variable name="altova:nTableIndentTw_0" select="0"/>
                            <xsl:variable name="altova:nSumColumnWidthsTw_0" select="round(0.00 + 1.00 * $altova:nTableWidthTw_0)"/>
                            <xsl:variable name="altova:TableWidthFactor_0">
                                <xsl:choose>
                                    <xsl:when test="$altova:nSumColumnWidthsTw_0 &gt; $altova:nTableWidthTw_0">
                                        <xsl:value-of select="$altova:nTableWidthTw_0 div $altova:nSumColumnWidthsTw_0"/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:value-of select="1"/>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:variable>
                            <xsl:variable name="altova:nColumnWidthTw_0_0" select="round($altova:nTableWidthTw_0 * 0.20 * $altova:TableWidthFactor_0)"/>
                            <xsl:variable name="altova:nColumnWidthTw_0_1" select="round($altova:nTableWidthTw_0 * 0.13 * $altova:TableWidthFactor_0)"/>
                            <xsl:variable name="altova:nColumnWidthTw_0_2" select="round($altova:nTableWidthTw_0 * 0.20 * $altova:TableWidthFactor_0)"/>
                            <xsl:variable name="altova:nColumnWidthTw_0_3" select="round($altova:nTableWidthTw_0 * 0.13 * $altova:TableWidthFactor_0)"/>
                            <xsl:variable name="altova:nColumnWidthTw_0_4" select="round($altova:nTableWidthTw_0 * 0.20 * $altova:TableWidthFactor_0)"/>
                            <xsl:variable name="altova:nColumnWidthTw_0_5" select="round($altova:nTableWidthTw_0 * 0.13 * $altova:TableWidthFactor_0)"/>
                            <xsl:text>\pard\s0\f0\fs24</xsl:text>
                            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                            <xsl:text>\itap</xsl:text>
                            <xsl:value-of select="$templatetablelevel + 1"/>
                            <xsl:variable name="tablestyle0">
                                <xsl:text>\trowd\trleft</xsl:text>
                                <xsl:value-of select="$altova:nTableIndentTw_0"/>
                                <xsl:text>\ts51\ts52\ts53\trspdl22\trspdt22\trspdb22\trspdr22\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrs\brdrcf1\brdrw15\trbrdrl\brdrnil\trbrdrb\brdrs\brdrcf1\brdrw15\trbrdrr\brdrnil</xsl:text>
                            </xsl:variable>
                            <xsl:variable name="rowend0">
                                <xsl:choose>
                                    <xsl:when test="$templatetablelevel + 1 = 1">
                                        <xsl:text>\row\pard</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:variable>
                            <xsl:variable name="cellend0">
                                <xsl:choose>
                                    <xsl:when test="$templatetablelevel + 1 = 1">
                                        <xsl:text>\cell</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>\nestcell</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:variable>
                            <xsl:variable name="altova:RowStyle0">
                                <xsl:text>\trrh0</xsl:text>
                                <xsl:variable name="altova:CurrGridPos_Tbl0" select="$altova:nTableIndentTw_0"/>
                                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                                <xsl:text>\cellx</xsl:text>
                                <xsl:variable name="altova:CurrGridPos_Tbl0_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl0 + $altova:nColumnWidthTw_0_0"/>
                                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl0_Col0_AfterColumn)"/>
                                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                                <xsl:text>\cellx</xsl:text>
                                <xsl:variable name="altova:CurrGridPos_Tbl0_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl0_Col0_AfterColumn + $altova:nColumnWidthTw_0_1"/>
                                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl0_Col1_AfterColumn)"/>
                                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                                <xsl:text>\cellx</xsl:text>
                                <xsl:variable name="altova:CurrGridPos_Tbl0_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl0_Col1_AfterColumn + $altova:nColumnWidthTw_0_2"/>
                                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl0_Col2_AfterColumn)"/>
                                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                                <xsl:text>\cellx</xsl:text>
                                <xsl:variable name="altova:CurrGridPos_Tbl0_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl0_Col2_AfterColumn + $altova:nColumnWidthTw_0_3"/>
                                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl0_Col3_AfterColumn)"/>
                                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                                <xsl:text>\cellx</xsl:text>
                                <xsl:variable name="altova:CurrGridPos_Tbl0_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl0_Col3_AfterColumn + $altova:nColumnWidthTw_0_4"/>
                                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl0_Col4_AfterColumn)"/>
                                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                                <xsl:text>\cellx</xsl:text>
                                <xsl:variable name="altova:CurrGridPos_Tbl0_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl0_Col4_AfterColumn + $altova:nColumnWidthTw_0_5"/>
                                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl0_Col5_AfterColumn)"/>
                            </xsl:variable>
                            <xsl:if test="$templatetablelevel + 1 = 1">
                                <xsl:value-of select="$tablestyle0"/>
                                <xsl:value-of select="$altova:RowStyle0"/>
                            </xsl:if>
                            <xsl:text>\pard</xsl:text>
                            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                            <xsl:text>\itap</xsl:text>
                            <xsl:value-of select="$templatetablelevel + 1"/>
                            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                            <xsl:for-each select="rg:ElectoralDistrictName[position() = 1]">
                                <xsl:text>{\cs54\f1\fs22 </xsl:text>
                                <xsl:apply-templates>
                                    <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_0_0 div 1440) - 0.01042 - 0.01042"/>
                                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                                </xsl:apply-templates>
                                <xsl:text>}</xsl:text>
                                <xsl:text>{\cs55\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>:</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:for-each>
                            <xsl:text>\f0\fs24</xsl:text>
                            <xsl:value-of select="$cellend0"/>
                            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                            <xsl:for-each select="rg:ElectoralDistrictName[position() = 1]">
                                <xsl:for-each select="@voteValue">
                                    <xsl:text>{\cs56\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="string(.)"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:for-each>
                            </xsl:for-each>
                            <xsl:text>\f0\fs24</xsl:text>
                            <xsl:value-of select="$cellend0"/>
                            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                            <xsl:for-each select="rg:ElectoralDistrictName[position() = 5]">
                                <xsl:text>{\cs57\f1\fs22 </xsl:text>
                                <xsl:apply-templates>
                                    <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_0_2 div 1440) - 0.01042 - 0.01042"/>
                                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                                </xsl:apply-templates>
                                <xsl:text>}</xsl:text>
                                <xsl:text>{\cs58\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>:</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:for-each>
                            <xsl:text>\f0\fs24</xsl:text>
                            <xsl:value-of select="$cellend0"/>
                            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                            <xsl:for-each select="rg:ElectoralDistrictName[position() = 5]">
                                <xsl:for-each select="@voteValue">
                                    <xsl:text>{\cs59\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="string(.)"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:for-each>
                            </xsl:for-each>
                            <xsl:text>\f0\fs24</xsl:text>
                            <xsl:value-of select="$cellend0"/>
                            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                            <xsl:for-each select="rg:ElectoralDistrictName[position() = 9]">
                                <xsl:text>{\cs60\f1\fs22 </xsl:text>
                                <xsl:apply-templates>
                                    <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_0_4 div 1440) - 0.01042 - 0.01042"/>
                                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                                </xsl:apply-templates>
                                <xsl:text>}</xsl:text>
                                <xsl:text>{\cs61\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>:</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:for-each>
                            <xsl:text>\f0\fs24</xsl:text>
                            <xsl:value-of select="$cellend0"/>
                            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                            <xsl:for-each select="rg:ElectoralDistrictName[position() = 9]">
                                <xsl:for-each select="@voteValue">
                                    <xsl:text>{\cs62\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="string(.)"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:for-each>
                            </xsl:for-each>
                            <xsl:text>\f0\fs24</xsl:text>
                            <xsl:value-of select="$cellend0"/>
                            <xsl:if test="$templatetablelevel + 1 > 1">
                                <xsl:text>{\*\nesttableprops</xsl:text>
                            </xsl:if>
                            <xsl:value-of select="$tablestyle0"/>
                            <xsl:value-of select="$altova:RowStyle0"/>
                            <xsl:value-of select="$rowend0"/>
                            <xsl:variable name="altova:RowStyle1">
                                <xsl:text>\trrh0</xsl:text>
                                <xsl:variable name="altova:CurrGridPos_Tbl0" select="$altova:nTableIndentTw_0"/>
                                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                                <xsl:text>\cellx</xsl:text>
                                <xsl:variable name="altova:CurrGridPos_Tbl0_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl0 + $altova:nColumnWidthTw_0_0"/>
                                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl0_Col0_AfterColumn)"/>
                                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                                <xsl:text>\cellx</xsl:text>
                                <xsl:variable name="altova:CurrGridPos_Tbl0_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl0_Col0_AfterColumn + $altova:nColumnWidthTw_0_1"/>
                                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl0_Col1_AfterColumn)"/>
                                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                                <xsl:text>\cellx</xsl:text>
                                <xsl:variable name="altova:CurrGridPos_Tbl0_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl0_Col1_AfterColumn + $altova:nColumnWidthTw_0_2"/>
                                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl0_Col2_AfterColumn)"/>
                                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                                <xsl:text>\cellx</xsl:text>
                                <xsl:variable name="altova:CurrGridPos_Tbl0_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl0_Col2_AfterColumn + $altova:nColumnWidthTw_0_3"/>
                                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl0_Col3_AfterColumn)"/>
                                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                                <xsl:text>\cellx</xsl:text>
                                <xsl:variable name="altova:CurrGridPos_Tbl0_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl0_Col3_AfterColumn + $altova:nColumnWidthTw_0_4"/>
                                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl0_Col4_AfterColumn)"/>
                                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                                <xsl:text>\cellx</xsl:text>
                                <xsl:variable name="altova:CurrGridPos_Tbl0_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl0_Col4_AfterColumn + $altova:nColumnWidthTw_0_5"/>
                                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl0_Col5_AfterColumn)"/>
                            </xsl:variable>
                            <xsl:if test="$templatetablelevel + 1 = 1">
                                <xsl:value-of select="$tablestyle0"/>
                                <xsl:value-of select="$altova:RowStyle1"/>
                            </xsl:if>
                            <xsl:text>\pard</xsl:text>
                            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                            <xsl:text>\itap</xsl:text>
                            <xsl:value-of select="$templatetablelevel + 1"/>
                            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                            <xsl:for-each select="rg:ElectoralDistrictName[position() = 2]">
                                <xsl:text>{\cs63\f1\fs22 </xsl:text>
                                <xsl:apply-templates>
                                    <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_0_0 div 1440) - 0.01042 - 0.01042"/>
                                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                                </xsl:apply-templates>
                                <xsl:text>}</xsl:text>
                                <xsl:text>{\cs64\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>:</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:for-each>
                            <xsl:text>\f0\fs24</xsl:text>
                            <xsl:value-of select="$cellend0"/>
                            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                            <xsl:for-each select="rg:ElectoralDistrictName[position() = 2]">
                                <xsl:for-each select="@voteValue">
                                    <xsl:text>{\cs65\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="string(.)"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:for-each>
                            </xsl:for-each>
                            <xsl:text>\f0\fs24</xsl:text>
                            <xsl:value-of select="$cellend0"/>
                            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                            <xsl:for-each select="rg:ElectoralDistrictName[position() = 6]">
                                <xsl:text>{\cs66\f1\fs22 </xsl:text>
                                <xsl:apply-templates>
                                    <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_0_2 div 1440) - 0.01042 - 0.01042"/>
                                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                                </xsl:apply-templates>
                                <xsl:text>}</xsl:text>
                                <xsl:text>{\cs67\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>:</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:for-each>
                            <xsl:text>\f0\fs24</xsl:text>
                            <xsl:value-of select="$cellend0"/>
                            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                            <xsl:for-each select="rg:ElectoralDistrictName[position() = 6]">
                                <xsl:for-each select="@voteValue">
                                    <xsl:text>{\cs68\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="string(.)"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:for-each>
                            </xsl:for-each>
                            <xsl:text>\f0\fs24</xsl:text>
                            <xsl:value-of select="$cellend0"/>
                            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                            <xsl:for-each select="rg:ElectoralDistrictName[position() = 10]">
                                <xsl:text>{\cs69\f1\fs22 </xsl:text>
                                <xsl:apply-templates>
                                    <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_0_4 div 1440) - 0.01042 - 0.01042"/>
                                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                                </xsl:apply-templates>
                                <xsl:text>}</xsl:text>
                                <xsl:text>{\cs70\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>:</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:for-each>
                            <xsl:text>\f0\fs24</xsl:text>
                            <xsl:value-of select="$cellend0"/>
                            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                            <xsl:for-each select="rg:ElectoralDistrictName[position() = 10]">
                                <xsl:for-each select="@voteValue">
                                    <xsl:text>{\cs71\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="string(.)"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:for-each>
                            </xsl:for-each>
                            <xsl:text>\f0\fs24</xsl:text>
                            <xsl:value-of select="$cellend0"/>
                            <xsl:if test="$templatetablelevel + 1 > 1">
                                <xsl:text>{\*\nesttableprops</xsl:text>
                            </xsl:if>
                            <xsl:value-of select="$tablestyle0"/>
                            <xsl:value-of select="$altova:RowStyle1"/>
                            <xsl:value-of select="$rowend0"/>
                            <xsl:variable name="altova:RowStyle2">
                                <xsl:text>\trrh0</xsl:text>
                                <xsl:variable name="altova:CurrGridPos_Tbl0" select="$altova:nTableIndentTw_0"/>
                                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                                <xsl:text>\cellx</xsl:text>
                                <xsl:variable name="altova:CurrGridPos_Tbl0_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl0 + $altova:nColumnWidthTw_0_0"/>
                                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl0_Col0_AfterColumn)"/>
                                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                                <xsl:text>\cellx</xsl:text>
                                <xsl:variable name="altova:CurrGridPos_Tbl0_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl0_Col0_AfterColumn + $altova:nColumnWidthTw_0_1"/>
                                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl0_Col1_AfterColumn)"/>
                                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                                <xsl:text>\cellx</xsl:text>
                                <xsl:variable name="altova:CurrGridPos_Tbl0_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl0_Col1_AfterColumn + $altova:nColumnWidthTw_0_2"/>
                                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl0_Col2_AfterColumn)"/>
                                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                                <xsl:text>\cellx</xsl:text>
                                <xsl:variable name="altova:CurrGridPos_Tbl0_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl0_Col2_AfterColumn + $altova:nColumnWidthTw_0_3"/>
                                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl0_Col3_AfterColumn)"/>
                                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                                <xsl:text>\cellx</xsl:text>
                                <xsl:variable name="altova:CurrGridPos_Tbl0_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl0_Col3_AfterColumn + $altova:nColumnWidthTw_0_4"/>
                                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl0_Col4_AfterColumn)"/>
                                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                                <xsl:text>\cellx</xsl:text>
                                <xsl:variable name="altova:CurrGridPos_Tbl0_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl0_Col4_AfterColumn + $altova:nColumnWidthTw_0_5"/>
                                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl0_Col5_AfterColumn)"/>
                            </xsl:variable>
                            <xsl:if test="$templatetablelevel + 1 = 1">
                                <xsl:value-of select="$tablestyle0"/>
                                <xsl:value-of select="$altova:RowStyle2"/>
                            </xsl:if>
                            <xsl:text>\pard</xsl:text>
                            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                            <xsl:text>\itap</xsl:text>
                            <xsl:value-of select="$templatetablelevel + 1"/>
                            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                            <xsl:for-each select="rg:ElectoralDistrictName[position() = 3]">
                                <xsl:text>{\cs72\f1\fs22 </xsl:text>
                                <xsl:apply-templates>
                                    <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_0_0 div 1440) - 0.01042 - 0.01042"/>
                                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                                </xsl:apply-templates>
                                <xsl:text>}</xsl:text>
                                <xsl:text>{\cs73\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>:</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:for-each>
                            <xsl:text>\f0\fs24</xsl:text>
                            <xsl:value-of select="$cellend0"/>
                            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                            <xsl:for-each select="rg:ElectoralDistrictName[position() = 3]">
                                <xsl:for-each select="@voteValue">
                                    <xsl:text>{\cs74\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="string(.)"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:for-each>
                            </xsl:for-each>
                            <xsl:text>\f0\fs24</xsl:text>
                            <xsl:value-of select="$cellend0"/>
                            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                            <xsl:for-each select="rg:ElectoralDistrictName[position() = 7]">
                                <xsl:text>{\cs75\f1\fs22 </xsl:text>
                                <xsl:apply-templates>
                                    <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_0_2 div 1440) - 0.01042 - 0.01042"/>
                                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                                </xsl:apply-templates>
                                <xsl:text>}</xsl:text>
                                <xsl:text>{\cs76\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>:</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:for-each>
                            <xsl:text>\f0\fs24</xsl:text>
                            <xsl:value-of select="$cellend0"/>
                            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                            <xsl:for-each select="rg:ElectoralDistrictName[position() = 7]">
                                <xsl:for-each select="@voteValue">
                                    <xsl:text>{\cs77\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="string(.)"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:for-each>
                            </xsl:for-each>
                            <xsl:text>\f0\fs24</xsl:text>
                            <xsl:value-of select="$cellend0"/>
                            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                            <xsl:for-each select="rg:ElectoralDistrictName[position() = 11]">
                                <xsl:text>{\cs78\f1\fs22 </xsl:text>
                                <xsl:apply-templates>
                                    <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_0_4 div 1440) - 0.01042 - 0.01042"/>
                                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                                </xsl:apply-templates>
                                <xsl:text>}</xsl:text>
                                <xsl:text>{\cs79\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>:</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:for-each>
                            <xsl:text>\f0\fs24</xsl:text>
                            <xsl:value-of select="$cellend0"/>
                            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                            <xsl:for-each select="rg:ElectoralDistrictName[position() = 11]">
                                <xsl:for-each select="@voteValue">
                                    <xsl:text>{\cs80\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="string(.)"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:for-each>
                            </xsl:for-each>
                            <xsl:text>\f0\fs24</xsl:text>
                            <xsl:value-of select="$cellend0"/>
                            <xsl:if test="$templatetablelevel + 1 > 1">
                                <xsl:text>{\*\nesttableprops</xsl:text>
                            </xsl:if>
                            <xsl:value-of select="$tablestyle0"/>
                            <xsl:value-of select="$altova:RowStyle2"/>
                            <xsl:value-of select="$rowend0"/>
                            <xsl:variable name="altova:RowStyle3">
                                <xsl:text>\trrh0</xsl:text>
                                <xsl:variable name="altova:CurrGridPos_Tbl0" select="$altova:nTableIndentTw_0"/>
                                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                                <xsl:text>\cellx</xsl:text>
                                <xsl:variable name="altova:CurrGridPos_Tbl0_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl0 + $altova:nColumnWidthTw_0_0"/>
                                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl0_Col0_AfterColumn)"/>
                                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                                <xsl:text>\cellx</xsl:text>
                                <xsl:variable name="altova:CurrGridPos_Tbl0_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl0_Col0_AfterColumn + $altova:nColumnWidthTw_0_1"/>
                                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl0_Col1_AfterColumn)"/>
                                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                                <xsl:text>\cellx</xsl:text>
                                <xsl:variable name="altova:CurrGridPos_Tbl0_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl0_Col1_AfterColumn + $altova:nColumnWidthTw_0_2"/>
                                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl0_Col2_AfterColumn)"/>
                                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                                <xsl:text>\cellx</xsl:text>
                                <xsl:variable name="altova:CurrGridPos_Tbl0_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl0_Col2_AfterColumn + $altova:nColumnWidthTw_0_3"/>
                                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl0_Col3_AfterColumn)"/>
                                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                                <xsl:text>\cellx</xsl:text>
                                <xsl:variable name="altova:CurrGridPos_Tbl0_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl0_Col3_AfterColumn + $altova:nColumnWidthTw_0_4"/>
                                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl0_Col4_AfterColumn)"/>
                                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                                <xsl:text>\cellx</xsl:text>
                                <xsl:variable name="altova:CurrGridPos_Tbl0_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl0_Col4_AfterColumn + $altova:nColumnWidthTw_0_5"/>
                                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl0_Col5_AfterColumn)"/>
                            </xsl:variable>
                            <xsl:if test="$templatetablelevel + 1 = 1">
                                <xsl:value-of select="$tablestyle0"/>
                                <xsl:value-of select="$altova:RowStyle3"/>
                            </xsl:if>
                            <xsl:text>\pard</xsl:text>
                            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                            <xsl:text>\itap</xsl:text>
                            <xsl:value-of select="$templatetablelevel + 1"/>
                            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                            <xsl:for-each select="rg:ElectoralDistrictName[position() = 4]">
                                <xsl:text>{\cs81\f1\fs22 </xsl:text>
                                <xsl:apply-templates>
                                    <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_0_0 div 1440) - 0.01042 - 0.01042"/>
                                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                                </xsl:apply-templates>
                                <xsl:text>}</xsl:text>
                                <xsl:text>{\cs82\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>:</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:for-each>
                            <xsl:text>\f0\fs24</xsl:text>
                            <xsl:value-of select="$cellend0"/>
                            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                            <xsl:for-each select="rg:ElectoralDistrictName[position() = 4]">
                                <xsl:for-each select="@voteValue">
                                    <xsl:text>{\cs83\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="string(.)"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:for-each>
                            </xsl:for-each>
                            <xsl:text>\f0\fs24</xsl:text>
                            <xsl:value-of select="$cellend0"/>
                            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                            <xsl:for-each select="rg:ElectoralDistrictName[position() = 8]">
                                <xsl:text>{\cs84\f1\fs22 </xsl:text>
                                <xsl:apply-templates>
                                    <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_0_2 div 1440) - 0.01042 - 0.01042"/>
                                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                                </xsl:apply-templates>
                                <xsl:text>}</xsl:text>
                                <xsl:text>{\cs85\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>:</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:for-each>
                            <xsl:text>\f0\fs24</xsl:text>
                            <xsl:value-of select="$cellend0"/>
                            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                            <xsl:for-each select="rg:ElectoralDistrictName[position() = 8]">
                                <xsl:for-each select="@voteValue">
                                    <xsl:text>{\cs86\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="string(.)"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:for-each>
                            </xsl:for-each>
                            <xsl:text>\f0\fs24</xsl:text>
                            <xsl:value-of select="$cellend0"/>
                            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                            <xsl:for-each select="rg:ElectoralDistrictName[position() = 12]">
                                <xsl:text>{\cs87\f1\fs22 </xsl:text>
                                <xsl:apply-templates>
                                    <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_0_4 div 1440) - 0.01042 - 0.01042"/>
                                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                                </xsl:apply-templates>
                                <xsl:text>}</xsl:text>
                                <xsl:text>{\cs88\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>:</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:for-each>
                            <xsl:text>\f0\fs24</xsl:text>
                            <xsl:value-of select="$cellend0"/>
                            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                            <xsl:for-each select="rg:ElectoralDistrictName[position() = 12]">
                                <xsl:for-each select="@voteValue">
                                    <xsl:text>{\cs89\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="string(.)"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:for-each>
                            </xsl:for-each>
                            <xsl:text>\f0\fs24</xsl:text>
                            <xsl:value-of select="$cellend0"/>
                            <xsl:if test="$templatetablelevel + 1 > 1">
                                <xsl:text>{\*\nesttableprops</xsl:text>
                            </xsl:if>
                            <xsl:value-of select="$tablestyle0"/>
                            <xsl:value-of select="$altova:RowStyle3"/>
                            <xsl:value-of select="$rowend0"/>
                            <xsl:text>\pard\s1\f0\fs24\sl0\fs22\s19\s20\sl0\f1\fs22</xsl:text>
                            <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                            <xsl:text>\itap</xsl:text>
                            <xsl:value-of select="$templatetablelevel + 0"/>
                            <xsl:text> </xsl:text>
                        </xsl:for-each>
                        <xsl:call-template name="LineBreakTable">
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:call-template>
                    </xsl:for-each>
                    <xsl:text>\page </xsl:text>
                    <xsl:text>\par\par</xsl:text>
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\s1\f0\fs24\sl0\fs22\s19\s20\sl0\f1\fs22\s11\f1\fs22\b\sl0\fs22\b\s90\s91\ql\sl0\f1\fs22\b </xsl:text>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs92\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>B. OVERZICHT VAN DE INGELEVERDE KANDIDATENLIJSTEN</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs93\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$U16_100_B_Overzicht"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:call-template name="PostTitle">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                    <xsl:text>\par\pard\s0\s0\f0\fs24\f0\fs24\b0\b0\f0\fs24</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\par\s1\f0\fs24\sl0\fs22\s19\s20\sl0\f1\fs22 </xsl:text>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs94\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>De volgende groeperingen hebben aan de verkiezing deelgenomen:</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs95\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$U16_110_groeperingen_verkiezing"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:call-template name="LineBreak">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                    <xsl:for-each select="rg:RG520">
                        <xsl:call-template name="OverviewCandidateListsEK">
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:call-template>
                    </xsl:for-each>
                    <xsl:text>\par\par</xsl:text>
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\s1\f0\fs24\sl0\fs22\s19\s20\sl0\f1\fs22\s0\f0\fs24\sl0\fs22\s96\s97\sl0\f1\fs22 </xsl:text>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs98\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>Provincies:</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs99\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$U16_120_Provincies"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:text>\par\pard\s0\s0\f0\fs24\f0\fs24</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\par\s1\f0\fs24\sl0\fs22\s19\s20\sl0\f1\fs22 </xsl:text>
                    <xsl:call-template name="ProvincesTable">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                    <xsl:text>\page </xsl:text>
                    <xsl:text>\par\par</xsl:text>
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\s1\f0\fs24\sl0\fs22\s19\s20\sl0\f1\fs22\s11\f1\fs22\b\sl0\fs22\b\s100\s101\ql\sl0\f1\fs22\b </xsl:text>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs102\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>C. OVERZICHT VAN DE AANTALLEN OP DE VERSCHILLENDE LIJSTEN UITGEBRACHTE STEMMEN</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs103\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$U16_130_C_Overzicht"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:call-template name="PostTitle">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                    <xsl:text>\par\pard\s0\s0\f0\fs24\f0\fs24\b0\b0\f0\fs24</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\par\s1\f0\fs24\sl0\fs22\s19\s20\sl0\f1\fs22 </xsl:text>
                    <xsl:for-each select="rg:RG520">
                        <xsl:call-template name="OverviewVotesEK">
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:call-template>
                    </xsl:for-each>
                    <xsl:text>\page </xsl:text>
                    <xsl:text>\par\par</xsl:text>
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\s1\f0\fs24\sl0\fs22\s19\s20\sl0\f1\fs22\s11\f1\fs22\b\sl0\fs22\b\s104\s105\ql\sl0\f1\fs22\b </xsl:text>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs106\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>D. VASTSTELLING VAN DE KIESDELER</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs107\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$U16_140_D_Vaststelling"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:call-template name="PostTitle">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                    <xsl:text>\par\pard\s0\s0\f0\fs24\f0\fs24\b0\b0\f0\fs24</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\par\s1\f0\fs24\sl0\fs22\s19\s20\sl0\f1\fs22 </xsl:text>
                    <xsl:call-template name="Kiesdeler">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                    <xsl:text>\page </xsl:text>
                    <xsl:text>\par\par</xsl:text>
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\s1\f0\fs24\sl0\fs22\s19\s20\sl0\f1\fs22\s11\f1\fs22\b\sl0\fs22\b\s108\s109\ql\sl0\f1\fs22\b </xsl:text>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs110\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>E. VERDELING VAN DE ZETELS OVER DE LIJSTEN</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs111\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$U16_150_E_Verdeling"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:call-template name="PostTitle">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                    <xsl:text>\par\pard\s0\s0\f0\fs24\f0\fs24\b0\b0\f0\fs24</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\par\s1\f0\fs24\sl0\fs22\s19\s20\sl0\f1\fs22 </xsl:text>
                    <xsl:for-each select="rg:RG520">
                        <xsl:call-template name="OverviewFirstAssigment">
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:call-template>
                    </xsl:for-each>
                    <xsl:text>\page </xsl:text>
                    <xsl:text>\par\par</xsl:text>
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\s1\f0\fs24\sl0\fs22\s19\s20\sl0\f1\fs22\s11\f1\fs22\b\sl0\fs22\b\s112\s113\ql\sl0\f1\fs22\b </xsl:text>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs114\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>F. VERDELING VAN DE RESTZETELS OVER DE LIJSTEN</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs115\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$U16_160_F_Verdeling"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:call-template name="PostTitle">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                    <xsl:text>\par\pard\s0\s0\f0\fs24\f0\fs24\b0\b0\f0\fs24</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\par\s1\f0\fs24\sl0\fs22\s19\s20\sl0\f1\fs22 </xsl:text>
                    <xsl:call-template name="ResidualSeatsAssignment">
                        <xsl:with-param name="articleLoting" select="&quot;U 9&quot;"/>
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                    <xsl:text>\page </xsl:text>
                    <xsl:text>\par\par</xsl:text>
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\s1\f0\fs24\sl0\fs22\s19\s20\sl0\f1\fs22\s11\f1\fs22\b\sl0\fs22\b\s116\s117\ql\sl0\f1\fs22\b </xsl:text>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs118\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>G. VERDELING VAN DE ZETELS OVER DE ONDERSCHEIDENE GROEPERINGEN</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs119\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$U16_170_G_Verdeling"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:call-template name="PostTitle">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                    <xsl:text>\par\pard\s0\s0\f0\fs24\f0\fs24\b0\b0\f0\fs24</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\par\s1\f0\fs24\sl0\fs22\s19\s20\sl0\f1\fs22 </xsl:text>
                    <xsl:for-each select="rg:RG520">
                        <xsl:call-template name="OverviewListResult">
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:call-template>
                    </xsl:for-each>
                    <xsl:text>\page </xsl:text>
                    <xsl:text>\par\par</xsl:text>
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\s1\f0\fs24\sl0\fs22\s19\s20\sl0\f1\fs22\s11\f1\fs22\b\sl0\fs22\b\s120\s121\ql\sl0\f1\fs22\b </xsl:text>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs122\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>H. VERDELING VAN DE AAN DE LIJSTENGROEPEN TOEGEWEZEN ZETELS OVER DE LIJSTEN DIE DEEL UIT MAKEN VAN DIE LIJSTENGROEPEN</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs123\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$U16_180_H_Verdeling"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:call-template name="PostTitle">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                    <xsl:text>\par\pard\s0\s0\f0\fs24\f0\fs24\b0\b0\f0\fs24</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\par\s1\f0\fs24\sl0\fs22\s19\s20\sl0\f1\fs22 </xsl:text>
                    <xsl:call-template name="AssignmentWithinListGroups">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                    <xsl:text>\par\par</xsl:text>
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\s1\f0\fs24\sl0\fs22\s19\s20\sl0\f1\fs22\s11\f1\fs22\b\sl0\fs22\b\s124\s125\ql\sl0\f1\fs22\b </xsl:text>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs126\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>I. AANTALLEN STEMMEN UITGEBRACHT OP KANDIDATEN VAN LIJSTEN VAN GROEPERINGEN WAARAAN EEN OF MEER ZETELS ZIJN TOEGEWEZEN, TOEWIJZING VAN DE ZETELS AAN DE KANDIDATEN EN RANGSCHIKKING VAN DE KANDIDATEN PER LIJST</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs127\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$U16_190_I_Aantallen_Stemmen"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:call-template name="PostTitle">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                    <xsl:text>\par\pard\s0\s0\f0\fs24\f0\fs24\b0\b0\f0\fs24</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\par\s1\f0\fs24\sl0\fs22\s19\s20\sl0\f1\fs22 </xsl:text>
                    <xsl:for-each select="rg:RG520">
                        <xsl:call-template name="OverviewCandidateResultU16-IJ">
                            <xsl:with-param name="isSeats" select="1"/>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:call-template>
                    </xsl:for-each>
                    <xsl:text>\page </xsl:text>
                    <xsl:text>\par\par</xsl:text>
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\s1\f0\fs24\sl0\fs22\s19\s20\sl0\f1\fs22\s11\f1\fs22\b\sl0\fs22\b\s128\s129\ql\sl0\f1\fs22\b </xsl:text>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs130\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>J. AANTALLEN STEMMEN UITGEBRACHT OP KANDIDATEN VAN LIJSTEN VAN GROEPERINGEN WAARAAN GEEN ZETEL IS TOEGEWEZEN</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs131\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$U16_200_J_Aantallen_Stemmen"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:call-template name="PostTitle">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                    <xsl:text>\par\pard\s0\s0\f0\fs24\f0\fs24\b0\b0\f0\fs24</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\par\s1\f0\fs24\sl0\fs22\s19\s20\sl0\f1\fs22 </xsl:text>
                    <xsl:if test="count( rg:RG520/rg:OverviewOfCandidatesAndResults/rg:ListGroupAndResults[ rg:Seats = 0 ] ) = 0">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs132\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>Niet van toepassing</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs133\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$U16_210_Niet_toepassing"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:if>
                    <xsl:for-each select="rg:RG520">
                        <xsl:call-template name="OverviewCandidateResultU16-IJ">
                            <xsl:with-param name="isSeats" select="0"/>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:call-template>
                    </xsl:for-each>
                    <xsl:text>\page </xsl:text>
                    <xsl:text>\par\par</xsl:text>
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\s1\f0\fs24\sl0\fs22\s19\s20\sl0\f1\fs22\s11\f1\fs22\b\sl0\fs22\b\s134\s135\ql\sl0\f1\fs22\b </xsl:text>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs136\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>K. OVERZICHT IN ALFABETISCHE VOLGORDE VAN DE KANDIDATEN DIE ZIJN GEKOZEN</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs137\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$U16_220_K_Overzicht"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:call-template name="PostTitle">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                    <xsl:text>\par\pard\s0\s0\f0\fs24\f0\fs24\b0\b0\f0\fs24</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text>\par\s1\f0\fs24\sl0\fs22\s19\s20\sl0\f1\fs22 </xsl:text>
                    <xsl:for-each select="rg:RG520">
                        <xsl:call-template name="OverviewElectedCandidate">
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:call-template>
                        <xsl:text>\page </xsl:text>
                        <xsl:text>\par </xsl:text>
                        <xsl:call-template name="ObjectionsReference">
                            <xsl:with-param name="authority" select="$U16_260_CSB"/>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:call-template>
                        <xsl:text>\par </xsl:text>
                        <xsl:text>\par </xsl:text>
                        <xsl:if test="$SV_OutputFormat = &apos;PDF&apos;">
                            <xsl:text>\par </xsl:text>
                            <xsl:text>\par </xsl:text>
                            <xsl:text>\par </xsl:text>
                        </xsl:if>
                        <xsl:call-template name="SignatureBlock">
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:call-template>
                        <xsl:text>\par </xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\s0\f0\fs24</xsl:text>
    </xsl:template>
    <xsl:template name="OverviewCandidateListsPS2">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:variable name="altova:CurrContextGrid_069E0DB8" select="."/>
        <xsl:variable name="altova:nTableWidthIn_1" select="$altova:nMaxWidthIn * 1.00000"/>
        <xsl:variable name="altova:nTableWidthTw_1" select="$altova:nTableWidthIn_1 * 1440"/>
        <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_1" select="round($altova:nTableWidthTw_1 * 0.25)"/>
        <xsl:variable name="altova:nTableIndentTw_1" select="0"/>
        <xsl:variable name="altova:nSumColumnWidthsTw_1" select="round(7042.50)"/>
        <xsl:variable name="altova:TableWidthFactor_1">
            <xsl:choose>
                <xsl:when test="$altova:nSumColumnWidthsTw_1 &gt; $altova:nTableWidthTw_1">
                    <xsl:value-of select="($altova:nTableWidthTw_1 - $altova:SumDefaultColumnsForWideTableTw_1) div $altova:nSumColumnWidthsTw_1"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="1"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnsWithDefaultWidth_1" select="round(4)"/>
        <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_1">
            <xsl:choose>
                <xsl:when test="$altova:nColumnsWithDefaultWidth_1 = 0">
                    <xsl:value-of select="round(4)"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="$altova:nColumnsWithDefaultWidth_1"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nDefaultColumnWidthTw_1">
            <xsl:choose>
                <xsl:when test="$altova:TableWidthFactor_1 &lt; 1">
                    <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_1 div $altova:nColumnsWithDefaultWidthNotZero_1"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="round(($altova:nTableWidthTw_1 - $altova:nSumColumnWidthsTw_1) div $altova:nColumnsWithDefaultWidthNotZero_1)"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnWidthTw_1_0" select="round(0.28 * 1440 * $altova:TableWidthFactor_1)"/>
        <xsl:variable name="altova:nColumnWidthTw_1_1" select="round(0.94 * 1440 * $altova:TableWidthFactor_1)"/>
        <xsl:variable name="altova:nColumnWidthTw_1_2" select="round(1.94 * 1440 * $altova:TableWidthFactor_1)"/>
        <xsl:variable name="altova:nColumnWidthTw_1_3" select="round(1.11 * 1440 * $altova:TableWidthFactor_1)"/>
        <xsl:variable name="altova:nColumnWidthTw_1_4" select="round(0.61 * 1440 * $altova:TableWidthFactor_1)"/>
        <xsl:variable name="altova:nColumnWidthTw_1_5" select="$altova:nDefaultColumnWidthTw_1"/>
        <xsl:variable name="altova:nColumnWidthTw_1_6" select="$altova:nDefaultColumnWidthTw_1"/>
        <xsl:variable name="altova:nColumnWidthTw_1_7" select="$altova:nDefaultColumnWidthTw_1"/>
        <xsl:variable name="altova:nColumnWidthTw_1_8" select="$altova:nDefaultColumnWidthTw_1"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:variable name="tablestyle1">
            <xsl:text>\trowd\trleft</xsl:text>
            <xsl:value-of select="$altova:nTableIndentTw_1"/>
            <xsl:text>\ts138\ts139\ts140\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrs\brdrcf1\brdrw15\trbrdrl\brdrnil\trbrdrb\brdrs\brdrcf1\brdrw15\trbrdrr\brdrnil</xsl:text>
        </xsl:variable>
        <xsl:variable name="rowend1">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\row\pard</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="cellend1">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\cell</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestcell</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:RowStyle4">
            <xsl:text>\trrh0\trhdr</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl1" select="$altova:nTableIndentTw_1"/>
            <xsl:text>\clvertalt\clmgf\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl1_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl1 + $altova:nColumnWidthTw_1_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl1_Col0_AfterColumn)"/>
            <xsl:text>\clvertalt\clmrg\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl1_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl1_Col0_AfterColumn + $altova:nColumnWidthTw_1_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl1_Col1_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl1_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl1_Col1_AfterColumn + $altova:nColumnWidthTw_1_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl1_Col2_AfterColumn)"/>
            <xsl:text>\clvertalt\clmgf\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl1_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl1_Col2_AfterColumn + $altova:nColumnWidthTw_1_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl1_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl1_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl1_Col3_AfterColumn + $altova:nColumnWidthTw_1_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl1_Col4_AfterColumn)"/>
            <xsl:text>\clvertalt\clmgf\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl1_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl1_Col4_AfterColumn + $altova:nColumnWidthTw_1_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl1_Col5_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl1_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl1_Col5_AfterColumn + $altova:nColumnWidthTw_1_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl1_Col6_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl1_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl1_Col6_AfterColumn + $altova:nColumnWidthTw_1_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl1_Col7_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl1_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl1_Col7_AfterColumn + $altova:nColumnWidthTw_1_8"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl1_Col8_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle1"/>
            <xsl:value-of select="$altova:RowStyle4"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs141\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Lijst-</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs142\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateListsPS2_Lijst"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs143\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>nummer</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs144\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateListsPS2_nummer"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs145\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Aanduiding</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs146\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateListsPS2_Aanduiding"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs147\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>De groepering heeft bij de</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs148\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateListsPS2_groeperingHeeft"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs149\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Kieskring(en) ingediend:</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs150\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateListsPS2_KieskringenIngediend"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs151\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>1) een lijstengroep</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs152\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateListsPS2_lijstengroep"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs153\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>2) een stel gelijk-</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs154\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateListsPS2_stelGelijk"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs155\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>luidende lijsten</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs156\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateListsPS2_luidendeLijsten"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs157\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>3) een op zichzelf staande lijst.</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs158\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateListsPS2_zichzelfStaandeLijst"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend1"/>
        <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs159\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Kieskringen</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs160\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateListsPS2_Kieskringen"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend1"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle1"/>
        <xsl:value-of select="$altova:RowStyle4"/>
        <xsl:value-of select="$rowend1"/>
        <xsl:variable name="altova:RowStyle5">
            <xsl:text>\trrh0\trhdr</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl1" select="$altova:nTableIndentTw_1"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl1_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl1 + $altova:nColumnWidthTw_1_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl1_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl1_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl1_Col0_AfterColumn + $altova:nColumnWidthTw_1_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl1_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl1_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl1_Col1_AfterColumn + $altova:nColumnWidthTw_1_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl1_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl1_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl1_Col2_AfterColumn + $altova:nColumnWidthTw_1_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl1_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl1_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl1_Col3_AfterColumn + $altova:nColumnWidthTw_1_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl1_Col4_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl1_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl1_Col4_AfterColumn + $altova:nColumnWidthTw_1_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl1_Col5_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl1_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl1_Col5_AfterColumn + $altova:nColumnWidthTw_1_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl1_Col6_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl1_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl1_Col6_AfterColumn + $altova:nColumnWidthTw_1_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl1_Col7_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl1_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl1_Col7_AfterColumn + $altova:nColumnWidthTw_1_8"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl1_Col8_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle1"/>
            <xsl:value-of select="$altova:RowStyle5"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs161\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs162\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs163\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs164\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend1"/>
        <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="CandidateListSubmittedHeader">
            <xsl:with-param name="districtId" select="1"/>
            <xsl:with-param name="smaller" select="0"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_1_5 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend1"/>
        <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="CandidateListSubmittedHeader">
            <xsl:with-param name="districtId" select="2"/>
            <xsl:with-param name="smaller" select="0"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_1_6 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend1"/>
        <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="CandidateListSubmittedHeader">
            <xsl:with-param name="districtId" select="3"/>
            <xsl:with-param name="smaller" select="0"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_1_7 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend1"/>
        <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="CandidateListSubmittedHeader">
            <xsl:with-param name="districtId" select="4"/>
            <xsl:with-param name="smaller" select="0"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_1_8 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend1"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle1"/>
        <xsl:value-of select="$altova:RowStyle5"/>
        <xsl:value-of select="$rowend1"/>
        <xsl:for-each select="rg:OverviewOfListsAndDistricts">
            <xsl:sort select="rg:CandidateListName/@Id" data-type="number" order="ascending"/>
            <xsl:variable name="altova:RowStyle6">
                <xsl:text>\trrh0</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl1" select="$altova:nTableIndentTw_1"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl1_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl1 + $altova:nColumnWidthTw_1_0"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl1_Col0_AfterColumn)"/>
                <xsl:text>\clvertalc\clmgf\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl1_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl1_Col0_AfterColumn + $altova:nColumnWidthTw_1_1"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl1_Col1_AfterColumn)"/>
                <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl1_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl1_Col1_AfterColumn + $altova:nColumnWidthTw_1_2"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl1_Col2_AfterColumn)"/>
                <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl1_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl1_Col2_AfterColumn + $altova:nColumnWidthTw_1_3"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl1_Col3_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl1_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl1_Col3_AfterColumn + $altova:nColumnWidthTw_1_4"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl1_Col4_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl1_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl1_Col4_AfterColumn + $altova:nColumnWidthTw_1_5"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl1_Col5_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl1_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl1_Col5_AfterColumn + $altova:nColumnWidthTw_1_6"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl1_Col6_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl1_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl1_Col6_AfterColumn + $altova:nColumnWidthTw_1_7"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl1_Col7_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl1_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl1_Col7_AfterColumn + $altova:nColumnWidthTw_1_8"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl1_Col8_AfterColumn)"/>
            </xsl:variable>
            <xsl:if test="$templatetablelevel + 1 = 1">
                <xsl:value-of select="$tablestyle1"/>
                <xsl:value-of select="$altova:RowStyle6"/>
            </xsl:if>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:CandidateListName">
                <xsl:for-each select="eml:AffiliationIdentifier">
                    <xsl:for-each select="@Id">
                        <xsl:text>{\cs165\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="string(.)"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend1"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:text>{\cs166\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text> </xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:for-each select="rg:CandidateListName">
                <xsl:if test="eml:AffiliationIdentifier/eml:RegisteredName != &apos;&apos;">
                    <xsl:for-each select="eml:AffiliationIdentifier">
                        <xsl:for-each select="eml:RegisteredName">
                            <xsl:text>{\cs167\f1\fs22 </xsl:text>
                            <xsl:apply-templates>
                                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_1_1 div 1440) + ($altova:nColumnWidthTw_1_2 div 1440) + ($altova:nColumnWidthTw_1_3 div 1440) - 0.01042 - 0.01042"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                            </xsl:apply-templates>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                    </xsl:for-each>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend1"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend1"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend1"/>
            <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
            <xsl:choose>
                <xsl:when test="./rg:Type[text() = &quot;lijstengroep&quot;]">
                    <xsl:text>{\cs168\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>1</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:when test="./rg:Type[text() = &quot;stel gelijkluidende lijsten&quot;]">
                    <xsl:text>{\cs169\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>2</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:when test="./rg:Type[text() = &quot;op zichzelf staande lijst&quot;]">
                    <xsl:text>{\cs170\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>3</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
            </xsl:choose>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend1"/>
            <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="CandidateListSubmitted">
                <xsl:with-param name="districtId" select="1"/>
                <xsl:with-param name="smaller" select="0"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_1_5 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend1"/>
            <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="CandidateListSubmitted">
                <xsl:with-param name="districtId" select="2"/>
                <xsl:with-param name="smaller" select="0"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_1_6 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend1"/>
            <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="CandidateListSubmitted">
                <xsl:with-param name="districtId" select="3"/>
                <xsl:with-param name="smaller" select="0"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_1_7 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend1"/>
            <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="CandidateListSubmitted">
                <xsl:with-param name="districtId" select="4"/>
                <xsl:with-param name="smaller" select="0"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_1_8 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend1"/>
            <xsl:if test="$templatetablelevel + 1 > 1">
                <xsl:text>{\*\nesttableprops</xsl:text>
            </xsl:if>
            <xsl:value-of select="$tablestyle1"/>
            <xsl:value-of select="$altova:RowStyle6"/>
            <xsl:value-of select="$rowend1"/>
        </xsl:for-each>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 0"/>
        <xsl:text> </xsl:text>
    </xsl:template>
    <xsl:template name="OverviewCandidateListsEK">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:variable name="altova:CurrContextGrid_067E0388" select="."/>
        <xsl:variable name="altova:nTableWidthIn_2" select="$altova:nMaxWidthIn * 1.00000"/>
        <xsl:variable name="altova:nTableWidthTw_2" select="$altova:nTableWidthIn_2 * 1440"/>
        <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_2" select="round($altova:nTableWidthTw_2 * 0.25)"/>
        <xsl:variable name="altova:nTableIndentTw_2" select="0"/>
        <xsl:variable name="altova:nSumColumnWidthsTw_2" select="round(4882.50)"/>
        <xsl:variable name="altova:TableWidthFactor_2">
            <xsl:choose>
                <xsl:when test="$altova:nSumColumnWidthsTw_2 &gt; $altova:nTableWidthTw_2">
                    <xsl:value-of select="($altova:nTableWidthTw_2 - $altova:SumDefaultColumnsForWideTableTw_2) div $altova:nSumColumnWidthsTw_2"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="1"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnsWithDefaultWidth_2" select="round(12)"/>
        <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_2">
            <xsl:choose>
                <xsl:when test="$altova:nColumnsWithDefaultWidth_2 = 0">
                    <xsl:value-of select="round(12)"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="$altova:nColumnsWithDefaultWidth_2"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nDefaultColumnWidthTw_2">
            <xsl:choose>
                <xsl:when test="$altova:TableWidthFactor_2 &lt; 1">
                    <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_2 div $altova:nColumnsWithDefaultWidthNotZero_2"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="round(($altova:nTableWidthTw_2 - $altova:nSumColumnWidthsTw_2) div $altova:nColumnsWithDefaultWidthNotZero_2)"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnWidthTw_2_0" select="round(0.28 * 1440 * $altova:TableWidthFactor_2)"/>
        <xsl:variable name="altova:nColumnWidthTw_2_1" select="round(0.94 * 1440 * $altova:TableWidthFactor_2)"/>
        <xsl:variable name="altova:nColumnWidthTw_2_2" select="round(1.00 * 1440 * $altova:TableWidthFactor_2)"/>
        <xsl:variable name="altova:nColumnWidthTw_2_3" select="round(0.83 * 1440 * $altova:TableWidthFactor_2)"/>
        <xsl:variable name="altova:nColumnWidthTw_2_4" select="round(0.33 * 1440 * $altova:TableWidthFactor_2)"/>
        <xsl:variable name="altova:nColumnWidthTw_2_5" select="$altova:nDefaultColumnWidthTw_2"/>
        <xsl:variable name="altova:nColumnWidthTw_2_6" select="$altova:nDefaultColumnWidthTw_2"/>
        <xsl:variable name="altova:nColumnWidthTw_2_7" select="$altova:nDefaultColumnWidthTw_2"/>
        <xsl:variable name="altova:nColumnWidthTw_2_8" select="$altova:nDefaultColumnWidthTw_2"/>
        <xsl:variable name="altova:nColumnWidthTw_2_9" select="$altova:nDefaultColumnWidthTw_2"/>
        <xsl:variable name="altova:nColumnWidthTw_2_10" select="$altova:nDefaultColumnWidthTw_2"/>
        <xsl:variable name="altova:nColumnWidthTw_2_11" select="$altova:nDefaultColumnWidthTw_2"/>
        <xsl:variable name="altova:nColumnWidthTw_2_12" select="$altova:nDefaultColumnWidthTw_2"/>
        <xsl:variable name="altova:nColumnWidthTw_2_13" select="$altova:nDefaultColumnWidthTw_2"/>
        <xsl:variable name="altova:nColumnWidthTw_2_14" select="$altova:nDefaultColumnWidthTw_2"/>
        <xsl:variable name="altova:nColumnWidthTw_2_15" select="$altova:nDefaultColumnWidthTw_2"/>
        <xsl:variable name="altova:nColumnWidthTw_2_16" select="$altova:nDefaultColumnWidthTw_2"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:variable name="tablestyle2">
            <xsl:text>\trowd\trleft</xsl:text>
            <xsl:value-of select="$altova:nTableIndentTw_2"/>
            <xsl:text>\ts171\ts172\ts173\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrs\brdrcf1\brdrw15\trbrdrl\brdrnil\trbrdrb\brdrs\brdrcf1\brdrw15\trbrdrr\brdrnil</xsl:text>
        </xsl:variable>
        <xsl:variable name="rowend2">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\row\pard</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="cellend2">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\cell</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestcell</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:RowStyle7">
            <xsl:text>\trrh0\trhdr</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl2" select="$altova:nTableIndentTw_2"/>
            <xsl:text>\clvertalt\clmgf\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl2_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl2 + $altova:nColumnWidthTw_2_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl2_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col0_AfterColumn + $altova:nColumnWidthTw_2_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col1_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl2_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col1_AfterColumn + $altova:nColumnWidthTw_2_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col2_AfterColumn)"/>
            <xsl:text>\clvertalt\clmgf\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl2_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col2_AfterColumn + $altova:nColumnWidthTw_2_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl2_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col3_AfterColumn + $altova:nColumnWidthTw_2_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col4_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl2_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col4_AfterColumn + $altova:nColumnWidthTw_2_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col5_AfterColumn)"/>
            <xsl:text>\clvertalt\clmgf\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl2_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col5_AfterColumn + $altova:nColumnWidthTw_2_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col6_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl2_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col6_AfterColumn + $altova:nColumnWidthTw_2_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col7_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl2_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col7_AfterColumn + $altova:nColumnWidthTw_2_8"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col8_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl2_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col8_AfterColumn + $altova:nColumnWidthTw_2_9"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col9_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl2_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col9_AfterColumn + $altova:nColumnWidthTw_2_10"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col10_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl2_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col10_AfterColumn + $altova:nColumnWidthTw_2_11"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col11_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl2_Col12_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col11_AfterColumn + $altova:nColumnWidthTw_2_12"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col12_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl2_Col13_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col12_AfterColumn + $altova:nColumnWidthTw_2_13"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col13_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl2_Col14_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col13_AfterColumn + $altova:nColumnWidthTw_2_14"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col14_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl2_Col15_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col14_AfterColumn + $altova:nColumnWidthTw_2_15"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col15_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl2_Col16_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col15_AfterColumn + $altova:nColumnWidthTw_2_16"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col16_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle2"/>
            <xsl:value-of select="$altova:RowStyle7"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs174\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Lijst-</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs175\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateListsEK_Lijst"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs176\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>nummer</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs177\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateListsEK_nummer"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend2"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend2"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs178\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Aanduiding</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs179\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateListsEK_Aanduiding"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend2"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs180\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>De groepering heeft</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs181\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateListsEK_groeperingHeeft"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs182\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>ingediend: </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs183\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateListsEK_ingediend"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs184\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>1) een lijstengroep</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs185\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateListsEK_lijstengroep"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs186\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>2) een stel gelijk-</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs187\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateListsEK_stelGelijk"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs188\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>luidende lijsten</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs189\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateListsEK_luidendeLijsten"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs190\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>3) een op zichzelf staande lijst.</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs191\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateListsEK_zichzelfStaandeLijst"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend2"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend2"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend2"/>
        <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs192\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Provincie(s)</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs193\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateListsEK_Provincies"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend2"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend2"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend2"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend2"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend2"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend2"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend2"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend2"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend2"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend2"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend2"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle2"/>
        <xsl:value-of select="$altova:RowStyle7"/>
        <xsl:value-of select="$rowend2"/>
        <xsl:variable name="altova:RowStyle8">
            <xsl:text>\trrh0\trhdr</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl2" select="$altova:nTableIndentTw_2"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl2_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl2 + $altova:nColumnWidthTw_2_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl2_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col0_AfterColumn + $altova:nColumnWidthTw_2_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl2_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col1_AfterColumn + $altova:nColumnWidthTw_2_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl2_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col2_AfterColumn + $altova:nColumnWidthTw_2_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl2_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col3_AfterColumn + $altova:nColumnWidthTw_2_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col4_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl2_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col4_AfterColumn + $altova:nColumnWidthTw_2_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col5_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl2_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col5_AfterColumn + $altova:nColumnWidthTw_2_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col6_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl2_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col6_AfterColumn + $altova:nColumnWidthTw_2_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col7_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl2_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col7_AfterColumn + $altova:nColumnWidthTw_2_8"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col8_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl2_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col8_AfterColumn + $altova:nColumnWidthTw_2_9"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col9_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl2_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col9_AfterColumn + $altova:nColumnWidthTw_2_10"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col10_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl2_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col10_AfterColumn + $altova:nColumnWidthTw_2_11"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col11_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl2_Col12_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col11_AfterColumn + $altova:nColumnWidthTw_2_12"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col12_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl2_Col13_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col12_AfterColumn + $altova:nColumnWidthTw_2_13"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col13_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl2_Col14_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col13_AfterColumn + $altova:nColumnWidthTw_2_14"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col14_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl2_Col15_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col14_AfterColumn + $altova:nColumnWidthTw_2_15"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col15_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl2_Col16_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col15_AfterColumn + $altova:nColumnWidthTw_2_16"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col16_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle2"/>
            <xsl:value-of select="$altova:RowStyle8"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend2"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs194\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend2"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs195\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend2"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs196\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend2"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs197\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend2"/>
        <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="CandidateListSubmittedHeader">
            <xsl:with-param name="districtId" select="1"/>
            <xsl:with-param name="smaller" select="0"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_2_5 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend2"/>
        <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="CandidateListSubmittedHeader">
            <xsl:with-param name="districtId" select="2"/>
            <xsl:with-param name="smaller" select="0"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_2_6 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend2"/>
        <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="CandidateListSubmittedHeader">
            <xsl:with-param name="districtId" select="3"/>
            <xsl:with-param name="smaller" select="0"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_2_7 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend2"/>
        <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="CandidateListSubmittedHeader">
            <xsl:with-param name="districtId" select="4"/>
            <xsl:with-param name="smaller" select="0"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_2_8 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend2"/>
        <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="CandidateListSubmittedHeader">
            <xsl:with-param name="districtId" select="5"/>
            <xsl:with-param name="smaller" select="0"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_2_9 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend2"/>
        <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="CandidateListSubmittedHeader">
            <xsl:with-param name="districtId" select="6"/>
            <xsl:with-param name="smaller" select="0"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_2_10 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend2"/>
        <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="CandidateListSubmittedHeader">
            <xsl:with-param name="districtId" select="7"/>
            <xsl:with-param name="smaller" select="0"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_2_11 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend2"/>
        <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="CandidateListSubmittedHeader">
            <xsl:with-param name="districtId" select="8"/>
            <xsl:with-param name="smaller" select="0"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_2_12 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend2"/>
        <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="CandidateListSubmittedHeader">
            <xsl:with-param name="districtId" select="9"/>
            <xsl:with-param name="smaller" select="0"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_2_13 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend2"/>
        <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="CandidateListSubmittedHeader">
            <xsl:with-param name="districtId" select="10"/>
            <xsl:with-param name="smaller" select="0"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_2_14 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend2"/>
        <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="CandidateListSubmittedHeader">
            <xsl:with-param name="districtId" select="11"/>
            <xsl:with-param name="smaller" select="0"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_2_15 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend2"/>
        <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="CandidateListSubmittedHeader">
            <xsl:with-param name="districtId" select="12"/>
            <xsl:with-param name="smaller" select="0"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_2_16 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend2"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle2"/>
        <xsl:value-of select="$altova:RowStyle8"/>
        <xsl:value-of select="$rowend2"/>
        <xsl:for-each select="rg:OverviewOfListsAndDistricts">
            <xsl:sort select="rg:CandidateListName/@Id" data-type="number" order="ascending"/>
            <xsl:variable name="altova:RowStyle9">
                <xsl:text>\trrh0</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl2" select="$altova:nTableIndentTw_2"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl2_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl2 + $altova:nColumnWidthTw_2_0"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col0_AfterColumn)"/>
                <xsl:text>\clvertalc\clmgf\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl2_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col0_AfterColumn + $altova:nColumnWidthTw_2_1"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col1_AfterColumn)"/>
                <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl2_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col1_AfterColumn + $altova:nColumnWidthTw_2_2"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col2_AfterColumn)"/>
                <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl2_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col2_AfterColumn + $altova:nColumnWidthTw_2_3"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col3_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl2_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col3_AfterColumn + $altova:nColumnWidthTw_2_4"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col4_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl2_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col4_AfterColumn + $altova:nColumnWidthTw_2_5"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col5_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl2_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col5_AfterColumn + $altova:nColumnWidthTw_2_6"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col6_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl2_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col6_AfterColumn + $altova:nColumnWidthTw_2_7"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col7_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl2_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col7_AfterColumn + $altova:nColumnWidthTw_2_8"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col8_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl2_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col8_AfterColumn + $altova:nColumnWidthTw_2_9"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col9_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl2_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col9_AfterColumn + $altova:nColumnWidthTw_2_10"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col10_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl2_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col10_AfterColumn + $altova:nColumnWidthTw_2_11"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col11_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl2_Col12_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col11_AfterColumn + $altova:nColumnWidthTw_2_12"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col12_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl2_Col13_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col12_AfterColumn + $altova:nColumnWidthTw_2_13"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col13_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl2_Col14_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col13_AfterColumn + $altova:nColumnWidthTw_2_14"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col14_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl2_Col15_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col14_AfterColumn + $altova:nColumnWidthTw_2_15"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col15_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl2_Col16_AfterColumn" select="$altova:CurrGridPos_Tbl2_Col15_AfterColumn + $altova:nColumnWidthTw_2_16"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl2_Col16_AfterColumn)"/>
            </xsl:variable>
            <xsl:if test="$templatetablelevel + 1 = 1">
                <xsl:value-of select="$tablestyle2"/>
                <xsl:value-of select="$altova:RowStyle9"/>
            </xsl:if>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:CandidateListName">
                <xsl:for-each select="eml:AffiliationIdentifier">
                    <xsl:for-each select="@Id">
                        <xsl:text>{\cs198\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="string(.)"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend2"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:text>{\cs199\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text> </xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:for-each select="rg:CandidateListName">
                <xsl:if test="eml:AffiliationIdentifier/eml:RegisteredName != &apos;&apos;">
                    <xsl:for-each select="eml:AffiliationIdentifier">
                        <xsl:for-each select="eml:RegisteredName">
                            <xsl:text>{\cs200\f1\fs22 </xsl:text>
                            <xsl:apply-templates>
                                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_2_1 div 1440) + ($altova:nColumnWidthTw_2_2 div 1440) + ($altova:nColumnWidthTw_2_3 div 1440) - 0.01042 - 0.01042"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                            </xsl:apply-templates>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                    </xsl:for-each>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend2"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend2"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend2"/>
            <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
            <xsl:choose>
                <xsl:when test="./rg:Type[text() = &quot;lijstengroep&quot;]">
                    <xsl:text>{\cs201\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>1</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:when test="./rg:Type[text() = &quot;stel gelijkluidende lijsten&quot;]">
                    <xsl:text>{\cs202\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>2</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:when test="./rg:Type[text() = &quot;op zichzelf staande lijst&quot;]">
                    <xsl:text>{\cs203\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>3</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
            </xsl:choose>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend2"/>
            <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="CandidateListSubmitted">
                <xsl:with-param name="districtId" select="1"/>
                <xsl:with-param name="smaller" select="0"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_2_5 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend2"/>
            <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="CandidateListSubmitted">
                <xsl:with-param name="districtId" select="2"/>
                <xsl:with-param name="smaller" select="0"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_2_6 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend2"/>
            <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="CandidateListSubmitted">
                <xsl:with-param name="districtId" select="3"/>
                <xsl:with-param name="smaller" select="0"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_2_7 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend2"/>
            <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="CandidateListSubmitted">
                <xsl:with-param name="districtId" select="4"/>
                <xsl:with-param name="smaller" select="0"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_2_8 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend2"/>
            <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="CandidateListSubmitted">
                <xsl:with-param name="districtId" select="5"/>
                <xsl:with-param name="smaller" select="0"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_2_9 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend2"/>
            <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="CandidateListSubmitted">
                <xsl:with-param name="districtId" select="6"/>
                <xsl:with-param name="smaller" select="0"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_2_10 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend2"/>
            <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="CandidateListSubmitted">
                <xsl:with-param name="districtId" select="7"/>
                <xsl:with-param name="smaller" select="0"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_2_11 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend2"/>
            <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="CandidateListSubmitted">
                <xsl:with-param name="districtId" select="8"/>
                <xsl:with-param name="smaller" select="0"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_2_12 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend2"/>
            <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="CandidateListSubmitted">
                <xsl:with-param name="districtId" select="9"/>
                <xsl:with-param name="smaller" select="0"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_2_13 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend2"/>
            <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="CandidateListSubmitted">
                <xsl:with-param name="districtId" select="10"/>
                <xsl:with-param name="smaller" select="0"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_2_14 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend2"/>
            <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="CandidateListSubmitted">
                <xsl:with-param name="districtId" select="11"/>
                <xsl:with-param name="smaller" select="0"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_2_15 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend2"/>
            <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="CandidateListSubmitted">
                <xsl:with-param name="districtId" select="12"/>
                <xsl:with-param name="smaller" select="0"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_2_16 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend2"/>
            <xsl:if test="$templatetablelevel + 1 > 1">
                <xsl:text>{\*\nesttableprops</xsl:text>
            </xsl:if>
            <xsl:value-of select="$tablestyle2"/>
            <xsl:value-of select="$altova:RowStyle9"/>
            <xsl:value-of select="$rowend2"/>
        </xsl:for-each>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 0"/>
        <xsl:text> </xsl:text>
    </xsl:template>
    <xsl:template name="OverviewElectoralDistricts">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:for-each select="rg:RG520">
            <xsl:for-each select="rg:ElectoralDistrictsOverview">
                <xsl:variable name="altova:CurrContextGrid_067F65C8" select="."/>
                <xsl:variable name="altova:nTableWidthIn_3" select="$altova:nMaxWidthIn * 0.90000"/>
                <xsl:variable name="altova:nTableWidthTw_3" select="$altova:nTableWidthIn_3 * 1440"/>
                <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_3" select="round($altova:nTableWidthTw_3 * 0.25)"/>
                <xsl:variable name="altova:nTableIndentTw_3" select="0"/>
                <xsl:variable name="altova:nSumColumnWidthsTw_3" select="round(1100.50)"/>
                <xsl:variable name="altova:TableWidthFactor_3">
                    <xsl:choose>
                        <xsl:when test="$altova:nSumColumnWidthsTw_3 &gt; $altova:nTableWidthTw_3">
                            <xsl:value-of select="($altova:nTableWidthTw_3 - $altova:SumDefaultColumnsForWideTableTw_3) div $altova:nSumColumnWidthsTw_3"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="1"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnsWithDefaultWidth_3" select="round(1)"/>
                <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_3">
                    <xsl:choose>
                        <xsl:when test="$altova:nColumnsWithDefaultWidth_3 = 0">
                            <xsl:value-of select="round(1)"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="$altova:nColumnsWithDefaultWidth_3"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nDefaultColumnWidthTw_3">
                    <xsl:choose>
                        <xsl:when test="$altova:TableWidthFactor_3 &lt; 1">
                            <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_3 div $altova:nColumnsWithDefaultWidthNotZero_3"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="round(($altova:nTableWidthTw_3 - $altova:nSumColumnWidthsTw_3) div $altova:nColumnsWithDefaultWidthNotZero_3)"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnWidthTw_3_0" select="round(0.76 * 1440 * $altova:TableWidthFactor_3)"/>
                <xsl:variable name="altova:nColumnWidthTw_3_1" select="$altova:nDefaultColumnWidthTw_3"/>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:variable name="tablestyle3">
                    <xsl:text>\trowd\trleft</xsl:text>
                    <xsl:value-of select="$altova:nTableIndentTw_3"/>
                    <xsl:text>\ts204\ts205\ts206\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrs\brdrcf1\brdrw15\trbrdrl\brdrnil\trbrdrb\brdrs\brdrcf1\brdrw15\trbrdrr\brdrnil</xsl:text>
                </xsl:variable>
                <xsl:variable name="rowend3">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\row\pard</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="cellend3">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\cell</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestcell</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:RowStyle10">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl3" select="$altova:nTableIndentTw_3"/>
                    <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl3_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl3 + $altova:nColumnWidthTw_3_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl3_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl3_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl3_Col0_AfterColumn + $altova:nColumnWidthTw_3_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl3_Col1_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle3"/>
                    <xsl:value-of select="$altova:RowStyle10"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs20 </xsl:text>
                <xsl:for-each select="rg:ElectoralDistrictName">
                    <xsl:choose>
                        <xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
                            <xsl:text>\pard</xsl:text>
                            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                            <xsl:text>\itap</xsl:text>
                            <xsl:value-of select="$templatetablelevel + 1"/>
                            <xsl:text>\ql\sl0\f1\fs20\s1\f0\fs24\sl0\fs22\s207\s208\sl0\f1\fs22 </xsl:text>
                            <xsl:text>{\cs209\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="position()"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                            <xsl:text>{\cs210\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>.</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                            <xsl:text>\f0\fs24</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs211\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="position()"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                            <xsl:text>{\cs212\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>.</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                            <xsl:text>\par </xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend3"/>
                <xsl:text>\ql\sl0\f1\fs20 </xsl:text>
                <xsl:for-each select="rg:ElectoralDistrictName">
                    <xsl:choose>
                        <xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
                            <xsl:text>\pard</xsl:text>
                            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                            <xsl:text>\itap</xsl:text>
                            <xsl:value-of select="$templatetablelevel + 1"/>
                            <xsl:text>\ql\sl0\f1\fs20\s1\f0\fs24\sl0\fs22\s213\s214\sl0\f1\fs22 </xsl:text>
                            <xsl:text>{\cs215\f1\fs22 </xsl:text>
                            <xsl:apply-templates>
                                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_3_1 div 1440) - 0.01042 - 0.01042"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                            </xsl:apply-templates>
                            <xsl:text>}</xsl:text>
                            <xsl:text>\f0\fs24</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs216\f1\fs22 </xsl:text>
                            <xsl:apply-templates>
                                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_3_1 div 1440) - 0.01042 - 0.01042"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                            </xsl:apply-templates>
                            <xsl:text>}</xsl:text>
                            <xsl:text>\par </xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend3"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle3"/>
                <xsl:value-of select="$altova:RowStyle10"/>
                <xsl:value-of select="$rowend3"/>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text> </xsl:text>
            </xsl:for-each>
        </xsl:for-each>
    </xsl:template>
    <xsl:template name="OverviewVotes1-10">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:variable name="altova:CurrContextGrid_067F6928" select="."/>
        <xsl:variable name="altova:nTableWidthIn_4" select="$altova:nMaxWidthIn * 1.00000"/>
        <xsl:variable name="altova:nTableWidthTw_4" select="$altova:nTableWidthIn_4 * 1440"/>
        <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_4" select="round($altova:nTableWidthTw_4 * 0.25)"/>
        <xsl:variable name="altova:nTableIndentTw_4" select="0"/>
        <xsl:variable name="altova:nSumColumnWidthsTw_4" select="round(1200.50)"/>
        <xsl:variable name="altova:TableWidthFactor_4">
            <xsl:choose>
                <xsl:when test="$altova:nSumColumnWidthsTw_4 &gt; $altova:nTableWidthTw_4">
                    <xsl:value-of select="($altova:nTableWidthTw_4 - $altova:SumDefaultColumnsForWideTableTw_4) div $altova:nSumColumnWidthsTw_4"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="1"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnsWithDefaultWidth_4" select="round(10)"/>
        <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_4">
            <xsl:choose>
                <xsl:when test="$altova:nColumnsWithDefaultWidth_4 = 0">
                    <xsl:value-of select="round(10)"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="$altova:nColumnsWithDefaultWidth_4"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nDefaultColumnWidthTw_4">
            <xsl:choose>
                <xsl:when test="$altova:TableWidthFactor_4 &lt; 1">
                    <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_4 div $altova:nColumnsWithDefaultWidthNotZero_4"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="round(($altova:nTableWidthTw_4 - $altova:nSumColumnWidthsTw_4) div $altova:nColumnsWithDefaultWidthNotZero_4)"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnWidthTw_4_0" select="round(0.83 * 1440 * $altova:TableWidthFactor_4)"/>
        <xsl:variable name="altova:nColumnWidthTw_4_1" select="$altova:nDefaultColumnWidthTw_4"/>
        <xsl:variable name="altova:nColumnWidthTw_4_2" select="$altova:nDefaultColumnWidthTw_4"/>
        <xsl:variable name="altova:nColumnWidthTw_4_3" select="$altova:nDefaultColumnWidthTw_4"/>
        <xsl:variable name="altova:nColumnWidthTw_4_4" select="$altova:nDefaultColumnWidthTw_4"/>
        <xsl:variable name="altova:nColumnWidthTw_4_5" select="$altova:nDefaultColumnWidthTw_4"/>
        <xsl:variable name="altova:nColumnWidthTw_4_6" select="$altova:nDefaultColumnWidthTw_4"/>
        <xsl:variable name="altova:nColumnWidthTw_4_7" select="$altova:nDefaultColumnWidthTw_4"/>
        <xsl:variable name="altova:nColumnWidthTw_4_8" select="$altova:nDefaultColumnWidthTw_4"/>
        <xsl:variable name="altova:nColumnWidthTw_4_9" select="$altova:nDefaultColumnWidthTw_4"/>
        <xsl:variable name="altova:nColumnWidthTw_4_10" select="$altova:nDefaultColumnWidthTw_4"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:variable name="tablestyle4">
            <xsl:text>\trowd\trleft</xsl:text>
            <xsl:value-of select="$altova:nTableIndentTw_4"/>
            <xsl:text>\ts217\ts218\ts219\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrs\brdrcf1\brdrw15\trbrdrl\brdrnil\trbrdrb\brdrs\brdrcf1\brdrw15\trbrdrr\brdrnil</xsl:text>
        </xsl:variable>
        <xsl:variable name="rowend4">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\row\pard</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="cellend4">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\cell</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestcell</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:RowStyle11">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4" select="$altova:nTableIndentTw_4"/>
            <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl4 + $altova:nColumnWidthTw_4_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col0_AfterColumn)"/>
            <xsl:text>\clvertalt\clmgf\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col0_AfterColumn + $altova:nColumnWidthTw_4_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col1_AfterColumn + $altova:nColumnWidthTw_4_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col2_AfterColumn + $altova:nColumnWidthTw_4_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col3_AfterColumn + $altova:nColumnWidthTw_4_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col4_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col4_AfterColumn + $altova:nColumnWidthTw_4_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col5_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col5_AfterColumn + $altova:nColumnWidthTw_4_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col6_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col6_AfterColumn + $altova:nColumnWidthTw_4_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col7_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col7_AfterColumn + $altova:nColumnWidthTw_4_8"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col8_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col8_AfterColumn + $altova:nColumnWidthTw_4_9"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col9_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col9_AfterColumn + $altova:nColumnWidthTw_4_10"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col10_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle4"/>
            <xsl:value-of select="$altova:RowStyle11"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs220\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs221\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Kieskring</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs222\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes1-10_Kieskring"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle4"/>
        <xsl:value-of select="$altova:RowStyle11"/>
        <xsl:value-of select="$rowend4"/>
        <xsl:for-each select="rg:ElectoralDistrictsOverview">
            <xsl:variable name="altova:RowStyle12">
                <xsl:text>\trrh0</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl4" select="$altova:nTableIndentTw_4"/>
                <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl4_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl4 + $altova:nColumnWidthTw_4_0"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col0_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl4_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col0_AfterColumn + $altova:nColumnWidthTw_4_1"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col1_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl4_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col1_AfterColumn + $altova:nColumnWidthTw_4_2"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col2_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl4_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col2_AfterColumn + $altova:nColumnWidthTw_4_3"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col3_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl4_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col3_AfterColumn + $altova:nColumnWidthTw_4_4"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col4_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl4_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col4_AfterColumn + $altova:nColumnWidthTw_4_5"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col5_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl4_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col5_AfterColumn + $altova:nColumnWidthTw_4_6"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col6_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl4_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col6_AfterColumn + $altova:nColumnWidthTw_4_7"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col7_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl4_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col7_AfterColumn + $altova:nColumnWidthTw_4_8"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col8_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl4_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col8_AfterColumn + $altova:nColumnWidthTw_4_9"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col9_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl4_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col9_AfterColumn + $altova:nColumnWidthTw_4_10"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col10_AfterColumn)"/>
            </xsl:variable>
            <xsl:if test="$templatetablelevel + 1 = 1">
                <xsl:value-of select="$tablestyle4"/>
                <xsl:value-of select="$altova:RowStyle12"/>
            </xsl:if>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs223\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Lijst-</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs224\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewVotes1-10_Lijst"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\par </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs225\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>nummer</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs226\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewVotes1-10_nummer"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend4"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:ElectoralDistrictName[position() = 1]">
                <xsl:for-each select="@id">
                    <xsl:text>{\cs227\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend4"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:ElectoralDistrictName[position() = 2]">
                <xsl:for-each select="@id">
                    <xsl:text>{\cs228\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend4"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:ElectoralDistrictName[position() = 3]">
                <xsl:for-each select="@id">
                    <xsl:text>{\cs229\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend4"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:ElectoralDistrictName[position() = 4]">
                <xsl:for-each select="@id">
                    <xsl:text>{\cs230\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend4"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:ElectoralDistrictName[position() = 5]">
                <xsl:for-each select="@id">
                    <xsl:text>{\cs231\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend4"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:ElectoralDistrictName[position() = 6]">
                <xsl:for-each select="@id">
                    <xsl:text>{\cs232\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend4"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:ElectoralDistrictName[position() = 7]">
                <xsl:for-each select="@id">
                    <xsl:text>{\cs233\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend4"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:ElectoralDistrictName[position() = 8]">
                <xsl:for-each select="@id">
                    <xsl:text>{\cs234\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend4"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:ElectoralDistrictName[position() = 9]">
                <xsl:for-each select="@id">
                    <xsl:text>{\cs235\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend4"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:ElectoralDistrictName[position() = 10]">
                <xsl:for-each select="@id">
                    <xsl:text>{\cs236\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend4"/>
            <xsl:if test="$templatetablelevel + 1 > 1">
                <xsl:text>{\*\nesttableprops</xsl:text>
            </xsl:if>
            <xsl:value-of select="$tablestyle4"/>
            <xsl:value-of select="$altova:RowStyle12"/>
            <xsl:value-of select="$rowend4"/>
        </xsl:for-each>
        <xsl:for-each select="rg:OverviewOfListsAndDistrictsAndVotes">
            <xsl:variable name="altova:RowStyle13">
                <xsl:text>\trrh20</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl4" select="$altova:nTableIndentTw_4"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl4_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl4 + $altova:nColumnWidthTw_4_0"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col0_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl4_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col0_AfterColumn + $altova:nColumnWidthTw_4_1"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col1_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl4_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col1_AfterColumn + $altova:nColumnWidthTw_4_2"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col2_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl4_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col2_AfterColumn + $altova:nColumnWidthTw_4_3"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col3_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl4_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col3_AfterColumn + $altova:nColumnWidthTw_4_4"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col4_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl4_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col4_AfterColumn + $altova:nColumnWidthTw_4_5"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col5_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl4_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col5_AfterColumn + $altova:nColumnWidthTw_4_6"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col6_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl4_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col6_AfterColumn + $altova:nColumnWidthTw_4_7"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col7_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl4_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col7_AfterColumn + $altova:nColumnWidthTw_4_8"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col8_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl4_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col8_AfterColumn + $altova:nColumnWidthTw_4_9"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col9_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl4_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col9_AfterColumn + $altova:nColumnWidthTw_4_10"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col10_AfterColumn)"/>
            </xsl:variable>
            <xsl:if test="$templatetablelevel + 1 = 1">
                <xsl:value-of select="$tablestyle4"/>
                <xsl:value-of select="$altova:RowStyle13"/>
            </xsl:if>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="@listNumber">
                <xsl:text>{\cs237\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="string(.)"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend4"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 1">
                    <xsl:text>{\cs238\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_1 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>{\cs239\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text> </xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend4"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 2">
                    <xsl:text>{\cs240\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_2 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>{\cs241\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text> </xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend4"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 3">
                    <xsl:text>{\cs242\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_3 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>{\cs243\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text> </xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend4"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 4">
                    <xsl:text>{\cs244\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_4 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>{\cs245\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text> </xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend4"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 5">
                    <xsl:text>{\cs246\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_5 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>{\cs247\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text> </xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend4"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 6">
                    <xsl:text>{\cs248\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_6 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>{\cs249\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text> </xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend4"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 7">
                    <xsl:text>{\cs250\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_7 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>{\cs251\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text> </xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend4"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 8">
                    <xsl:text>{\cs252\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_8 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>{\cs253\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text> </xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend4"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 9">
                    <xsl:text>{\cs254\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_9 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>{\cs255\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text> </xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend4"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 10">
                    <xsl:text>{\cs256\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_10 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>{\cs257\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text> </xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend4"/>
            <xsl:if test="$templatetablelevel + 1 > 1">
                <xsl:text>{\*\nesttableprops</xsl:text>
            </xsl:if>
            <xsl:value-of select="$tablestyle4"/>
            <xsl:value-of select="$altova:RowStyle13"/>
            <xsl:value-of select="$rowend4"/>
        </xsl:for-each>
        <xsl:variable name="altova:RowStyle14">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4" select="$altova:nTableIndentTw_4"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl4 + $altova:nColumnWidthTw_4_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col0_AfterColumn + $altova:nColumnWidthTw_4_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col1_AfterColumn + $altova:nColumnWidthTw_4_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col2_AfterColumn + $altova:nColumnWidthTw_4_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col3_AfterColumn + $altova:nColumnWidthTw_4_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col4_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col4_AfterColumn + $altova:nColumnWidthTw_4_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col5_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col5_AfterColumn + $altova:nColumnWidthTw_4_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col6_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col6_AfterColumn + $altova:nColumnWidthTw_4_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col7_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col7_AfterColumn + $altova:nColumnWidthTw_4_8"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col8_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col8_AfterColumn + $altova:nColumnWidthTw_4_9"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col9_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col9_AfterColumn + $altova:nColumnWidthTw_4_10"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col10_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle4"/>
            <xsl:value-of select="$altova:RowStyle14"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs258\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Totaal aantal stemmen op een kandidaat per kieskring</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs259\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes1-10_stemmenOpEenKandidaat"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 1">
                    <xsl:text>{\cs260\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_1 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 2">
                    <xsl:text>{\cs261\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_2 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 3">
                    <xsl:text>{\cs262\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_3 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 4">
                    <xsl:text>{\cs263\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_4 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 5">
                    <xsl:text>{\cs264\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_5 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 6">
                    <xsl:text>{\cs265\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_6 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 7">
                    <xsl:text>{\cs266\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_7 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 8">
                    <xsl:text>{\cs267\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_8 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 9">
                    <xsl:text>{\cs268\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_9 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 10">
                    <xsl:text>{\cs269\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_10 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle4"/>
        <xsl:value-of select="$altova:RowStyle14"/>
        <xsl:value-of select="$rowend4"/>
        <xsl:variable name="altova:RowStyle15">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4" select="$altova:nTableIndentTw_4"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl4 + $altova:nColumnWidthTw_4_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col0_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col0_AfterColumn + $altova:nColumnWidthTw_4_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col1_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col1_AfterColumn + $altova:nColumnWidthTw_4_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col2_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col2_AfterColumn + $altova:nColumnWidthTw_4_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col3_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col3_AfterColumn + $altova:nColumnWidthTw_4_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col4_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col4_AfterColumn + $altova:nColumnWidthTw_4_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col5_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col5_AfterColumn + $altova:nColumnWidthTw_4_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col6_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col6_AfterColumn + $altova:nColumnWidthTw_4_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col7_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col7_AfterColumn + $altova:nColumnWidthTw_4_8"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col8_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col8_AfterColumn + $altova:nColumnWidthTw_4_9"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col9_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col9_AfterColumn + $altova:nColumnWidthTw_4_10"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col10_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle4"/>
            <xsl:value-of select="$altova:RowStyle15"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs270\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Totaal aantal op een kandidaat uitgebrachte stemmen</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs271\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes1-10_kandidaatUitgebrachteStemmen"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs272\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs273\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs274\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs275\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs276\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs277\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs278\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs279\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs280\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle4"/>
        <xsl:value-of select="$altova:RowStyle15"/>
        <xsl:value-of select="$rowend4"/>
        <xsl:variable name="altova:RowStyle16">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4" select="$altova:nTableIndentTw_4"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl4 + $altova:nColumnWidthTw_4_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col0_AfterColumn + $altova:nColumnWidthTw_4_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col1_AfterColumn + $altova:nColumnWidthTw_4_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col2_AfterColumn + $altova:nColumnWidthTw_4_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col3_AfterColumn + $altova:nColumnWidthTw_4_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col4_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col4_AfterColumn + $altova:nColumnWidthTw_4_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col5_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col5_AfterColumn + $altova:nColumnWidthTw_4_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col6_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col6_AfterColumn + $altova:nColumnWidthTw_4_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col7_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col7_AfterColumn + $altova:nColumnWidthTw_4_8"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col8_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col8_AfterColumn + $altova:nColumnWidthTw_4_9"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col9_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col9_AfterColumn + $altova:nColumnWidthTw_4_10"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col10_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle4"/>
            <xsl:value-of select="$altova:RowStyle16"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs281\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Totaal aantal blanco stemmen</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs282\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes1-10_blancoStemmen"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfBlancVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 1">
                    <xsl:text>{\cs283\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_1 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfBlancVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 2">
                    <xsl:text>{\cs284\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_2 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfBlancVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 3">
                    <xsl:text>{\cs285\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_3 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfBlancVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 4">
                    <xsl:text>{\cs286\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_4 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfBlancVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 5">
                    <xsl:text>{\cs287\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_5 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfBlancVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 6">
                    <xsl:text>{\cs288\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_6 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfBlancVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 7">
                    <xsl:text>{\cs289\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_7 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfBlancVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 8">
                    <xsl:text>{\cs290\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_8 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfBlancVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 9">
                    <xsl:text>{\cs291\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_9 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfBlancVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 10">
                    <xsl:text>{\cs292\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_10 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle4"/>
        <xsl:value-of select="$altova:RowStyle16"/>
        <xsl:value-of select="$rowend4"/>
        <xsl:variable name="altova:RowStyle17">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4" select="$altova:nTableIndentTw_4"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl4 + $altova:nColumnWidthTw_4_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col0_AfterColumn + $altova:nColumnWidthTw_4_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col1_AfterColumn + $altova:nColumnWidthTw_4_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col2_AfterColumn + $altova:nColumnWidthTw_4_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col3_AfterColumn + $altova:nColumnWidthTw_4_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col4_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col4_AfterColumn + $altova:nColumnWidthTw_4_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col5_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col5_AfterColumn + $altova:nColumnWidthTw_4_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col6_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col6_AfterColumn + $altova:nColumnWidthTw_4_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col7_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col7_AfterColumn + $altova:nColumnWidthTw_4_8"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col8_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col8_AfterColumn + $altova:nColumnWidthTw_4_9"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col9_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl4_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl4_Col9_AfterColumn + $altova:nColumnWidthTw_4_10"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl4_Col10_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle4"/>
            <xsl:value-of select="$altova:RowStyle17"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs293\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Totaal aantal ongeldige stemmen</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs294\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes1-10_ongeldigeStemmen"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfInvalidVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 1">
                    <xsl:text>{\cs295\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_1 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfInvalidVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 2">
                    <xsl:text>{\cs296\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_2 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfInvalidVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 3">
                    <xsl:text>{\cs297\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_3 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfInvalidVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 4">
                    <xsl:text>{\cs298\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_4 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfInvalidVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 5">
                    <xsl:text>{\cs299\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_5 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfInvalidVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 6">
                    <xsl:text>{\cs300\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_6 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfInvalidVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 7">
                    <xsl:text>{\cs301\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_7 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfInvalidVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 8">
                    <xsl:text>{\cs302\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_8 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfInvalidVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 9">
                    <xsl:text>{\cs303\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_9 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfInvalidVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 10">
                    <xsl:text>{\cs304\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_4_10 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend4"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle4"/>
        <xsl:value-of select="$altova:RowStyle17"/>
        <xsl:value-of select="$rowend4"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 0"/>
        <xsl:text> </xsl:text>
    </xsl:template>
    <xsl:template name="OverviewVotes11-20">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:variable name="altova:CurrContextGrid_069F96D8" select="."/>
        <xsl:variable name="altova:nTableWidthIn_5" select="$altova:nMaxWidthIn * 1.00000"/>
        <xsl:variable name="altova:nTableWidthTw_5" select="$altova:nTableWidthIn_5 * 1440"/>
        <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_5" select="round($altova:nTableWidthTw_5 * 0.25)"/>
        <xsl:variable name="altova:nTableIndentTw_5" select="0"/>
        <xsl:variable name="altova:nSumColumnWidthsTw_5" select="round(1200.50)"/>
        <xsl:variable name="altova:TableWidthFactor_5">
            <xsl:choose>
                <xsl:when test="$altova:nSumColumnWidthsTw_5 &gt; $altova:nTableWidthTw_5">
                    <xsl:value-of select="($altova:nTableWidthTw_5 - $altova:SumDefaultColumnsForWideTableTw_5) div $altova:nSumColumnWidthsTw_5"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="1"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnsWithDefaultWidth_5" select="round(11)"/>
        <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_5">
            <xsl:choose>
                <xsl:when test="$altova:nColumnsWithDefaultWidth_5 = 0">
                    <xsl:value-of select="round(11)"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="$altova:nColumnsWithDefaultWidth_5"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nDefaultColumnWidthTw_5">
            <xsl:choose>
                <xsl:when test="$altova:TableWidthFactor_5 &lt; 1">
                    <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_5 div $altova:nColumnsWithDefaultWidthNotZero_5"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="round(($altova:nTableWidthTw_5 - $altova:nSumColumnWidthsTw_5) div $altova:nColumnsWithDefaultWidthNotZero_5)"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnWidthTw_5_0" select="round(0.83 * 1440 * $altova:TableWidthFactor_5)"/>
        <xsl:variable name="altova:nColumnWidthTw_5_1" select="$altova:nDefaultColumnWidthTw_5"/>
        <xsl:variable name="altova:nColumnWidthTw_5_2" select="$altova:nDefaultColumnWidthTw_5"/>
        <xsl:variable name="altova:nColumnWidthTw_5_3" select="$altova:nDefaultColumnWidthTw_5"/>
        <xsl:variable name="altova:nColumnWidthTw_5_4" select="$altova:nDefaultColumnWidthTw_5"/>
        <xsl:variable name="altova:nColumnWidthTw_5_5" select="$altova:nDefaultColumnWidthTw_5"/>
        <xsl:variable name="altova:nColumnWidthTw_5_6" select="$altova:nDefaultColumnWidthTw_5"/>
        <xsl:variable name="altova:nColumnWidthTw_5_7" select="$altova:nDefaultColumnWidthTw_5"/>
        <xsl:variable name="altova:nColumnWidthTw_5_8" select="$altova:nDefaultColumnWidthTw_5"/>
        <xsl:variable name="altova:nColumnWidthTw_5_9" select="$altova:nDefaultColumnWidthTw_5"/>
        <xsl:variable name="altova:nColumnWidthTw_5_10" select="$altova:nDefaultColumnWidthTw_5"/>
        <xsl:variable name="altova:nColumnWidthTw_5_11" select="$altova:nDefaultColumnWidthTw_5"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:variable name="tablestyle5">
            <xsl:text>\trowd\trleft</xsl:text>
            <xsl:value-of select="$altova:nTableIndentTw_5"/>
            <xsl:text>\ts305\ts306\ts307\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrs\brdrcf1\brdrw15\trbrdrl\brdrnil\trbrdrb\brdrs\brdrcf1\brdrw15\trbrdrr\brdrnil</xsl:text>
        </xsl:variable>
        <xsl:variable name="rowend5">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\row\pard</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="cellend5">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\cell</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestcell</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:RowStyle18">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5" select="$altova:nTableIndentTw_5"/>
            <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl5 + $altova:nColumnWidthTw_5_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col0_AfterColumn)"/>
            <xsl:text>\clvertalt\clmgf\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col0_AfterColumn + $altova:nColumnWidthTw_5_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col1_AfterColumn + $altova:nColumnWidthTw_5_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col2_AfterColumn + $altova:nColumnWidthTw_5_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col3_AfterColumn + $altova:nColumnWidthTw_5_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col4_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col4_AfterColumn + $altova:nColumnWidthTw_5_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col5_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col5_AfterColumn + $altova:nColumnWidthTw_5_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col6_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col6_AfterColumn + $altova:nColumnWidthTw_5_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col7_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col7_AfterColumn + $altova:nColumnWidthTw_5_8"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col8_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col8_AfterColumn + $altova:nColumnWidthTw_5_9"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col9_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col9_AfterColumn + $altova:nColumnWidthTw_5_10"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col10_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col10_AfterColumn + $altova:nColumnWidthTw_5_11"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col11_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle5"/>
            <xsl:value-of select="$altova:RowStyle18"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs308\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs309\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Kieskring</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs310\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes11-20_Kieskring"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle5"/>
        <xsl:value-of select="$altova:RowStyle18"/>
        <xsl:value-of select="$rowend5"/>
        <xsl:for-each select="rg:ElectoralDistrictsOverview">
            <xsl:variable name="altova:RowStyle19">
                <xsl:text>\trrh620</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl5" select="$altova:nTableIndentTw_5"/>
                <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl5_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl5 + $altova:nColumnWidthTw_5_0"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col0_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl5_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col0_AfterColumn + $altova:nColumnWidthTw_5_1"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col1_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl5_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col1_AfterColumn + $altova:nColumnWidthTw_5_2"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col2_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl5_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col2_AfterColumn + $altova:nColumnWidthTw_5_3"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col3_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl5_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col3_AfterColumn + $altova:nColumnWidthTw_5_4"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col4_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl5_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col4_AfterColumn + $altova:nColumnWidthTw_5_5"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col5_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl5_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col5_AfterColumn + $altova:nColumnWidthTw_5_6"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col6_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl5_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col6_AfterColumn + $altova:nColumnWidthTw_5_7"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col7_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl5_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col7_AfterColumn + $altova:nColumnWidthTw_5_8"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col8_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl5_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col8_AfterColumn + $altova:nColumnWidthTw_5_9"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col9_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl5_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col9_AfterColumn + $altova:nColumnWidthTw_5_10"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col10_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl5_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col10_AfterColumn + $altova:nColumnWidthTw_5_11"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col11_AfterColumn)"/>
            </xsl:variable>
            <xsl:if test="$templatetablelevel + 1 = 1">
                <xsl:value-of select="$tablestyle5"/>
                <xsl:value-of select="$altova:RowStyle19"/>
            </xsl:if>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs311\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Lijst-</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs312\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewVotes11-20_Lijst"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\par </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs313\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>nummer</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs314\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewVotes11-20_nummer"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend5"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:ElectoralDistrictName[position() = 11]">
                <xsl:for-each select="@id">
                    <xsl:text>{\cs315\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend5"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:ElectoralDistrictName[position() = 12]">
                <xsl:for-each select="@id">
                    <xsl:text>{\cs316\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend5"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:ElectoralDistrictName[position() = 13]">
                <xsl:for-each select="@id">
                    <xsl:text>{\cs317\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend5"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:ElectoralDistrictName[position() = 14]">
                <xsl:for-each select="@id">
                    <xsl:text>{\cs318\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend5"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:ElectoralDistrictName[position() = 15]">
                <xsl:for-each select="@id">
                    <xsl:text>{\cs319\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend5"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:ElectoralDistrictName[position() = 16]">
                <xsl:for-each select="@id">
                    <xsl:text>{\cs320\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend5"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:ElectoralDistrictName[position() = 17]">
                <xsl:for-each select="@id">
                    <xsl:text>{\cs321\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend5"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:ElectoralDistrictName[position() = 18]">
                <xsl:for-each select="@id">
                    <xsl:text>{\cs322\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend5"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:ElectoralDistrictName[position() = 19]">
                <xsl:for-each select="@id">
                    <xsl:text>{\cs323\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend5"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:ElectoralDistrictName[position() = 20]">
                <xsl:for-each select="@id">
                    <xsl:text>{\cs324\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend5"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs325\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Totaal aantal</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs326\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewVotes11-20_TotaalAantal"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\par </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs327\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>stemmen per</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs328\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewVotes11-20_stemmenPer"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\par </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs329\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>groepering</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs330\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewVotes11-20_groepering"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend5"/>
            <xsl:if test="$templatetablelevel + 1 > 1">
                <xsl:text>{\*\nesttableprops</xsl:text>
            </xsl:if>
            <xsl:value-of select="$tablestyle5"/>
            <xsl:value-of select="$altova:RowStyle19"/>
            <xsl:value-of select="$rowend5"/>
        </xsl:for-each>
        <xsl:for-each select="rg:OverviewOfListsAndDistrictsAndVotes">
            <xsl:variable name="altova:RowStyle20">
                <xsl:text>\trrh20</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl5" select="$altova:nTableIndentTw_5"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl5_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl5 + $altova:nColumnWidthTw_5_0"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col0_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl5_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col0_AfterColumn + $altova:nColumnWidthTw_5_1"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col1_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl5_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col1_AfterColumn + $altova:nColumnWidthTw_5_2"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col2_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl5_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col2_AfterColumn + $altova:nColumnWidthTw_5_3"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col3_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl5_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col3_AfterColumn + $altova:nColumnWidthTw_5_4"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col4_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl5_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col4_AfterColumn + $altova:nColumnWidthTw_5_5"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col5_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl5_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col5_AfterColumn + $altova:nColumnWidthTw_5_6"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col6_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl5_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col6_AfterColumn + $altova:nColumnWidthTw_5_7"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col7_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl5_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col7_AfterColumn + $altova:nColumnWidthTw_5_8"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col8_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl5_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col8_AfterColumn + $altova:nColumnWidthTw_5_9"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col9_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl5_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col9_AfterColumn + $altova:nColumnWidthTw_5_10"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col10_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl5_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col10_AfterColumn + $altova:nColumnWidthTw_5_11"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col11_AfterColumn)"/>
            </xsl:variable>
            <xsl:if test="$templatetablelevel + 1 = 1">
                <xsl:value-of select="$tablestyle5"/>
                <xsl:value-of select="$altova:RowStyle20"/>
            </xsl:if>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="@listNumber">
                <xsl:text>{\cs331\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="string(.)"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend5"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 11">
                    <xsl:text>{\cs332\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_1 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>{\cs333\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text> </xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend5"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 12">
                    <xsl:text>{\cs334\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_2 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>{\cs335\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text> </xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend5"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 13">
                    <xsl:text>{\cs336\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_3 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>{\cs337\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text> </xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend5"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 14">
                    <xsl:text>{\cs338\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_4 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>{\cs339\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text> </xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend5"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 15">
                    <xsl:text>{\cs340\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_5 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>{\cs341\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text> </xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend5"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 16">
                    <xsl:text>{\cs342\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_6 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>{\cs343\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text> </xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend5"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 17">
                    <xsl:text>{\cs344\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_7 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>{\cs345\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text> </xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend5"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 18">
                    <xsl:text>{\cs346\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_8 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>{\cs347\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text> </xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend5"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 19">
                    <xsl:text>{\cs348\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_9 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>{\cs349\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text> </xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend5"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 20">
                    <xsl:text>{\cs350\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_10 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>{\cs351\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text> </xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend5"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id = &quot;alle&quot;">
                    <xsl:text>{\cs352\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_11 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>{\cs353\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text> </xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend5"/>
            <xsl:if test="$templatetablelevel + 1 > 1">
                <xsl:text>{\*\nesttableprops</xsl:text>
            </xsl:if>
            <xsl:value-of select="$tablestyle5"/>
            <xsl:value-of select="$altova:RowStyle20"/>
            <xsl:value-of select="$rowend5"/>
        </xsl:for-each>
        <xsl:variable name="altova:RowStyle21">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5" select="$altova:nTableIndentTw_5"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl5 + $altova:nColumnWidthTw_5_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col0_AfterColumn + $altova:nColumnWidthTw_5_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col1_AfterColumn + $altova:nColumnWidthTw_5_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col2_AfterColumn + $altova:nColumnWidthTw_5_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col3_AfterColumn + $altova:nColumnWidthTw_5_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col4_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col4_AfterColumn + $altova:nColumnWidthTw_5_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col5_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col5_AfterColumn + $altova:nColumnWidthTw_5_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col6_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col6_AfterColumn + $altova:nColumnWidthTw_5_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col7_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col7_AfterColumn + $altova:nColumnWidthTw_5_8"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col8_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col8_AfterColumn + $altova:nColumnWidthTw_5_9"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col9_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col9_AfterColumn + $altova:nColumnWidthTw_5_10"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col10_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col10_AfterColumn + $altova:nColumnWidthTw_5_11"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col11_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle5"/>
            <xsl:value-of select="$altova:RowStyle21"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs354\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Totaal aantal stemmen op een kandidaat per kieskring</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs355\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes11-20_stemmenOpEenKandidaat"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 11">
                    <xsl:text>{\cs356\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_1 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 12">
                    <xsl:text>{\cs357\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_2 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 13">
                    <xsl:text>{\cs358\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_3 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 14">
                    <xsl:text>{\cs359\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_4 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 15">
                    <xsl:text>{\cs360\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_5 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 16">
                    <xsl:text>{\cs361\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_6 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 17">
                    <xsl:text>{\cs362\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_7 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 18">
                    <xsl:text>{\cs363\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_8 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 19">
                    <xsl:text>{\cs364\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_9 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 20">
                    <xsl:text>{\cs365\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_10 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle5"/>
        <xsl:value-of select="$altova:RowStyle21"/>
        <xsl:value-of select="$rowend5"/>
        <xsl:variable name="altova:RowStyle22">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5" select="$altova:nTableIndentTw_5"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl5 + $altova:nColumnWidthTw_5_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col0_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col0_AfterColumn + $altova:nColumnWidthTw_5_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col1_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col1_AfterColumn + $altova:nColumnWidthTw_5_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col2_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col2_AfterColumn + $altova:nColumnWidthTw_5_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col3_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col3_AfterColumn + $altova:nColumnWidthTw_5_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col4_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col4_AfterColumn + $altova:nColumnWidthTw_5_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col5_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col5_AfterColumn + $altova:nColumnWidthTw_5_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col6_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col6_AfterColumn + $altova:nColumnWidthTw_5_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col7_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col7_AfterColumn + $altova:nColumnWidthTw_5_8"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col8_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col8_AfterColumn + $altova:nColumnWidthTw_5_9"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col9_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col9_AfterColumn + $altova:nColumnWidthTw_5_10"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col10_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col10_AfterColumn + $altova:nColumnWidthTw_5_11"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col11_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle5"/>
            <xsl:value-of select="$altova:RowStyle22"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs366\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Totaal aantal op een kandidaat uitgebrachte stemmen</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs367\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes11-20_kandidaatUitgebrachteStemmen"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs368\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs369\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs370\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs371\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs372\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs373\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs374\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs375\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs376\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs377\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id = &quot;alle&quot;">
                    <xsl:text>{\cs378\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_11 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>{\cs379\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle5"/>
        <xsl:value-of select="$altova:RowStyle22"/>
        <xsl:value-of select="$rowend5"/>
        <xsl:variable name="altova:RowStyle23">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5" select="$altova:nTableIndentTw_5"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl5 + $altova:nColumnWidthTw_5_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col0_AfterColumn + $altova:nColumnWidthTw_5_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col1_AfterColumn + $altova:nColumnWidthTw_5_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col2_AfterColumn + $altova:nColumnWidthTw_5_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col3_AfterColumn + $altova:nColumnWidthTw_5_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col4_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col4_AfterColumn + $altova:nColumnWidthTw_5_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col5_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col5_AfterColumn + $altova:nColumnWidthTw_5_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col6_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col6_AfterColumn + $altova:nColumnWidthTw_5_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col7_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col7_AfterColumn + $altova:nColumnWidthTw_5_8"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col8_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col8_AfterColumn + $altova:nColumnWidthTw_5_9"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col9_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col9_AfterColumn + $altova:nColumnWidthTw_5_10"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col10_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col10_AfterColumn + $altova:nColumnWidthTw_5_11"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col11_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle5"/>
            <xsl:value-of select="$altova:RowStyle23"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs380\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Totaal aantal blanco stemmen</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs381\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes11-20_blancoStemmen"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfBlancVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 11">
                    <xsl:text>{\cs382\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_1 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfBlancVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 12">
                    <xsl:text>{\cs383\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_2 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfBlancVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 13">
                    <xsl:text>{\cs384\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_3 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfBlancVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 14">
                    <xsl:text>{\cs385\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_4 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfBlancVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 15">
                    <xsl:text>{\cs386\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_5 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfBlancVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 16">
                    <xsl:text>{\cs387\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_6 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfBlancVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 17">
                    <xsl:text>{\cs388\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_7 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfBlancVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 18">
                    <xsl:text>{\cs389\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_8 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfBlancVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 19">
                    <xsl:text>{\cs390\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_9 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfBlancVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 20">
                    <xsl:text>{\cs391\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_10 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfBlancVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id = &quot;alle&quot;">
                    <xsl:text>{\cs392\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_11 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle5"/>
        <xsl:value-of select="$altova:RowStyle23"/>
        <xsl:value-of select="$rowend5"/>
        <xsl:variable name="altova:RowStyle24">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5" select="$altova:nTableIndentTw_5"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl5 + $altova:nColumnWidthTw_5_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col0_AfterColumn + $altova:nColumnWidthTw_5_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col1_AfterColumn + $altova:nColumnWidthTw_5_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col2_AfterColumn + $altova:nColumnWidthTw_5_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col3_AfterColumn + $altova:nColumnWidthTw_5_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col4_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col4_AfterColumn + $altova:nColumnWidthTw_5_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col5_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col5_AfterColumn + $altova:nColumnWidthTw_5_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col6_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col6_AfterColumn + $altova:nColumnWidthTw_5_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col7_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col7_AfterColumn + $altova:nColumnWidthTw_5_8"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col8_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col8_AfterColumn + $altova:nColumnWidthTw_5_9"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col9_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col9_AfterColumn + $altova:nColumnWidthTw_5_10"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col10_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl5_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl5_Col10_AfterColumn + $altova:nColumnWidthTw_5_11"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl5_Col11_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle5"/>
            <xsl:value-of select="$altova:RowStyle24"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs393\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Totaal aantal ongeldige stemmen</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs394\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes11-20_ongeldigeStemmen"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfInvalidVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 11">
                    <xsl:text>{\cs395\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_1 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfInvalidVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 12">
                    <xsl:text>{\cs396\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_2 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfInvalidVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 13">
                    <xsl:text>{\cs397\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_3 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfInvalidVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 14">
                    <xsl:text>{\cs398\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_4 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfInvalidVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 15">
                    <xsl:text>{\cs399\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_5 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfInvalidVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 16">
                    <xsl:text>{\cs400\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_6 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfInvalidVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 17">
                    <xsl:text>{\cs401\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_7 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfInvalidVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 18">
                    <xsl:text>{\cs402\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_8 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfInvalidVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 19">
                    <xsl:text>{\cs403\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_9 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfInvalidVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id != &quot;alle&quot; and position() = 20">
                    <xsl:text>{\cs404\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_10 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfInvalidVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id = &quot;alle&quot;">
                    <xsl:text>{\cs405\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_5_11 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend5"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle5"/>
        <xsl:value-of select="$altova:RowStyle24"/>
        <xsl:value-of select="$rowend5"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 0"/>
        <xsl:text> </xsl:text>
    </xsl:template>
    <xsl:template name="OverviewVotesEK">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:variable name="altova:CurrContextGrid_06A12AB8" select="."/>
        <xsl:variable name="altova:nTableWidthIn_6" select="$altova:nMaxWidthIn * 1.00000"/>
        <xsl:variable name="altova:nTableWidthTw_6" select="$altova:nTableWidthIn_6 * 1440"/>
        <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_6" select="round($altova:nTableWidthTw_6 * 0.25)"/>
        <xsl:variable name="altova:nTableIndentTw_6" select="0"/>
        <xsl:variable name="altova:nSumColumnWidthsTw_6" select="round(2781.50)"/>
        <xsl:variable name="altova:TableWidthFactor_6">
            <xsl:choose>
                <xsl:when test="$altova:nSumColumnWidthsTw_6 &gt; $altova:nTableWidthTw_6">
                    <xsl:value-of select="($altova:nTableWidthTw_6 - $altova:SumDefaultColumnsForWideTableTw_6) div $altova:nSumColumnWidthsTw_6"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="1"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnsWithDefaultWidth_6" select="round(12)"/>
        <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_6">
            <xsl:choose>
                <xsl:when test="$altova:nColumnsWithDefaultWidth_6 = 0">
                    <xsl:value-of select="round(12)"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="$altova:nColumnsWithDefaultWidth_6"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nDefaultColumnWidthTw_6">
            <xsl:choose>
                <xsl:when test="$altova:TableWidthFactor_6 &lt; 1">
                    <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_6 div $altova:nColumnsWithDefaultWidthNotZero_6"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="round(($altova:nTableWidthTw_6 - $altova:nSumColumnWidthsTw_6) div $altova:nColumnsWithDefaultWidthNotZero_6)"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnWidthTw_6_0" select="round(0.18 * 1440 * $altova:TableWidthFactor_6)"/>
        <xsl:variable name="altova:nColumnWidthTw_6_1" select="round(1.06 * 1440 * $altova:TableWidthFactor_6)"/>
        <xsl:variable name="altova:nColumnWidthTw_6_2" select="$altova:nDefaultColumnWidthTw_6"/>
        <xsl:variable name="altova:nColumnWidthTw_6_3" select="$altova:nDefaultColumnWidthTw_6"/>
        <xsl:variable name="altova:nColumnWidthTw_6_4" select="$altova:nDefaultColumnWidthTw_6"/>
        <xsl:variable name="altova:nColumnWidthTw_6_5" select="$altova:nDefaultColumnWidthTw_6"/>
        <xsl:variable name="altova:nColumnWidthTw_6_6" select="$altova:nDefaultColumnWidthTw_6"/>
        <xsl:variable name="altova:nColumnWidthTw_6_7" select="$altova:nDefaultColumnWidthTw_6"/>
        <xsl:variable name="altova:nColumnWidthTw_6_8" select="$altova:nDefaultColumnWidthTw_6"/>
        <xsl:variable name="altova:nColumnWidthTw_6_9" select="$altova:nDefaultColumnWidthTw_6"/>
        <xsl:variable name="altova:nColumnWidthTw_6_10" select="$altova:nDefaultColumnWidthTw_6"/>
        <xsl:variable name="altova:nColumnWidthTw_6_11" select="$altova:nDefaultColumnWidthTw_6"/>
        <xsl:variable name="altova:nColumnWidthTw_6_12" select="$altova:nDefaultColumnWidthTw_6"/>
        <xsl:variable name="altova:nColumnWidthTw_6_13" select="$altova:nDefaultColumnWidthTw_6"/>
        <xsl:variable name="altova:nColumnWidthTw_6_14" select="round(0.69 * 1440 * $altova:TableWidthFactor_6)"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:variable name="tablestyle6">
            <xsl:text>\trowd\trleft</xsl:text>
            <xsl:value-of select="$altova:nTableIndentTw_6"/>
            <xsl:text>\ts406\ts407\ts408\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrs\brdrcf1\brdrw15\trbrdrl\brdrnil\trbrdrb\brdrs\brdrcf1\brdrw15\trbrdrr\brdrnil</xsl:text>
        </xsl:variable>
        <xsl:variable name="rowend6">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\row\pard</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="cellend6">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\cell</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestcell</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:RowStyle25">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6" select="$altova:nTableIndentTw_6"/>
            <xsl:text>\clvertalt\clmgf\clvmgf\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl6 + $altova:nColumnWidthTw_6_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clvmgf\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col0_AfterColumn + $altova:nColumnWidthTw_6_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col1_AfterColumn)"/>
            <xsl:text>\clvertalt\clmgf\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col1_AfterColumn + $altova:nColumnWidthTw_6_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col2_AfterColumn)"/>
            <xsl:text>\clvertalt\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col2_AfterColumn + $altova:nColumnWidthTw_6_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col3_AfterColumn)"/>
            <xsl:text>\clvertalt\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col3_AfterColumn + $altova:nColumnWidthTw_6_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col4_AfterColumn)"/>
            <xsl:text>\clvertalt\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col4_AfterColumn + $altova:nColumnWidthTw_6_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col5_AfterColumn)"/>
            <xsl:text>\clvertalt\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col5_AfterColumn + $altova:nColumnWidthTw_6_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col6_AfterColumn)"/>
            <xsl:text>\clvertalt\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col6_AfterColumn + $altova:nColumnWidthTw_6_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col7_AfterColumn)"/>
            <xsl:text>\clvertalt\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col7_AfterColumn + $altova:nColumnWidthTw_6_8"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col8_AfterColumn)"/>
            <xsl:text>\clvertalt\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col8_AfterColumn + $altova:nColumnWidthTw_6_9"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col9_AfterColumn)"/>
            <xsl:text>\clvertalt\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col9_AfterColumn + $altova:nColumnWidthTw_6_10"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col10_AfterColumn)"/>
            <xsl:text>\clvertalt\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col10_AfterColumn + $altova:nColumnWidthTw_6_11"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col11_AfterColumn)"/>
            <xsl:text>\clvertalt\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col12_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col11_AfterColumn + $altova:nColumnWidthTw_6_12"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col12_AfterColumn)"/>
            <xsl:text>\clvertalt\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col13_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col12_AfterColumn + $altova:nColumnWidthTw_6_13"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col13_AfterColumn)"/>
            <xsl:text>\clvertalt\clvmgf\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col14_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col13_AfterColumn + $altova:nColumnWidthTw_6_14"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col14_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle6"/>
            <xsl:value-of select="$altova:RowStyle25"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs409\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Lijst-</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs410\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotesEK_Lijst"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs411\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>nummer</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs412\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotesEK_nummer"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs413\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Provincie</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs414\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotesEK_Provincie"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs415\f1\fs16 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Totaal aantal</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs416\f1\fs16 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotesEK_TotaalAantal"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs417\f1\fs16 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>stemmen per</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs418\f1\fs16 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotesEK_stemmenPer"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs419\f1\fs16 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>groepering</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs420\f1\fs16 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotesEK_groepering"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle6"/>
        <xsl:value-of select="$altova:RowStyle25"/>
        <xsl:value-of select="$rowend6"/>
        <xsl:variable name="altova:RowStyle26">
            <xsl:text>\trrh620</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6" select="$altova:nTableIndentTw_6"/>
            <xsl:text>\clvertalt\clmgf\clvmrg\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl6 + $altova:nColumnWidthTw_6_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clvmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col0_AfterColumn + $altova:nColumnWidthTw_6_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col1_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col1_AfterColumn + $altova:nColumnWidthTw_6_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col2_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col2_AfterColumn + $altova:nColumnWidthTw_6_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col3_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col3_AfterColumn + $altova:nColumnWidthTw_6_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col4_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col4_AfterColumn + $altova:nColumnWidthTw_6_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col5_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col5_AfterColumn + $altova:nColumnWidthTw_6_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col6_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col6_AfterColumn + $altova:nColumnWidthTw_6_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col7_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col7_AfterColumn + $altova:nColumnWidthTw_6_8"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col8_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col8_AfterColumn + $altova:nColumnWidthTw_6_9"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col9_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col9_AfterColumn + $altova:nColumnWidthTw_6_10"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col10_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col10_AfterColumn + $altova:nColumnWidthTw_6_11"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col11_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col12_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col11_AfterColumn + $altova:nColumnWidthTw_6_12"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col12_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col13_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col12_AfterColumn + $altova:nColumnWidthTw_6_13"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col13_AfterColumn)"/>
            <xsl:text>\clvertalt\clvmrg\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col14_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col13_AfterColumn + $altova:nColumnWidthTw_6_14"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col14_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle6"/>
            <xsl:value-of select="$altova:RowStyle26"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs421\f1\fs20 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text>1</xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs422\f1\fs20 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text>2</xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs423\f1\fs20 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text>3</xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs424\f1\fs20 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text>4</xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs425\f1\fs20 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text>5</xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs426\f1\fs20 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text>6</xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs427\f1\fs20 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text>7</xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs428\f1\fs20 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text>8</xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs429\f1\fs20 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text>9</xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs430\f1\fs20 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text>10</xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs431\f1\fs20 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text>11</xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs432\f1\fs20 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text>12</xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle6"/>
        <xsl:value-of select="$altova:RowStyle26"/>
        <xsl:value-of select="$rowend6"/>
        <xsl:for-each select="rg:OverviewOfListsAndDistrictsAndVotes">
            <xsl:variable name="altova:RowStyle27">
                <xsl:text>\trrh20</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl6" select="$altova:nTableIndentTw_6"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl6_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl6 + $altova:nColumnWidthTw_6_0"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col0_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl6_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col0_AfterColumn + $altova:nColumnWidthTw_6_1"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col1_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl6_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col1_AfterColumn + $altova:nColumnWidthTw_6_2"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col2_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl6_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col2_AfterColumn + $altova:nColumnWidthTw_6_3"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col3_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl6_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col3_AfterColumn + $altova:nColumnWidthTw_6_4"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col4_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl6_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col4_AfterColumn + $altova:nColumnWidthTw_6_5"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col5_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl6_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col5_AfterColumn + $altova:nColumnWidthTw_6_6"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col6_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl6_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col6_AfterColumn + $altova:nColumnWidthTw_6_7"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col7_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl6_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col7_AfterColumn + $altova:nColumnWidthTw_6_8"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col8_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl6_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col8_AfterColumn + $altova:nColumnWidthTw_6_9"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col9_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl6_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col9_AfterColumn + $altova:nColumnWidthTw_6_10"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col10_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl6_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col10_AfterColumn + $altova:nColumnWidthTw_6_11"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col11_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl6_Col12_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col11_AfterColumn + $altova:nColumnWidthTw_6_12"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col12_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl6_Col13_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col12_AfterColumn + $altova:nColumnWidthTw_6_13"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col13_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl6_Col14_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col13_AfterColumn + $altova:nColumnWidthTw_6_14"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col14_AfterColumn)"/>
            </xsl:variable>
            <xsl:if test="$templatetablelevel + 1 = 1">
                <xsl:value-of select="$tablestyle6"/>
                <xsl:value-of select="$altova:RowStyle27"/>
            </xsl:if>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="@listNumber">
                <xsl:text>{\cs433\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="string(.)"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend6"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs434\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>aantal stemmen:</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs435\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewVotesEK_aantalStemmen"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\par </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs436\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>gelden voor:</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs437\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewVotesEK_geldenVoor"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend6"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict[position() = 1]">
                <xsl:text>{\cs438\f1\fs20 </xsl:text>
                <xsl:apply-templates>
                    <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_6_2 div 1440) - 0.01042 - 0.01042"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                </xsl:apply-templates>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:for-each select="@weighted">
                    <xsl:text>{\cs439\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend6"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict[position() = 2]">
                <xsl:text>{\cs440\f1\fs20 </xsl:text>
                <xsl:apply-templates>
                    <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_6_3 div 1440) - 0.01042 - 0.01042"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                </xsl:apply-templates>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:for-each select="@weighted">
                    <xsl:text>{\cs441\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend6"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict[position() = 3]">
                <xsl:text>{\cs442\f1\fs20 </xsl:text>
                <xsl:apply-templates>
                    <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_6_4 div 1440) - 0.01042 - 0.01042"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                </xsl:apply-templates>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:for-each select="@weighted">
                    <xsl:text>{\cs443\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend6"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict[position() = 4]">
                <xsl:text>{\cs444\f1\fs20 </xsl:text>
                <xsl:apply-templates>
                    <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_6_5 div 1440) - 0.01042 - 0.01042"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                </xsl:apply-templates>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:for-each select="@weighted">
                    <xsl:text>{\cs445\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend6"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict[position() = 5]">
                <xsl:text>{\cs446\f1\fs20 </xsl:text>
                <xsl:apply-templates>
                    <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_6_6 div 1440) - 0.01042 - 0.01042"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                </xsl:apply-templates>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:for-each select="@weighted">
                    <xsl:text>{\cs447\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend6"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict[position() = 6]">
                <xsl:text>{\cs448\f1\fs20 </xsl:text>
                <xsl:apply-templates>
                    <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_6_7 div 1440) - 0.01042 - 0.01042"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                </xsl:apply-templates>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:for-each select="@weighted">
                    <xsl:text>{\cs449\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend6"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict[position() = 7]">
                <xsl:text>{\cs450\f1\fs20 </xsl:text>
                <xsl:apply-templates>
                    <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_6_8 div 1440) - 0.01042 - 0.01042"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                </xsl:apply-templates>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:for-each select="@weighted">
                    <xsl:text>{\cs451\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend6"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict[position() = 8]">
                <xsl:text>{\cs452\f1\fs20 </xsl:text>
                <xsl:apply-templates>
                    <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_6_9 div 1440) - 0.01042 - 0.01042"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                </xsl:apply-templates>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:for-each select="@weighted">
                    <xsl:text>{\cs453\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend6"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict[position() = 9]">
                <xsl:text>{\cs454\f1\fs20 </xsl:text>
                <xsl:apply-templates>
                    <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_6_10 div 1440) - 0.01042 - 0.01042"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                </xsl:apply-templates>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:for-each select="@weighted">
                    <xsl:text>{\cs455\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend6"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict[position() = 10]">
                <xsl:text>{\cs456\f1\fs20 </xsl:text>
                <xsl:apply-templates>
                    <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_6_11 div 1440) - 0.01042 - 0.01042"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                </xsl:apply-templates>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:for-each select="@weighted">
                    <xsl:text>{\cs457\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend6"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict[position() = 11]">
                <xsl:text>{\cs458\f1\fs20 </xsl:text>
                <xsl:apply-templates>
                    <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_6_12 div 1440) - 0.01042 - 0.01042"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                </xsl:apply-templates>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:for-each select="@weighted">
                    <xsl:text>{\cs459\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend6"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict[position() = 12]">
                <xsl:text>{\cs460\f1\fs20 </xsl:text>
                <xsl:apply-templates>
                    <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_6_13 div 1440) - 0.01042 - 0.01042"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                </xsl:apply-templates>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:for-each select="@weighted">
                    <xsl:text>{\cs461\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend6"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict[ @id = &quot;alle&quot; ]">
                <xsl:text>{\cs462\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text> </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:for-each select="@weighted">
                    <xsl:text>{\cs463\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend6"/>
            <xsl:if test="$templatetablelevel + 1 > 1">
                <xsl:text>{\*\nesttableprops</xsl:text>
            </xsl:if>
            <xsl:value-of select="$tablestyle6"/>
            <xsl:value-of select="$altova:RowStyle27"/>
            <xsl:value-of select="$rowend6"/>
        </xsl:for-each>
        <xsl:variable name="altova:RowStyle28">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6" select="$altova:nTableIndentTw_6"/>
            <xsl:text>\clvertalt\clmgf\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl6 + $altova:nColumnWidthTw_6_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col0_AfterColumn + $altova:nColumnWidthTw_6_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col1_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col1_AfterColumn + $altova:nColumnWidthTw_6_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col2_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col2_AfterColumn + $altova:nColumnWidthTw_6_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col3_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col3_AfterColumn + $altova:nColumnWidthTw_6_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col4_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col4_AfterColumn + $altova:nColumnWidthTw_6_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col5_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col5_AfterColumn + $altova:nColumnWidthTw_6_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col6_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col6_AfterColumn + $altova:nColumnWidthTw_6_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col7_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col7_AfterColumn + $altova:nColumnWidthTw_6_8"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col8_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col8_AfterColumn + $altova:nColumnWidthTw_6_9"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col9_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col9_AfterColumn + $altova:nColumnWidthTw_6_10"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col10_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col10_AfterColumn + $altova:nColumnWidthTw_6_11"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col11_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col12_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col11_AfterColumn + $altova:nColumnWidthTw_6_12"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col12_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col13_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col12_AfterColumn + $altova:nColumnWidthTw_6_13"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col13_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col14_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col13_AfterColumn + $altova:nColumnWidthTw_6_14"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col14_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle6"/>
            <xsl:value-of select="$altova:RowStyle28"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs464\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Totaal aantal stemmen per provincie</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs465\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotesEK_stemmenPerProvincie"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict[position() = 1]">
                <xsl:for-each select="@weighted">
                    <xsl:text>{\cs466\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict[position() = 2]">
                <xsl:for-each select="@weighted">
                    <xsl:text>{\cs467\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict[position() = 3]">
                <xsl:for-each select="@weighted">
                    <xsl:text>{\cs468\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict[position() = 4]">
                <xsl:for-each select="@weighted">
                    <xsl:text>{\cs469\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict[position() = 5]">
                <xsl:for-each select="@weighted">
                    <xsl:text>{\cs470\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict[position() = 6]">
                <xsl:for-each select="@weighted">
                    <xsl:text>{\cs471\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict[position() = 7]">
                <xsl:for-each select="@weighted">
                    <xsl:text>{\cs472\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict[position() = 8]">
                <xsl:for-each select="@weighted">
                    <xsl:text>{\cs473\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict[position() = 9]">
                <xsl:for-each select="@weighted">
                    <xsl:text>{\cs474\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict[position() = 10]">
                <xsl:text>{\cs475\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select=".*//rg:ElectoralDistrictsOverview/rg:ElectoralDistrictName[position() = 10]/@voteValue"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict[position() = 11]">
                <xsl:text>{\cs476\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select=".*//rg:ElectoralDistrictsOverview/rg:ElectoralDistrictName[position() = 11]/@voteValue"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict[position() = 12]">
                <xsl:text>{\cs477\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select=".*//rg:ElectoralDistrictsOverview/rg:ElectoralDistrictName[position() = 12]/@voteValue"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle6"/>
        <xsl:value-of select="$altova:RowStyle28"/>
        <xsl:value-of select="$rowend6"/>
        <xsl:variable name="altova:RowStyle29">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6" select="$altova:nTableIndentTw_6"/>
            <xsl:text>\clvertalt\clmgf\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl6 + $altova:nColumnWidthTw_6_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col0_AfterColumn + $altova:nColumnWidthTw_6_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col1_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col1_AfterColumn + $altova:nColumnWidthTw_6_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col2_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col2_AfterColumn + $altova:nColumnWidthTw_6_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col3_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col3_AfterColumn + $altova:nColumnWidthTw_6_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col4_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col4_AfterColumn + $altova:nColumnWidthTw_6_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col5_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col5_AfterColumn + $altova:nColumnWidthTw_6_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col6_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col6_AfterColumn + $altova:nColumnWidthTw_6_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col7_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col7_AfterColumn + $altova:nColumnWidthTw_6_8"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col8_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col8_AfterColumn + $altova:nColumnWidthTw_6_9"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col9_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col9_AfterColumn + $altova:nColumnWidthTw_6_10"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col10_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col10_AfterColumn + $altova:nColumnWidthTw_6_11"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col11_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col12_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col11_AfterColumn + $altova:nColumnWidthTw_6_12"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col12_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col13_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col12_AfterColumn + $altova:nColumnWidthTw_6_13"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col13_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl6_Col14_AfterColumn" select="$altova:CurrGridPos_Tbl6_Col13_AfterColumn + $altova:nColumnWidthTw_6_14"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl6_Col14_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle6"/>
            <xsl:value-of select="$altova:RowStyle29"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs478\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Totaal aantal uitgebrachte stemmen</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs479\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotesEK_uitgebrachteStemmen"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs480\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs481\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs482\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs483\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs484\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs485\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs486\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs487\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs488\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs489\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs490\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs491\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict[@id = &quot;alle&quot;]">
                <xsl:for-each select="@weighted">
                    <xsl:text>{\cs492\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>{\cs493\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend6"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle6"/>
        <xsl:value-of select="$altova:RowStyle29"/>
        <xsl:value-of select="$rowend6"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 0"/>
        <xsl:text> </xsl:text>
    </xsl:template>
    <xsl:template name="OverviewCheckedLists">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:for-each select="rg:CheckingCombinedLists">
            <xsl:variable name="altova:CurrContextGrid_06A5ADF8" select="."/>
            <xsl:variable name="altova:nTableWidthIn_7" select="$altova:nMaxWidthIn * 1.00000"/>
            <xsl:variable name="altova:nTableWidthTw_7" select="$altova:nTableWidthIn_7 * 1440"/>
            <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_7" select="round($altova:nTableWidthTw_7 * 0.25)"/>
            <xsl:variable name="altova:nTableIndentTw_7" select="0"/>
            <xsl:variable name="altova:nSumColumnWidthsTw_7" select="round(10202.50)"/>
            <xsl:variable name="altova:TableWidthFactor_7">
                <xsl:choose>
                    <xsl:when test="$altova:nSumColumnWidthsTw_7 &gt; $altova:nTableWidthTw_7">
                        <xsl:value-of select="$altova:nTableWidthTw_7 div $altova:nSumColumnWidthsTw_7"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:value-of select="1"/>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:variable>
            <xsl:variable name="altova:nColumnWidthTw_7_0" select="round(1.42 * 1440 * $altova:TableWidthFactor_7)"/>
            <xsl:variable name="altova:nColumnWidthTw_7_1" select="round(1.42 * 1440 * $altova:TableWidthFactor_7)"/>
            <xsl:variable name="altova:nColumnWidthTw_7_2" select="round(1.42 * 1440 * $altova:TableWidthFactor_7)"/>
            <xsl:variable name="altova:nColumnWidthTw_7_3" select="round(1.42 * 1440 * $altova:TableWidthFactor_7)"/>
            <xsl:variable name="altova:nColumnWidthTw_7_4" select="round(1.42 * 1440 * $altova:TableWidthFactor_7)"/>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:variable name="tablestyle7">
                <xsl:text>\trowd\trleft</xsl:text>
                <xsl:value-of select="$altova:nTableIndentTw_7"/>
                <xsl:text>\ts494\ts495\ts496\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrs\brdrcf1\brdrw15\trbrdrl\brdrnil\trbrdrb\brdrs\brdrcf1\brdrw15\trbrdrr\brdrnil</xsl:text>
            </xsl:variable>
            <xsl:variable name="rowend7">
                <xsl:choose>
                    <xsl:when test="$templatetablelevel + 1 = 1">
                        <xsl:text>\row\pard</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:variable>
            <xsl:variable name="cellend7">
                <xsl:choose>
                    <xsl:when test="$templatetablelevel + 1 = 1">
                        <xsl:text>\cell</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>\nestcell</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:variable>
            <xsl:variable name="altova:RowStyle30">
                <xsl:text>\trrh0\trhdr</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl7" select="$altova:nTableIndentTw_7"/>
                <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl7_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl7 + $altova:nColumnWidthTw_7_0"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl7_Col0_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl7_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl7_Col0_AfterColumn + $altova:nColumnWidthTw_7_1"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl7_Col1_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl7_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl7_Col1_AfterColumn + $altova:nColumnWidthTw_7_2"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl7_Col2_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl7_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl7_Col2_AfterColumn + $altova:nColumnWidthTw_7_3"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl7_Col3_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl7_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl7_Col3_AfterColumn + $altova:nColumnWidthTw_7_4"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl7_Col4_AfterColumn)"/>
            </xsl:variable>
            <xsl:if test="$templatetablelevel + 1 = 1">
                <xsl:value-of select="$tablestyle7"/>
                <xsl:value-of select="$altova:RowStyle30"/>
            </xsl:if>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs497\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Nummer lijstencombinatie</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs498\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewCheckedLists_NummerLijstencombinatie"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend7"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs499\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Nummers van de verbonden lijsten (groepen)</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs500\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewCheckedLists_verbonden"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend7"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs501\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Aantal stemmen</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs502\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewCheckedLists_AantalStemmen"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend7"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs503\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Lijsten ten aanzien waarvan deze combinaties in aanmerking worden genomen</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs504\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewCheckedLists_LijstenTenAanzien"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend7"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs505\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Aantallen stemmen van de lijstencombinaties</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs506\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewCheckedLists_AantallenStemmenLijstencombinaties"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend7"/>
            <xsl:if test="$templatetablelevel + 1 > 1">
                <xsl:text>{\*\nesttableprops</xsl:text>
            </xsl:if>
            <xsl:value-of select="$tablestyle7"/>
            <xsl:value-of select="$altova:RowStyle30"/>
            <xsl:value-of select="$rowend7"/>
            <xsl:for-each select="rg:CheckingCombinedListsLine">
                <xsl:variable name="altova:RowStyle31">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl7" select="$altova:nTableIndentTw_7"/>
                    <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl7_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl7 + $altova:nColumnWidthTw_7_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl7_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl7_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl7_Col0_AfterColumn + $altova:nColumnWidthTw_7_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl7_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl7_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl7_Col1_AfterColumn + $altova:nColumnWidthTw_7_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl7_Col2_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl7_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl7_Col2_AfterColumn + $altova:nColumnWidthTw_7_3"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl7_Col3_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl7_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl7_Col3_AfterColumn + $altova:nColumnWidthTw_7_4"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl7_Col4_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle7"/>
                    <xsl:value-of select="$altova:RowStyle31"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\qr\sl0\ri960\f1\fs22 </xsl:text>
                <xsl:for-each select="rg:CombinedListId">
                    <xsl:text>{\cs507\f1\fs20 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_7_0 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend7"/>
                <xsl:text>\qr\sl0\ri960\f1\fs22 </xsl:text>
                <xsl:for-each select="rg:NumberList">
                    <xsl:text>{\cs508\f1\fs20 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_7_1 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend7"/>
                <xsl:text>\qr\sl0\ri720\f1\fs22 </xsl:text>
                <xsl:for-each select="rg:NumberOfVotesList">
                    <xsl:text>{\cs509\f1\fs20 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_7_2 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend7"/>
                <xsl:text>\qr\sl0\ri960\f1\fs22 </xsl:text>
                <xsl:if test="rg:Regarded = &quot;true&quot;">
                    <xsl:for-each select="rg:NumberList">
                        <xsl:text>{\cs510\f1\fs20 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_7_3 div 1440) - 0.01042 - 0.01042"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:if>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend7"/>
                <xsl:text>\qr\sl0\ri720\f1\fs22 </xsl:text>
                <xsl:for-each select="rg:NumberOfVotesCombinedList">
                    <xsl:text>{\cs511\f1\fs20 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_7_4 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend7"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle7"/>
                <xsl:value-of select="$altova:RowStyle31"/>
                <xsl:value-of select="$rowend7"/>
            </xsl:for-each>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 0"/>
            <xsl:text> </xsl:text>
        </xsl:for-each>
    </xsl:template>
    <xsl:template name="OverviewFirstAssigment">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="isEK" select="0"/>
        <xsl:for-each select="rg:FirstAssignment">
            <xsl:variable name="altova:CurrContextGrid_06A5B698" select="."/>
            <xsl:variable name="altova:nTableWidthIn_8" select="$altova:nMaxWidthIn * 1.00000"/>
            <xsl:variable name="altova:nTableWidthTw_8" select="$altova:nTableWidthIn_8 * 1440"/>
            <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_8" select="round($altova:nTableWidthTw_8 * 0.25)"/>
            <xsl:variable name="altova:nTableIndentTw_8" select="0"/>
            <xsl:variable name="altova:nSumColumnWidthsTw_8" select="round(2001.00)"/>
            <xsl:variable name="altova:TableWidthFactor_8">
                <xsl:choose>
                    <xsl:when test="$altova:nSumColumnWidthsTw_8 &gt; $altova:nTableWidthTw_8">
                        <xsl:value-of select="($altova:nTableWidthTw_8 - $altova:SumDefaultColumnsForWideTableTw_8) div $altova:nSumColumnWidthsTw_8"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:value-of select="1"/>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:variable>
            <xsl:variable name="altova:nColumnsWithDefaultWidth_8" select="round(2)"/>
            <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_8">
                <xsl:choose>
                    <xsl:when test="$altova:nColumnsWithDefaultWidth_8 = 0">
                        <xsl:value-of select="round(2)"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:value-of select="$altova:nColumnsWithDefaultWidth_8"/>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:variable>
            <xsl:variable name="altova:nDefaultColumnWidthTw_8">
                <xsl:choose>
                    <xsl:when test="$altova:TableWidthFactor_8 &lt; 1">
                        <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_8 div $altova:nColumnsWithDefaultWidthNotZero_8"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:value-of select="round(($altova:nTableWidthTw_8 - $altova:nSumColumnWidthsTw_8) div $altova:nColumnsWithDefaultWidthNotZero_8)"/>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:variable>
            <xsl:variable name="altova:nColumnWidthTw_8_0" select="round(0.42 * 1440 * $altova:TableWidthFactor_8)"/>
            <xsl:variable name="altova:nColumnWidthTw_8_1" select="round(0.97 * 1440 * $altova:TableWidthFactor_8)"/>
            <xsl:variable name="altova:nColumnWidthTw_8_2" select="$altova:nDefaultColumnWidthTw_8"/>
            <xsl:variable name="altova:nColumnWidthTw_8_3" select="$altova:nDefaultColumnWidthTw_8"/>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:variable name="tablestyle8">
                <xsl:text>\trowd\trleft</xsl:text>
                <xsl:value-of select="$altova:nTableIndentTw_8"/>
                <xsl:text>\ts512\ts513\ts514\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrs\brdrcf1\brdrw15\trbrdrl\brdrnil\trbrdrb\brdrs\brdrcf1\brdrw15\trbrdrr\brdrnil</xsl:text>
            </xsl:variable>
            <xsl:variable name="rowend8">
                <xsl:choose>
                    <xsl:when test="$templatetablelevel + 1 = 1">
                        <xsl:text>\row\pard</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:variable>
            <xsl:variable name="cellend8">
                <xsl:choose>
                    <xsl:when test="$templatetablelevel + 1 = 1">
                        <xsl:text>\cell</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>\nestcell</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:variable>
            <xsl:variable name="altova:RowStyle32">
                <xsl:text>\trrh0\trhdr</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl8" select="$altova:nTableIndentTw_8"/>
                <xsl:text>\clvertalt\clmgf\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl8_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl8 + $altova:nColumnWidthTw_8_0"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl8_Col0_AfterColumn)"/>
                <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl8_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl8_Col0_AfterColumn + $altova:nColumnWidthTw_8_1"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl8_Col1_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl8_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl8_Col1_AfterColumn + $altova:nColumnWidthTw_8_2"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl8_Col2_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl8_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl8_Col2_AfterColumn + $altova:nColumnWidthTw_8_3"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl8_Col3_AfterColumn)"/>
            </xsl:variable>
            <xsl:if test="$templatetablelevel + 1 = 1">
                <xsl:value-of select="$tablestyle8"/>
                <xsl:value-of select="$altova:RowStyle32"/>
            </xsl:if>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:choose>
                <xsl:when test="//kr:ElectionSubcategory[ text() != &quot;EK&quot; ]">
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs515\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>Lijstencombinatie, lijst</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs516\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewFirstAssigment_LijstencombinatieLijst"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs517\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>Lijst</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs518\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewFirstAssigment_Lijst"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend8"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend8"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs519\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Aantal stemmen</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs520\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewFirstAssigment_AantalStemmen"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend8"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs521\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Quotiënt bij deling</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs522\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewFirstAssigment_Quotiënt"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\par </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs523\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>door de kiesdeler</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs524\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewFirstAssigment_doorDeKiesdeler"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend8"/>
            <xsl:if test="$templatetablelevel + 1 > 1">
                <xsl:text>{\*\nesttableprops</xsl:text>
            </xsl:if>
            <xsl:value-of select="$tablestyle8"/>
            <xsl:value-of select="$altova:RowStyle32"/>
            <xsl:value-of select="$rowend8"/>
            <xsl:for-each select="rg:FirstAssignmentLine">
                <xsl:variable name="altova:RowStyle33">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl8" select="$altova:nTableIndentTw_8"/>
                    <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl8_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl8 + $altova:nColumnWidthTw_8_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl8_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt100\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl8_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl8_Col0_AfterColumn + $altova:nColumnWidthTw_8_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl8_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl8_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl8_Col1_AfterColumn + $altova:nColumnWidthTw_8_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl8_Col2_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl8_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl8_Col2_AfterColumn + $altova:nColumnWidthTw_8_3"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl8_Col3_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle8"/>
                    <xsl:value-of select="$altova:RowStyle33"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="rg:ListOrCombinedList">
                    <xsl:for-each select="@combinationId">
                        <xsl:text>{\cs525\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="string(.)"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                    <xsl:for-each select="@listNumber">
                        <xsl:text>{\cs526\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="string(.)"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend8"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:if test="count(rg:ListOrCombinedList/rg:ListInCombination) &gt;0">
                    <xsl:text>{\cs527\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>(</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                    <xsl:for-each select="rg:ListOrCombinedList">
                        <xsl:for-each select="rg:ListInCombination">
                            <xsl:text>{\cs528\f1\fs20 </xsl:text>
                            <xsl:apply-templates>
                                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_8_1 div 1440) - 0.06944 - 0.01042"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                            </xsl:apply-templates>
                            <xsl:text>}</xsl:text>
                            <xsl:if test="position() != last()">
                                <xsl:text>{\cs529\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>, </xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:if>
                        </xsl:for-each>
                    </xsl:for-each>
                    <xsl:text>{\cs530\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>)</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:if>
                <xsl:choose>
                    <xsl:when test="//kr:ElectionSubcategory[text()= &apos;PS2&apos; or text()= &apos;TK&apos;]">
                        <xsl:for-each select="rg:ListOrCombinedList">
                            <xsl:if test="@districtNumber">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\cs531\f1\fs20 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text>(Kieskring </xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\cs532\f1\fs20 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP22_OverviewFirstAssigment_Kieskring"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <xsl:for-each select="@districtNumber">
                                    <xsl:text>{\cs533\f1\fs20 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="string(.)"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                    <xsl:text>{\cs534\f1\fs20 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>)</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:for-each>
                            </xsl:if>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:when test="//kr:ElectionSubcategory[text()= &apos;EK&apos;]">
                        <xsl:for-each select="rg:ListOrCombinedList">
                            <xsl:if test="@provinceName">
                                <xsl:for-each select="@provinceName">
                                    <xsl:text>{\cs535\f1\fs20 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>(</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                    <xsl:text>{\cs536\f1\fs20 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="string(.)"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                    <xsl:text>{\cs537\f1\fs20 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>)</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:for-each>
                            </xsl:if>
                        </xsl:for-each>
                    </xsl:when>
                </xsl:choose>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend8"/>
                <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="rg:Votes">
                    <xsl:text>{\cs538\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_8_2 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend8"/>
                <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="rg:Seats">
                    <xsl:text>{\cs539\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_8_3 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend8"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle8"/>
                <xsl:value-of select="$altova:RowStyle33"/>
                <xsl:value-of select="$rowend8"/>
            </xsl:for-each>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 0"/>
            <xsl:text> </xsl:text>
            <xsl:text>\par </xsl:text>
            <xsl:call-template name="LineBreakTable">
                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
            </xsl:call-template>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs540\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Overeenkomstig artikel </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs541\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewFirstAssigment_Overeenkomstig"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
                <xsl:when test="//kr:ElectionSubcategory[ text() != &quot;EK&quot; ]">
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs542\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>P 6</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs543\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewFirstAssigment_P6"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs544\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>U 8</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs545\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewFirstAssigment_U8"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs546\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> van de Kieswet wordt aan elke </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs547\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewFirstAssigment_vanDeKieswet"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:if test="//kr:ElectionSubcategory[ text() != &quot;EK&quot; ]">
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs548\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>lijstencombinatie en aan elke </xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs549\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_OverviewFirstAssigment_lijstencombinatie"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:if>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs550\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>lijst toegewezen het aantal zetels gelijk aan het bovenvermelde quotiënt.</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs551\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewFirstAssigment_lijstToegewezen"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:call-template name="LineBreak">
                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
            </xsl:call-template>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs552\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Het aantal toegewezen zetels bedraagt derhalve: </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs553\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewFirstAssigment_aantalToegewezen"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:for-each select="rg:TotalSeatsAssigned">
                <xsl:text>{\cs554\f1\fs22 </xsl:text>
                <xsl:apply-templates>
                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                </xsl:apply-templates>
                <xsl:text>}</xsl:text>
            </xsl:for-each>
            <xsl:call-template name="LineBreak">
                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
            </xsl:call-template>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs555\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Het aantal restzetels bedraagt: </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs556\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewFirstAssigment_aantalRestzetels"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:for-each select="rg:ResidualSeats">
                <xsl:text>{\cs557\f1\fs22 </xsl:text>
                <xsl:apply-templates>
                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                </xsl:apply-templates>
                <xsl:text>}</xsl:text>
            </xsl:for-each>
            <xsl:call-template name="LineBreakTable">
                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
            </xsl:call-template>
        </xsl:for-each>
    </xsl:template>
    <xsl:template name="OverviewDHondtAssignment">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="articleLoting" select="&apos;&apos;"/>
        <xsl:for-each select="rg:DHondtAssignment">
            <xsl:choose>
                <xsl:when test="count( rg:DHondtAssignmentLine[ position() = 1] / rg:DHondtFraction )  &lt;= 2">
                    <xsl:call-template name="OverviewDHondtTable2">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                </xsl:when>
                <xsl:when test="count( rg:DHondtAssignmentLine[ position() = 1 ] / rg:DHondtFraction ) = 3">
                    <xsl:call-template name="OverviewDHondtTable3">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:call-template name="OverviewDHondtTable4">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                    <xsl:if test="count( rg:DHondtAssignmentLine[ position()=1 ]/rg:DHondtFraction )  &gt; 4">
                        <xsl:call-template name="LineBreak">
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:call-template>
                        <xsl:text>\page </xsl:text>
                        <xsl:call-template name="OverviewDHondtTable5-10">
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:call-template>
                    </xsl:if>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:for-each select="rg:Allotting">
                <xsl:text>\par </xsl:text>
                <xsl:text>\par </xsl:text>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs558\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>Overeenkomstig artikel </xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs559\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_OverviewDHondtAssignment_Overeenkomstig"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="$articleLoting != &quot;&quot;">
                        <xsl:text>{\cs560\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$articleLoting"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:choose>
                            <xsl:when test="@article = &quot;P13&quot;">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\cs561\f1\fs22 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text>P 13</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\cs562\f1\fs22 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP22_OverviewDHondtAssignment_P13"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:when test="@article = &quot;U13&quot;">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\cs563\f1\fs22 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text>U 13</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\cs564\f1\fs22 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP22_OverviewDHondtAssignment_U13"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\cs565\f1\fs22 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text>P 7</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\cs566\f1\fs22 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP22_OverviewDHondtAssignment_P7"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs567\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>, eerste lid van de Kieswet heeft een loting plaatsgevonden tussen </xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs568\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_OverviewDHondtAssignment_eersteLid"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:for-each select="rg:Winner">
                    <xsl:call-template name="ListOrCombinedList">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                </xsl:for-each>
                <xsl:for-each select="rg:Looser">
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs569\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text> en </xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs570\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewDHondtAssignment_en"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:call-template name="ListOrCombinedList">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                </xsl:for-each>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs571\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>. Als gevolg hiervan is een restzetel toegewezen aan </xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs572\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_OverviewDHondtAssignment_AlsGevolg"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:for-each select="rg:Winner">
                    <xsl:call-template name="ListOrCombinedList">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                </xsl:for-each>
                <xsl:text>{\cs573\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>.</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:for-each>
        </xsl:for-each>
    </xsl:template>
    <xsl:template name="OverviewListResult">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:variable name="altova:CurrContextGrid_06A64538" select="."/>
        <xsl:variable name="altova:nTableWidthIn_9" select="$altova:nMaxWidthIn * 1.00000"/>
        <xsl:variable name="altova:nTableWidthTw_9" select="$altova:nTableWidthIn_9 * 1440"/>
        <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_9" select="round($altova:nTableWidthTw_9 * 0.25)"/>
        <xsl:variable name="altova:nTableIndentTw_9" select="0"/>
        <xsl:variable name="altova:nSumColumnWidthsTw_9" select="round(3401.00)"/>
        <xsl:variable name="altova:TableWidthFactor_9">
            <xsl:choose>
                <xsl:when test="$altova:nSumColumnWidthsTw_9 &gt; $altova:nTableWidthTw_9">
                    <xsl:value-of select="($altova:nTableWidthTw_9 - $altova:SumDefaultColumnsForWideTableTw_9) div $altova:nSumColumnWidthsTw_9"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="1"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnsWithDefaultWidth_9" select="round(1)"/>
        <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_9">
            <xsl:choose>
                <xsl:when test="$altova:nColumnsWithDefaultWidth_9 = 0">
                    <xsl:value-of select="round(1)"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="$altova:nColumnsWithDefaultWidth_9"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nDefaultColumnWidthTw_9">
            <xsl:choose>
                <xsl:when test="$altova:TableWidthFactor_9 &lt; 1">
                    <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_9 div $altova:nColumnsWithDefaultWidthNotZero_9"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="round(($altova:nTableWidthTw_9 - $altova:nSumColumnWidthsTw_9) div $altova:nColumnsWithDefaultWidthNotZero_9)"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnWidthTw_9_0" select="$altova:nDefaultColumnWidthTw_9"/>
        <xsl:variable name="altova:nColumnWidthTw_9_1" select="round(1.25 * 1440 * $altova:TableWidthFactor_9)"/>
        <xsl:variable name="altova:nColumnWidthTw_9_2" select="round(1.11 * 1440 * $altova:TableWidthFactor_9)"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:variable name="tablestyle9">
            <xsl:text>\trowd\trleft</xsl:text>
            <xsl:value-of select="$altova:nTableIndentTw_9"/>
            <xsl:text>\ts574\ts575\ts576\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrs\brdrcf1\brdrw15\trbrdrl\brdrnil\trbrdrb\brdrs\brdrcf1\brdrw15\trbrdrr\brdrnil</xsl:text>
        </xsl:variable>
        <xsl:variable name="rowend9">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\row\pard</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="cellend9">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\cell</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestcell</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:RowStyle34">
            <xsl:text>\trrh0\trhdr</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl9" select="$altova:nTableIndentTw_9"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl9_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl9 + $altova:nColumnWidthTw_9_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl9_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl9_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl9_Col0_AfterColumn + $altova:nColumnWidthTw_9_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl9_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl9_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl9_Col1_AfterColumn + $altova:nColumnWidthTw_9_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl9_Col2_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle9"/>
            <xsl:value-of select="$altova:RowStyle34"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs577\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Aanduiding van de groepering</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs578\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewListResult_Aanduiding"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs579\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>*</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs580\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewListResult_FootnoteSign1"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend9"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs581\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Lijstnummer</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs582\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewListResult_Lijstnummer"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend9"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs583\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Aantal zetels</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs584\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewListResult_AantalZetels"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend9"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle9"/>
        <xsl:value-of select="$altova:RowStyle34"/>
        <xsl:value-of select="$rowend9"/>
        <xsl:for-each select="rg:OverviewOfCandidatesAndResults">
            <xsl:for-each select="rg:ListGroupAndResults">
                <xsl:sort select="rg:Seats" data-type="number" order="descending"/>
                <xsl:sort select="rg:Votes" data-type="number" order="descending"/>
                <xsl:sort select="eml:AffiliationIdentifier/@Id" data-type="number" order="ascending"/>
                <xsl:variable name="altova:RowStyle35">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl9" select="$altova:nTableIndentTw_9"/>
                    <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl9_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl9 + $altova:nColumnWidthTw_9_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl9_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl9_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl9_Col0_AfterColumn + $altova:nColumnWidthTw_9_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl9_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl9_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl9_Col1_AfterColumn + $altova:nColumnWidthTw_9_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl9_Col2_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle9"/>
                    <xsl:value-of select="$altova:RowStyle35"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="eml:AffiliationIdentifier">
                    <xsl:for-each select="eml:RegisteredName">
                        <xsl:text>{\cs585\f1\fs22 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_9_0 div 1440) - 0.01042 - 0.01042"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend9"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="eml:AffiliationIdentifier">
                    <xsl:for-each select="@Id">
                        <xsl:text>{\cs586\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="string(.)"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend9"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="rg:Seats">
                    <xsl:text>{\cs587\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_9_2 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend9"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle9"/>
                <xsl:value-of select="$altova:RowStyle35"/>
                <xsl:value-of select="$rowend9"/>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 0"/>
        <xsl:text> </xsl:text>
        <xsl:text>\par </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs588\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>*</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs589\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewListResult_FootnoteSign2"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs590\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Vermelding in volgorde van het aantal behaalde zetels</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs591\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewListResult_Vermelding"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="OverviewListResultAndSeats">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:variable name="altova:CurrContextGrid_06A64DD8" select="."/>
        <xsl:variable name="altova:nTableWidthIn_10" select="$altova:nMaxWidthIn * 1.00000"/>
        <xsl:variable name="altova:nTableWidthTw_10" select="$altova:nTableWidthIn_10 * 1440"/>
        <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_10" select="round($altova:nTableWidthTw_10 * 0.25)"/>
        <xsl:variable name="altova:nTableIndentTw_10" select="0"/>
        <xsl:variable name="altova:nSumColumnWidthsTw_10" select="round(6001.50)"/>
        <xsl:variable name="altova:TableWidthFactor_10">
            <xsl:choose>
                <xsl:when test="$altova:nSumColumnWidthsTw_10 &gt; $altova:nTableWidthTw_10">
                    <xsl:value-of select="($altova:nTableWidthTw_10 - $altova:SumDefaultColumnsForWideTableTw_10) div $altova:nSumColumnWidthsTw_10"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="1"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnsWithDefaultWidth_10" select="round(1)"/>
        <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_10">
            <xsl:choose>
                <xsl:when test="$altova:nColumnsWithDefaultWidth_10 = 0">
                    <xsl:value-of select="round(1)"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="$altova:nColumnsWithDefaultWidth_10"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nDefaultColumnWidthTw_10">
            <xsl:choose>
                <xsl:when test="$altova:TableWidthFactor_10 &lt; 1">
                    <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_10 div $altova:nColumnsWithDefaultWidthNotZero_10"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="round(($altova:nTableWidthTw_10 - $altova:nSumColumnWidthsTw_10) div $altova:nColumnsWithDefaultWidthNotZero_10)"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnWidthTw_10_0" select="$altova:nDefaultColumnWidthTw_10"/>
        <xsl:variable name="altova:nColumnWidthTw_10_1" select="round(1.39 * 1440 * $altova:TableWidthFactor_10)"/>
        <xsl:variable name="altova:nColumnWidthTw_10_2" select="round(1.39 * 1440 * $altova:TableWidthFactor_10)"/>
        <xsl:variable name="altova:nColumnWidthTw_10_3" select="round(1.39 * 1440 * $altova:TableWidthFactor_10)"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:variable name="tablestyle10">
            <xsl:text>\trowd\trleft</xsl:text>
            <xsl:value-of select="$altova:nTableIndentTw_10"/>
            <xsl:text>\ts592\ts593\ts594\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrs\brdrcf1\brdrw15\trbrdrl\brdrnil\trbrdrb\brdrs\brdrcf1\brdrw15\trbrdrr\brdrnil</xsl:text>
        </xsl:variable>
        <xsl:variable name="rowend10">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\row\pard</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="cellend10">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\cell</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestcell</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:RowStyle36">
            <xsl:text>\trrh0\trhdr</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl10" select="$altova:nTableIndentTw_10"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl10_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl10 + $altova:nColumnWidthTw_10_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl10_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl10_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl10_Col0_AfterColumn + $altova:nColumnWidthTw_10_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl10_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl10_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl10_Col1_AfterColumn + $altova:nColumnWidthTw_10_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl10_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl10_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl10_Col2_AfterColumn + $altova:nColumnWidthTw_10_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl10_Col3_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle10"/>
            <xsl:value-of select="$altova:RowStyle36"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs595\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Aanduiding van de groepering</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs596\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewListResultAndSeats_Aanduiding"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend10"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs597\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Lijst</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs598\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewListResultAndSeats_Lijst"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend10"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs599\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Totaal aantal stemmen</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs600\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewListResultAndSeats_aantalStemmen"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend10"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs601\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Toegewezen aantal zetels</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs602\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewListResultAndSeats_aantalZetels"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend10"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle10"/>
        <xsl:value-of select="$altova:RowStyle36"/>
        <xsl:value-of select="$rowend10"/>
        <xsl:for-each select="rg:OverviewOfCandidatesAndResults">
            <xsl:for-each select="rg:ListGroupAndResults">
                <xsl:sort select="eml:AffiliationIdentifier/@Id" data-type="number" order="ascending"/>
                <xsl:variable name="altova:RowStyle37">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl10" select="$altova:nTableIndentTw_10"/>
                    <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl10_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl10 + $altova:nColumnWidthTw_10_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl10_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl10_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl10_Col0_AfterColumn + $altova:nColumnWidthTw_10_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl10_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl10_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl10_Col1_AfterColumn + $altova:nColumnWidthTw_10_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl10_Col2_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl10_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl10_Col2_AfterColumn + $altova:nColumnWidthTw_10_3"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl10_Col3_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle10"/>
                    <xsl:value-of select="$altova:RowStyle37"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="eml:AffiliationIdentifier">
                    <xsl:for-each select="eml:RegisteredName">
                        <xsl:text>{\cs603\f1\fs22 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_10_0 div 1440) - 0.01042 - 0.01042"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend10"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="eml:AffiliationIdentifier">
                    <xsl:for-each select="@Id">
                        <xsl:text>{\cs604\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="string(.)"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend10"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="rg:Votes">
                    <xsl:text>{\cs605\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_10_2 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend10"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="rg:Seats">
                    <xsl:text>{\cs606\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_10_3 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend10"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle10"/>
                <xsl:value-of select="$altova:RowStyle37"/>
                <xsl:value-of select="$rowend10"/>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 0"/>
        <xsl:text> </xsl:text>
    </xsl:template>
    <xsl:template name="OverviewCandidateResultP22-1-J">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="isSeats" select="1"/>
        <xsl:for-each select="rg:OverviewOfCandidatesAndResults">
            <xsl:variable name="noOfCandidatesPerPage" select="39"/>
            <xsl:for-each select="rg:ListGroupAndResults">
                <xsl:if test="($isSeats = 1 and rg:Seats &gt; 0) or ($isSeats = 0 and rg:Seats = 0)">
                    <xsl:for-each select="rg:ListAndResults">
                        <xsl:variable name="candidateCount" select="count(rg:CandidateAndResult)"/>
                        <xsl:choose>
                            <xsl:when test="$candidateCount != ($noOfCandidatesPerPage + 1) and 
$candidateCount != ($noOfCandidatesPerPage * 2 + 1) and 
$candidateCount != ($noOfCandidatesPerPage * 2 + 2)">
                                <xsl:call-template name="OverviewCandidateResultP22-1-J-Base">
                                    <xsl:with-param name="isSeats" select="$isSeats"/>
                                    <xsl:with-param name="fromLine" select="1"/>
                                    <xsl:with-param name="tillLine" select="$noOfCandidatesPerPage"/>
                                    <xsl:with-param name="candidateCount" select="count(rg:CandidateAndResult)"/>
                                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                                </xsl:call-template>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:call-template name="OverviewCandidateResultP22-1-J-Base">
                                    <xsl:with-param name="isSeats" select="$isSeats"/>
                                    <xsl:with-param name="fromLine" select="1"/>
                                    <xsl:with-param name="tillLine" select="$noOfCandidatesPerPage + 1"/>
                                    <xsl:with-param name="candidateCount" select="count(rg:CandidateAndResult)"/>
                                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                                </xsl:call-template>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="$candidateCount &gt;= ($noOfCandidatesPerPage + 2) and 
$candidateCount != ($noOfCandidatesPerPage * 2 + 1) and 
$candidateCount != ($noOfCandidatesPerPage * 2 + 2)">
                                <xsl:call-template name="OverviewCandidateResultP22-1-J-Base">
                                    <xsl:with-param name="isSeats" select="$isSeats"/>
                                    <xsl:with-param name="fromLine" select="$noOfCandidatesPerPage + 1"/>
                                    <xsl:with-param name="tillLine" select="$noOfCandidatesPerPage * 2"/>
                                    <xsl:with-param name="candidateCount" select="count(rg:CandidateAndResult)"/>
                                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                                </xsl:call-template>
                            </xsl:when>
                            <xsl:when test="$candidateCount = ($noOfCandidatesPerPage * 2 + 1) or 
$candidateCount = ($noOfCandidatesPerPage * 2 + 2)">
                                <xsl:call-template name="OverviewCandidateResultP22-1-J-Base">
                                    <xsl:with-param name="isSeats" select="$isSeats"/>
                                    <xsl:with-param name="fromLine" select="$noOfCandidatesPerPage + 2"/>
                                    <xsl:with-param name="tillLine" select="$noOfCandidatesPerPage * 2 + 2"/>
                                    <xsl:with-param name="candidateCount" select="count(rg:CandidateAndResult)"/>
                                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                                </xsl:call-template>
                            </xsl:when>
                        </xsl:choose>
                        <xsl:if test="count(rg:CandidateAndResult) &gt;= 2 * $noOfCandidatesPerPage + 3">
                            <xsl:call-template name="OverviewCandidateResultP22-1-J-Base">
                                <xsl:with-param name="isSeats" select="$isSeats"/>
                                <xsl:with-param name="fromLine" select="$noOfCandidatesPerPage * 2 + 1"/>
                                <xsl:with-param name="tillLine" select="80"/>
                                <xsl:with-param name="candidateCount" select="count(rg:CandidateAndResult)"/>
                                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                            </xsl:call-template>
                        </xsl:if>
                    </xsl:for-each>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
    </xsl:template>
    <xsl:template name="OverviewCandidateResultP22-1-J-Base">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="isSeats" select="1"/>
        <xsl:param name="fromLine"/>
        <xsl:param name="tillLine"/>
        <xsl:param name="candidateCount"/>
        <xsl:if test="count(rg:CandidateAndResult[position() = 1]/rg:VotesInElectoralDistrictPart[position() = 1]/rg:VotesInElectoralDistrict) &lt;= 4">
            <xsl:call-template name="PartyHeaderEvenOdd">
                <xsl:with-param name="isEvenOdd" select="1"/>
                <xsl:with-param name="isSeats" select="$isSeats"/>
                <xsl:with-param name="ab" select="0"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
            </xsl:call-template>
            <xsl:call-template name="OverviewCandidateResult1-1-4">
                <xsl:with-param name="fromLine" select="$fromLine"/>
                <xsl:with-param name="tillLine" select="$tillLine"/>
                <xsl:with-param name="remainingCandidates" select="$candidateCount - $tillLine"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
            </xsl:call-template>
        </xsl:if>
        <xsl:if test="count(rg:CandidateAndResult[position() = 1]/rg:VotesInElectoralDistrictPart[position() = 1]/rg:VotesInElectoralDistrict) &gt; 4">
            <xsl:call-template name="PartyHeaderEvenOdd">
                <xsl:with-param name="isEvenOdd" select="1"/>
                <xsl:with-param name="isSeats" select="$isSeats"/>
                <xsl:with-param name="ab" select="0"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
            </xsl:call-template>
            <xsl:call-template name="OverviewCandidateResult1-1-7">
                <xsl:with-param name="fromLine" select="$fromLine"/>
                <xsl:with-param name="tillLine" select="$tillLine"/>
                <xsl:with-param name="remainingCandidates" select="$candidateCount - $tillLine"/>
                <xsl:with-param name="hasSecondPage" select="count(rg:CandidateAndResult[position() = 1]/rg:VotesInElectoralDistrictPart) = 2"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
            </xsl:call-template>
            <xsl:if test="count(rg:CandidateAndResult[position() = 1]/rg:VotesInElectoralDistrictPart) = 2">
                <xsl:call-template name="PartyHeaderEvenOdd">
                    <xsl:with-param name="isEvenOdd" select="0"/>
                    <xsl:with-param name="isSeats" select="$isSeats"/>
                    <xsl:with-param name="ab" select="0"/>
                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                </xsl:call-template>
                <xsl:call-template name="OverviewCandidateResult1-8-20">
                    <xsl:with-param name="fromLine" select="$fromLine"/>
                    <xsl:with-param name="tillLine" select="$tillLine"/>
                    <xsl:with-param name="remainingCandidates" select="$candidateCount - $tillLine"/>
                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                </xsl:call-template>
            </xsl:if>
        </xsl:if>
    </xsl:template>
    <xsl:template name="OverviewCandidateResultP22-1-K">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:for-each select="rg:OverviewOfCandidatesAndResults">
            <xsl:for-each select="rg:ListGroupAndResults">
                <xsl:if test="rg:Seats &gt; 0">
                    <xsl:text>\par </xsl:text>
                    <xsl:call-template name="PartyHeader3Lines">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                    <xsl:text>\par </xsl:text>
                    <xsl:text>\par </xsl:text>
                    <xsl:call-template name="OverviewCandidateResultElected">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                    <xsl:text>\par </xsl:text>
                    <xsl:call-template name="OverviewCandidateResultNewListOrder">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                    <xsl:text>\par </xsl:text>
                    <xsl:text>\page </xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
    </xsl:template>
    <xsl:template name="OverviewCandidateResultU16-IJ">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="isSeats" select="1"/>
        <xsl:for-each select="rg:OverviewOfCandidatesAndResults">
            <xsl:for-each select="rg:ListGroupAndResults[($isSeats = 1 and rg:Seats &gt; 0) or ($isSeats = 0 and rg:Seats = 0)]">
                <xsl:for-each select="rg:ListAndResults">
                    <xsl:variable name="candidateCount" select="count( rg:CandidateAndResult )"/>
                    <xsl:choose>
                        <xsl:when test="$candidateCount != 36 and $candidateCount != 71 and $candidateCount != 72">
                            <xsl:call-template name="OverviewCandidateResultU16-IJ-Base">
                                <xsl:with-param name="isSeats" select="$isSeats"/>
                                <xsl:with-param name="fromLine" select="1"/>
                                <xsl:with-param name="tillLine" select="35"/>
                                <xsl:with-param name="candidateCount" select="$candidateCount"/>
                                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                            </xsl:call-template>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:call-template name="OverviewCandidateResultU16-IJ-Base">
                                <xsl:with-param name="isSeats" select="$isSeats"/>
                                <xsl:with-param name="fromLine" select="1"/>
                                <xsl:with-param name="tillLine" select="36"/>
                                <xsl:with-param name="candidateCount" select="$candidateCount"/>
                                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                            </xsl:call-template>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:choose>
                        <xsl:when test="$candidateCount &gt;= 37 and $candidateCount != 71 and $candidateCount != 72">
                            <xsl:call-template name="OverviewCandidateResultU16-IJ-Base">
                                <xsl:with-param name="isSeats" select="$isSeats"/>
                                <xsl:with-param name="fromLine" select="36"/>
                                <xsl:with-param name="tillLine" select="70"/>
                                <xsl:with-param name="candidateCount" select="$candidateCount"/>
                                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                            </xsl:call-template>
                        </xsl:when>
                        <xsl:when test="$candidateCount = 71 or $candidateCount = 72">
                            <xsl:call-template name="OverviewCandidateResultU16-IJ-Base">
                                <xsl:with-param name="isSeats" select="$isSeats"/>
                                <xsl:with-param name="fromLine" select="37"/>
                                <xsl:with-param name="tillLine" select="72"/>
                                <xsl:with-param name="candidateCount" select="$candidateCount"/>
                                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                            </xsl:call-template>
                        </xsl:when>
                    </xsl:choose>
                    <xsl:if test="$candidateCount &gt;= 72">
                        <xsl:call-template name="OverviewCandidateResultU16-IJ-Base">
                            <xsl:with-param name="isSeats" select="$isSeats"/>
                            <xsl:with-param name="fromLine" select="71"/>
                            <xsl:with-param name="tillLine" select="80"/>
                            <xsl:with-param name="candidateCount" select="$candidateCount"/>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:call-template>
                    </xsl:if>
                </xsl:for-each>
                <xsl:if test="$isSeats = 1">
                    <xsl:text>\par </xsl:text>
                    <xsl:text>\page </xsl:text>
                    <xsl:text>\par </xsl:text>
                    <xsl:call-template name="PartyHeader3Lines">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                    <xsl:text>\par </xsl:text>
                    <xsl:text>\par </xsl:text>
                    <xsl:call-template name="OverviewCandidateResultElected">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                    <xsl:call-template name="LineBreakTable">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                    <xsl:call-template name="OverviewCandidateResultNewListOrder">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
    </xsl:template>
    <xsl:template name="OverviewCandidateResultU16-IJ-Base">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="isSeats" select="1"/>
        <xsl:param name="fromLine"/>
        <xsl:param name="tillLine"/>
        <xsl:param name="candidateCount"/>
        <xsl:choose>
            <xsl:when test="count(rg:CandidateAndResult[position() = 1]/rg:VotesInElectoralDistrictPart[position() = 1]/rg:VotesInElectoralDistrict) &lt;= 3">
                <xsl:call-template name="PartyHeaderEvenOdd">
                    <xsl:with-param name="isEvenOdd" select="0"/>
                    <xsl:with-param name="isSeats" select="$isSeats"/>
                    <xsl:with-param name="ab" select="1"/>
                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                </xsl:call-template>
                <xsl:call-template name="OverviewCandidateResult-EK-1-2">
                    <xsl:with-param name="fromLine" select="$fromLine"/>
                    <xsl:with-param name="tillLine" select="$tillLine"/>
                    <xsl:with-param name="remainingCandidates" select="$candidateCount - $tillLine"/>
                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:when test="count(rg:CandidateAndResult[position() = 1]/rg:VotesInElectoralDistrictPart) = 1">
                <xsl:call-template name="PartyHeaderEvenOdd">
                    <xsl:with-param name="isEvenOdd" select="0"/>
                    <xsl:with-param name="isSeats" select="$isSeats"/>
                    <xsl:with-param name="ab" select="1"/>
                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                </xsl:call-template>
                <xsl:call-template name="OverviewCandidateResult-EK-1-4">
                    <xsl:with-param name="fromLine" select="$fromLine"/>
                    <xsl:with-param name="tillLine" select="$tillLine"/>
                    <xsl:with-param name="remainingCandidates" select="$candidateCount - $tillLine"/>
                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
                <xsl:call-template name="PartyHeaderEvenOdd">
                    <xsl:with-param name="isEvenOdd" select="1"/>
                    <xsl:with-param name="isSeats" select="$isSeats"/>
                    <xsl:with-param name="ab" select="1"/>
                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                </xsl:call-template>
                <xsl:call-template name="OverviewCandidateResult-EK-1-5">
                    <xsl:with-param name="fromLine" select="$fromLine"/>
                    <xsl:with-param name="tillLine" select="$tillLine"/>
                    <xsl:with-param name="remainingCandidates" select="$candidateCount - $tillLine"/>
                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                </xsl:call-template>
                <xsl:if test="count(rg:CandidateAndResult[position() = 1]/rg:VotesInElectoralDistrictPart) = 2">
                    <xsl:call-template name="PartyHeaderEvenOdd">
                        <xsl:with-param name="isEvenOdd" select="0"/>
                        <xsl:with-param name="isSeats" select="$isSeats"/>
                        <xsl:with-param name="ab" select="1"/>
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                    <xsl:call-template name="OverviewCandidateResult-EK-6-12">
                        <xsl:with-param name="fromLine" select="$fromLine"/>
                        <xsl:with-param name="tillLine" select="$tillLine"/>
                        <xsl:with-param name="remainingCandidates" select="$candidateCount - $tillLine"/>
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
    </xsl:template>
    <xsl:template name="OverviewCandidateResultElected">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:for-each select="rg:DeadCandidate">
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs607\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Bij de toewijzing van de zetels aan de kandidaten wordt ingevolge artikel P 19a van de Kieswet de kandidaat </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs608\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewCandidateResultElected_BijDeToewijzing"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:call-template name="CandidateInTable2">
                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
            </xsl:call-template>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs609\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> buiten beschouwing gelaten, aangezien deze is overleden.</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs610\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewCandidateResultElected_buitenBeschouwing"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:call-template name="LineBreak">
                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
            </xsl:call-template>
        </xsl:for-each>
        <xsl:if test="rg:PriorityCandidate">
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs611\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Met toepassing van de artikelen </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs612\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewCandidateResultElected_MetToepassing"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:if test="//eml:ElectionCategory[ text() = &quot;EK&quot; ]">
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs613\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>U 15, eerste en derde lid, jo. </xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs614\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_OverviewCandidateResultElected_U15eerste1"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:if>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs615\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>P 15 en P 16 van de Kieswet zijn de volgende kandidaten van deze </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs616\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewCandidateResultElected_P15"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
                <xsl:when test="rg:Type = &apos;lijstengroep&apos;">
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs617\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>lijstengroep die op de gezamenlijke lijsten waarop zij voorkomen</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs618\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewCandidateResultElected_lijstengroepDie"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs619\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>lijst die</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs620\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewCandidateResultElected_lijstDie"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs621\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> een aantal stemmen hebben verkregen, groter dan </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs622\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewCandidateResultElected_stemmenHebben"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
                <xsl:when test="//kr:ElectionSubcategory[ text() = &quot;GR1&quot; or text()  = &quot;DR1&quot; ]">
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs623\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>de helft van</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs624\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewCandidateResultElected_50"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:when>
                <xsl:when test="//kr:ElectionSubcategory[ text()  = &quot;EP&quot; ]">
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs625\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>10% van</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs626\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewCandidateResultElected_10"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:when>
                <xsl:when test="//kr:ElectionSubcategory[ text()  = &quot;EK&quot; ]">
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs627\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>of gelijk aan</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs628\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewCandidateResultElected_100"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs629\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>25% van</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs630\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewCandidateResultElected_25"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs631\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> de kiesdeler, gekozen:</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs632\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewCandidateResultElected_deKiesdeler"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
                <xsl:when test="rg:Type = &apos;lijstengroep&apos;">
                    <xsl:text>\par </xsl:text>
                    <xsl:variable name="altova:CurrContextGrid_06A964F8" select="."/>
                    <xsl:variable name="altova:nTableWidthIn_11" select="$altova:nMaxWidthIn * 1.00000"/>
                    <xsl:variable name="altova:nTableWidthTw_11" select="$altova:nTableWidthIn_11 * 1440"/>
                    <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_11" select="round($altova:nTableWidthTw_11 * 0.25)"/>
                    <xsl:variable name="altova:nTableIndentTw_11" select="0"/>
                    <xsl:variable name="altova:nSumColumnWidthsTw_11" select="round(10162.00)"/>
                    <xsl:variable name="altova:TableWidthFactor_11">
                        <xsl:choose>
                            <xsl:when test="$altova:nSumColumnWidthsTw_11 &gt; $altova:nTableWidthTw_11">
                                <xsl:value-of select="$altova:nTableWidthTw_11 div $altova:nSumColumnWidthsTw_11"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:value-of select="1"/>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:variable>
                    <xsl:variable name="altova:nColumnWidthTw_11_0" select="round(2.78 * 1440 * $altova:TableWidthFactor_11)"/>
                    <xsl:variable name="altova:nColumnWidthTw_11_1" select="round(1.67 * 1440 * $altova:TableWidthFactor_11)"/>
                    <xsl:variable name="altova:nColumnWidthTw_11_2" select="round(1.53 * 1440 * $altova:TableWidthFactor_11)"/>
                    <xsl:variable name="altova:nColumnWidthTw_11_3" select="round(1.08 * 1440 * $altova:TableWidthFactor_11)"/>
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 1"/>
                    <xsl:variable name="tablestyle11">
                        <xsl:text>\trowd\trleft</xsl:text>
                        <xsl:value-of select="$altova:nTableIndentTw_11"/>
                        <xsl:text>\ts633\ts634\ts635\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
                    </xsl:variable>
                    <xsl:variable name="rowend11">
                        <xsl:choose>
                            <xsl:when test="$templatetablelevel + 1 = 1">
                                <xsl:text>\row\pard</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:variable>
                    <xsl:variable name="cellend11">
                        <xsl:choose>
                            <xsl:when test="$templatetablelevel + 1 = 1">
                                <xsl:text>\cell</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>\nestcell</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:variable>
                    <xsl:variable name="altova:RowStyle38">
                        <xsl:text>\trrh0\trhdr</xsl:text>
                        <xsl:variable name="altova:CurrGridPos_Tbl11" select="$altova:nTableIndentTw_11"/>
                        <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                        <xsl:text>\cellx</xsl:text>
                        <xsl:variable name="altova:CurrGridPos_Tbl11_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl11 + $altova:nColumnWidthTw_11_0"/>
                        <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl11_Col0_AfterColumn)"/>
                        <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                        <xsl:text>\cellx</xsl:text>
                        <xsl:variable name="altova:CurrGridPos_Tbl11_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl11_Col0_AfterColumn + $altova:nColumnWidthTw_11_1"/>
                        <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl11_Col1_AfterColumn)"/>
                        <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr100\clpadfr3</xsl:text>
                        <xsl:text>\cellx</xsl:text>
                        <xsl:variable name="altova:CurrGridPos_Tbl11_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl11_Col1_AfterColumn + $altova:nColumnWidthTw_11_2"/>
                        <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl11_Col2_AfterColumn)"/>
                        <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                        <xsl:text>\cellx</xsl:text>
                        <xsl:variable name="altova:CurrGridPos_Tbl11_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl11_Col2_AfterColumn + $altova:nColumnWidthTw_11_3"/>
                        <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl11_Col3_AfterColumn)"/>
                    </xsl:variable>
                    <xsl:if test="$templatetablelevel + 1 = 1">
                        <xsl:value-of select="$tablestyle11"/>
                        <xsl:value-of select="$altova:RowStyle38"/>
                    </xsl:if>
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 1"/>
                    <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs636\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>Naam</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs637\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewCandidateResultElected_Naam"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:text>\f0\fs24</xsl:text>
                    <xsl:value-of select="$cellend11"/>
                    <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs638\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>Woonplaats</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs639\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewCandidateResultElected_Woonplaats"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:text>\f0\fs24</xsl:text>
                    <xsl:value-of select="$cellend11"/>
                    <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs640\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>Aantal stemmen</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs641\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewCandidateResultElected_AantalStemmen"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:text>\par </xsl:text>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs642\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>op de gezamenlijke</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs643\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewCandidateResultElected_opDeGezamenlijke"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:text>\par </xsl:text>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs644\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>lijsten</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs645\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewCandidateResultElected_lijsten1"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:text>\f0\fs24</xsl:text>
                    <xsl:value-of select="$cellend11"/>
                    <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs646\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>Lijst waarop de</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs647\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewCandidateResultElected_LijstWaaropDe"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:text>\par </xsl:text>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs648\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>zetel wordt</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs649\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewCandidateResultElected_zetelWordt"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:text>\par </xsl:text>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs650\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>toegewezen</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs651\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewCandidateResultElected_toegewezen"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:text>\f0\fs24</xsl:text>
                    <xsl:value-of select="$cellend11"/>
                    <xsl:if test="$templatetablelevel + 1 > 1">
                        <xsl:text>{\*\nesttableprops</xsl:text>
                    </xsl:if>
                    <xsl:value-of select="$tablestyle11"/>
                    <xsl:value-of select="$altova:RowStyle38"/>
                    <xsl:value-of select="$rowend11"/>
                    <xsl:for-each select="rg:PriorityCandidate">
                        <xsl:sort select="rg:Votes" data-type="number" order="descending"/>
                        <xsl:variable name="altova:RowStyle39">
                            <xsl:text>\trrh0</xsl:text>
                            <xsl:variable name="altova:CurrGridPos_Tbl11" select="$altova:nTableIndentTw_11"/>
                            <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                            <xsl:text>\cellx</xsl:text>
                            <xsl:variable name="altova:CurrGridPos_Tbl11_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl11 + $altova:nColumnWidthTw_11_0"/>
                            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl11_Col0_AfterColumn)"/>
                            <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                            <xsl:text>\cellx</xsl:text>
                            <xsl:variable name="altova:CurrGridPos_Tbl11_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl11_Col0_AfterColumn + $altova:nColumnWidthTw_11_1"/>
                            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl11_Col1_AfterColumn)"/>
                            <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr100\clpadfr3</xsl:text>
                            <xsl:text>\cellx</xsl:text>
                            <xsl:variable name="altova:CurrGridPos_Tbl11_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl11_Col1_AfterColumn + $altova:nColumnWidthTw_11_2"/>
                            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl11_Col2_AfterColumn)"/>
                            <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                            <xsl:text>\cellx</xsl:text>
                            <xsl:variable name="altova:CurrGridPos_Tbl11_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl11_Col2_AfterColumn + $altova:nColumnWidthTw_11_3"/>
                            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl11_Col3_AfterColumn)"/>
                        </xsl:variable>
                        <xsl:if test="$templatetablelevel + 1 = 1">
                            <xsl:value-of select="$tablestyle11"/>
                            <xsl:value-of select="$altova:RowStyle39"/>
                        </xsl:if>
                        <xsl:text>\pard</xsl:text>
                        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                        <xsl:text>\itap</xsl:text>
                        <xsl:value-of select="$templatetablelevel + 1"/>
                        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                        <xsl:call-template name="CandidateInTable2">
                            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_11_0 div 1440) - 0.01042 - 0.01042"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                        </xsl:call-template>
                        <xsl:text>\f0\fs24</xsl:text>
                        <xsl:value-of select="$cellend11"/>
                        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                        <xsl:call-template name="CandidateCityInTable2">
                            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_11_1 div 1440) - 0.01042 - 0.01042"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                        </xsl:call-template>
                        <xsl:text>\f0\fs24</xsl:text>
                        <xsl:value-of select="$cellend11"/>
                        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                        <xsl:for-each select="rg:Votes">
                            <xsl:text>{\cs652\f1\fs22 </xsl:text>
                            <xsl:apply-templates>
                                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_11_2 div 1440) - 0.01042 - 0.06944"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                            </xsl:apply-templates>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                        <xsl:text>\f0\fs24</xsl:text>
                        <xsl:value-of select="$cellend11"/>
                        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                        <xsl:choose>
                            <xsl:when test="@setNumber">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\cs653\f1\fs22 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text>Stel </xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\cs654\f1\fs22 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP22_OverviewCandidateResultElected_Stel"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <xsl:for-each select="@setNumber">
                                    <xsl:text>{\cs655\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="string(.)"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:for-each>
                            </xsl:when>
                            <xsl:when test="@districtNumber">
                                <xsl:choose>
                                    <xsl:when test="//eml:ElectionCategory[ text() != &quot;EK&quot; ]">
                                        <xsl:choose>
                                            <xsl:when test="$lang=0">
                                                <xsl:text>{\cs656\f1\fs22 </xsl:text>
                                                <xsl:call-template name="write-text">
                                                    <xsl:with-param name="text">
                                                        <xsl:text>Kieskring </xsl:text>
                                                    </xsl:with-param>
                                                </xsl:call-template>
                                                <xsl:text>}</xsl:text>
                                            </xsl:when>
                                            <xsl:otherwise>
                                                <xsl:text>{\cs657\f1\fs22 </xsl:text>
                                                <xsl:call-template name="write-text">
                                                    <xsl:with-param name="text">
                                                        <xsl:value-of select="$RP22_OverviewCandidateResultElected_Kieskring1"/>
                                                    </xsl:with-param>
                                                </xsl:call-template>
                                                <xsl:text>}</xsl:text>
                                            </xsl:otherwise>
                                        </xsl:choose>
                                        <xsl:for-each select="@districtNumber">
                                            <xsl:text>{\cs658\f1\fs22 </xsl:text>
                                            <xsl:call-template name="write-text">
                                                <xsl:with-param name="text">
                                                    <xsl:value-of select="string(.)"/>
                                                </xsl:with-param>
                                            </xsl:call-template>
                                            <xsl:text>}</xsl:text>
                                        </xsl:for-each>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:for-each select="@provinceName">
                                            <xsl:text>{\cs659\f1\fs22 </xsl:text>
                                            <xsl:call-template name="write-text">
                                                <xsl:with-param name="text">
                                                    <xsl:value-of select="string(.)"/>
                                                </xsl:with-param>
                                            </xsl:call-template>
                                            <xsl:text>}</xsl:text>
                                        </xsl:for-each>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                        </xsl:choose>
                        <xsl:text>\f0\fs24</xsl:text>
                        <xsl:value-of select="$cellend11"/>
                        <xsl:if test="$templatetablelevel + 1 > 1">
                            <xsl:text>{\*\nesttableprops</xsl:text>
                        </xsl:if>
                        <xsl:value-of select="$tablestyle11"/>
                        <xsl:value-of select="$altova:RowStyle39"/>
                        <xsl:value-of select="$rowend11"/>
                    </xsl:for-each>
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text> </xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\par </xsl:text>
                    <xsl:variable name="altova:CurrContextGrid_06A96DF8" select="."/>
                    <xsl:variable name="altova:nTableWidthIn_12" select="$altova:nMaxWidthIn * 1.00000"/>
                    <xsl:variable name="altova:nTableWidthTw_12" select="$altova:nTableWidthIn_12 * 1440"/>
                    <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_12" select="round($altova:nTableWidthTw_12 * 0.25)"/>
                    <xsl:variable name="altova:nTableIndentTw_12" select="0"/>
                    <xsl:variable name="altova:nSumColumnWidthsTw_12" select="round(2200.50 + 0.50 * $altova:nTableWidthTw_12)"/>
                    <xsl:variable name="altova:TableWidthFactor_12">
                        <xsl:choose>
                            <xsl:when test="$altova:nSumColumnWidthsTw_12 &gt; $altova:nTableWidthTw_12">
                                <xsl:value-of select="($altova:nTableWidthTw_12 - $altova:SumDefaultColumnsForWideTableTw_12) div $altova:nSumColumnWidthsTw_12"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:value-of select="1"/>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:variable>
                    <xsl:variable name="altova:nColumnsWithDefaultWidth_12" select="round(1)"/>
                    <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_12">
                        <xsl:choose>
                            <xsl:when test="$altova:nColumnsWithDefaultWidth_12 = 0">
                                <xsl:value-of select="round(1)"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:value-of select="$altova:nColumnsWithDefaultWidth_12"/>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:variable>
                    <xsl:variable name="altova:nDefaultColumnWidthTw_12">
                        <xsl:choose>
                            <xsl:when test="$altova:TableWidthFactor_12 &lt; 1">
                                <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_12 div $altova:nColumnsWithDefaultWidthNotZero_12"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:value-of select="round(($altova:nTableWidthTw_12 - $altova:nSumColumnWidthsTw_12) div $altova:nColumnsWithDefaultWidthNotZero_12)"/>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:variable>
                    <xsl:variable name="altova:nColumnWidthTw_12_0" select="round($altova:nTableWidthTw_12 * 0.50 * $altova:TableWidthFactor_12)"/>
                    <xsl:variable name="altova:nColumnWidthTw_12_1" select="$altova:nDefaultColumnWidthTw_12"/>
                    <xsl:variable name="altova:nColumnWidthTw_12_2" select="round(1.53 * 1440 * $altova:TableWidthFactor_12)"/>
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 1"/>
                    <xsl:variable name="tablestyle12">
                        <xsl:text>\trowd\trleft</xsl:text>
                        <xsl:value-of select="$altova:nTableIndentTw_12"/>
                        <xsl:text>\ts660\ts661\ts662\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
                    </xsl:variable>
                    <xsl:variable name="rowend12">
                        <xsl:choose>
                            <xsl:when test="$templatetablelevel + 1 = 1">
                                <xsl:text>\row\pard</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:variable>
                    <xsl:variable name="cellend12">
                        <xsl:choose>
                            <xsl:when test="$templatetablelevel + 1 = 1">
                                <xsl:text>\cell</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>\nestcell</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:variable>
                    <xsl:variable name="altova:RowStyle40">
                        <xsl:text>\trrh0\trhdr</xsl:text>
                        <xsl:variable name="altova:CurrGridPos_Tbl12" select="$altova:nTableIndentTw_12"/>
                        <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                        <xsl:text>\cellx</xsl:text>
                        <xsl:variable name="altova:CurrGridPos_Tbl12_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl12 + $altova:nColumnWidthTw_12_0"/>
                        <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl12_Col0_AfterColumn)"/>
                        <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                        <xsl:text>\cellx</xsl:text>
                        <xsl:variable name="altova:CurrGridPos_Tbl12_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl12_Col0_AfterColumn + $altova:nColumnWidthTw_12_1"/>
                        <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl12_Col1_AfterColumn)"/>
                        <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr100\clpadfr3</xsl:text>
                        <xsl:text>\cellx</xsl:text>
                        <xsl:variable name="altova:CurrGridPos_Tbl12_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl12_Col1_AfterColumn + $altova:nColumnWidthTw_12_2"/>
                        <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl12_Col2_AfterColumn)"/>
                    </xsl:variable>
                    <xsl:if test="$templatetablelevel + 1 = 1">
                        <xsl:value-of select="$tablestyle12"/>
                        <xsl:value-of select="$altova:RowStyle40"/>
                    </xsl:if>
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 1"/>
                    <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs663\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>Naam</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs664\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewCandidateResultElected_Naam"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:text>\f0\fs24</xsl:text>
                    <xsl:value-of select="$cellend12"/>
                    <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs665\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>Woonplaats</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs666\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewCandidateResultElected_Woonplaats"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:text>\f0\fs24</xsl:text>
                    <xsl:value-of select="$cellend12"/>
                    <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs667\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>Aantal stemmen</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs668\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewCandidateResultElected_AantalStemmen"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:text>\par </xsl:text>
                    <xsl:text>\f0\fs24</xsl:text>
                    <xsl:value-of select="$cellend12"/>
                    <xsl:if test="$templatetablelevel + 1 > 1">
                        <xsl:text>{\*\nesttableprops</xsl:text>
                    </xsl:if>
                    <xsl:value-of select="$tablestyle12"/>
                    <xsl:value-of select="$altova:RowStyle40"/>
                    <xsl:value-of select="$rowend12"/>
                    <xsl:for-each select="rg:PriorityCandidate">
                        <xsl:sort select="rg:Votes" data-type="number" order="descending"/>
                        <xsl:variable name="altova:RowStyle41">
                            <xsl:text>\trrh0</xsl:text>
                            <xsl:variable name="altova:CurrGridPos_Tbl12" select="$altova:nTableIndentTw_12"/>
                            <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                            <xsl:text>\cellx</xsl:text>
                            <xsl:variable name="altova:CurrGridPos_Tbl12_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl12 + $altova:nColumnWidthTw_12_0"/>
                            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl12_Col0_AfterColumn)"/>
                            <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                            <xsl:text>\cellx</xsl:text>
                            <xsl:variable name="altova:CurrGridPos_Tbl12_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl12_Col0_AfterColumn + $altova:nColumnWidthTw_12_1"/>
                            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl12_Col1_AfterColumn)"/>
                            <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr100\clpadfr3</xsl:text>
                            <xsl:text>\cellx</xsl:text>
                            <xsl:variable name="altova:CurrGridPos_Tbl12_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl12_Col1_AfterColumn + $altova:nColumnWidthTw_12_2"/>
                            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl12_Col2_AfterColumn)"/>
                        </xsl:variable>
                        <xsl:if test="$templatetablelevel + 1 = 1">
                            <xsl:value-of select="$tablestyle12"/>
                            <xsl:value-of select="$altova:RowStyle41"/>
                        </xsl:if>
                        <xsl:text>\pard</xsl:text>
                        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                        <xsl:text>\itap</xsl:text>
                        <xsl:value-of select="$templatetablelevel + 1"/>
                        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                        <xsl:call-template name="CandidateInTable2">
                            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_12_0 div 1440) - 0.01042 - 0.01042"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                        </xsl:call-template>
                        <xsl:text>\f0\fs24</xsl:text>
                        <xsl:value-of select="$cellend12"/>
                        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                        <xsl:call-template name="CandidateCityInTable2">
                            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_12_1 div 1440) - 0.01042 - 0.01042"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                        </xsl:call-template>
                        <xsl:text>\f0\fs24</xsl:text>
                        <xsl:value-of select="$cellend12"/>
                        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                        <xsl:for-each select="rg:Votes">
                            <xsl:text>{\cs669\f1\fs22 </xsl:text>
                            <xsl:apply-templates>
                                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_12_2 div 1440) - 0.01042 - 0.06944"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                            </xsl:apply-templates>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                        <xsl:text>\f0\fs24</xsl:text>
                        <xsl:value-of select="$cellend12"/>
                        <xsl:if test="$templatetablelevel + 1 > 1">
                            <xsl:text>{\*\nesttableprops</xsl:text>
                        </xsl:if>
                        <xsl:value-of select="$tablestyle12"/>
                        <xsl:value-of select="$altova:RowStyle41"/>
                        <xsl:value-of select="$rowend12"/>
                    </xsl:for-each>
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text> </xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:call-template name="LineBreakTable">
                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
            </xsl:call-template>
        </xsl:if>
        <xsl:if test="count( rg:ListAndResults/rg:CandidateAndResult/rg:Elected[ @byLot = &quot;true&quot; ] ) &gt; 0">
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs670\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Overeenkomstig artikel P 15, eerste lid van de Kieswet heeft een loting plaatsgevonden tuss</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs671\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewCandidateResultElected_Overeenkomstig"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:for-each select="rg:ListAndResults">
                <xsl:for-each select="rg:CandidateAndResult">
                    <xsl:sort select="rg:TotalVotes" data-type="number" order="descending"/>
                    <xsl:if test="rg:Elected/@byLot = &quot;true&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs672\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>en </xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs673\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP22_OverviewCandidateResultElected_en"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:call-template name="CandidateInTable">
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:call-template>
                        <xsl:text>{\cs674\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text> </xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:if>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs675\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>. Als gevolg hiervan is/zijn gekozen </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs676\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewCandidateResultElected_AlsGevolg"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\par </xsl:text>
            <xsl:variable name="altova:CurrContextGrid_06A97578" select="."/>
            <xsl:variable name="altova:nTableWidthIn_13" select="$altova:nMaxWidthIn * 1.00000"/>
            <xsl:variable name="altova:nTableWidthTw_13" select="$altova:nTableWidthIn_13 * 1440"/>
            <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_13" select="round($altova:nTableWidthTw_13 * 0.25)"/>
            <xsl:variable name="altova:nTableIndentTw_13" select="0"/>
            <xsl:variable name="altova:nSumColumnWidthsTw_13" select="round(0.00 + 0.60 * $altova:nTableWidthTw_13)"/>
            <xsl:variable name="altova:TableWidthFactor_13">
                <xsl:choose>
                    <xsl:when test="$altova:nSumColumnWidthsTw_13 &gt; $altova:nTableWidthTw_13">
                        <xsl:value-of select="($altova:nTableWidthTw_13 - $altova:SumDefaultColumnsForWideTableTw_13) div $altova:nSumColumnWidthsTw_13"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:value-of select="1"/>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:variable>
            <xsl:variable name="altova:nColumnsWithDefaultWidth_13" select="round(1)"/>
            <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_13">
                <xsl:choose>
                    <xsl:when test="$altova:nColumnsWithDefaultWidth_13 = 0">
                        <xsl:value-of select="round(1)"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:value-of select="$altova:nColumnsWithDefaultWidth_13"/>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:variable>
            <xsl:variable name="altova:nDefaultColumnWidthTw_13">
                <xsl:choose>
                    <xsl:when test="$altova:TableWidthFactor_13 &lt; 1">
                        <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_13 div $altova:nColumnsWithDefaultWidthNotZero_13"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:value-of select="round(($altova:nTableWidthTw_13 - $altova:nSumColumnWidthsTw_13) div $altova:nColumnsWithDefaultWidthNotZero_13)"/>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:variable>
            <xsl:variable name="altova:nColumnWidthTw_13_0" select="round($altova:nTableWidthTw_13 * 0.60 * $altova:TableWidthFactor_13)"/>
            <xsl:variable name="altova:nColumnWidthTw_13_1" select="$altova:nDefaultColumnWidthTw_13"/>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:variable name="tablestyle13">
                <xsl:text>\trowd\trleft</xsl:text>
                <xsl:value-of select="$altova:nTableIndentTw_13"/>
                <xsl:text>\ts677\ts678\ts679\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
            </xsl:variable>
            <xsl:variable name="rowend13">
                <xsl:choose>
                    <xsl:when test="$templatetablelevel + 1 = 1">
                        <xsl:text>\row\pard</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:variable>
            <xsl:variable name="cellend13">
                <xsl:choose>
                    <xsl:when test="$templatetablelevel + 1 = 1">
                        <xsl:text>\cell</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>\nestcell</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:variable>
            <xsl:variable name="altova:RowStyle42">
                <xsl:text>\trrh0</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl13" select="$altova:nTableIndentTw_13"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl13_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl13 + $altova:nColumnWidthTw_13_0"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl13_Col0_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl13_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl13_Col0_AfterColumn + $altova:nColumnWidthTw_13_1"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl13_Col1_AfterColumn)"/>
            </xsl:variable>
            <xsl:if test="$templatetablelevel + 1 = 1">
                <xsl:value-of select="$tablestyle13"/>
                <xsl:value-of select="$altova:RowStyle42"/>
            </xsl:if>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs680\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Naam</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs681\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewCandidateResultElected_Naam"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend13"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs682\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Woonplaats</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs683\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewCandidateResultElected_Woonplaats"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend13"/>
            <xsl:if test="$templatetablelevel + 1 > 1">
                <xsl:text>{\*\nesttableprops</xsl:text>
            </xsl:if>
            <xsl:value-of select="$tablestyle13"/>
            <xsl:value-of select="$altova:RowStyle42"/>
            <xsl:value-of select="$rowend13"/>
            <xsl:variable name="altova:RowStyle43">
                <xsl:text>\trrh0</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl13" select="$altova:nTableIndentTw_13"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl13_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl13 + $altova:nColumnWidthTw_13_0"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl13_Col0_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl13_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl13_Col0_AfterColumn + $altova:nColumnWidthTw_13_1"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl13_Col1_AfterColumn)"/>
            </xsl:variable>
            <xsl:if test="$templatetablelevel + 1 = 1">
                <xsl:value-of select="$tablestyle13"/>
                <xsl:value-of select="$altova:RowStyle43"/>
            </xsl:if>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:ListAndResults">
                <xsl:for-each select="rg:CandidateAndResult">
                    <xsl:sort select="rg:TotalVotes" data-type="number" order="descending"/>
                    <xsl:if test="rg:Elected = &quot;true&quot; and rg:Elected/@byLot = &quot;true&quot;">
                        <xsl:call-template name="CandidateInTable2">
                            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_13_0 div 1440) - 0.01042 - 0.01042"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                        </xsl:call-template>
                    </xsl:if>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend13"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:ListAndResults">
                <xsl:for-each select="rg:CandidateAndResult">
                    <xsl:sort select="rg:TotalVotes" data-type="number" order="descending"/>
                    <xsl:if test="rg:Elected = &quot;true&quot; and rg:Elected/@byLot = &quot;true&quot;">
                        <xsl:call-template name="CandidateCityInTable2">
                            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_13_1 div 1440) - 0.01042 - 0.01042"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                        </xsl:call-template>
                    </xsl:if>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend13"/>
            <xsl:if test="$templatetablelevel + 1 > 1">
                <xsl:text>{\*\nesttableprops</xsl:text>
            </xsl:if>
            <xsl:value-of select="$tablestyle13"/>
            <xsl:value-of select="$altova:RowStyle43"/>
            <xsl:value-of select="$rowend13"/>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 0"/>
            <xsl:text> </xsl:text>
        </xsl:if>
        <xsl:call-template name="LineBreakTable">
            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
        </xsl:call-template>
        <xsl:if test="rg:CandidatesElectedByPositionOnList/rg:CandidateElectedByPositionOnList">
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs684\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Vervolgens zijn de aan de </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs685\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewCandidateResultElected_Vervolgens"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
                <xsl:when test="rg:Type = &quot;lijstengroep&quot;">
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs686\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>lijsten</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs687\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewCandidateResultElected_lijsten2"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs688\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>lijst</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs689\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewCandidateResultElected_lijst"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs690\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> toegewezen zetels die nog niet aan een kandidaat zijn toegewezen, met toepassing van de artikelen </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs691\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewCandidateResultElected_toegewezenZetels"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:if test="//eml:ElectionCategory[ text() = &quot;EK&quot; ]">
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs692\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>U 15, eerste en derde lid, jo. </xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs693\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_OverviewCandidateResultElected_U15eerste2"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:if>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs694\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>P 17 en P 18 van de Kieswet aan de volgende kandidaten van deze </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs695\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewCandidateResultElected_P17"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
                <xsl:when test="rg:Type = &quot;lijstengroep&quot;">
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs696\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>lijstengroep</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs697\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewCandidateResultElected_lijstengroep"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs698\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>lijst</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs699\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewCandidateResultElected_lijst"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs700\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> toegewezen:</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs701\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewCandidateResultElected_toegewezen2"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:call-template name="LineBreak">
                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
            </xsl:call-template>
            <xsl:for-each select="rg:CandidatesElectedByPositionOnList">
                <xsl:if test="../rg:Type = &quot;lijstengroep&quot;">
                    <xsl:choose>
                        <xsl:when test="@setNumber">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs702\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>Stel gelijkluidende lijsten: </xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs703\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP22_OverviewCandidateResultElected_StelGelijkluidendeLijsten"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:for-each select="@setNumber">
                                <xsl:text>{\cs704\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="string(.)"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:for-each>
                        </xsl:when>
                        <xsl:when test="@districtNumber">
                            <xsl:choose>
                                <xsl:when test="//eml:ElectionCategory[ text() != &quot;EK&quot; ]">
                                    <xsl:choose>
                                        <xsl:when test="$lang=0">
                                            <xsl:text>{\cs705\f1\fs22 </xsl:text>
                                            <xsl:call-template name="write-text">
                                                <xsl:with-param name="text">
                                                    <xsl:text>Kieskring: </xsl:text>
                                                </xsl:with-param>
                                            </xsl:call-template>
                                            <xsl:text>}</xsl:text>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:text>{\cs706\f1\fs22 </xsl:text>
                                            <xsl:call-template name="write-text">
                                                <xsl:with-param name="text">
                                                    <xsl:value-of select="$RP22_OverviewCandidateResultElected_Kieskring2"/>
                                                </xsl:with-param>
                                            </xsl:call-template>
                                            <xsl:text>}</xsl:text>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                    <xsl:for-each select="@districtNumber">
                                        <xsl:text>{\cs707\f1\fs22 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="string(.)"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:for-each>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:choose>
                                        <xsl:when test="$lang=0">
                                            <xsl:text>{\cs708\f1\fs22 </xsl:text>
                                            <xsl:call-template name="write-text">
                                                <xsl:with-param name="text">
                                                    <xsl:text>Provincie: </xsl:text>
                                                </xsl:with-param>
                                            </xsl:call-template>
                                            <xsl:text>}</xsl:text>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:text>{\cs709\f1\fs22 </xsl:text>
                                            <xsl:call-template name="write-text">
                                                <xsl:with-param name="text">
                                                    <xsl:value-of select="$RP22_OverviewCandidateResultElected_Provincie"/>
                                                </xsl:with-param>
                                            </xsl:call-template>
                                            <xsl:text>}</xsl:text>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                    <xsl:for-each select="@provinceName">
                                        <xsl:text>{\cs710\f1\fs22 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="string(.)"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:for-each>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                    </xsl:choose>
                </xsl:if>
                <xsl:text>\par </xsl:text>
                <xsl:variable name="altova:CurrContextGrid_06A97F38" select="."/>
                <xsl:variable name="altova:nTableWidthIn_14" select="$altova:nMaxWidthIn * 1.00000"/>
                <xsl:variable name="altova:nTableWidthTw_14" select="$altova:nTableWidthIn_14 * 1440"/>
                <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_14" select="round($altova:nTableWidthTw_14 * 0.25)"/>
                <xsl:variable name="altova:nTableIndentTw_14" select="0"/>
                <xsl:variable name="altova:nSumColumnWidthsTw_14" select="round(2200.50 + 0.50 * $altova:nTableWidthTw_14)"/>
                <xsl:variable name="altova:TableWidthFactor_14">
                    <xsl:choose>
                        <xsl:when test="$altova:nSumColumnWidthsTw_14 &gt; $altova:nTableWidthTw_14">
                            <xsl:value-of select="($altova:nTableWidthTw_14 - $altova:SumDefaultColumnsForWideTableTw_14) div $altova:nSumColumnWidthsTw_14"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="1"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnsWithDefaultWidth_14" select="round(1)"/>
                <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_14">
                    <xsl:choose>
                        <xsl:when test="$altova:nColumnsWithDefaultWidth_14 = 0">
                            <xsl:value-of select="round(1)"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="$altova:nColumnsWithDefaultWidth_14"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nDefaultColumnWidthTw_14">
                    <xsl:choose>
                        <xsl:when test="$altova:TableWidthFactor_14 &lt; 1">
                            <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_14 div $altova:nColumnsWithDefaultWidthNotZero_14"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="round(($altova:nTableWidthTw_14 - $altova:nSumColumnWidthsTw_14) div $altova:nColumnsWithDefaultWidthNotZero_14)"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnWidthTw_14_0" select="round($altova:nTableWidthTw_14 * 0.50 * $altova:TableWidthFactor_14)"/>
                <xsl:variable name="altova:nColumnWidthTw_14_1" select="$altova:nDefaultColumnWidthTw_14"/>
                <xsl:variable name="altova:nColumnWidthTw_14_2" select="round(1.53 * 1440 * $altova:TableWidthFactor_14)"/>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:variable name="tablestyle14">
                    <xsl:text>\trowd\trleft</xsl:text>
                    <xsl:value-of select="$altova:nTableIndentTw_14"/>
                    <xsl:text>\ts711\ts712\ts713\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
                </xsl:variable>
                <xsl:variable name="rowend14">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\row\pard</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="cellend14">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\cell</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestcell</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:RowStyle44">
                    <xsl:text>\trrh0\trhdr</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl14" select="$altova:nTableIndentTw_14"/>
                    <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl14_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl14 + $altova:nColumnWidthTw_14_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl14_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl14_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl14_Col0_AfterColumn + $altova:nColumnWidthTw_14_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl14_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr100\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl14_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl14_Col1_AfterColumn + $altova:nColumnWidthTw_14_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl14_Col2_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle14"/>
                    <xsl:value-of select="$altova:RowStyle44"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs714\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>Naam</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs715\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_OverviewCandidateResultElected_Naam"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend14"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs716\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>Woonplaats</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs717\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_OverviewCandidateResultElected_Woonplaats"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend14"/>
                <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                <xsl:if test="//eml:ElectionCategory != &quot;EK&quot;">
                    <xsl:choose>
                        <xsl:when test="../rg:Type = &quot;lijstengroep&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs718\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>Aantal stemmen</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs719\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP22_OverviewCandidateResultElected_AantalStemmen"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:text>\par </xsl:text>
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs720\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>op de gezamenlijke</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs721\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP22_OverviewCandidateResultElected_opDeGezamenlijke"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:text>\par </xsl:text>
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs722\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>lijsten</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs723\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP22_OverviewCandidateResultElected_lijsten1"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs724\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>Aantal stemmen</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs725\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP22_OverviewCandidateResultElected_AantalStemmen"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:text>\par </xsl:text>
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs726\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>op de lijst</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs727\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP22_OverviewCandidateResultElected_opDeLijst"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:if>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend14"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle14"/>
                <xsl:value-of select="$altova:RowStyle44"/>
                <xsl:value-of select="$rowend14"/>
                <xsl:for-each select="rg:CandidateElectedByPositionOnList">
                    <xsl:variable name="altova:RowStyle45">
                        <xsl:text>\trrh0</xsl:text>
                        <xsl:variable name="altova:CurrGridPos_Tbl14" select="$altova:nTableIndentTw_14"/>
                        <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                        <xsl:text>\cellx</xsl:text>
                        <xsl:variable name="altova:CurrGridPos_Tbl14_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl14 + $altova:nColumnWidthTw_14_0"/>
                        <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl14_Col0_AfterColumn)"/>
                        <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                        <xsl:text>\cellx</xsl:text>
                        <xsl:variable name="altova:CurrGridPos_Tbl14_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl14_Col0_AfterColumn + $altova:nColumnWidthTw_14_1"/>
                        <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl14_Col1_AfterColumn)"/>
                        <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr100\clpadfr3</xsl:text>
                        <xsl:text>\cellx</xsl:text>
                        <xsl:variable name="altova:CurrGridPos_Tbl14_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl14_Col1_AfterColumn + $altova:nColumnWidthTw_14_2"/>
                        <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl14_Col2_AfterColumn)"/>
                    </xsl:variable>
                    <xsl:if test="$templatetablelevel + 1 = 1">
                        <xsl:value-of select="$tablestyle14"/>
                        <xsl:value-of select="$altova:RowStyle45"/>
                    </xsl:if>
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 1"/>
                    <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                    <xsl:call-template name="CandidateInTable2">
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_14_0 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                    <xsl:text>\f0\fs24</xsl:text>
                    <xsl:value-of select="$cellend14"/>
                    <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                    <xsl:call-template name="CandidateCityInTable2">
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_14_1 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                    <xsl:text>\f0\fs24</xsl:text>
                    <xsl:value-of select="$cellend14"/>
                    <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                    <xsl:if test="//eml:ElectionCategory != &quot;EK&quot;">
                        <xsl:for-each select="rg:Votes">
                            <xsl:text>{\cs728\f1\fs22 </xsl:text>
                            <xsl:apply-templates>
                                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_14_2 div 1440) - 0.01042 - 0.06944"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                            </xsl:apply-templates>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                    </xsl:if>
                    <xsl:text>\f0\fs24</xsl:text>
                    <xsl:value-of select="$cellend14"/>
                    <xsl:if test="$templatetablelevel + 1 > 1">
                        <xsl:text>{\*\nesttableprops</xsl:text>
                    </xsl:if>
                    <xsl:value-of select="$tablestyle14"/>
                    <xsl:value-of select="$altova:RowStyle45"/>
                    <xsl:value-of select="$rowend14"/>
                </xsl:for-each>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text> </xsl:text>
                <xsl:call-template name="LineBreakTable">
                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                </xsl:call-template>
            </xsl:for-each>
            <xsl:call-template name="LineBreakTable">
                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
            </xsl:call-template>
        </xsl:if>
    </xsl:template>
    <xsl:template name="OverviewCandidateResultNewListOrder">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:if test="0=1">
            <xsl:text>{\cs729\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text>This fragment must start on the page with the elected candidates. First there is the text if the order was changed or not. Now a page break BEFORE each stel or kieskring, but NOT at the END.</xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
        </xsl:if>
        <xsl:choose>
            <xsl:when test="rg:ListAndResults/rg:PositionsOnListChanged[text() = &quot;true&quot;]">
                <xsl:text>\par </xsl:text>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs730\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>De kandidaten zijn met toepassing van </xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs731\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_OverviewCandidateResultNewListOrder_kandidatenZijn"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="//eml:ElectionCategory[ text() != &quot;EK&quot; ]">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs732\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>artikel P 19</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs733\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP22_OverviewCandidateResultNewListOrder_P19"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs734\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>de artikelen U 15, tweede en derde lid, j° P 19</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs735\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP22_OverviewCandidateResultNewListOrder_U15"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs736\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text> van de Kieswet ten aanzien van iedere lijst gerangschikt in de volgorde zoals hiervoor is aangegeven, met uitzondering van de hierna te vermelden </xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs737\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_OverviewCandidateResultNewListOrder_Kieswet1"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="count(rg:ListAndResults) != 1">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs738\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>lijsten</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs739\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP22_OverviewCandidateResultNewListOrder_lijsten"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs740\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>lijst</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs741\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP22_OverviewCandidateResultNewListOrder_lijst"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs742\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>, ten aanzien waarvan de kandidaten als volgt zijn gerangschikt:</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs743\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_OverviewCandidateResultNewListOrder_tenAanzien"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:text>\par </xsl:text>
                <xsl:for-each select="rg:ListAndResults">
                    <xsl:text>\page </xsl:text>
                    <xsl:text>\par </xsl:text>
                    <xsl:call-template name="PartyHeader2Lines">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                    <xsl:text>\par </xsl:text>
                    <xsl:if test="$SV_OutputFormat = &apos;PDF&apos;">
                        <xsl:text>\par </xsl:text>
                    </xsl:if>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs744\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>Kandidaten in de volgorde van de rangschikking:</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs745\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewCandidateResultNewListOrder_rangschikking"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:text>\par </xsl:text>
                    <xsl:text>\par </xsl:text>
                    <xsl:variable name="altova:CurrContextGrid_06A98B98" select="."/>
                    <xsl:variable name="altova:nTableWidthIn_15" select="$altova:nMaxWidthIn * 1.00000"/>
                    <xsl:variable name="altova:nTableWidthTw_15" select="$altova:nTableWidthIn_15 * 1440"/>
                    <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_15" select="round($altova:nTableWidthTw_15 * 0.25)"/>
                    <xsl:variable name="altova:nTableIndentTw_15" select="0"/>
                    <xsl:variable name="altova:nSumColumnWidthsTw_15" select="round(0.00)"/>
                    <xsl:variable name="altova:nColumnsWithDefaultWidth_15" select="round(1)"/>
                    <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_15">
                        <xsl:choose>
                            <xsl:when test="$altova:nColumnsWithDefaultWidth_15 = 0">
                                <xsl:value-of select="round(1)"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:value-of select="$altova:nColumnsWithDefaultWidth_15"/>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:variable>
                    <xsl:variable name="altova:nDefaultColumnWidthTw_15">
                        <xsl:value-of select="$altova:nTableWidthTw_15 div $altova:nColumnsWithDefaultWidthNotZero_15"/>
                    </xsl:variable>
                    <xsl:variable name="altova:nColumnWidthTw_15_0" select="$altova:nDefaultColumnWidthTw_15"/>
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 1"/>
                    <xsl:variable name="tablestyle15">
                        <xsl:text>\trowd\trleft</xsl:text>
                        <xsl:value-of select="$altova:nTableIndentTw_15"/>
                        <xsl:text>\ts746\ts747\ts748\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
                    </xsl:variable>
                    <xsl:variable name="rowend15">
                        <xsl:choose>
                            <xsl:when test="$templatetablelevel + 1 = 1">
                                <xsl:text>\row\pard</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:variable>
                    <xsl:variable name="cellend15">
                        <xsl:choose>
                            <xsl:when test="$templatetablelevel + 1 = 1">
                                <xsl:text>\cell</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>\nestcell</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:variable>
                    <xsl:variable name="altova:RowStyle46">
                        <xsl:text>\trrh0\trhdr</xsl:text>
                        <xsl:variable name="altova:CurrGridPos_Tbl15" select="$altova:nTableIndentTw_15"/>
                        <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                        <xsl:text>\cellx</xsl:text>
                        <xsl:variable name="altova:CurrGridPos_Tbl15_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl15 + $altova:nColumnWidthTw_15_0"/>
                        <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl15_Col0_AfterColumn)"/>
                    </xsl:variable>
                    <xsl:if test="$templatetablelevel + 1 = 1">
                        <xsl:value-of select="$tablestyle15"/>
                        <xsl:value-of select="$altova:RowStyle46"/>
                    </xsl:if>
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 1"/>
                    <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs749\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>Naam</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs750\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewCandidateResultNewListOrder_Naam"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:text>\f0\fs24</xsl:text>
                    <xsl:value-of select="$cellend15"/>
                    <xsl:if test="$templatetablelevel + 1 > 1">
                        <xsl:text>{\*\nesttableprops</xsl:text>
                    </xsl:if>
                    <xsl:value-of select="$tablestyle15"/>
                    <xsl:value-of select="$altova:RowStyle46"/>
                    <xsl:value-of select="$rowend15"/>
                    <xsl:for-each select="rg:CandidateAndResult[rg:Deceased = &quot;false&quot;]">
                        <xsl:sort select="rg:NewPositionOnList" data-type="number" order="ascending"/>
                        <xsl:variable name="altova:RowStyle47">
                            <xsl:text>\trrh0</xsl:text>
                            <xsl:variable name="altova:CurrGridPos_Tbl15" select="$altova:nTableIndentTw_15"/>
                            <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                            <xsl:text>\cellx</xsl:text>
                            <xsl:variable name="altova:CurrGridPos_Tbl15_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl15 + $altova:nColumnWidthTw_15_0"/>
                            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl15_Col0_AfterColumn)"/>
                        </xsl:variable>
                        <xsl:if test="$templatetablelevel + 1 = 1">
                            <xsl:value-of select="$tablestyle15"/>
                            <xsl:value-of select="$altova:RowStyle47"/>
                        </xsl:if>
                        <xsl:text>\pard</xsl:text>
                        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                        <xsl:text>\itap</xsl:text>
                        <xsl:value-of select="$templatetablelevel + 1"/>
                        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                        <xsl:call-template name="CandidateInTable2">
                            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_15_0 div 1440) - 0.01042 - 0.01042"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                        </xsl:call-template>
                        <xsl:text>\f0\fs24</xsl:text>
                        <xsl:value-of select="$cellend15"/>
                        <xsl:if test="$templatetablelevel + 1 > 1">
                            <xsl:text>{\*\nesttableprops</xsl:text>
                        </xsl:if>
                        <xsl:value-of select="$tablestyle15"/>
                        <xsl:value-of select="$altova:RowStyle47"/>
                        <xsl:value-of select="$rowend15"/>
                    </xsl:for-each>
                    <xsl:text>\pard</xsl:text>
                    <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                    <xsl:text>\itap</xsl:text>
                    <xsl:value-of select="$templatetablelevel + 0"/>
                    <xsl:text> </xsl:text>
                </xsl:for-each>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>\par </xsl:text>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs751\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>De kandidaten zijn met toepassing van </xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs752\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_OverviewCandidateResultNewListOrder_kandidatenZijn"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="//eml:ElectionCategory[ text() != &quot;EK&quot; ]">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs753\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>artikel P 19</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs754\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP22_OverviewCandidateResultNewListOrder_P19"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs755\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>de artikelen U 15, tweede en derde lid, j° P 19</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs756\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP22_OverviewCandidateResultNewListOrder_U15"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs757\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text> van de Kieswet ten aanzien van deze lijst gerangschikt in de volgorde zoals hiervoor is aangegeven.</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs758\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_OverviewCandidateResultNewListOrder_Kieswet2"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:text>\par </xsl:text>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="OverviewElectedCandidate">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:for-each select="rg:OverviewOfElectedCandidates">
            <xsl:variable name="altova:CurrContextGrid_06A99018" select="."/>
            <xsl:variable name="altova:nTableWidthIn_16" select="$altova:nMaxWidthIn * 1.00000"/>
            <xsl:variable name="altova:nTableWidthTw_16" select="$altova:nTableWidthIn_16 * 1440"/>
            <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_16" select="round($altova:nTableWidthTw_16 * 0.25)"/>
            <xsl:variable name="altova:nTableIndentTw_16" select="0"/>
            <xsl:variable name="altova:nSumColumnWidthsTw_16" select="round(0.00 + 0.60 * $altova:nTableWidthTw_16)"/>
            <xsl:variable name="altova:TableWidthFactor_16">
                <xsl:choose>
                    <xsl:when test="$altova:nSumColumnWidthsTw_16 &gt; $altova:nTableWidthTw_16">
                        <xsl:value-of select="($altova:nTableWidthTw_16 - $altova:SumDefaultColumnsForWideTableTw_16) div $altova:nSumColumnWidthsTw_16"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:value-of select="1"/>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:variable>
            <xsl:variable name="altova:nColumnsWithDefaultWidth_16" select="round(1)"/>
            <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_16">
                <xsl:choose>
                    <xsl:when test="$altova:nColumnsWithDefaultWidth_16 = 0">
                        <xsl:value-of select="round(1)"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:value-of select="$altova:nColumnsWithDefaultWidth_16"/>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:variable>
            <xsl:variable name="altova:nDefaultColumnWidthTw_16">
                <xsl:choose>
                    <xsl:when test="$altova:TableWidthFactor_16 &lt; 1">
                        <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_16 div $altova:nColumnsWithDefaultWidthNotZero_16"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:value-of select="round(($altova:nTableWidthTw_16 - $altova:nSumColumnWidthsTw_16) div $altova:nColumnsWithDefaultWidthNotZero_16)"/>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:variable>
            <xsl:variable name="altova:nColumnWidthTw_16_0" select="round($altova:nTableWidthTw_16 * 0.60 * $altova:TableWidthFactor_16)"/>
            <xsl:variable name="altova:nColumnWidthTw_16_1" select="$altova:nDefaultColumnWidthTw_16"/>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:variable name="tablestyle16">
                <xsl:text>\trowd\trleft</xsl:text>
                <xsl:value-of select="$altova:nTableIndentTw_16"/>
                <xsl:text>\ts759\ts760\ts761\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
            </xsl:variable>
            <xsl:variable name="rowend16">
                <xsl:choose>
                    <xsl:when test="$templatetablelevel + 1 = 1">
                        <xsl:text>\row\pard</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:variable>
            <xsl:variable name="cellend16">
                <xsl:choose>
                    <xsl:when test="$templatetablelevel + 1 = 1">
                        <xsl:text>\cell</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>\nestcell</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:variable>
            <xsl:variable name="altova:RowStyle48">
                <xsl:text>\trrh0\trhdr</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl16" select="$altova:nTableIndentTw_16"/>
                <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl16_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl16 + $altova:nColumnWidthTw_16_0"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl16_Col0_AfterColumn)"/>
                <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl16_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl16_Col0_AfterColumn + $altova:nColumnWidthTw_16_1"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl16_Col1_AfterColumn)"/>
            </xsl:variable>
            <xsl:if test="$templatetablelevel + 1 = 1">
                <xsl:value-of select="$tablestyle16"/>
                <xsl:value-of select="$altova:RowStyle48"/>
            </xsl:if>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs762\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Naam van de kandidaat</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs763\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewElectedCandidate_Naam"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend16"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs764\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Woonplaats</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs765\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewElectedCandidate_Woonplaats"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend16"/>
            <xsl:if test="$templatetablelevel + 1 > 1">
                <xsl:text>{\*\nesttableprops</xsl:text>
            </xsl:if>
            <xsl:value-of select="$tablestyle16"/>
            <xsl:value-of select="$altova:RowStyle48"/>
            <xsl:value-of select="$rowend16"/>
            <xsl:for-each select="eml:Candidate">
                <xsl:variable name="altova:RowStyle49">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl16" select="$altova:nTableIndentTw_16"/>
                    <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl16_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl16 + $altova:nColumnWidthTw_16_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl16_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl16_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl16_Col0_AfterColumn + $altova:nColumnWidthTw_16_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl16_Col1_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle16"/>
                    <xsl:value-of select="$altova:RowStyle49"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="eml:CandidateFullName">
                    <xsl:call-template name="LastNameH1">
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_16_0 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                    <xsl:text>{\cs766\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>, </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                    <xsl:call-template name="FirstNameH1">
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_16_0 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                </xsl:for-each>
                <xsl:call-template name="Gender2">
                    <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_16_0 div 1440) - 0.01042 - 0.01042"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                </xsl:call-template>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend16"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="eml:QualifyingAddress">
                    <xsl:call-template name="City">
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_16_1 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                    <xsl:for-each select="xal:Country">
                        <xsl:call-template name="City">
                            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_16_1 div 1440) - 0.01042 - 0.01042"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                        </xsl:call-template>
                        <xsl:text>{\cs767\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text> </xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                        <xsl:for-each select="xal:CountryNameCode">
                            <xsl:text>{\cs768\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>(</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                            <xsl:text>{\cs769\f1\fs22 </xsl:text>
                            <xsl:apply-templates>
                                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_16_1 div 1440) - 0.01042 - 0.01042"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                            </xsl:apply-templates>
                            <xsl:text>}</xsl:text>
                            <xsl:text>{\cs770\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>)</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                    </xsl:for-each>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend16"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle16"/>
                <xsl:value-of select="$altova:RowStyle49"/>
                <xsl:value-of select="$rowend16"/>
            </xsl:for-each>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 0"/>
            <xsl:text> </xsl:text>
        </xsl:for-each>
    </xsl:template>
    <xsl:template name="ListOrCombinedList">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="smaller" select="0"/>
        <xsl:if test="$smaller = 0">
            <xsl:for-each select="rg:ListOrCombinedList">
                <xsl:for-each select="@combinationId">
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs771\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>lijstencombinatie </xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs772\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_ListOrCombinedList_lijstencombinatie"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:text>{\cs773\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
                <xsl:for-each select="@listNumber">
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs774\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>lijst </xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs775\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_ListOrCombinedList_lijst"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:text>{\cs776\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
                <xsl:if test="count( rg:ListInCombination ) &gt; 0">
                    <xsl:text>{\cs777\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> (</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                    <xsl:for-each select="rg:ListInCombination">
                        <xsl:text>{\cs778\f1\fs22 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                        <xsl:if test="position() != last()">
                            <xsl:text>{\cs779\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>, </xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:if>
                    </xsl:for-each>
                    <xsl:text>{\cs780\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>)</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:if>
        <xsl:if test="$smaller = 1">
            <xsl:for-each select="rg:ListOrCombinedList">
                <xsl:for-each select="@combinationId">
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs781\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>lijstencombinatie </xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs782\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_ListOrCombinedList_lijstencombinatie"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:text>{\cs783\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
                <xsl:for-each select="@listNumber">
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs784\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>lijst </xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs785\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_ListOrCombinedList_lijst"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:text>{\cs786\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
                <xsl:if test="count( rg:ListInCombination ) &gt; 0">
                    <xsl:text>{\cs787\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> (</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                    <xsl:for-each select="rg:ListInCombination">
                        <xsl:text>{\cs788\f1\fs20 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                        <xsl:if test="position() != last()">
                            <xsl:text>{\cs789\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>, </xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:if>
                    </xsl:for-each>
                    <xsl:text>{\cs790\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>)</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:if>
    </xsl:template>
    <xsl:template name="OverviewDHondtAssignmentSpecial">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:for-each select="rg:AbsoluteMajority">
            <xsl:call-template name="LineBreak">
                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
            </xsl:call-template>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs791\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Door toepassing van artikel P 9 van de Kieswet is een extra zetel toegewezen aan </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs792\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewDHondtAssignmentSpecial_P9"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:for-each select="rg:Winner">
                <xsl:call-template name="ListOrCombinedList">
                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                </xsl:call-template>
            </xsl:for-each>
            <xsl:text>{\cs793\f1\fs20 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text>. </xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:choose>
                <xsl:when test="count( rg:Allotting ) = 0">
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs794\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>Daartegenover vervalt een zetel die was toegewezen aan </xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs795\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewDHondtAssignmentSpecial_DaartegenoverVervalt"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:for-each select="rg:Looser">
                        <xsl:call-template name="ListOrCombinedList">
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:call-template>
                    </xsl:for-each>
                    <xsl:text>{\cs796\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>.</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:for-each select="rg:Allotting">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs797\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>Daartegenover heeft een loting plaatsgevonden tussen </xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs798\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP22_OverviewDHondtAssignmentSpecial_DaartegenoverHeeft"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:for-each select="rg:Winner">
                            <xsl:call-template name="ListOrCombinedList">
                                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                            </xsl:call-template>
                        </xsl:for-each>
                        <xsl:for-each select="rg:Looser">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs799\f1\fs20 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text> en </xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs800\f1\fs20 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP22_OverviewDHondtAssignmentSpecial_en"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:call-template name="ListOrCombinedList">
                                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                            </xsl:call-template>
                        </xsl:for-each>
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs801\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>. Als gevolg hiervan vervalt een zetel die was toegewezen aan </xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs802\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP22_OverviewDHondtAssignmentSpecial_AlsGevolg"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:for-each select="rg:Winner">
                            <xsl:call-template name="ListOrCombinedList">
                                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                            </xsl:call-template>
                        </xsl:for-each>
                        <xsl:text>{\cs803\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>.</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:for-each>
        <xsl:for-each select="rg:ExhaustedList">
            <xsl:call-template name="LineBreak">
                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
            </xsl:call-template>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs804\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Door toepassing van artikel </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs805\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewDHondtAssignmentSpecial_DoorToepassing"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
                <xsl:when test="//kr:ElectionSubcategory[ text() != &quot;EK&quot; ]">
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs806\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>P 10</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs807\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewDHondtAssignmentSpecial_P10"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs808\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>U 10</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs809\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewDHondtAssignmentSpecial_U10"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs810\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> van de Kieswet </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs811\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewDHondtAssignmentSpecial_Kieswet"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
                <xsl:when test="@lostSeats = 1">
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs812\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>is</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs813\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewDHondtAssignmentSpecial_is"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs814\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>zijn</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs815\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewDHondtAssignmentSpecial_zijn"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs816\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> als gevolg van lijstuitputting bij </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs817\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewDHondtAssignmentSpecial_lijstuitputting"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:call-template name="ListOrCombinedList">
                <xsl:with-param name="smaller" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
            </xsl:call-template>
            <xsl:text>{\cs818\f1\fs20 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text> </xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:choose>
                <xsl:when test="@lostSeats = 1">
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs819\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>een extra zetel toegewezen aan een ander lijst</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs820\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewDHondtAssignmentSpecial_extraZetel"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:for-each select="@lostSeats">
                        <xsl:text>{\cs821\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="string(.)"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs822\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text> extra zetels toegewezen aan andere lijsten</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs823\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewDHondtAssignmentSpecial_extraZetels"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>{\cs824\f1\fs20 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text>.</xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
        </xsl:for-each>
    </xsl:template>
    <xsl:template name="CandidateInTable">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:if test="false()">
            <xsl:text>{\cs825\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text>In font-size=smaller</xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
        </xsl:if>
        <xsl:for-each select="eml:Candidate">
            <xsl:for-each select="eml:CandidateFullName">
                <xsl:call-template name="LastNameH1">
                    <xsl:with-param name="fontSize" select="&apos;smaller&apos;"/>
                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                </xsl:call-template>
                <xsl:text>{\cs826\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>, </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:call-template name="FirstNameH1">
                    <xsl:with-param name="fontSize" select="&apos;smaller&apos;"/>
                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                </xsl:call-template>
            </xsl:for-each>
            <xsl:call-template name="Gender2">
                <xsl:with-param name="isSmaller" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
            </xsl:call-template>
        </xsl:for-each>
    </xsl:template>
    <xsl:template name="CandidateInTable2">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:for-each select="eml:Candidate">
            <xsl:for-each select="eml:CandidateFullName">
                <xsl:call-template name="LastNameH1">
                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                </xsl:call-template>
                <xsl:text>{\cs827\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>, </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:call-template name="FirstNameH1">
                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                </xsl:call-template>
            </xsl:for-each>
            <xsl:call-template name="Gender2">
                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
            </xsl:call-template>
        </xsl:for-each>
    </xsl:template>
    <xsl:template name="CandidateCityInTable2">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:for-each select="eml:Candidate">
            <xsl:for-each select="eml:QualifyingAddress">
                <xsl:call-template name="City">
                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                </xsl:call-template>
                <xsl:for-each select="xal:Country">
                    <xsl:call-template name="City">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                    <xsl:text>{\cs828\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                    <xsl:for-each select="xal:CountryNameCode">
                        <xsl:text>{\cs829\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>(</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                        <xsl:text>{\cs830\f1\fs22 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                        <xsl:text>{\cs831\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>)</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
            </xsl:for-each>
        </xsl:for-each>
    </xsl:template>
    <xsl:template name="PartyHeader2Lines">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="ab" select="0"/>
        <xsl:choose>
            <xsl:when test="../rg:Type = &quot;lijstengroep&quot;">
                <xsl:variable name="altova:CurrContextGrid_06ABB918" select="."/>
                <xsl:variable name="altova:nTableWidthIn_17" select="$altova:nMaxWidthIn * 1.00000"/>
                <xsl:variable name="altova:nTableWidthTw_17" select="$altova:nTableWidthIn_17 * 1440"/>
                <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_17" select="round($altova:nTableWidthTw_17 * 0.25)"/>
                <xsl:variable name="altova:nTableIndentTw_17" select="0"/>
                <xsl:variable name="altova:nSumColumnWidthsTw_17" select="round(7201.00)"/>
                <xsl:variable name="altova:TableWidthFactor_17">
                    <xsl:choose>
                        <xsl:when test="$altova:nSumColumnWidthsTw_17 &gt; $altova:nTableWidthTw_17">
                            <xsl:value-of select="($altova:nTableWidthTw_17 - $altova:SumDefaultColumnsForWideTableTw_17) div $altova:nSumColumnWidthsTw_17"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="1"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnsWithDefaultWidth_17" select="round(1)"/>
                <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_17">
                    <xsl:choose>
                        <xsl:when test="$altova:nColumnsWithDefaultWidth_17 = 0">
                            <xsl:value-of select="round(1)"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="$altova:nColumnsWithDefaultWidth_17"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nDefaultColumnWidthTw_17">
                    <xsl:choose>
                        <xsl:when test="$altova:TableWidthFactor_17 &lt; 1">
                            <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_17 div $altova:nColumnsWithDefaultWidthNotZero_17"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="round(($altova:nTableWidthTw_17 - $altova:nSumColumnWidthsTw_17) div $altova:nColumnsWithDefaultWidthNotZero_17)"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnWidthTw_17_0" select="round(2.22 * 1440 * $altova:TableWidthFactor_17)"/>
                <xsl:variable name="altova:nColumnWidthTw_17_1" select="$altova:nDefaultColumnWidthTw_17"/>
                <xsl:variable name="altova:nColumnWidthTw_17_2" select="round(2.78 * 1440 * $altova:TableWidthFactor_17)"/>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:variable name="tablestyle17">
                    <xsl:text>\trowd\trleft</xsl:text>
                    <xsl:value-of select="$altova:nTableIndentTw_17"/>
                    <xsl:text>\ts832\ts833\ts834\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
                </xsl:variable>
                <xsl:variable name="rowend17">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\row\pard</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="cellend17">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\cell</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestcell</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:RowStyle50">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl17" select="$altova:nTableIndentTw_17"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl17_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl17 + $altova:nColumnWidthTw_17_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl17_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clmgf\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl17_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl17_Col0_AfterColumn + $altova:nColumnWidthTw_17_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl17_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl17_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl17_Col1_AfterColumn + $altova:nColumnWidthTw_17_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl17_Col2_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle17"/>
                    <xsl:value-of select="$altova:RowStyle50"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs835\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>Aanduiding van de groepering:</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs836\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_PartyHeader2Lines_Aanduiding"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend17"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="eml:AffiliationIdentifier">
                    <xsl:for-each select="eml:RegisteredName">
                        <xsl:text>{\cs837\f1\fs22 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_17_1 div 1440) + ($altova:nColumnWidthTw_17_2 div 1440) - 0.01042 - 0.01042"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend17"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend17"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle17"/>
                <xsl:value-of select="$altova:RowStyle50"/>
                <xsl:value-of select="$rowend17"/>
                <xsl:variable name="altova:RowStyle51">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl17" select="$altova:nTableIndentTw_17"/>
                    <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl17_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl17 + $altova:nColumnWidthTw_17_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl17_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl17_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl17_Col0_AfterColumn + $altova:nColumnWidthTw_17_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl17_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl17_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl17_Col1_AfterColumn + $altova:nColumnWidthTw_17_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl17_Col2_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle17"/>
                    <xsl:value-of select="$altova:RowStyle51"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs838\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>Lijstengroep:</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs839\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_PartyHeader2Lines_Lijstengroep"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend17"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="eml:AffiliationIdentifier">
                    <xsl:for-each select="@Id">
                        <xsl:text>{\cs840\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="string(.)"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend17"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:if test="$ab = 1">
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs841\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>A = Aantal uitgebrachte stemmen</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs842\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_PartyHeader2Lines_AAantal"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:if>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend17"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle17"/>
                <xsl:value-of select="$altova:RowStyle51"/>
                <xsl:value-of select="$rowend17"/>
                <xsl:variable name="altova:RowStyle52">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl17" select="$altova:nTableIndentTw_17"/>
                    <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl17_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl17 + $altova:nColumnWidthTw_17_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl17_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl17_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl17_Col0_AfterColumn + $altova:nColumnWidthTw_17_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl17_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl17_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl17_Col1_AfterColumn + $altova:nColumnWidthTw_17_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl17_Col2_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle17"/>
                    <xsl:value-of select="$altova:RowStyle52"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="rg:Type">
                    <xsl:choose>
                        <xsl:when test="text() = &quot;op zichzelf staande lijst&quot;">
                            <xsl:choose>
                                <xsl:when test="//kr:ElectionSubcategory[ text() != &quot;EK&quot; ]">
                                    <xsl:choose>
                                        <xsl:when test="$lang=0">
                                            <xsl:text>{\cs843\f1\fs22 </xsl:text>
                                            <xsl:call-template name="write-text">
                                                <xsl:with-param name="text">
                                                    <xsl:text>Kieskring:</xsl:text>
                                                </xsl:with-param>
                                            </xsl:call-template>
                                            <xsl:text>}</xsl:text>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:text>{\cs844\f1\fs22 </xsl:text>
                                            <xsl:call-template name="write-text">
                                                <xsl:with-param name="text">
                                                    <xsl:value-of select="$RP22_PartyHeader2Lines_Kieskring"/>
                                                </xsl:with-param>
                                            </xsl:call-template>
                                            <xsl:text>}</xsl:text>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:choose>
                                        <xsl:when test="$lang=0">
                                            <xsl:text>{\cs845\f1\fs22 </xsl:text>
                                            <xsl:call-template name="write-text">
                                                <xsl:with-param name="text">
                                                    <xsl:text>Provincie:</xsl:text>
                                                </xsl:with-param>
                                            </xsl:call-template>
                                            <xsl:text>}</xsl:text>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:text>{\cs846\f1\fs22 </xsl:text>
                                            <xsl:call-template name="write-text">
                                                <xsl:with-param name="text">
                                                    <xsl:value-of select="$RP22_PartyHeader2Lines_Provincie"/>
                                                </xsl:with-param>
                                            </xsl:call-template>
                                            <xsl:text>}</xsl:text>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test="text() = &quot;stel gelijkluidende lijsten&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs847\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>Stel:</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs848\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP22_PartyHeader2Lines_Stel"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                    </xsl:choose>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend17"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:choose>
                    <xsl:when test="rg:Type/text() = &quot;op zichzelf staande lijst&quot;">
                        <xsl:choose>
                            <xsl:when test="//eml:ElectionCategory[ text() != &quot;EK&quot; ]">
                                <xsl:text>{\cs849\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="@districtNumber"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs850\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="@provinceName"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:for-each select="kr:ListData">
                            <xsl:for-each select="@BelongsToSet">
                                <xsl:text>{\cs851\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="string(.)"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:for-each>
                        </xsl:for-each>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend17"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:if test="$ab = 1">
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs852\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>B = Gelden voor</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs853\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_PartyHeader2Lines_BGeldenVoor"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:if>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend17"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle17"/>
                <xsl:value-of select="$altova:RowStyle52"/>
                <xsl:value-of select="$rowend17"/>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text> </xsl:text>
            </xsl:when>
            <xsl:when test="$ab = 1">
                <xsl:variable name="altova:CurrContextGrid_06ABC398" select="."/>
                <xsl:variable name="altova:nTableWidthIn_18" select="$altova:nMaxWidthIn * 1.00000"/>
                <xsl:variable name="altova:nTableWidthTw_18" select="$altova:nTableWidthIn_18 * 1440"/>
                <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_18" select="round($altova:nTableWidthTw_18 * 0.25)"/>
                <xsl:variable name="altova:nTableIndentTw_18" select="0"/>
                <xsl:variable name="altova:nSumColumnWidthsTw_18" select="round(7201.00)"/>
                <xsl:variable name="altova:TableWidthFactor_18">
                    <xsl:choose>
                        <xsl:when test="$altova:nSumColumnWidthsTw_18 &gt; $altova:nTableWidthTw_18">
                            <xsl:value-of select="($altova:nTableWidthTw_18 - $altova:SumDefaultColumnsForWideTableTw_18) div $altova:nSumColumnWidthsTw_18"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="1"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnsWithDefaultWidth_18" select="round(1)"/>
                <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_18">
                    <xsl:choose>
                        <xsl:when test="$altova:nColumnsWithDefaultWidth_18 = 0">
                            <xsl:value-of select="round(1)"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="$altova:nColumnsWithDefaultWidth_18"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nDefaultColumnWidthTw_18">
                    <xsl:choose>
                        <xsl:when test="$altova:TableWidthFactor_18 &lt; 1">
                            <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_18 div $altova:nColumnsWithDefaultWidthNotZero_18"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="round(($altova:nTableWidthTw_18 - $altova:nSumColumnWidthsTw_18) div $altova:nColumnsWithDefaultWidthNotZero_18)"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnWidthTw_18_0" select="round(2.22 * 1440 * $altova:TableWidthFactor_18)"/>
                <xsl:variable name="altova:nColumnWidthTw_18_1" select="$altova:nDefaultColumnWidthTw_18"/>
                <xsl:variable name="altova:nColumnWidthTw_18_2" select="round(2.78 * 1440 * $altova:TableWidthFactor_18)"/>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:variable name="tablestyle18">
                    <xsl:text>\trowd\trleft</xsl:text>
                    <xsl:value-of select="$altova:nTableIndentTw_18"/>
                    <xsl:text>\ts854\ts855\ts856\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
                </xsl:variable>
                <xsl:variable name="rowend18">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\row\pard</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="cellend18">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\cell</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestcell</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:RowStyle53">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl18" select="$altova:nTableIndentTw_18"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl18_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl18 + $altova:nColumnWidthTw_18_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl18_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl18_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl18_Col0_AfterColumn + $altova:nColumnWidthTw_18_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl18_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl18_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl18_Col1_AfterColumn + $altova:nColumnWidthTw_18_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl18_Col2_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle18"/>
                    <xsl:value-of select="$altova:RowStyle53"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs857\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>Aanduiding van de groepering:</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs858\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_PartyHeader2Lines_Aanduiding"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend18"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="eml:AffiliationIdentifier">
                    <xsl:for-each select="eml:RegisteredName">
                        <xsl:text>{\cs859\f1\fs22 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_18_1 div 1440) - 0.01042 - 0.01042"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend18"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs860\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>A = Aantal uitgebrachte stemmen</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs861\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_PartyHeader2Lines_AAantal"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend18"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle18"/>
                <xsl:value-of select="$altova:RowStyle53"/>
                <xsl:value-of select="$rowend18"/>
                <xsl:variable name="altova:RowStyle54">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl18" select="$altova:nTableIndentTw_18"/>
                    <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl18_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl18 + $altova:nColumnWidthTw_18_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl18_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl18_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl18_Col0_AfterColumn + $altova:nColumnWidthTw_18_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl18_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl18_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl18_Col1_AfterColumn + $altova:nColumnWidthTw_18_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl18_Col2_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle18"/>
                    <xsl:value-of select="$altova:RowStyle54"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:choose>
                    <xsl:when test="//kr:ElectionSubcategory[ text() != &quot;TK&quot; and text() != &quot;PS2&quot; ]">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs862\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>Lijst:</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs863\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP22_PartyHeader2Lines_Lijst"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="../rg:Type = &quot;op zichzelf staande lijst&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs864\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>Op zichzelf staande lijst:</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs865\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP22_PartyHeader2Lines_zichzelf"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="../rg:Type = &quot;stel gelijkluidende lijsten&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs866\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>Stel gelijkluidende lijsten:</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs867\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP22_PartyHeader2Lines_StelGelijkluidendeLijsten"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                </xsl:choose>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend18"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="eml:AffiliationIdentifier">
                    <xsl:for-each select="@Id">
                        <xsl:text>{\cs868\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="string(.)"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend18"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs869\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>B = Gelden voor</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs870\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_PartyHeader2Lines_BGeldenVoor"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend18"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle18"/>
                <xsl:value-of select="$altova:RowStyle54"/>
                <xsl:value-of select="$rowend18"/>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text> </xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:variable name="altova:CurrContextGrid_06ABCB78" select="."/>
                <xsl:variable name="altova:nTableWidthIn_19" select="$altova:nMaxWidthIn * 1.00000"/>
                <xsl:variable name="altova:nTableWidthTw_19" select="$altova:nTableWidthIn_19 * 1440"/>
                <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_19" select="round($altova:nTableWidthTw_19 * 0.25)"/>
                <xsl:variable name="altova:nTableIndentTw_19" select="0"/>
                <xsl:variable name="altova:nSumColumnWidthsTw_19" select="round(3200.50)"/>
                <xsl:variable name="altova:TableWidthFactor_19">
                    <xsl:choose>
                        <xsl:when test="$altova:nSumColumnWidthsTw_19 &gt; $altova:nTableWidthTw_19">
                            <xsl:value-of select="($altova:nTableWidthTw_19 - $altova:SumDefaultColumnsForWideTableTw_19) div $altova:nSumColumnWidthsTw_19"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="1"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnsWithDefaultWidth_19" select="round(1)"/>
                <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_19">
                    <xsl:choose>
                        <xsl:when test="$altova:nColumnsWithDefaultWidth_19 = 0">
                            <xsl:value-of select="round(1)"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="$altova:nColumnsWithDefaultWidth_19"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nDefaultColumnWidthTw_19">
                    <xsl:choose>
                        <xsl:when test="$altova:TableWidthFactor_19 &lt; 1">
                            <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_19 div $altova:nColumnsWithDefaultWidthNotZero_19"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="round(($altova:nTableWidthTw_19 - $altova:nSumColumnWidthsTw_19) div $altova:nColumnsWithDefaultWidthNotZero_19)"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnWidthTw_19_0" select="round(2.22 * 1440 * $altova:TableWidthFactor_19)"/>
                <xsl:variable name="altova:nColumnWidthTw_19_1" select="$altova:nDefaultColumnWidthTw_19"/>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:variable name="tablestyle19">
                    <xsl:text>\trowd\trleft</xsl:text>
                    <xsl:value-of select="$altova:nTableIndentTw_19"/>
                    <xsl:text>\ts871\ts872\ts873\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
                </xsl:variable>
                <xsl:variable name="rowend19">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\row\pard</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="cellend19">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\cell</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestcell</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:RowStyle55">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl19" select="$altova:nTableIndentTw_19"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl19_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl19 + $altova:nColumnWidthTw_19_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl19_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl19_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl19_Col0_AfterColumn + $altova:nColumnWidthTw_19_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl19_Col1_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle19"/>
                    <xsl:value-of select="$altova:RowStyle55"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs874\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>Aanduiding van de groepering:</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs875\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_PartyHeader2Lines_Aanduiding"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend19"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="eml:AffiliationIdentifier">
                    <xsl:for-each select="eml:RegisteredName">
                        <xsl:text>{\cs876\f1\fs22 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_19_1 div 1440) - 0.01042 - 0.01042"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend19"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle19"/>
                <xsl:value-of select="$altova:RowStyle55"/>
                <xsl:value-of select="$rowend19"/>
                <xsl:variable name="altova:RowStyle56">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl19" select="$altova:nTableIndentTw_19"/>
                    <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl19_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl19 + $altova:nColumnWidthTw_19_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl19_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl19_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl19_Col0_AfterColumn + $altova:nColumnWidthTw_19_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl19_Col1_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle19"/>
                    <xsl:value-of select="$altova:RowStyle56"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:choose>
                    <xsl:when test="//kr:ElectionSubcategory[ text() != &quot;TK&quot; and text() != &quot;PS2&quot; ]">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs877\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>Lijst:</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs878\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP22_PartyHeader2Lines_Lijst"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="../rg:Type = &quot;op zichzelf staande lijst&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs879\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>Op zichzelf staande lijst:</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs880\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP22_PartyHeader2Lines_zichzelf"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="../rg:Type = &quot;stel gelijkluidende lijsten&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs881\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>Stel gelijkluidende lijsten:</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs882\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP22_PartyHeader2Lines_StelGelijkluidendeLijsten"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                </xsl:choose>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend19"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="eml:AffiliationIdentifier">
                    <xsl:for-each select="@Id">
                        <xsl:text>{\cs883\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="string(.)"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend19"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle19"/>
                <xsl:value-of select="$altova:RowStyle56"/>
                <xsl:value-of select="$rowend19"/>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text> </xsl:text>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="PartyHeader3Lines">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="ab" select="0"/>
        <xsl:variable name="altova:CurrContextGrid_06ABD058" select="."/>
        <xsl:variable name="altova:nTableWidthIn_20" select="$altova:nMaxWidthIn * 1.00000"/>
        <xsl:variable name="altova:nTableWidthTw_20" select="$altova:nTableWidthIn_20 * 1440"/>
        <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_20" select="round($altova:nTableWidthTw_20 * 0.25)"/>
        <xsl:variable name="altova:nTableIndentTw_20" select="0"/>
        <xsl:variable name="altova:nSumColumnWidthsTw_20" select="round(3200.50)"/>
        <xsl:variable name="altova:TableWidthFactor_20">
            <xsl:choose>
                <xsl:when test="$altova:nSumColumnWidthsTw_20 &gt; $altova:nTableWidthTw_20">
                    <xsl:value-of select="($altova:nTableWidthTw_20 - $altova:SumDefaultColumnsForWideTableTw_20) div $altova:nSumColumnWidthsTw_20"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="1"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnsWithDefaultWidth_20" select="round(1)"/>
        <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_20">
            <xsl:choose>
                <xsl:when test="$altova:nColumnsWithDefaultWidth_20 = 0">
                    <xsl:value-of select="round(1)"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="$altova:nColumnsWithDefaultWidth_20"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nDefaultColumnWidthTw_20">
            <xsl:choose>
                <xsl:when test="$altova:TableWidthFactor_20 &lt; 1">
                    <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_20 div $altova:nColumnsWithDefaultWidthNotZero_20"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="round(($altova:nTableWidthTw_20 - $altova:nSumColumnWidthsTw_20) div $altova:nColumnsWithDefaultWidthNotZero_20)"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnWidthTw_20_0" select="round(2.22 * 1440 * $altova:TableWidthFactor_20)"/>
        <xsl:variable name="altova:nColumnWidthTw_20_1" select="$altova:nDefaultColumnWidthTw_20"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:variable name="tablestyle20">
            <xsl:text>\trowd\trleft</xsl:text>
            <xsl:value-of select="$altova:nTableIndentTw_20"/>
            <xsl:text>\ts884\ts885\ts886\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
        </xsl:variable>
        <xsl:variable name="rowend20">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\row\pard</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="cellend20">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\cell</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestcell</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:RowStyle57">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl20" select="$altova:nTableIndentTw_20"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl20_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl20 + $altova:nColumnWidthTw_20_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl20_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl20_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl20_Col0_AfterColumn + $altova:nColumnWidthTw_20_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl20_Col1_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle20"/>
            <xsl:value-of select="$altova:RowStyle57"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs887\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Aanduiding van de groepering:</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs888\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_PartyHeader3Lines_Aanduiding"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend20"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="eml:AffiliationIdentifier">
            <xsl:for-each select="eml:RegisteredName">
                <xsl:text>{\cs889\f1\fs22 </xsl:text>
                <xsl:apply-templates>
                    <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_20_1 div 1440) - 0.01042 - 0.01042"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                </xsl:apply-templates>
                <xsl:text>}</xsl:text>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend20"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle20"/>
        <xsl:value-of select="$altova:RowStyle57"/>
        <xsl:value-of select="$rowend20"/>
        <xsl:variable name="altova:RowStyle58">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl20" select="$altova:nTableIndentTw_20"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl20_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl20 + $altova:nColumnWidthTw_20_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl20_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl20_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl20_Col0_AfterColumn + $altova:nColumnWidthTw_20_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl20_Col1_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle20"/>
            <xsl:value-of select="$altova:RowStyle58"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs890\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Lijst:</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs891\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_PartyHeader3Lines_Lijst"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend20"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="eml:AffiliationIdentifier">
            <xsl:for-each select="@Id">
                <xsl:text>{\cs892\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="string(.)"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend20"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle20"/>
        <xsl:value-of select="$altova:RowStyle58"/>
        <xsl:value-of select="$rowend20"/>
        <xsl:variable name="altova:RowStyle59">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl20" select="$altova:nTableIndentTw_20"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl20_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl20 + $altova:nColumnWidthTw_20_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl20_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl20_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl20_Col0_AfterColumn + $altova:nColumnWidthTw_20_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl20_Col1_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle20"/>
            <xsl:value-of select="$altova:RowStyle59"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs893\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Toegewezen aantal zetels:</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs894\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_PartyHeader3Lines_ToegewezenAantal"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend20"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:Seats">
            <xsl:text>{\cs895\f1\fs22 </xsl:text>
            <xsl:apply-templates>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_20_1 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:apply-templates>
            <xsl:text>}</xsl:text>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend20"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle20"/>
        <xsl:value-of select="$altova:RowStyle59"/>
        <xsl:value-of select="$rowend20"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 0"/>
        <xsl:text> </xsl:text>
    </xsl:template>
    <xsl:template name="PartyHeader4Lines">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="ab" select="0"/>
        <xsl:choose>
            <xsl:when test="../rg:Type = &quot;lijstengroep&quot;">
                <xsl:variable name="altova:CurrContextGrid_06ABD598" select="."/>
                <xsl:variable name="altova:nTableWidthIn_21" select="$altova:nMaxWidthIn * 1.00000"/>
                <xsl:variable name="altova:nTableWidthTw_21" select="$altova:nTableWidthIn_21 * 1440"/>
                <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_21" select="round($altova:nTableWidthTw_21 * 0.25)"/>
                <xsl:variable name="altova:nTableIndentTw_21" select="0"/>
                <xsl:variable name="altova:nSumColumnWidthsTw_21" select="round(7201.00)"/>
                <xsl:variable name="altova:TableWidthFactor_21">
                    <xsl:choose>
                        <xsl:when test="$altova:nSumColumnWidthsTw_21 &gt; $altova:nTableWidthTw_21">
                            <xsl:value-of select="($altova:nTableWidthTw_21 - $altova:SumDefaultColumnsForWideTableTw_21) div $altova:nSumColumnWidthsTw_21"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="1"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnsWithDefaultWidth_21" select="round(1)"/>
                <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_21">
                    <xsl:choose>
                        <xsl:when test="$altova:nColumnsWithDefaultWidth_21 = 0">
                            <xsl:value-of select="round(1)"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="$altova:nColumnsWithDefaultWidth_21"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nDefaultColumnWidthTw_21">
                    <xsl:choose>
                        <xsl:when test="$altova:TableWidthFactor_21 &lt; 1">
                            <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_21 div $altova:nColumnsWithDefaultWidthNotZero_21"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="round(($altova:nTableWidthTw_21 - $altova:nSumColumnWidthsTw_21) div $altova:nColumnsWithDefaultWidthNotZero_21)"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnWidthTw_21_0" select="round(2.22 * 1440 * $altova:TableWidthFactor_21)"/>
                <xsl:variable name="altova:nColumnWidthTw_21_1" select="$altova:nDefaultColumnWidthTw_21"/>
                <xsl:variable name="altova:nColumnWidthTw_21_2" select="round(2.78 * 1440 * $altova:TableWidthFactor_21)"/>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:variable name="tablestyle21">
                    <xsl:text>\trowd\trleft</xsl:text>
                    <xsl:value-of select="$altova:nTableIndentTw_21"/>
                    <xsl:text>\ts896\ts897\ts898\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
                </xsl:variable>
                <xsl:variable name="rowend21">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\row\pard</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="cellend21">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\cell</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestcell</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:RowStyle60">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl21" select="$altova:nTableIndentTw_21"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl21_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl21 + $altova:nColumnWidthTw_21_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl21_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clmgf\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl21_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl21_Col0_AfterColumn + $altova:nColumnWidthTw_21_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl21_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalc\clmrg\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl21_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl21_Col1_AfterColumn + $altova:nColumnWidthTw_21_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl21_Col2_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle21"/>
                    <xsl:value-of select="$altova:RowStyle60"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs899\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>Aanduiding van de groepering:</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs900\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_PartyHeader4Lines_Aanduiding"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend21"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="eml:AffiliationIdentifier">
                    <xsl:for-each select="eml:RegisteredName">
                        <xsl:text>{\cs901\f1\fs22 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_21_1 div 1440) + ($altova:nColumnWidthTw_21_2 div 1440) - 0.01042 - 0.01042"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend21"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend21"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle21"/>
                <xsl:value-of select="$altova:RowStyle60"/>
                <xsl:value-of select="$rowend21"/>
                <xsl:variable name="altova:RowStyle61">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl21" select="$altova:nTableIndentTw_21"/>
                    <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl21_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl21 + $altova:nColumnWidthTw_21_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl21_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clmgf\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl21_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl21_Col0_AfterColumn + $altova:nColumnWidthTw_21_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl21_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl21_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl21_Col1_AfterColumn + $altova:nColumnWidthTw_21_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl21_Col2_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle21"/>
                    <xsl:value-of select="$altova:RowStyle61"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs902\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>Lijstengroep:</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs903\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_PartyHeader4Lines_Lijstengroep"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend21"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="eml:AffiliationIdentifier">
                    <xsl:for-each select="@Id">
                        <xsl:text>{\cs904\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="string(.)"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend21"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend21"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle21"/>
                <xsl:value-of select="$altova:RowStyle61"/>
                <xsl:value-of select="$rowend21"/>
                <xsl:variable name="altova:RowStyle62">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl21" select="$altova:nTableIndentTw_21"/>
                    <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl21_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl21 + $altova:nColumnWidthTw_21_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl21_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clmgf\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl21_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl21_Col0_AfterColumn + $altova:nColumnWidthTw_21_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl21_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl21_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl21_Col1_AfterColumn + $altova:nColumnWidthTw_21_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl21_Col2_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle21"/>
                    <xsl:value-of select="$altova:RowStyle62"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="rg:Type">
                    <xsl:choose>
                        <xsl:when test="text() = &quot;op zichzelf staande lijst&quot;">
                            <xsl:choose>
                                <xsl:when test="//kr:ElectionSubcategory[ text() != &quot;EK&quot; ]">
                                    <xsl:choose>
                                        <xsl:when test="$lang=0">
                                            <xsl:text>{\cs905\f1\fs22 </xsl:text>
                                            <xsl:call-template name="write-text">
                                                <xsl:with-param name="text">
                                                    <xsl:text>Kieskring:</xsl:text>
                                                </xsl:with-param>
                                            </xsl:call-template>
                                            <xsl:text>}</xsl:text>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:text>{\cs906\f1\fs22 </xsl:text>
                                            <xsl:call-template name="write-text">
                                                <xsl:with-param name="text">
                                                    <xsl:value-of select="$RP22_PartyHeader4Lines_Kieskring"/>
                                                </xsl:with-param>
                                            </xsl:call-template>
                                            <xsl:text>}</xsl:text>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:choose>
                                        <xsl:when test="$lang=0">
                                            <xsl:text>{\cs907\f1\fs22 </xsl:text>
                                            <xsl:call-template name="write-text">
                                                <xsl:with-param name="text">
                                                    <xsl:text>Provincie:</xsl:text>
                                                </xsl:with-param>
                                            </xsl:call-template>
                                            <xsl:text>}</xsl:text>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:text>{\cs908\f1\fs22 </xsl:text>
                                            <xsl:call-template name="write-text">
                                                <xsl:with-param name="text">
                                                    <xsl:value-of select="$RP22_PartyHeader4Lines_Provincie"/>
                                                </xsl:with-param>
                                            </xsl:call-template>
                                            <xsl:text>}</xsl:text>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test="text() = &quot;stel gelijkluidende lijsten&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs909\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>Stel:</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs910\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP22_PartyHeader4Lines_Stel"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                    </xsl:choose>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend21"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:choose>
                    <xsl:when test="rg:Type/text() = &quot;op zichzelf staande lijst&quot;">
                        <xsl:choose>
                            <xsl:when test="//eml:ElectionCategory[ text() != &quot;EK&quot; ]">
                                <xsl:text>{\cs911\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="@districtNumber"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs912\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="@provinceName"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:for-each select="kr:ListData">
                            <xsl:for-each select="@BelongsToSet">
                                <xsl:text>{\cs913\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="string(.)"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:for-each>
                        </xsl:for-each>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend21"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend21"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle21"/>
                <xsl:value-of select="$altova:RowStyle62"/>
                <xsl:value-of select="$rowend21"/>
                <xsl:variable name="altova:RowStyle63">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl21" select="$altova:nTableIndentTw_21"/>
                    <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl21_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl21 + $altova:nColumnWidthTw_21_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl21_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl21_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl21_Col0_AfterColumn + $altova:nColumnWidthTw_21_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl21_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl21_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl21_Col1_AfterColumn + $altova:nColumnWidthTw_21_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl21_Col2_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle21"/>
                    <xsl:value-of select="$altova:RowStyle63"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs914\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>Totaal aantal stemmen:</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs915\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_PartyHeader4Lines_aantalStemmen"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend21"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="rg:Votes">
                    <xsl:text>{\cs916\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_21_1 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend21"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:if test="$ab = 1">
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs917\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>A = Aantal uitgebrachte stemmen</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs918\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_PartyHeader4Lines_AAantal"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:if>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend21"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle21"/>
                <xsl:value-of select="$altova:RowStyle63"/>
                <xsl:value-of select="$rowend21"/>
                <xsl:variable name="altova:RowStyle64">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl21" select="$altova:nTableIndentTw_21"/>
                    <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl21_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl21 + $altova:nColumnWidthTw_21_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl21_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl21_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl21_Col0_AfterColumn + $altova:nColumnWidthTw_21_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl21_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl21_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl21_Col1_AfterColumn + $altova:nColumnWidthTw_21_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl21_Col2_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle21"/>
                    <xsl:value-of select="$altova:RowStyle64"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs919\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>Toegewezen aantal zetels:</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs920\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_PartyHeader4Lines_ToegewezenAantal"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend21"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="rg:Seats">
                    <xsl:text>{\cs921\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_21_1 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend21"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:if test="$ab = 1">
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs922\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>B = Gelden voor</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs923\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_PartyHeader4Lines_BGeldenVoor"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:if>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend21"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle21"/>
                <xsl:value-of select="$altova:RowStyle64"/>
                <xsl:value-of select="$rowend21"/>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text> </xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:variable name="altova:CurrContextGrid_06ABE3D8" select="."/>
                <xsl:variable name="altova:nTableWidthIn_22" select="$altova:nMaxWidthIn * 1.00000"/>
                <xsl:variable name="altova:nTableWidthTw_22" select="$altova:nTableWidthIn_22 * 1440"/>
                <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_22" select="round($altova:nTableWidthTw_22 * 0.25)"/>
                <xsl:variable name="altova:nTableIndentTw_22" select="0"/>
                <xsl:variable name="altova:nSumColumnWidthsTw_22" select="round(6601.00)"/>
                <xsl:variable name="altova:TableWidthFactor_22">
                    <xsl:choose>
                        <xsl:when test="$altova:nSumColumnWidthsTw_22 &gt; $altova:nTableWidthTw_22">
                            <xsl:value-of select="($altova:nTableWidthTw_22 - $altova:SumDefaultColumnsForWideTableTw_22) div $altova:nSumColumnWidthsTw_22"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="1"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnsWithDefaultWidth_22" select="round(1)"/>
                <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_22">
                    <xsl:choose>
                        <xsl:when test="$altova:nColumnsWithDefaultWidth_22 = 0">
                            <xsl:value-of select="round(1)"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="$altova:nColumnsWithDefaultWidth_22"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nDefaultColumnWidthTw_22">
                    <xsl:choose>
                        <xsl:when test="$altova:TableWidthFactor_22 &lt; 1">
                            <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_22 div $altova:nColumnsWithDefaultWidthNotZero_22"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="round(($altova:nTableWidthTw_22 - $altova:nSumColumnWidthsTw_22) div $altova:nColumnsWithDefaultWidthNotZero_22)"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:nColumnWidthTw_22_0" select="round(2.22 * 1440 * $altova:TableWidthFactor_22)"/>
                <xsl:variable name="altova:nColumnWidthTw_22_1" select="$altova:nDefaultColumnWidthTw_22"/>
                <xsl:variable name="altova:nColumnWidthTw_22_2" select="round(2.36 * 1440 * $altova:TableWidthFactor_22)"/>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:variable name="tablestyle22">
                    <xsl:text>\trowd\trleft</xsl:text>
                    <xsl:value-of select="$altova:nTableIndentTw_22"/>
                    <xsl:text>\ts924\ts925\ts926\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
                </xsl:variable>
                <xsl:variable name="rowend22">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\row\pard</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="cellend22">
                    <xsl:choose>
                        <xsl:when test="$templatetablelevel + 1 = 1">
                            <xsl:text>\cell</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>\nestcell</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="altova:RowStyle65">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl22" select="$altova:nTableIndentTw_22"/>
                    <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl22_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl22 + $altova:nColumnWidthTw_22_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl22_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clmgf\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl22_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl22_Col0_AfterColumn + $altova:nColumnWidthTw_22_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl22_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl22_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl22_Col1_AfterColumn + $altova:nColumnWidthTw_22_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl22_Col2_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle22"/>
                    <xsl:value-of select="$altova:RowStyle65"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs927\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>Aanduiding van de groepering:</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs928\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_PartyHeader4Lines_Aanduiding"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend22"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="eml:AffiliationIdentifier">
                    <xsl:for-each select="eml:RegisteredName">
                        <xsl:text>{\cs929\f1\fs22 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_22_1 div 1440) + ($altova:nColumnWidthTw_22_2 div 1440) - 0.01042 - 0.01042"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend22"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend22"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle22"/>
                <xsl:value-of select="$altova:RowStyle65"/>
                <xsl:value-of select="$rowend22"/>
                <xsl:variable name="altova:RowStyle66">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl22" select="$altova:nTableIndentTw_22"/>
                    <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl22_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl22 + $altova:nColumnWidthTw_22_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl22_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clmgf\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl22_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl22_Col0_AfterColumn + $altova:nColumnWidthTw_22_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl22_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl22_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl22_Col1_AfterColumn + $altova:nColumnWidthTw_22_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl22_Col2_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle22"/>
                    <xsl:value-of select="$altova:RowStyle66"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:choose>
                    <xsl:when test="//kr:ElectionSubcategory[ text() != &quot;TK&quot; and text() != &quot;PS2&quot; ]">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs930\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>Lijst:</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs931\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP22_PartyHeader4Lines_Lijst"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="../rg:Type = &quot;op zichzelf staande lijst&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs932\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>Op zichzelf staande lijst:</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs933\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP22_PartyHeader4Lines_zichzelf"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="../rg:Type = &quot;stel gelijkluidende lijsten&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs934\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>Stel gelijkluidende lijsten:</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs935\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP22_PartyHeader4Lines_StelGelijkluidendeLijsten"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                </xsl:choose>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend22"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="eml:AffiliationIdentifier">
                    <xsl:for-each select="@Id">
                        <xsl:text>{\cs936\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="string(.)"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend22"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend22"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle22"/>
                <xsl:value-of select="$altova:RowStyle66"/>
                <xsl:value-of select="$rowend22"/>
                <xsl:variable name="altova:RowStyle67">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl22" select="$altova:nTableIndentTw_22"/>
                    <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl22_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl22 + $altova:nColumnWidthTw_22_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl22_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl22_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl22_Col0_AfterColumn + $altova:nColumnWidthTw_22_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl22_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl22_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl22_Col1_AfterColumn + $altova:nColumnWidthTw_22_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl22_Col2_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle22"/>
                    <xsl:value-of select="$altova:RowStyle67"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs937\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>Totaal aantal stemmen:</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs938\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_PartyHeader4Lines_aantalStemmen"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend22"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="rg:Votes">
                    <xsl:text>{\cs939\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_22_1 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend22"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:if test="$ab = 1">
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs940\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>A = Aantal uitgebrachte stemmen</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs941\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_PartyHeader4Lines_AAantal"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:if>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend22"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle22"/>
                <xsl:value-of select="$altova:RowStyle67"/>
                <xsl:value-of select="$rowend22"/>
                <xsl:variable name="altova:RowStyle68">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl22" select="$altova:nTableIndentTw_22"/>
                    <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl22_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl22 + $altova:nColumnWidthTw_22_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl22_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl22_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl22_Col0_AfterColumn + $altova:nColumnWidthTw_22_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl22_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl22_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl22_Col1_AfterColumn + $altova:nColumnWidthTw_22_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl22_Col2_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle22"/>
                    <xsl:value-of select="$altova:RowStyle68"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs942\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>Toegewezen aantal zetels:</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs943\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_PartyHeader4Lines_ToegewezenAantal"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend22"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="rg:Seats">
                    <xsl:text>{\cs944\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_22_1 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend22"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:if test="$ab = 1">
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs945\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>B = Gelden voor</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs946\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_PartyHeader4Lines_BGeldenVoor"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:if>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend22"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle22"/>
                <xsl:value-of select="$altova:RowStyle68"/>
                <xsl:value-of select="$rowend22"/>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text> </xsl:text>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="PartyHeader5Lines">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="ab" select="0"/>
        <xsl:variable name="altova:CurrContextGrid_06ABEF78" select="."/>
        <xsl:variable name="altova:nTableWidthIn_23" select="$altova:nMaxWidthIn * 1.00000"/>
        <xsl:variable name="altova:nTableWidthTw_23" select="$altova:nTableWidthIn_23 * 1440"/>
        <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_23" select="round($altova:nTableWidthTw_23 * 0.25)"/>
        <xsl:variable name="altova:nTableIndentTw_23" select="0"/>
        <xsl:variable name="altova:nSumColumnWidthsTw_23" select="round(3200.50)"/>
        <xsl:variable name="altova:TableWidthFactor_23">
            <xsl:choose>
                <xsl:when test="$altova:nSumColumnWidthsTw_23 &gt; $altova:nTableWidthTw_23">
                    <xsl:value-of select="($altova:nTableWidthTw_23 - $altova:SumDefaultColumnsForWideTableTw_23) div $altova:nSumColumnWidthsTw_23"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="1"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnsWithDefaultWidth_23" select="round(1)"/>
        <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_23">
            <xsl:choose>
                <xsl:when test="$altova:nColumnsWithDefaultWidth_23 = 0">
                    <xsl:value-of select="round(1)"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="$altova:nColumnsWithDefaultWidth_23"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nDefaultColumnWidthTw_23">
            <xsl:choose>
                <xsl:when test="$altova:TableWidthFactor_23 &lt; 1">
                    <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_23 div $altova:nColumnsWithDefaultWidthNotZero_23"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="round(($altova:nTableWidthTw_23 - $altova:nSumColumnWidthsTw_23) div $altova:nColumnsWithDefaultWidthNotZero_23)"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnWidthTw_23_0" select="round(2.22 * 1440 * $altova:TableWidthFactor_23)"/>
        <xsl:variable name="altova:nColumnWidthTw_23_1" select="$altova:nDefaultColumnWidthTw_23"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:variable name="tablestyle23">
            <xsl:text>\trowd\trleft</xsl:text>
            <xsl:value-of select="$altova:nTableIndentTw_23"/>
            <xsl:text>\ts947\ts948\ts949\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
        </xsl:variable>
        <xsl:variable name="rowend23">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\row\pard</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="cellend23">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\cell</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestcell</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:RowStyle69">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl23" select="$altova:nTableIndentTw_23"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl23_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl23 + $altova:nColumnWidthTw_23_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl23_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl23_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl23_Col0_AfterColumn + $altova:nColumnWidthTw_23_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl23_Col1_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle23"/>
            <xsl:value-of select="$altova:RowStyle69"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs950\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Aanduiding van de groepering:</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs951\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_PartyHeader5Lines_Aanduiding"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend23"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="eml:AffiliationIdentifier">
            <xsl:for-each select="eml:RegisteredName">
                <xsl:text>{\cs952\f1\fs22 </xsl:text>
                <xsl:apply-templates>
                    <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_23_1 div 1440) - 0.01042 - 0.01042"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                </xsl:apply-templates>
                <xsl:text>}</xsl:text>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend23"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle23"/>
        <xsl:value-of select="$altova:RowStyle69"/>
        <xsl:value-of select="$rowend23"/>
        <xsl:variable name="altova:RowStyle70">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl23" select="$altova:nTableIndentTw_23"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl23_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl23 + $altova:nColumnWidthTw_23_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl23_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl23_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl23_Col0_AfterColumn + $altova:nColumnWidthTw_23_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl23_Col1_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle23"/>
            <xsl:value-of select="$altova:RowStyle70"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs953\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Lijstengroepnummer:</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs954\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_PartyHeader5Lines_Lijstengroepnummer"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend23"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="eml:AffiliationIdentifier">
            <xsl:for-each select="@Id">
                <xsl:text>{\cs955\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="string(.)"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend23"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle23"/>
        <xsl:value-of select="$altova:RowStyle70"/>
        <xsl:value-of select="$rowend23"/>
        <xsl:variable name="altova:RowStyle71">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl23" select="$altova:nTableIndentTw_23"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl23_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl23 + $altova:nColumnWidthTw_23_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl23_Col0_AfterColumn)"/>
            <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl23_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl23_Col0_AfterColumn + $altova:nColumnWidthTw_23_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl23_Col1_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle23"/>
            <xsl:value-of select="$altova:RowStyle71"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs956\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Totaal aantal stemmen:</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs957\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_PartyHeader5Lines_aantalStemmen"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend23"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:ElectoralQuota">
            <xsl:for-each select="rg:Fraction">
                <xsl:for-each select="@numerator">
                    <xsl:text>{\cs958\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend23"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle23"/>
        <xsl:value-of select="$altova:RowStyle71"/>
        <xsl:value-of select="$rowend23"/>
        <xsl:variable name="altova:RowStyle72">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl23" select="$altova:nTableIndentTw_23"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl23_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl23 + $altova:nColumnWidthTw_23_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl23_Col0_AfterColumn)"/>
            <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl23_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl23_Col0_AfterColumn + $altova:nColumnWidthTw_23_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl23_Col1_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle23"/>
            <xsl:value-of select="$altova:RowStyle72"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs959\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Toegewezen aantal zetels:</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs960\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_PartyHeader5Lines_ToegewezenAantal"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend23"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:ElectoralQuota">
            <xsl:for-each select="rg:Fraction">
                <xsl:for-each select="@denominator">
                    <xsl:text>{\cs961\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend23"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle23"/>
        <xsl:value-of select="$altova:RowStyle72"/>
        <xsl:value-of select="$rowend23"/>
        <xsl:variable name="altova:RowStyle73">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl23" select="$altova:nTableIndentTw_23"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl23_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl23 + $altova:nColumnWidthTw_23_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl23_Col0_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl23_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl23_Col0_AfterColumn + $altova:nColumnWidthTw_23_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl23_Col1_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle23"/>
            <xsl:value-of select="$altova:RowStyle73"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs962\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Groepskiesdeler:</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs963\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_PartyHeader5Lines_Groepskiesdeler"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend23"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:ElectoralQuota">
            <xsl:call-template name="ElectionFraction">
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_23_1 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend23"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle23"/>
        <xsl:value-of select="$altova:RowStyle73"/>
        <xsl:value-of select="$rowend23"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 0"/>
        <xsl:text> </xsl:text>
    </xsl:template>
    <xsl:template name="ListOrCombinedList2">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:for-each select="rg:ListOrCombinedList">
            <xsl:for-each select="@combinationId">
                <xsl:text>{\cs964\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="string(.)"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:for-each>
            <xsl:for-each select="@listNumber">
                <xsl:text>{\cs965\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="string(.)"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:if test="count(rg:ListOrCombinedList/rg:ListInCombination) &gt;0">
            <xsl:text>{\cs966\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text> (</xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:for-each select="rg:ListOrCombinedList">
                <xsl:for-each select="rg:ListInCombination">
                    <xsl:text>{\cs967\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                    <xsl:if test="position() != last()">
                        <xsl:text>{\cs968\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>, </xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:if>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>{\cs969\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text>)</xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
        </xsl:if>
    </xsl:template>
    <xsl:template name="OverviewNiemeyerAssignment">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:for-each select="rg:NiemeyerAssignment">
            <xsl:variable name="altova:CurrContextGrid_06ADE8F8" select="."/>
            <xsl:variable name="altova:nTableWidthIn_24" select="$altova:nMaxWidthIn * 1.00000"/>
            <xsl:variable name="altova:nTableWidthTw_24" select="$altova:nTableWidthIn_24 * 1440"/>
            <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_24" select="round($altova:nTableWidthTw_24 * 0.25)"/>
            <xsl:variable name="altova:nTableIndentTw_24" select="0"/>
            <xsl:variable name="altova:nSumColumnWidthsTw_24" select="round(10402.50)"/>
            <xsl:variable name="altova:TableWidthFactor_24">
                <xsl:choose>
                    <xsl:when test="$altova:nSumColumnWidthsTw_24 &gt; $altova:nTableWidthTw_24">
                        <xsl:value-of select="$altova:nTableWidthTw_24 div $altova:nSumColumnWidthsTw_24"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:value-of select="1"/>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:variable>
            <xsl:variable name="altova:nColumnWidthTw_24_0" select="round(1.81 * 1440 * $altova:TableWidthFactor_24)"/>
            <xsl:variable name="altova:nColumnWidthTw_24_1" select="round(1.25 * 1440 * $altova:TableWidthFactor_24)"/>
            <xsl:variable name="altova:nColumnWidthTw_24_2" select="round(1.39 * 1440 * $altova:TableWidthFactor_24)"/>
            <xsl:variable name="altova:nColumnWidthTw_24_3" select="round(1.39 * 1440 * $altova:TableWidthFactor_24)"/>
            <xsl:variable name="altova:nColumnWidthTw_24_4" select="round(1.39 * 1440 * $altova:TableWidthFactor_24)"/>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:variable name="tablestyle24">
                <xsl:text>\trowd\trleft</xsl:text>
                <xsl:value-of select="$altova:nTableIndentTw_24"/>
                <xsl:text>\ts970\ts971\ts972\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrs\brdrcf1\brdrw15\trbrdrl\brdrnil\trbrdrb\brdrs\brdrcf1\brdrw15\trbrdrr\brdrnil</xsl:text>
            </xsl:variable>
            <xsl:variable name="rowend24">
                <xsl:choose>
                    <xsl:when test="$templatetablelevel + 1 = 1">
                        <xsl:text>\row\pard</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:variable>
            <xsl:variable name="cellend24">
                <xsl:choose>
                    <xsl:when test="$templatetablelevel + 1 = 1">
                        <xsl:text>\cell</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>\nestcell</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:variable>
            <xsl:variable name="altova:RowStyle74">
                <xsl:text>\trrh0\trhdr</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl24" select="$altova:nTableIndentTw_24"/>
                <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl24_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl24 + $altova:nColumnWidthTw_24_0"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl24_Col0_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl24_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl24_Col0_AfterColumn + $altova:nColumnWidthTw_24_1"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl24_Col1_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl24_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl24_Col1_AfterColumn + $altova:nColumnWidthTw_24_2"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl24_Col2_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl24_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl24_Col2_AfterColumn + $altova:nColumnWidthTw_24_3"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl24_Col3_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl24_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl24_Col3_AfterColumn + $altova:nColumnWidthTw_24_4"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl24_Col4_AfterColumn)"/>
            </xsl:variable>
            <xsl:if test="$templatetablelevel + 1 = 1">
                <xsl:value-of select="$tablestyle24"/>
                <xsl:value-of select="$altova:RowStyle74"/>
            </xsl:if>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs973\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Lijstencombinatie, lijst</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs974\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewNiemeyerAssignment_LijstencombinatieLijst"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend24"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs975\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Reeds toegewezen zetels</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs976\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewNiemeyerAssignment_Reeds"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend24"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs977\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Overschot</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs978\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewNiemeyerAssignment_Overschot"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend24"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend24"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs979\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Toegewezen restzetels</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs980\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewNiemeyerAssignment_restzetels"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend24"/>
            <xsl:if test="$templatetablelevel + 1 > 1">
                <xsl:text>{\*\nesttableprops</xsl:text>
            </xsl:if>
            <xsl:value-of select="$tablestyle24"/>
            <xsl:value-of select="$altova:RowStyle74"/>
            <xsl:value-of select="$rowend24"/>
            <xsl:for-each select="rg:NiemeyerAssignmentLine">
                <xsl:variable name="altova:RowStyle75">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl24" select="$altova:nTableIndentTw_24"/>
                    <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl24_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl24 + $altova:nColumnWidthTw_24_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl24_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr200\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl24_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl24_Col0_AfterColumn + $altova:nColumnWidthTw_24_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl24_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl24_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl24_Col1_AfterColumn + $altova:nColumnWidthTw_24_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl24_Col2_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl24_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl24_Col2_AfterColumn + $altova:nColumnWidthTw_24_3"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl24_Col3_AfterColumn)"/>
                    <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl24_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl24_Col3_AfterColumn + $altova:nColumnWidthTw_24_4"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl24_Col4_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle24"/>
                    <xsl:value-of select="$altova:RowStyle75"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:call-template name="ListOrCombinedList2">
                    <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_24_0 div 1440) - 0.01042 - 0.01042"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                </xsl:call-template>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend24"/>
                <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="rg:PriorSeats">
                    <xsl:text>{\cs981\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_24_1 div 1440) - 0.01042 - 0.13889"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend24"/>
                <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="rg:Remainder">
                    <xsl:call-template name="ElectionFractionPart1">
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_24_2 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend24"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="rg:Remainder">
                    <xsl:call-template name="ElectionFractionPart2">
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_24_3 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend24"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:if test="rg:NewSeats != 0">
                    <xsl:for-each select="rg:NewSeats">
                        <xsl:text>{\cs982\f1\fs22 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_24_4 div 1440) - 0.01042 - 0.01042"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:if>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend24"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle24"/>
                <xsl:value-of select="$altova:RowStyle75"/>
                <xsl:value-of select="$rowend24"/>
            </xsl:for-each>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 0"/>
            <xsl:text> </xsl:text>
            <xsl:for-each select="rg:Allotting">
                <xsl:call-template name="LineBreak">
                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                </xsl:call-template>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs983\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>Overeenkomstig artikel </xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs984\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_OverviewNiemeyerAssignment_Overeenkomstig"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="@article = &quot;P13&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs985\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>P 13</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs986\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP22_OverviewNiemeyerAssignment_P13"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs987\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>P 7</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs988\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP22_OverviewNiemeyerAssignment_P7"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs989\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>, eerste lid van de Kieswet heeft een loting plaatsgevonden tussen </xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs990\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_OverviewNiemeyerAssignment_Kieswet"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:for-each select="rg:Winner">
                    <xsl:call-template name="ListOrCombinedList">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                </xsl:for-each>
                <xsl:for-each select="rg:Looser">
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs991\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text> en </xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs992\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewNiemeyerAssignment_en"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:call-template name="ListOrCombinedList">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                </xsl:for-each>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs993\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>. Als gevolg hiervan is een restzetel toegewezen aan </xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs994\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_OverviewNiemeyerAssignment_AlsGevolg"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:for-each select="rg:Winner">
                    <xsl:call-template name="ListOrCombinedList">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                </xsl:for-each>
                <xsl:text>{\cs995\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>.</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:for-each>
        </xsl:for-each>
    </xsl:template>
    <xsl:template name="OverviewAssignmentWithinListGroups">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:for-each select="rg:AssignmentWithinListGroups">
            <xsl:text>\par </xsl:text>
            <xsl:call-template name="PartyHeader5Lines">
                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
            </xsl:call-template>
            <xsl:variable name="altova:CurrContextGrid_06ADF4F8" select="."/>
            <xsl:variable name="altova:nTableWidthIn_25" select="$altova:nMaxWidthIn * 1.00000"/>
            <xsl:variable name="altova:nTableWidthTw_25" select="$altova:nTableWidthIn_25 * 1440"/>
            <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_25" select="round($altova:nTableWidthTw_25 * 0.25)"/>
            <xsl:variable name="altova:nTableIndentTw_25" select="0"/>
            <xsl:variable name="altova:nSumColumnWidthsTw_25" select="round(3601.00)"/>
            <xsl:variable name="altova:TableWidthFactor_25">
                <xsl:choose>
                    <xsl:when test="$altova:nSumColumnWidthsTw_25 &gt; $altova:nTableWidthTw_25">
                        <xsl:value-of select="($altova:nTableWidthTw_25 - $altova:SumDefaultColumnsForWideTableTw_25) div $altova:nSumColumnWidthsTw_25"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:value-of select="1"/>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:variable>
            <xsl:variable name="altova:nColumnsWithDefaultWidth_25" select="round(5)"/>
            <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_25">
                <xsl:choose>
                    <xsl:when test="$altova:nColumnsWithDefaultWidth_25 = 0">
                        <xsl:value-of select="round(5)"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:value-of select="$altova:nColumnsWithDefaultWidth_25"/>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:variable>
            <xsl:variable name="altova:nDefaultColumnWidthTw_25">
                <xsl:choose>
                    <xsl:when test="$altova:TableWidthFactor_25 &lt; 1">
                        <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_25 div $altova:nColumnsWithDefaultWidthNotZero_25"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:value-of select="round(($altova:nTableWidthTw_25 - $altova:nSumColumnWidthsTw_25) div $altova:nColumnsWithDefaultWidthNotZero_25)"/>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:variable>
            <xsl:variable name="altova:nColumnWidthTw_25_0" select="round(1.39 * 1440 * $altova:TableWidthFactor_25)"/>
            <xsl:variable name="altova:nColumnWidthTw_25_1" select="round(1.11 * 1440 * $altova:TableWidthFactor_25)"/>
            <xsl:variable name="altova:nColumnWidthTw_25_2" select="$altova:nDefaultColumnWidthTw_25"/>
            <xsl:variable name="altova:nColumnWidthTw_25_3" select="$altova:nDefaultColumnWidthTw_25"/>
            <xsl:variable name="altova:nColumnWidthTw_25_4" select="$altova:nDefaultColumnWidthTw_25"/>
            <xsl:variable name="altova:nColumnWidthTw_25_5" select="$altova:nDefaultColumnWidthTw_25"/>
            <xsl:variable name="altova:nColumnWidthTw_25_6" select="$altova:nDefaultColumnWidthTw_25"/>
            <xsl:text>\par </xsl:text>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:variable name="tablestyle25">
                <xsl:text>\trowd\trleft</xsl:text>
                <xsl:value-of select="$altova:nTableIndentTw_25"/>
                <xsl:text>\ts996\ts997\ts998\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
            </xsl:variable>
            <xsl:variable name="rowend25">
                <xsl:choose>
                    <xsl:when test="$templatetablelevel + 1 = 1">
                        <xsl:text>\row\pard</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:variable>
            <xsl:variable name="cellend25">
                <xsl:choose>
                    <xsl:when test="$templatetablelevel + 1 = 1">
                        <xsl:text>\cell</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>\nestcell</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:variable>
            <xsl:variable name="altova:RowStyle76">
                <xsl:text>\trrh0\trhdr</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl25" select="$altova:nTableIndentTw_25"/>
                <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl25_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl25 + $altova:nColumnWidthTw_25_0"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl25_Col0_AfterColumn)"/>
                <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl25_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl25_Col0_AfterColumn + $altova:nColumnWidthTw_25_1"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl25_Col1_AfterColumn)"/>
                <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt200\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl25_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl25_Col1_AfterColumn + $altova:nColumnWidthTw_25_2"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl25_Col2_AfterColumn)"/>
                <xsl:text>\clvertalc\clmgf\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl25_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl25_Col2_AfterColumn + $altova:nColumnWidthTw_25_3"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl25_Col3_AfterColumn)"/>
                <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl25_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl25_Col3_AfterColumn + $altova:nColumnWidthTw_25_4"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl25_Col4_AfterColumn)"/>
                <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl25_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl25_Col4_AfterColumn + $altova:nColumnWidthTw_25_5"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl25_Col5_AfterColumn)"/>
                <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl25_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl25_Col5_AfterColumn + $altova:nColumnWidthTw_25_6"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl25_Col6_AfterColumn)"/>
            </xsl:variable>
            <xsl:if test="$templatetablelevel + 1 = 1">
                <xsl:value-of select="$tablestyle25"/>
                <xsl:value-of select="$altova:RowStyle76"/>
            </xsl:if>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs999\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Lijst c.q. stel</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs1000\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewAssignmentWithinListGroups_LijstStel"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\par </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs1001\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>gelijkluidende lijsten</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs1002\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewAssignmentWithinListGroups_gelijkluidende"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend25"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:choose>
                <xsl:when test="//kr:ElectionSubcategory[ text() != &quot;EK&quot; ]">
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs1003\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>Stemmenaantal</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs1004\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewAssignmentWithinListGroups_Stemmenaantal"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs1005\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>Aantal stemmen</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs1006\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewAssignmentWithinListGroups_aantalStemmen"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend25"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs1007\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Quotiënt</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs1008\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewAssignmentWithinListGroups_Quotiënt"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend25"/>
            <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs1009\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Overschot</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs1010\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewAssignmentWithinListGroups_Overschot"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend25"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend25"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs1011\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Toegewezen restzetels</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs1012\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewAssignmentWithinListGroups_restzetels"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend25"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs1013\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Totaal toegewezen zetels</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs1014\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewAssignmentWithinListGroups_toegewezenZetels"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend25"/>
            <xsl:if test="$templatetablelevel + 1 > 1">
                <xsl:text>{\*\nesttableprops</xsl:text>
            </xsl:if>
            <xsl:value-of select="$tablestyle25"/>
            <xsl:value-of select="$altova:RowStyle76"/>
            <xsl:value-of select="$rowend25"/>
            <xsl:for-each select="rg:AssignmentWithinListGroupsLine">
                <xsl:sort select="@sortNumber" data-type="number" order="ascending"/>
                <xsl:variable name="altova:RowStyle77">
                    <xsl:text>\trrh0</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl25" select="$altova:nTableIndentTw_25"/>
                    <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl25_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl25 + $altova:nColumnWidthTw_25_0"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl25_Col0_AfterColumn)"/>
                    <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl25_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl25_Col0_AfterColumn + $altova:nColumnWidthTw_25_1"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl25_Col1_AfterColumn)"/>
                    <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl25_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl25_Col1_AfterColumn + $altova:nColumnWidthTw_25_2"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl25_Col2_AfterColumn)"/>
                    <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl25_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl25_Col2_AfterColumn + $altova:nColumnWidthTw_25_3"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl25_Col3_AfterColumn)"/>
                    <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl25_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl25_Col3_AfterColumn + $altova:nColumnWidthTw_25_4"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl25_Col4_AfterColumn)"/>
                    <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl25_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl25_Col4_AfterColumn + $altova:nColumnWidthTw_25_5"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl25_Col5_AfterColumn)"/>
                    <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                    <xsl:text>\cellx</xsl:text>
                    <xsl:variable name="altova:CurrGridPos_Tbl25_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl25_Col5_AfterColumn + $altova:nColumnWidthTw_25_6"/>
                    <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl25_Col6_AfterColumn)"/>
                </xsl:variable>
                <xsl:if test="$templatetablelevel + 1 = 1">
                    <xsl:value-of select="$tablestyle25"/>
                    <xsl:value-of select="$altova:RowStyle77"/>
                </xsl:if>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 1"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:choose>
                    <xsl:when test="@districtNumber != &apos;&apos;">
                        <xsl:choose>
                            <xsl:when test="//kr:ElectionSubcategory[ text() != &quot;EK&quot; ]">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\cs1015\f1\fs22 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text>Kieskring </xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\cs1016\f1\fs22 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP22_OverviewAssignmentWithinListGroups_Kieskring"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <xsl:for-each select="@districtNumber">
                                    <xsl:text>{\cs1017\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="string(.)"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:for-each>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:for-each select="@provinceName">
                                    <xsl:text>{\cs1018\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="string(.)"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:for-each>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="@setNumber != &apos;&apos;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1019\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>Totaal stel </xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1020\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP22_OverviewAssignmentWithinListGroups_TotaalStel"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:for-each select="@setNumber">
                            <xsl:text>{\cs1021\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="string(.)"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs1022\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text> </xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend25"/>
                <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="rg:Votes">
                    <xsl:text>{\cs1023\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_25_1 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend25"/>
                <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
                <xsl:if test="rg:PriorSeats != &apos;&apos; and rg:PriorSeats != &apos;0&apos;">
                    <xsl:for-each select="rg:PriorSeats">
                        <xsl:text>{\cs1024\f1\fs22 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_25_2 div 1440) - 0.01042 - 0.01042"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:if>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend25"/>
                <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="rg:Remainder">
                    <xsl:call-template name="ElectionFractionPart1">
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_25_3 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend25"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:for-each select="rg:Remainder">
                    <xsl:text>{\cs1025\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                    <xsl:call-template name="ElectionFractionPart2">
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_25_4 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                </xsl:for-each>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend25"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:if test="rg:NewSeats != &apos;&apos; and rg:NewSeats != &apos;0&apos;">
                    <xsl:for-each select="rg:NewSeats">
                        <xsl:text>{\cs1026\f1\fs22 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_25_5 div 1440) - 0.01042 - 0.01042"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:if>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend25"/>
                <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
                <xsl:if test="(rg:PriorSeats != &apos;&apos; and rg:PriorSeats != &apos;0&apos;) or (rg:NewSeats != &apos;&apos; and rg:NewSeats != &apos;0&apos;)">
                    <xsl:text>{\cs1027\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="rg:PriorSeats +  rg:NewSeats"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:if>
                <xsl:text>\f0\fs24</xsl:text>
                <xsl:value-of select="$cellend25"/>
                <xsl:if test="$templatetablelevel + 1 > 1">
                    <xsl:text>{\*\nesttableprops</xsl:text>
                </xsl:if>
                <xsl:value-of select="$tablestyle25"/>
                <xsl:value-of select="$altova:RowStyle77"/>
                <xsl:value-of select="$rowend25"/>
            </xsl:for-each>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 0"/>
            <xsl:text> </xsl:text>
            <xsl:call-template name="LineBreakTable">
                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
            </xsl:call-template>
            <xsl:for-each select="rg:Allotting">
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs1028\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>Overeenkomstig artikel </xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs1029\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_OverviewAssignmentWithinListGroups_Overeenkomstig1"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="//kr:ElectionSubcategory[ text() != &quot;EK&quot; ]">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1030\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>P 12</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1031\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP22_OverviewAssignmentWithinListGroups_P12"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1032\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>U 11</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1033\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP22_OverviewAssignmentWithinListGroups_U11"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs1034\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>, vijfde lid van de Kieswet heeft een loting plaatsgevonden tussen </xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs1035\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_OverviewAssignmentWithinListGroups_vijfdeLid"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:for-each select="rg:Winner">
                    <xsl:call-template name="ListOrCombinedListUni">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                </xsl:for-each>
                <xsl:for-each select="rg:Looser">
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs1036\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text> en </xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs1037\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewAssignmentWithinListGroups_en"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:call-template name="ListOrCombinedListUni">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                </xsl:for-each>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs1038\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>. Als gevolg hiervan is een restzetel toegewezen aan </xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs1039\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_OverviewAssignmentWithinListGroups_AlsGevolg"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:for-each select="rg:Winner">
                    <xsl:call-template name="ListOrCombinedListUni">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                </xsl:for-each>
                <xsl:text>{\cs1040\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>.</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:call-template name="LineBreak">
                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                </xsl:call-template>
            </xsl:for-each>
            <xsl:for-each select="rg:ExhaustedList">
                <xsl:choose>
                    <xsl:when test="@lostSeats = 1">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1041\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>Overeenkomstig artikel </xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1042\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP22_OverviewAssignmentWithinListGroups_Overeenkomstig2"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="//kr:ElectionSubcategory[ text() != &quot;EK&quot; ]">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\cs1043\f1\fs20 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text>P 13</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\cs1044\f1\fs20 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP22_OverviewAssignmentWithinListGroups_P13"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\cs1045\f1\fs20 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text>U 13</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\cs1046\f1\fs20 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP22_OverviewAssignmentWithinListGroups_U13"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1047\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>, eerste lid van de Kieswet, vindt er een overgang plaats van een zetel van </xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1048\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP22_OverviewAssignmentWithinListGroups_eersteLidEenZetel"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:call-template name="ListOrCombinedListUni">
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:call-template>
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1049\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text> naar een ander lijst.</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1050\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP22_OverviewAssignmentWithinListGroups_eenAnderLijst"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="@lostSeats &gt; 1">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1051\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>Overeenkomstig artikel </xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1052\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP22_OverviewAssignmentWithinListGroups_Overeenkomstig2"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="//kr:ElectionSubcategory[ text() != &quot;EK&quot; ]">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\cs1053\f1\fs20 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text>P 13</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\cs1054\f1\fs20 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP22_OverviewAssignmentWithinListGroups_P13"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\cs1055\f1\fs20 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text>U 13</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\cs1056\f1\fs20 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP22_OverviewAssignmentWithinListGroups_U13"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1057\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>, eerste lid van de Kieswet, vindt er een overgang plaats van </xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1058\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP22_OverviewAssignmentWithinListGroups_eersteLid"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:for-each select="@lostSeats">
                            <xsl:text>{\cs1059\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="string(.)"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1060\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text> zetels van </xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1061\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP22_OverviewAssignmentWithinListGroups_zetels"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:call-template name="ListOrCombinedListUni">
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:call-template>
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1062\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text> naar andere lijsten.</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1063\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP22_OverviewAssignmentWithinListGroups_andereLijsten"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                </xsl:choose>
                <xsl:call-template name="LineBreak">
                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                </xsl:call-template>
            </xsl:for-each>
            <xsl:for-each select="rg:DHondtAssignment">
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs1064\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>Hierna zijn overeenkomstig artikel </xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs1065\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_OverviewAssignmentWithinListGroups_Hierna"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="//kr:ElectionSubcategory[ text() != &quot;EK&quot; ]">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1066\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>P 13</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1067\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP22_OverviewAssignmentWithinListGroups_P13"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1068\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>U 13</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1069\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP22_OverviewAssignmentWithinListGroups_U13"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs1070\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>, tweede lid van de Kieswet volgende restzetels toegewezen volgens het stelsel van de grootste gemiddelden:</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs1071\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_OverviewAssignmentWithinListGroups_tweedeLid"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:call-template name="LineBreakTable">
                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                </xsl:call-template>
            </xsl:for-each>
            <xsl:call-template name="OverviewDHondtAssignment">
                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
            </xsl:call-template>
            <xsl:for-each select="rg:DHondtAssignment">
                <xsl:call-template name="LineBreakTable">
                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                </xsl:call-template>
            </xsl:for-each>
            <xsl:text>\page </xsl:text>
        </xsl:for-each>
    </xsl:template>
    <xsl:template name="ListOrCombinedListUni">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:for-each select="rg:ListOrCombinedList">
            <xsl:choose>
                <xsl:when test="@combinationId">
                    <xsl:for-each select="@combinationId">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1072\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>lijstencombinatie </xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1073\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP22_ListOrCombinedListUni_lijstencombinatie"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:text>{\cs1074\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="string(.)"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                    <xsl:if test="count( rg:ListInCombination ) &gt; 0">
                        <xsl:text>{\cs1075\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text> (</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                        <xsl:for-each select="rg:ListInCombination">
                            <xsl:text>{\cs1076\f1\fs20 </xsl:text>
                            <xsl:apply-templates>
                                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                            </xsl:apply-templates>
                            <xsl:text>}</xsl:text>
                            <xsl:if test="position() != last()">
                                <xsl:text>{\cs1077\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>, </xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:if>
                        </xsl:for-each>
                        <xsl:text>{\cs1078\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>)</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:if>
                </xsl:when>
                <xsl:when test="@districtNumber">
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs1079\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>kieskring </xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs1080\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_ListOrCombinedListUni_kieskring"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:for-each select="@districtNumber">
                        <xsl:text>{\cs1081\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="string(.)"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:when>
                <xsl:when test="@setNumber">
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs1082\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>stel </xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs1083\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_ListOrCombinedListUni_stel"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:for-each select="@setNumber">
                        <xsl:text>{\cs1084\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="string(.)"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:when>
                <xsl:when test="@listNumber">
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs1085\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>lijst </xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs1086\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_ListOrCombinedListUni_lijst"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:for-each select="@listNumber">
                        <xsl:text>{\cs1087\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="string(.)"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:when>
            </xsl:choose>
        </xsl:for-each>
    </xsl:template>
    <xsl:template name="OverviewVotes2">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:variable name="altova:CurrContextGrid_06B12FD8" select="."/>
        <xsl:variable name="altova:nTableWidthIn_26" select="$altova:nMaxWidthIn * 1.00000"/>
        <xsl:variable name="altova:nTableWidthTw_26" select="$altova:nTableWidthIn_26 * 1440"/>
        <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_26" select="round($altova:nTableWidthTw_26 * 0.25)"/>
        <xsl:variable name="altova:nTableIndentTw_26" select="0"/>
        <xsl:variable name="altova:nSumColumnWidthsTw_26" select="round(1200.50)"/>
        <xsl:variable name="altova:TableWidthFactor_26">
            <xsl:choose>
                <xsl:when test="$altova:nSumColumnWidthsTw_26 &gt; $altova:nTableWidthTw_26">
                    <xsl:value-of select="($altova:nTableWidthTw_26 - $altova:SumDefaultColumnsForWideTableTw_26) div $altova:nSumColumnWidthsTw_26"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="1"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnsWithDefaultWidth_26" select="round(3)"/>
        <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_26">
            <xsl:choose>
                <xsl:when test="$altova:nColumnsWithDefaultWidth_26 = 0">
                    <xsl:value-of select="round(3)"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="$altova:nColumnsWithDefaultWidth_26"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nDefaultColumnWidthTw_26">
            <xsl:choose>
                <xsl:when test="$altova:TableWidthFactor_26 &lt; 1">
                    <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_26 div $altova:nColumnsWithDefaultWidthNotZero_26"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="round(($altova:nTableWidthTw_26 - $altova:nSumColumnWidthsTw_26) div $altova:nColumnsWithDefaultWidthNotZero_26)"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnWidthTw_26_0" select="round(0.83 * 1440 * $altova:TableWidthFactor_26)"/>
        <xsl:variable name="altova:nColumnWidthTw_26_1" select="$altova:nDefaultColumnWidthTw_26"/>
        <xsl:variable name="altova:nColumnWidthTw_26_2" select="$altova:nDefaultColumnWidthTw_26"/>
        <xsl:variable name="altova:nColumnWidthTw_26_3" select="$altova:nDefaultColumnWidthTw_26"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:variable name="tablestyle26">
            <xsl:text>\trowd\trleft</xsl:text>
            <xsl:value-of select="$altova:nTableIndentTw_26"/>
            <xsl:text>\ts1088\ts1089\ts1090\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrs\brdrcf1\brdrw15\trbrdrl\brdrnil\trbrdrb\brdrs\brdrcf1\brdrw15\trbrdrr\brdrnil</xsl:text>
        </xsl:variable>
        <xsl:variable name="rowend26">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\row\pard</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="cellend26">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\cell</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestcell</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:RowStyle78">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl26" select="$altova:nTableIndentTw_26"/>
            <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl26_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl26 + $altova:nColumnWidthTw_26_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl26_Col0_AfterColumn)"/>
            <xsl:text>\clvertalt\clmgf\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl26_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl26_Col0_AfterColumn + $altova:nColumnWidthTw_26_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl26_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl26_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl26_Col1_AfterColumn + $altova:nColumnWidthTw_26_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl26_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl26_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl26_Col2_AfterColumn + $altova:nColumnWidthTw_26_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl26_Col3_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle26"/>
            <xsl:value-of select="$altova:RowStyle78"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs1091\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend26"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1092\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Kieskring</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1093\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes2_Kieskring"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend26"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend26"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend26"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle26"/>
        <xsl:value-of select="$altova:RowStyle78"/>
        <xsl:value-of select="$rowend26"/>
        <xsl:variable name="altova:RowStyle79">
            <xsl:text>\trrh620</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl26" select="$altova:nTableIndentTw_26"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl26_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl26 + $altova:nColumnWidthTw_26_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl26_Col0_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl26_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl26_Col0_AfterColumn + $altova:nColumnWidthTw_26_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl26_Col1_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl26_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl26_Col1_AfterColumn + $altova:nColumnWidthTw_26_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl26_Col2_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl26_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl26_Col2_AfterColumn + $altova:nColumnWidthTw_26_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl26_Col3_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle26"/>
            <xsl:value-of select="$altova:RowStyle79"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1094\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Lijst-</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1095\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes2_Lijst"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1096\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>nummer</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1097\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes2_nummer"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend26"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs1098\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text>1</xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend26"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs1099\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text>2</xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend26"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1100\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Totaal aantal</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1101\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes2_TotaalAantal"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1102\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>stemmen per</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1103\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes2_stemmenPer"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1104\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>groepering</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1105\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes2_groepering"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend26"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle26"/>
        <xsl:value-of select="$altova:RowStyle79"/>
        <xsl:value-of select="$rowend26"/>
        <xsl:for-each select="rg:OverviewOfListsAndDistrictsAndVotes">
            <xsl:variable name="altova:RowStyle80">
                <xsl:text>\trrh20</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl26" select="$altova:nTableIndentTw_26"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl26_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl26 + $altova:nColumnWidthTw_26_0"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl26_Col0_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl26_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl26_Col0_AfterColumn + $altova:nColumnWidthTw_26_1"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl26_Col1_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl26_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl26_Col1_AfterColumn + $altova:nColumnWidthTw_26_2"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl26_Col2_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl26_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl26_Col2_AfterColumn + $altova:nColumnWidthTw_26_3"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl26_Col3_AfterColumn)"/>
            </xsl:variable>
            <xsl:if test="$templatetablelevel + 1 = 1">
                <xsl:value-of select="$tablestyle26"/>
                <xsl:value-of select="$altova:RowStyle80"/>
            </xsl:if>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="@listNumber">
                <xsl:text>{\cs1106\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="string(.)"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend26"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="position() = 1">
                    <xsl:text>{\cs1107\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_26_1 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend26"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="position() = 2">
                    <xsl:text>{\cs1108\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_26_2 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend26"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id = &quot;alle&quot;">
                    <xsl:text>{\cs1109\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_26_3 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend26"/>
            <xsl:if test="$templatetablelevel + 1 > 1">
                <xsl:text>{\*\nesttableprops</xsl:text>
            </xsl:if>
            <xsl:value-of select="$tablestyle26"/>
            <xsl:value-of select="$altova:RowStyle80"/>
            <xsl:value-of select="$rowend26"/>
        </xsl:for-each>
        <xsl:variable name="altova:RowStyle81">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl26" select="$altova:nTableIndentTw_26"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl26_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl26 + $altova:nColumnWidthTw_26_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl26_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl26_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl26_Col0_AfterColumn + $altova:nColumnWidthTw_26_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl26_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl26_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl26_Col1_AfterColumn + $altova:nColumnWidthTw_26_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl26_Col2_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl26_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl26_Col2_AfterColumn + $altova:nColumnWidthTw_26_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl26_Col3_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle26"/>
            <xsl:value-of select="$altova:RowStyle81"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1110\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Totaal aantal stemmen op een kandidaat per kieskring</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1111\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes2_stemmenKandidaat"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend26"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="position() = 1">
                    <xsl:text>{\cs1112\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_26_1 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend26"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="position() = 2">
                    <xsl:text>{\cs1113\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_26_2 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend26"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs1114\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend26"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle26"/>
        <xsl:value-of select="$altova:RowStyle81"/>
        <xsl:value-of select="$rowend26"/>
        <xsl:variable name="altova:RowStyle82">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl26" select="$altova:nTableIndentTw_26"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl26_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl26 + $altova:nColumnWidthTw_26_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl26_Col0_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl26_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl26_Col0_AfterColumn + $altova:nColumnWidthTw_26_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl26_Col1_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl26_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl26_Col1_AfterColumn + $altova:nColumnWidthTw_26_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl26_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl26_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl26_Col2_AfterColumn + $altova:nColumnWidthTw_26_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl26_Col3_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle26"/>
            <xsl:value-of select="$altova:RowStyle82"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1115\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Totaal aantal op een kandidaat uitgebrachte stemmen</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1116\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes2_uitgebrachteStemmen"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend26"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs1117\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend26"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs1118\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend26"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id = &quot;alle&quot;">
                    <xsl:text>{\cs1119\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_26_3 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend26"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle26"/>
        <xsl:value-of select="$altova:RowStyle82"/>
        <xsl:value-of select="$rowend26"/>
        <xsl:variable name="altova:RowStyle83">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl26" select="$altova:nTableIndentTw_26"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl26_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl26 + $altova:nColumnWidthTw_26_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl26_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl26_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl26_Col0_AfterColumn + $altova:nColumnWidthTw_26_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl26_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl26_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl26_Col1_AfterColumn + $altova:nColumnWidthTw_26_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl26_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl26_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl26_Col2_AfterColumn + $altova:nColumnWidthTw_26_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl26_Col3_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle26"/>
            <xsl:value-of select="$altova:RowStyle83"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1120\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Totaal aantal blanco stemmen</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1121\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes2_blancoStemmen"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend26"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfBlancVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="position() = 1">
                    <xsl:text>{\cs1122\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_26_1 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend26"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfBlancVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="position() = 2">
                    <xsl:text>{\cs1123\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_26_2 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend26"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfBlancVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id = &quot;alle&quot;">
                    <xsl:text>{\cs1124\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_26_3 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend26"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle26"/>
        <xsl:value-of select="$altova:RowStyle83"/>
        <xsl:value-of select="$rowend26"/>
        <xsl:variable name="altova:RowStyle84">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl26" select="$altova:nTableIndentTw_26"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl26_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl26 + $altova:nColumnWidthTw_26_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl26_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl26_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl26_Col0_AfterColumn + $altova:nColumnWidthTw_26_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl26_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl26_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl26_Col1_AfterColumn + $altova:nColumnWidthTw_26_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl26_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl26_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl26_Col2_AfterColumn + $altova:nColumnWidthTw_26_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl26_Col3_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle26"/>
            <xsl:value-of select="$altova:RowStyle84"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1125\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Totaal aantal ongeldige stemmen</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1126\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes2_ongeldigeStemmen"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend26"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfInvalidVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="position() = 1">
                    <xsl:text>{\cs1127\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_26_1 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend26"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfInvalidVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="position() = 2">
                    <xsl:text>{\cs1128\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_26_2 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend26"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfInvalidVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id = &quot;alle&quot;">
                    <xsl:text>{\cs1129\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_26_3 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend26"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle26"/>
        <xsl:value-of select="$altova:RowStyle84"/>
        <xsl:value-of select="$rowend26"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 0"/>
        <xsl:text> </xsl:text>
    </xsl:template>
    <xsl:template name="OverviewVotes3">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:variable name="altova:CurrContextGrid_06B14598" select="."/>
        <xsl:variable name="altova:nTableWidthIn_27" select="$altova:nMaxWidthIn * 1.00000"/>
        <xsl:variable name="altova:nTableWidthTw_27" select="$altova:nTableWidthIn_27 * 1440"/>
        <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_27" select="round($altova:nTableWidthTw_27 * 0.25)"/>
        <xsl:variable name="altova:nTableIndentTw_27" select="0"/>
        <xsl:variable name="altova:nSumColumnWidthsTw_27" select="round(1200.50)"/>
        <xsl:variable name="altova:TableWidthFactor_27">
            <xsl:choose>
                <xsl:when test="$altova:nSumColumnWidthsTw_27 &gt; $altova:nTableWidthTw_27">
                    <xsl:value-of select="($altova:nTableWidthTw_27 - $altova:SumDefaultColumnsForWideTableTw_27) div $altova:nSumColumnWidthsTw_27"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="1"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnsWithDefaultWidth_27" select="round(4)"/>
        <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_27">
            <xsl:choose>
                <xsl:when test="$altova:nColumnsWithDefaultWidth_27 = 0">
                    <xsl:value-of select="round(4)"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="$altova:nColumnsWithDefaultWidth_27"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nDefaultColumnWidthTw_27">
            <xsl:choose>
                <xsl:when test="$altova:TableWidthFactor_27 &lt; 1">
                    <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_27 div $altova:nColumnsWithDefaultWidthNotZero_27"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="round(($altova:nTableWidthTw_27 - $altova:nSumColumnWidthsTw_27) div $altova:nColumnsWithDefaultWidthNotZero_27)"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnWidthTw_27_0" select="round(0.83 * 1440 * $altova:TableWidthFactor_27)"/>
        <xsl:variable name="altova:nColumnWidthTw_27_1" select="$altova:nDefaultColumnWidthTw_27"/>
        <xsl:variable name="altova:nColumnWidthTw_27_2" select="$altova:nDefaultColumnWidthTw_27"/>
        <xsl:variable name="altova:nColumnWidthTw_27_3" select="$altova:nDefaultColumnWidthTw_27"/>
        <xsl:variable name="altova:nColumnWidthTw_27_4" select="$altova:nDefaultColumnWidthTw_27"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:variable name="tablestyle27">
            <xsl:text>\trowd\trleft</xsl:text>
            <xsl:value-of select="$altova:nTableIndentTw_27"/>
            <xsl:text>\ts1130\ts1131\ts1132\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrs\brdrcf1\brdrw15\trbrdrl\brdrnil\trbrdrb\brdrs\brdrcf1\brdrw15\trbrdrr\brdrnil</xsl:text>
        </xsl:variable>
        <xsl:variable name="rowend27">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\row\pard</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="cellend27">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\cell</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestcell</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:RowStyle85">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl27" select="$altova:nTableIndentTw_27"/>
            <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl27_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl27 + $altova:nColumnWidthTw_27_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl27_Col0_AfterColumn)"/>
            <xsl:text>\clvertalt\clmgf\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl27_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl27_Col0_AfterColumn + $altova:nColumnWidthTw_27_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl27_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl27_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl27_Col1_AfterColumn + $altova:nColumnWidthTw_27_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl27_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl27_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl27_Col2_AfterColumn + $altova:nColumnWidthTw_27_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl27_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl27_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl27_Col3_AfterColumn + $altova:nColumnWidthTw_27_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl27_Col4_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle27"/>
            <xsl:value-of select="$altova:RowStyle85"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs1133\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend27"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1134\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Kieskring</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1135\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes3_Kieskring"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend27"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend27"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend27"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend27"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle27"/>
        <xsl:value-of select="$altova:RowStyle85"/>
        <xsl:value-of select="$rowend27"/>
        <xsl:variable name="altova:RowStyle86">
            <xsl:text>\trrh620</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl27" select="$altova:nTableIndentTw_27"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl27_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl27 + $altova:nColumnWidthTw_27_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl27_Col0_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl27_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl27_Col0_AfterColumn + $altova:nColumnWidthTw_27_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl27_Col1_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl27_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl27_Col1_AfterColumn + $altova:nColumnWidthTw_27_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl27_Col2_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl27_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl27_Col2_AfterColumn + $altova:nColumnWidthTw_27_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl27_Col3_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl27_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl27_Col3_AfterColumn + $altova:nColumnWidthTw_27_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl27_Col4_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle27"/>
            <xsl:value-of select="$altova:RowStyle86"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1136\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Lijst-</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1137\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes3_Lijst"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1138\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>nummer</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1139\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes3_nummer"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend27"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs1140\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text>1</xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend27"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs1141\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text>2</xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend27"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs1142\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text>3</xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend27"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1143\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Totaal aantal</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1144\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes3_TotaalAantal"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1145\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>stemmen per</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1146\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes3_stemmenPer"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1147\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>groepering</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1148\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes3_groepering"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend27"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle27"/>
        <xsl:value-of select="$altova:RowStyle86"/>
        <xsl:value-of select="$rowend27"/>
        <xsl:for-each select="rg:OverviewOfListsAndDistrictsAndVotes">
            <xsl:variable name="altova:RowStyle87">
                <xsl:text>\trrh20</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl27" select="$altova:nTableIndentTw_27"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl27_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl27 + $altova:nColumnWidthTw_27_0"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl27_Col0_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl27_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl27_Col0_AfterColumn + $altova:nColumnWidthTw_27_1"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl27_Col1_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl27_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl27_Col1_AfterColumn + $altova:nColumnWidthTw_27_2"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl27_Col2_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl27_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl27_Col2_AfterColumn + $altova:nColumnWidthTw_27_3"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl27_Col3_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl27_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl27_Col3_AfterColumn + $altova:nColumnWidthTw_27_4"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl27_Col4_AfterColumn)"/>
            </xsl:variable>
            <xsl:if test="$templatetablelevel + 1 = 1">
                <xsl:value-of select="$tablestyle27"/>
                <xsl:value-of select="$altova:RowStyle87"/>
            </xsl:if>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="@listNumber">
                <xsl:text>{\cs1149\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="string(.)"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend27"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="position() = 1">
                    <xsl:text>{\cs1150\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_27_1 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend27"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="position() = 2">
                    <xsl:text>{\cs1151\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_27_2 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend27"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="position() = 3">
                    <xsl:text>{\cs1152\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_27_3 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend27"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id = &quot;alle&quot;">
                    <xsl:text>{\cs1153\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_27_4 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend27"/>
            <xsl:if test="$templatetablelevel + 1 > 1">
                <xsl:text>{\*\nesttableprops</xsl:text>
            </xsl:if>
            <xsl:value-of select="$tablestyle27"/>
            <xsl:value-of select="$altova:RowStyle87"/>
            <xsl:value-of select="$rowend27"/>
        </xsl:for-each>
        <xsl:variable name="altova:RowStyle88">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl27" select="$altova:nTableIndentTw_27"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl27_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl27 + $altova:nColumnWidthTw_27_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl27_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl27_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl27_Col0_AfterColumn + $altova:nColumnWidthTw_27_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl27_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl27_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl27_Col1_AfterColumn + $altova:nColumnWidthTw_27_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl27_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl27_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl27_Col2_AfterColumn + $altova:nColumnWidthTw_27_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl27_Col3_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl27_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl27_Col3_AfterColumn + $altova:nColumnWidthTw_27_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl27_Col4_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle27"/>
            <xsl:value-of select="$altova:RowStyle88"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1154\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Totaal aantal stemmen op een kandidaat per kieskring</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1155\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes3_stemmenKandidaat"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend27"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="position() = 1">
                    <xsl:text>{\cs1156\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_27_1 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend27"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="position() = 2">
                    <xsl:text>{\cs1157\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_27_2 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend27"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="position() = 3">
                    <xsl:text>{\cs1158\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_27_3 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend27"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs1159\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend27"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle27"/>
        <xsl:value-of select="$altova:RowStyle88"/>
        <xsl:value-of select="$rowend27"/>
        <xsl:variable name="altova:RowStyle89">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl27" select="$altova:nTableIndentTw_27"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl27_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl27 + $altova:nColumnWidthTw_27_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl27_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl27_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl27_Col0_AfterColumn + $altova:nColumnWidthTw_27_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl27_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl27_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl27_Col1_AfterColumn + $altova:nColumnWidthTw_27_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl27_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl27_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl27_Col2_AfterColumn + $altova:nColumnWidthTw_27_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl27_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl27_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl27_Col3_AfterColumn + $altova:nColumnWidthTw_27_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl27_Col4_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle27"/>
            <xsl:value-of select="$altova:RowStyle89"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1160\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Totaal aantal op een kandidaat uitgebrachte stemmen</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1161\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes3_uitgebrachteStemmen"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend27"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend27"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs1162\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend27"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs1163\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend27"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id = &quot;alle&quot;">
                    <xsl:text>{\cs1164\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_27_4 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend27"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle27"/>
        <xsl:value-of select="$altova:RowStyle89"/>
        <xsl:value-of select="$rowend27"/>
        <xsl:variable name="altova:RowStyle90">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl27" select="$altova:nTableIndentTw_27"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl27_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl27 + $altova:nColumnWidthTw_27_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl27_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl27_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl27_Col0_AfterColumn + $altova:nColumnWidthTw_27_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl27_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl27_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl27_Col1_AfterColumn + $altova:nColumnWidthTw_27_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl27_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl27_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl27_Col2_AfterColumn + $altova:nColumnWidthTw_27_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl27_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl27_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl27_Col3_AfterColumn + $altova:nColumnWidthTw_27_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl27_Col4_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle27"/>
            <xsl:value-of select="$altova:RowStyle90"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1165\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Totaal aantal blanco stemmen</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1166\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes3_blancoStemmen"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend27"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfBlancVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="position() = 1">
                    <xsl:text>{\cs1167\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_27_1 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend27"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfBlancVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="position() = 2">
                    <xsl:text>{\cs1168\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_27_2 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend27"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfBlancVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="position() = 3">
                    <xsl:text>{\cs1169\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_27_3 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend27"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfBlancVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id = &quot;alle&quot;">
                    <xsl:text>{\cs1170\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_27_4 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend27"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle27"/>
        <xsl:value-of select="$altova:RowStyle90"/>
        <xsl:value-of select="$rowend27"/>
        <xsl:variable name="altova:RowStyle91">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl27" select="$altova:nTableIndentTw_27"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl27_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl27 + $altova:nColumnWidthTw_27_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl27_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl27_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl27_Col0_AfterColumn + $altova:nColumnWidthTw_27_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl27_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl27_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl27_Col1_AfterColumn + $altova:nColumnWidthTw_27_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl27_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl27_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl27_Col2_AfterColumn + $altova:nColumnWidthTw_27_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl27_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl27_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl27_Col3_AfterColumn + $altova:nColumnWidthTw_27_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl27_Col4_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle27"/>
            <xsl:value-of select="$altova:RowStyle91"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1171\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Totaal aantal ongeldige stemmen</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1172\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes3_ongeldigeStemmen"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend27"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfInvalidVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="position() = 1">
                    <xsl:text>{\cs1173\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_27_1 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend27"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfInvalidVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="position() = 2">
                    <xsl:text>{\cs1174\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_27_2 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend27"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfInvalidVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="position() = 3">
                    <xsl:text>{\cs1175\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_27_3 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend27"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfInvalidVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id = &quot;alle&quot;">
                    <xsl:text>{\cs1176\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_27_4 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend27"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle27"/>
        <xsl:value-of select="$altova:RowStyle91"/>
        <xsl:value-of select="$rowend27"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 0"/>
        <xsl:text> </xsl:text>
    </xsl:template>
    <xsl:template name="OverviewVotes4">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:variable name="altova:CurrContextGrid_06B15EB8" select="."/>
        <xsl:variable name="altova:nTableWidthIn_28" select="$altova:nMaxWidthIn * 1.00000"/>
        <xsl:variable name="altova:nTableWidthTw_28" select="$altova:nTableWidthIn_28 * 1440"/>
        <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_28" select="round($altova:nTableWidthTw_28 * 0.25)"/>
        <xsl:variable name="altova:nTableIndentTw_28" select="0"/>
        <xsl:variable name="altova:nSumColumnWidthsTw_28" select="round(1200.50)"/>
        <xsl:variable name="altova:TableWidthFactor_28">
            <xsl:choose>
                <xsl:when test="$altova:nSumColumnWidthsTw_28 &gt; $altova:nTableWidthTw_28">
                    <xsl:value-of select="($altova:nTableWidthTw_28 - $altova:SumDefaultColumnsForWideTableTw_28) div $altova:nSumColumnWidthsTw_28"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="1"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnsWithDefaultWidth_28" select="round(5)"/>
        <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_28">
            <xsl:choose>
                <xsl:when test="$altova:nColumnsWithDefaultWidth_28 = 0">
                    <xsl:value-of select="round(5)"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="$altova:nColumnsWithDefaultWidth_28"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nDefaultColumnWidthTw_28">
            <xsl:choose>
                <xsl:when test="$altova:TableWidthFactor_28 &lt; 1">
                    <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_28 div $altova:nColumnsWithDefaultWidthNotZero_28"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="round(($altova:nTableWidthTw_28 - $altova:nSumColumnWidthsTw_28) div $altova:nColumnsWithDefaultWidthNotZero_28)"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnWidthTw_28_0" select="round(0.83 * 1440 * $altova:TableWidthFactor_28)"/>
        <xsl:variable name="altova:nColumnWidthTw_28_1" select="$altova:nDefaultColumnWidthTw_28"/>
        <xsl:variable name="altova:nColumnWidthTw_28_2" select="$altova:nDefaultColumnWidthTw_28"/>
        <xsl:variable name="altova:nColumnWidthTw_28_3" select="$altova:nDefaultColumnWidthTw_28"/>
        <xsl:variable name="altova:nColumnWidthTw_28_4" select="$altova:nDefaultColumnWidthTw_28"/>
        <xsl:variable name="altova:nColumnWidthTw_28_5" select="$altova:nDefaultColumnWidthTw_28"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:variable name="tablestyle28">
            <xsl:text>\trowd\trleft</xsl:text>
            <xsl:value-of select="$altova:nTableIndentTw_28"/>
            <xsl:text>\ts1177\ts1178\ts1179\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrs\brdrcf1\brdrw15\trbrdrl\brdrnil\trbrdrb\brdrs\brdrcf1\brdrw15\trbrdrr\brdrnil</xsl:text>
        </xsl:variable>
        <xsl:variable name="rowend28">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\row\pard</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="cellend28">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\cell</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestcell</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:RowStyle92">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28" select="$altova:nTableIndentTw_28"/>
            <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl28 + $altova:nColumnWidthTw_28_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col0_AfterColumn)"/>
            <xsl:text>\clvertalt\clmgf\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl28_Col0_AfterColumn + $altova:nColumnWidthTw_28_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl28_Col1_AfterColumn + $altova:nColumnWidthTw_28_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl28_Col2_AfterColumn + $altova:nColumnWidthTw_28_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl28_Col3_AfterColumn + $altova:nColumnWidthTw_28_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col4_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl28_Col4_AfterColumn + $altova:nColumnWidthTw_28_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col5_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle28"/>
            <xsl:value-of select="$altova:RowStyle92"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs1180\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend28"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1181\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Kieskring</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1182\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes4_Kieskring"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend28"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend28"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend28"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend28"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend28"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle28"/>
        <xsl:value-of select="$altova:RowStyle92"/>
        <xsl:value-of select="$rowend28"/>
        <xsl:variable name="altova:RowStyle93">
            <xsl:text>\trrh620</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28" select="$altova:nTableIndentTw_28"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl28 + $altova:nColumnWidthTw_28_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col0_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl28_Col0_AfterColumn + $altova:nColumnWidthTw_28_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col1_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl28_Col1_AfterColumn + $altova:nColumnWidthTw_28_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col2_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl28_Col2_AfterColumn + $altova:nColumnWidthTw_28_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col3_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl28_Col3_AfterColumn + $altova:nColumnWidthTw_28_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col4_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl28_Col4_AfterColumn + $altova:nColumnWidthTw_28_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col5_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle28"/>
            <xsl:value-of select="$altova:RowStyle93"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1183\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Lijst-</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1184\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes4_Lijst"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1185\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>nummer</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1186\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes4_nummer"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend28"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs1187\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text>1</xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend28"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs1188\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text>2</xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend28"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs1189\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text>3</xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend28"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs1190\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text>4</xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend28"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1191\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Totaal aantal</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1192\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes4_TotaalAantal"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1193\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>stemmen per</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1194\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes4_stemmenPer"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1195\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>groepering</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1196\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes4_groepering"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend28"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle28"/>
        <xsl:value-of select="$altova:RowStyle93"/>
        <xsl:value-of select="$rowend28"/>
        <xsl:for-each select="rg:OverviewOfListsAndDistrictsAndVotes">
            <xsl:variable name="altova:RowStyle94">
                <xsl:text>\trrh20</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl28" select="$altova:nTableIndentTw_28"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl28_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl28 + $altova:nColumnWidthTw_28_0"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col0_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl28_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl28_Col0_AfterColumn + $altova:nColumnWidthTw_28_1"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col1_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl28_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl28_Col1_AfterColumn + $altova:nColumnWidthTw_28_2"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col2_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl28_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl28_Col2_AfterColumn + $altova:nColumnWidthTw_28_3"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col3_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl28_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl28_Col3_AfterColumn + $altova:nColumnWidthTw_28_4"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col4_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl28_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl28_Col4_AfterColumn + $altova:nColumnWidthTw_28_5"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col5_AfterColumn)"/>
            </xsl:variable>
            <xsl:if test="$templatetablelevel + 1 = 1">
                <xsl:value-of select="$tablestyle28"/>
                <xsl:value-of select="$altova:RowStyle94"/>
            </xsl:if>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="@listNumber">
                <xsl:text>{\cs1197\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="string(.)"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend28"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="position() = 1">
                    <xsl:text>{\cs1198\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_28_1 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend28"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="position() = 2">
                    <xsl:text>{\cs1199\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_28_2 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend28"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="position() = 3">
                    <xsl:text>{\cs1200\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_28_3 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend28"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="position() = 4">
                    <xsl:text>{\cs1201\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_28_4 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend28"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id = &quot;alle&quot;">
                    <xsl:text>{\cs1202\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_28_5 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend28"/>
            <xsl:if test="$templatetablelevel + 1 > 1">
                <xsl:text>{\*\nesttableprops</xsl:text>
            </xsl:if>
            <xsl:value-of select="$tablestyle28"/>
            <xsl:value-of select="$altova:RowStyle94"/>
            <xsl:value-of select="$rowend28"/>
        </xsl:for-each>
        <xsl:variable name="altova:RowStyle95">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28" select="$altova:nTableIndentTw_28"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl28 + $altova:nColumnWidthTw_28_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl28_Col0_AfterColumn + $altova:nColumnWidthTw_28_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl28_Col1_AfterColumn + $altova:nColumnWidthTw_28_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl28_Col2_AfterColumn + $altova:nColumnWidthTw_28_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl28_Col3_AfterColumn + $altova:nColumnWidthTw_28_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col4_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl28_Col4_AfterColumn + $altova:nColumnWidthTw_28_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col5_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle28"/>
            <xsl:value-of select="$altova:RowStyle95"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1203\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Totaal aantal stemmen op een kandidaat per kieskring</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1204\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes4_stemmenKandidaat"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend28"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="position() = 1">
                    <xsl:text>{\cs1205\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_28_1 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend28"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="position() = 2">
                    <xsl:text>{\cs1206\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_28_2 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend28"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="position() = 3">
                    <xsl:text>{\cs1207\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_28_3 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend28"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="position() = 4">
                    <xsl:text>{\cs1208\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_28_4 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend28"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs1209\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend28"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle28"/>
        <xsl:value-of select="$altova:RowStyle95"/>
        <xsl:value-of select="$rowend28"/>
        <xsl:variable name="altova:RowStyle96">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28" select="$altova:nTableIndentTw_28"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl28 + $altova:nColumnWidthTw_28_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col0_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl28_Col0_AfterColumn + $altova:nColumnWidthTw_28_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col1_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl28_Col1_AfterColumn + $altova:nColumnWidthTw_28_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col2_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl28_Col2_AfterColumn + $altova:nColumnWidthTw_28_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col3_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl28_Col3_AfterColumn + $altova:nColumnWidthTw_28_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col4_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl28_Col4_AfterColumn + $altova:nColumnWidthTw_28_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col5_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle28"/>
            <xsl:value-of select="$altova:RowStyle96"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1210\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Totaal aantal op een kandidaat uitgebrachte stemmen</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1211\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes4_uitgebrachteStemmen"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend28"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend28"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs1212\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend28"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend28"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs1213\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend28"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfDistrictsVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id = &quot;alle&quot;">
                    <xsl:text>{\cs1214\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_28_5 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend28"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle28"/>
        <xsl:value-of select="$altova:RowStyle96"/>
        <xsl:value-of select="$rowend28"/>
        <xsl:variable name="altova:RowStyle97">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28" select="$altova:nTableIndentTw_28"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl28 + $altova:nColumnWidthTw_28_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl28_Col0_AfterColumn + $altova:nColumnWidthTw_28_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl28_Col1_AfterColumn + $altova:nColumnWidthTw_28_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl28_Col2_AfterColumn + $altova:nColumnWidthTw_28_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl28_Col3_AfterColumn + $altova:nColumnWidthTw_28_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col4_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl28_Col4_AfterColumn + $altova:nColumnWidthTw_28_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col5_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle28"/>
            <xsl:value-of select="$altova:RowStyle97"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1215\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Totaal aantal blanco stemmen</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1216\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes4_blancoStemmen"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend28"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfBlancVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="position() = 1">
                    <xsl:text>{\cs1217\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_28_1 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend28"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfBlancVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="position() = 2">
                    <xsl:text>{\cs1218\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_28_2 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend28"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfBlancVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="position() = 3">
                    <xsl:text>{\cs1219\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_28_3 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend28"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfBlancVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="position() = 4">
                    <xsl:text>{\cs1220\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_28_4 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend28"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfBlancVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id = &quot;alle&quot;">
                    <xsl:text>{\cs1221\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_28_5 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend28"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle28"/>
        <xsl:value-of select="$altova:RowStyle97"/>
        <xsl:value-of select="$rowend28"/>
        <xsl:variable name="altova:RowStyle98">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28" select="$altova:nTableIndentTw_28"/>
            <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl28 + $altova:nColumnWidthTw_28_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl28_Col0_AfterColumn + $altova:nColumnWidthTw_28_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl28_Col1_AfterColumn + $altova:nColumnWidthTw_28_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl28_Col2_AfterColumn + $altova:nColumnWidthTw_28_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl28_Col3_AfterColumn + $altova:nColumnWidthTw_28_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col4_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl28_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl28_Col4_AfterColumn + $altova:nColumnWidthTw_28_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl28_Col5_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle28"/>
            <xsl:value-of select="$altova:RowStyle98"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1222\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Totaal aantal ongeldige stemmen</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1223\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewVotes4_ongeldigeStemmen"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend28"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfInvalidVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="position() = 1">
                    <xsl:text>{\cs1224\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_28_1 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend28"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfInvalidVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="position() = 2">
                    <xsl:text>{\cs1225\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_28_2 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend28"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfInvalidVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="position() = 3">
                    <xsl:text>{\cs1226\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_28_3 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend28"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfInvalidVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="position() = 4">
                    <xsl:text>{\cs1227\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_28_4 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend28"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:OverviewOfInvalidVotes">
            <xsl:for-each select="rg:VotesInElectoralDistrict">
                <xsl:if test="@id = &quot;alle&quot;">
                    <xsl:text>{\cs1228\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_28_5 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend28"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle28"/>
        <xsl:value-of select="$altova:RowStyle98"/>
        <xsl:value-of select="$rowend28"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 0"/>
        <xsl:text> </xsl:text>
    </xsl:template>
    <xsl:template name="PostTitle">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:if test="$SV_OutputFormat = &apos;PDF&apos;">
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 0"/>
            <xsl:text>\s0\f0\fs24\sl0\fs22\s1229\s1230\sl0\f1\fs22 </xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
        </xsl:if>
    </xsl:template>
    <xsl:template name="Kiesdeler">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:for-each select="rg:RG520">
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs1231\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Het totaal van de </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs1232\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_Kiesdeler_totaal"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:if test="//kr:ElectionSubcategory[ text() != &quot;EK&quot; ]">
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs1233\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>op een kandidaat</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs1234\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_Kiesdeler_kandidaat"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:if>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs1235\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> uitgebrachte stemmen bedraagt: </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs1236\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_Kiesdeler_uitgebrachteStemmen"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:for-each select="rg:ElectoralQuota">
                <xsl:for-each select="rg:Fraction">
                    <xsl:for-each select="@numerator">
                        <xsl:text>{\cs1237\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="string(.)"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:call-template name="LineBreak">
                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
            </xsl:call-template>
            <xsl:for-each select="rg:ElectoralQuota">
                <xsl:for-each select="rg:Fraction">
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs1238\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>Aangezien </xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs1239\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_Kiesdeler_Aangezien"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:for-each select="@denominator">
                        <xsl:text>{\cs1240\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="string(.)"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs1241\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text> zetels te verdelen zijn, bedraagt de kiesdeler: </xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs1242\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_Kiesdeler_zetelsTeVerdelen"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:for-each select="@numerator">
                        <xsl:text>{\cs1243\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="string(.)"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs1244\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text> : </xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs1245\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_Kiesdeler_ration"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:for-each select="@denominator">
                        <xsl:text>{\cs1246\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="string(.)"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs1247\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text> =</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs1248\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_Kiesdeler_equals"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:for-each>
                <xsl:text>{\cs1249\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text> </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:call-template name="ElectionFraction">
                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                </xsl:call-template>
            </xsl:for-each>
            <xsl:call-template name="LineBreak">
                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
            </xsl:call-template>
        </xsl:for-each>
    </xsl:template>
    <xsl:template name="OverviewDHondtTable2">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:variable name="altova:CurrContextGrid_06B3AFF8" select="."/>
        <xsl:variable name="altova:nTableWidthIn_29" select="$altova:nMaxWidthIn * 1.00000"/>
        <xsl:variable name="altova:nTableWidthTw_29" select="$altova:nTableWidthIn_29 * 1440"/>
        <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_29" select="round($altova:nTableWidthTw_29 * 0.25)"/>
        <xsl:variable name="altova:nTableIndentTw_29" select="0"/>
        <xsl:variable name="altova:nSumColumnWidthsTw_29" select="round(4402.00)"/>
        <xsl:variable name="altova:TableWidthFactor_29">
            <xsl:choose>
                <xsl:when test="$altova:nSumColumnWidthsTw_29 &gt; $altova:nTableWidthTw_29">
                    <xsl:value-of select="($altova:nTableWidthTw_29 - $altova:SumDefaultColumnsForWideTableTw_29) div $altova:nSumColumnWidthsTw_29"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="1"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnsWithDefaultWidth_29" select="round(4)"/>
        <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_29">
            <xsl:choose>
                <xsl:when test="$altova:nColumnsWithDefaultWidth_29 = 0">
                    <xsl:value-of select="round(4)"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="$altova:nColumnsWithDefaultWidth_29"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nDefaultColumnWidthTw_29">
            <xsl:choose>
                <xsl:when test="$altova:TableWidthFactor_29 &lt; 1">
                    <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_29 div $altova:nColumnsWithDefaultWidthNotZero_29"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="round(($altova:nTableWidthTw_29 - $altova:nSumColumnWidthsTw_29) div $altova:nColumnsWithDefaultWidthNotZero_29)"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnWidthTw_29_0" select="round(0.42 * 1440 * $altova:TableWidthFactor_29)"/>
        <xsl:variable name="altova:nColumnWidthTw_29_1" select="round(0.97 * 1440 * $altova:TableWidthFactor_29)"/>
        <xsl:variable name="altova:nColumnWidthTw_29_2" select="round(0.81 * 1440 * $altova:TableWidthFactor_29)"/>
        <xsl:variable name="altova:nColumnWidthTw_29_3" select="$altova:nDefaultColumnWidthTw_29"/>
        <xsl:variable name="altova:nColumnWidthTw_29_4" select="$altova:nDefaultColumnWidthTw_29"/>
        <xsl:variable name="altova:nColumnWidthTw_29_5" select="$altova:nDefaultColumnWidthTw_29"/>
        <xsl:variable name="altova:nColumnWidthTw_29_6" select="$altova:nDefaultColumnWidthTw_29"/>
        <xsl:variable name="altova:nColumnWidthTw_29_7" select="round(0.86 * 1440 * $altova:TableWidthFactor_29)"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:variable name="tablestyle29">
            <xsl:text>\trowd\trleft</xsl:text>
            <xsl:value-of select="$altova:nTableIndentTw_29"/>
            <xsl:text>\ts1250\ts1251\ts1252\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrs\brdrcf1\brdrw15\trbrdrl\brdrnil\trbrdrb\brdrs\brdrcf1\brdrw15\trbrdrr\brdrnil</xsl:text>
        </xsl:variable>
        <xsl:variable name="rowend29">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\row\pard</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="cellend29">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\cell</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestcell</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:RowStyle99">
            <xsl:text>\trrh0\trhdr</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl29" select="$altova:nTableIndentTw_29"/>
            <xsl:text>\clvertalt\clmgf\clvmgf\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl29_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl29 + $altova:nColumnWidthTw_29_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl29_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clvmgf\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl29_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl29_Col0_AfterColumn + $altova:nColumnWidthTw_29_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl29_Col1_AfterColumn)"/>
            <xsl:text>\clvertalt\clvmgf\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl29_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl29_Col1_AfterColumn + $altova:nColumnWidthTw_29_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl29_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clmgf\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl29_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl29_Col2_AfterColumn + $altova:nColumnWidthTw_29_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl29_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl29_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl29_Col3_AfterColumn + $altova:nColumnWidthTw_29_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl29_Col4_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl29_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl29_Col4_AfterColumn + $altova:nColumnWidthTw_29_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl29_Col5_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl29_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl29_Col5_AfterColumn + $altova:nColumnWidthTw_29_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl29_Col6_AfterColumn)"/>
            <xsl:text>\clvertalt\clvmgf\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl29_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl29_Col6_AfterColumn + $altova:nColumnWidthTw_29_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl29_Col7_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle29"/>
            <xsl:value-of select="$altova:RowStyle99"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="@article = &quot;P13&quot; or //kr:ElectionSubcategory[ text() = &quot;EK&quot; ]">
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs1253\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>Lijst</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs1254\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_OverviewDHondtTable2_Lijst"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:when>
            <xsl:otherwise>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs1255\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>Lijstencombinatie, lijst</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs1256\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_OverviewDHondtTable2_LijstencombinatieLijst"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend29"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend29"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1257\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Reeds toegewezen zetels</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1258\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewDHondtTable2_Reeds"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend29"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1259\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Gemiddeld aantal stemmen bij toewijzing van restzetels</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1260\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewDHondtTable2_Gemiddeld"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend29"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend29"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend29"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend29"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1261\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Toegewezen restzetels</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1262\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewDHondtTable2_restzetels"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend29"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle29"/>
        <xsl:value-of select="$altova:RowStyle99"/>
        <xsl:value-of select="$rowend29"/>
        <xsl:variable name="altova:RowStyle100">
            <xsl:text>\trrh0\trhdr</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl29" select="$altova:nTableIndentTw_29"/>
            <xsl:text>\clvertalc\clmgf\clvmrg\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl29_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl29 + $altova:nColumnWidthTw_29_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl29_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clvmrg\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl29_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl29_Col0_AfterColumn + $altova:nColumnWidthTw_29_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl29_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clvmrg\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl29_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl29_Col1_AfterColumn + $altova:nColumnWidthTw_29_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl29_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clmgf\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl29_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl29_Col2_AfterColumn + $altova:nColumnWidthTw_29_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl29_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl29_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl29_Col3_AfterColumn + $altova:nColumnWidthTw_29_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl29_Col4_AfterColumn)"/>
            <xsl:text>\clvertalc\clmgf\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl29_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl29_Col4_AfterColumn + $altova:nColumnWidthTw_29_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl29_Col5_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl29_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl29_Col5_AfterColumn + $altova:nColumnWidthTw_29_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl29_Col6_AfterColumn)"/>
            <xsl:text>\clvertalc\clvmrg\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl29_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl29_Col6_AfterColumn + $altova:nColumnWidthTw_29_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl29_Col7_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle29"/>
            <xsl:value-of select="$altova:RowStyle100"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend29"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend29"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend29"/>
        <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:DHondtAssignmentLine">
            <xsl:if test="position()  = 1">
                <xsl:for-each select="rg:DHondtFraction">
                    <xsl:if test="@step  = 1">
                        <xsl:for-each select="@step">
                            <xsl:text>{\cs1263\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>+1</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                    </xsl:if>
                </xsl:for-each>
            </xsl:if>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend29"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend29"/>
        <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:DHondtAssignmentLine">
            <xsl:if test="position()  = 1">
                <xsl:for-each select="rg:DHondtFraction">
                    <xsl:if test="@step  = 2">
                        <xsl:for-each select="@step">
                            <xsl:text>{\cs1264\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>+2</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                    </xsl:if>
                </xsl:for-each>
            </xsl:if>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend29"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend29"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend29"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle29"/>
        <xsl:value-of select="$altova:RowStyle100"/>
        <xsl:value-of select="$rowend29"/>
        <xsl:for-each select="rg:DHondtAssignmentLine">
            <xsl:variable name="altova:RowStyle101">
                <xsl:text>\trrh0</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl29" select="$altova:nTableIndentTw_29"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl29_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl29 + $altova:nColumnWidthTw_29_0"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl29_Col0_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt100\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl29_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl29_Col0_AfterColumn + $altova:nColumnWidthTw_29_1"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl29_Col1_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt20\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl29_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl29_Col1_AfterColumn + $altova:nColumnWidthTw_29_2"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl29_Col2_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl29_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl29_Col2_AfterColumn + $altova:nColumnWidthTw_29_3"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl29_Col3_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl29_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl29_Col3_AfterColumn + $altova:nColumnWidthTw_29_4"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl29_Col4_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl29_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl29_Col4_AfterColumn + $altova:nColumnWidthTw_29_5"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl29_Col5_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl29_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl29_Col5_AfterColumn + $altova:nColumnWidthTw_29_6"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl29_Col6_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl29_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl29_Col6_AfterColumn + $altova:nColumnWidthTw_29_7"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl29_Col7_AfterColumn)"/>
            </xsl:variable>
            <xsl:if test="$templatetablelevel + 1 = 1">
                <xsl:value-of select="$tablestyle29"/>
                <xsl:value-of select="$altova:RowStyle101"/>
            </xsl:if>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:ListOrCombinedList">
                <xsl:for-each select="@combinationId">
                    <xsl:text>{\cs1265\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
                <xsl:for-each select="@listNumber">
                    <xsl:text>{\cs1266\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend29"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="ListOrCombinedListPart2">
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_29_1 div 1440) - 0.06944 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend29"/>
            <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:PriorSeats">
                <xsl:text>{\cs1267\f1\fs20 </xsl:text>
                <xsl:apply-templates>
                    <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_29_2 div 1440) - 0.01389 - 0.01042"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                </xsl:apply-templates>
                <xsl:text>}</xsl:text>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend29"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:DHondtFraction">
                <xsl:if test="@step = 1">
                    <xsl:call-template name="ElectionFractionPart1">
                        <xsl:with-param name="smaller" select="1"/>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_29_3 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend29"/>
            <xsl:text>\ql\sl0\li100\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:DHondtFraction">
                <xsl:if test="@step = 1">
                    <xsl:call-template name="ElectionFractionPart2">
                        <xsl:with-param name="smaller" select="1"/>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_29_4 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend29"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:DHondtFraction">
                <xsl:if test="@step = 2">
                    <xsl:call-template name="ElectionFractionPart1">
                        <xsl:with-param name="smaller" select="1"/>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_29_5 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend29"/>
            <xsl:text>\ql\sl0\li100\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:DHondtFraction">
                <xsl:if test="@step = 2">
                    <xsl:call-template name="ElectionFractionPart2">
                        <xsl:with-param name="smaller" select="1"/>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_29_6 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend29"/>
            <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
            <xsl:if test="rg:NewSeats != 0">
                <xsl:for-each select="rg:NewSeats">
                    <xsl:text>{\cs1268\f1\fs20 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_29_7 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:if>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend29"/>
            <xsl:if test="$templatetablelevel + 1 > 1">
                <xsl:text>{\*\nesttableprops</xsl:text>
            </xsl:if>
            <xsl:value-of select="$tablestyle29"/>
            <xsl:value-of select="$altova:RowStyle101"/>
            <xsl:value-of select="$rowend29"/>
        </xsl:for-each>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 0"/>
        <xsl:text> </xsl:text>
    </xsl:template>
    <xsl:template name="OverviewDHondtTable3">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:variable name="altova:CurrContextGrid_06B3C078" select="."/>
        <xsl:variable name="altova:nTableWidthIn_30" select="$altova:nMaxWidthIn * 1.00000"/>
        <xsl:variable name="altova:nTableWidthTw_30" select="$altova:nTableWidthIn_30 * 1440"/>
        <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_30" select="round($altova:nTableWidthTw_30 * 0.25)"/>
        <xsl:variable name="altova:nTableIndentTw_30" select="0"/>
        <xsl:variable name="altova:nSumColumnWidthsTw_30" select="round(4402.00)"/>
        <xsl:variable name="altova:TableWidthFactor_30">
            <xsl:choose>
                <xsl:when test="$altova:nSumColumnWidthsTw_30 &gt; $altova:nTableWidthTw_30">
                    <xsl:value-of select="($altova:nTableWidthTw_30 - $altova:SumDefaultColumnsForWideTableTw_30) div $altova:nSumColumnWidthsTw_30"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="1"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnsWithDefaultWidth_30" select="round(6)"/>
        <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_30">
            <xsl:choose>
                <xsl:when test="$altova:nColumnsWithDefaultWidth_30 = 0">
                    <xsl:value-of select="round(6)"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="$altova:nColumnsWithDefaultWidth_30"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nDefaultColumnWidthTw_30">
            <xsl:choose>
                <xsl:when test="$altova:TableWidthFactor_30 &lt; 1">
                    <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_30 div $altova:nColumnsWithDefaultWidthNotZero_30"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="round(($altova:nTableWidthTw_30 - $altova:nSumColumnWidthsTw_30) div $altova:nColumnsWithDefaultWidthNotZero_30)"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnWidthTw_30_0" select="round(0.42 * 1440 * $altova:TableWidthFactor_30)"/>
        <xsl:variable name="altova:nColumnWidthTw_30_1" select="round(0.97 * 1440 * $altova:TableWidthFactor_30)"/>
        <xsl:variable name="altova:nColumnWidthTw_30_2" select="round(0.81 * 1440 * $altova:TableWidthFactor_30)"/>
        <xsl:variable name="altova:nColumnWidthTw_30_3" select="$altova:nDefaultColumnWidthTw_30"/>
        <xsl:variable name="altova:nColumnWidthTw_30_4" select="$altova:nDefaultColumnWidthTw_30"/>
        <xsl:variable name="altova:nColumnWidthTw_30_5" select="$altova:nDefaultColumnWidthTw_30"/>
        <xsl:variable name="altova:nColumnWidthTw_30_6" select="$altova:nDefaultColumnWidthTw_30"/>
        <xsl:variable name="altova:nColumnWidthTw_30_7" select="$altova:nDefaultColumnWidthTw_30"/>
        <xsl:variable name="altova:nColumnWidthTw_30_8" select="$altova:nDefaultColumnWidthTw_30"/>
        <xsl:variable name="altova:nColumnWidthTw_30_9" select="round(0.86 * 1440 * $altova:TableWidthFactor_30)"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:variable name="tablestyle30">
            <xsl:text>\trowd\trleft</xsl:text>
            <xsl:value-of select="$altova:nTableIndentTw_30"/>
            <xsl:text>\ts1269\ts1270\ts1271\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrs\brdrcf1\brdrw15\trbrdrl\brdrnil\trbrdrb\brdrs\brdrcf1\brdrw15\trbrdrr\brdrnil</xsl:text>
        </xsl:variable>
        <xsl:variable name="rowend30">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\row\pard</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="cellend30">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\cell</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestcell</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:RowStyle102">
            <xsl:text>\trrh0\trhdr</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl30" select="$altova:nTableIndentTw_30"/>
            <xsl:text>\clvertalt\clmgf\clvmgf\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl30_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl30 + $altova:nColumnWidthTw_30_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl30_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clvmgf\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl30_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl30_Col0_AfterColumn + $altova:nColumnWidthTw_30_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl30_Col1_AfterColumn)"/>
            <xsl:text>\clvertalt\clvmgf\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl30_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl30_Col1_AfterColumn + $altova:nColumnWidthTw_30_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl30_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clmgf\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl30_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl30_Col2_AfterColumn + $altova:nColumnWidthTw_30_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl30_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl30_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl30_Col3_AfterColumn + $altova:nColumnWidthTw_30_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl30_Col4_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl30_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl30_Col4_AfterColumn + $altova:nColumnWidthTw_30_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl30_Col5_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl30_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl30_Col5_AfterColumn + $altova:nColumnWidthTw_30_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl30_Col6_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl30_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl30_Col6_AfterColumn + $altova:nColumnWidthTw_30_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl30_Col7_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl30_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl30_Col7_AfterColumn + $altova:nColumnWidthTw_30_8"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl30_Col8_AfterColumn)"/>
            <xsl:text>\clvertalt\clvmgf\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl30_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl30_Col8_AfterColumn + $altova:nColumnWidthTw_30_9"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl30_Col9_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle30"/>
            <xsl:value-of select="$altova:RowStyle102"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="@article = &quot;P13&quot; or //kr:ElectionSubcategory[ text() = &quot;EK&quot; ]">
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs1272\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>Lijst</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs1273\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_OverviewDHondtTable3_Lijst"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:when>
            <xsl:otherwise>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs1274\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>Lijstencombinatie, lijst</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs1275\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_OverviewDHondtTable3_LijstencombinatieLijst"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend30"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend30"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1276\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Reeds toegewezen zetels</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1277\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewDHondtTable3_Reeds"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend30"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1278\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Gemiddeld aantal stemmen bij toewijzing van restzetels</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1279\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewDHondtTable3_Gemiddeld"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend30"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend30"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend30"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend30"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend30"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend30"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1280\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Toegewezen restzetels</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1281\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewDHondtTable3_restzetels"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend30"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle30"/>
        <xsl:value-of select="$altova:RowStyle102"/>
        <xsl:value-of select="$rowend30"/>
        <xsl:variable name="altova:RowStyle103">
            <xsl:text>\trrh0\trhdr</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl30" select="$altova:nTableIndentTw_30"/>
            <xsl:text>\clvertalc\clmgf\clvmrg\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl30_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl30 + $altova:nColumnWidthTw_30_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl30_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clvmrg\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl30_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl30_Col0_AfterColumn + $altova:nColumnWidthTw_30_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl30_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clvmrg\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl30_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl30_Col1_AfterColumn + $altova:nColumnWidthTw_30_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl30_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clmgf\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl30_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl30_Col2_AfterColumn + $altova:nColumnWidthTw_30_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl30_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl30_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl30_Col3_AfterColumn + $altova:nColumnWidthTw_30_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl30_Col4_AfterColumn)"/>
            <xsl:text>\clvertalc\clmgf\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl30_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl30_Col4_AfterColumn + $altova:nColumnWidthTw_30_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl30_Col5_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl30_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl30_Col5_AfterColumn + $altova:nColumnWidthTw_30_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl30_Col6_AfterColumn)"/>
            <xsl:text>\clvertalc\clmgf\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl30_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl30_Col6_AfterColumn + $altova:nColumnWidthTw_30_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl30_Col7_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl30_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl30_Col7_AfterColumn + $altova:nColumnWidthTw_30_8"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl30_Col8_AfterColumn)"/>
            <xsl:text>\clvertalc\clvmrg\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl30_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl30_Col8_AfterColumn + $altova:nColumnWidthTw_30_9"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl30_Col9_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle30"/>
            <xsl:value-of select="$altova:RowStyle103"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend30"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend30"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend30"/>
        <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:DHondtAssignmentLine">
            <xsl:if test="position() = 1">
                <xsl:for-each select="rg:DHondtFraction">
                    <xsl:if test="@step  = 1">
                        <xsl:for-each select="@step">
                            <xsl:text>{\cs1282\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>+1</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                    </xsl:if>
                </xsl:for-each>
            </xsl:if>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend30"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend30"/>
        <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:DHondtAssignmentLine">
            <xsl:if test="position()  = 1">
                <xsl:for-each select="rg:DHondtFraction">
                    <xsl:if test="@step  = 2">
                        <xsl:for-each select="@step">
                            <xsl:text>{\cs1283\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>+2</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                    </xsl:if>
                </xsl:for-each>
            </xsl:if>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend30"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend30"/>
        <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:DHondtAssignmentLine">
            <xsl:if test="position()  = 1">
                <xsl:for-each select="rg:DHondtFraction">
                    <xsl:if test="@step  = 3">
                        <xsl:for-each select="@step">
                            <xsl:text>{\cs1284\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>+3</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                    </xsl:if>
                </xsl:for-each>
            </xsl:if>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend30"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend30"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend30"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle30"/>
        <xsl:value-of select="$altova:RowStyle103"/>
        <xsl:value-of select="$rowend30"/>
        <xsl:for-each select="rg:DHondtAssignmentLine">
            <xsl:variable name="altova:RowStyle104">
                <xsl:text>\trrh0</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl30" select="$altova:nTableIndentTw_30"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl30_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl30 + $altova:nColumnWidthTw_30_0"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl30_Col0_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt100\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl30_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl30_Col0_AfterColumn + $altova:nColumnWidthTw_30_1"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl30_Col1_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt20\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl30_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl30_Col1_AfterColumn + $altova:nColumnWidthTw_30_2"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl30_Col2_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl30_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl30_Col2_AfterColumn + $altova:nColumnWidthTw_30_3"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl30_Col3_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl30_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl30_Col3_AfterColumn + $altova:nColumnWidthTw_30_4"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl30_Col4_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl30_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl30_Col4_AfterColumn + $altova:nColumnWidthTw_30_5"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl30_Col5_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl30_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl30_Col5_AfterColumn + $altova:nColumnWidthTw_30_6"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl30_Col6_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl30_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl30_Col6_AfterColumn + $altova:nColumnWidthTw_30_7"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl30_Col7_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl30_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl30_Col7_AfterColumn + $altova:nColumnWidthTw_30_8"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl30_Col8_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl30_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl30_Col8_AfterColumn + $altova:nColumnWidthTw_30_9"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl30_Col9_AfterColumn)"/>
            </xsl:variable>
            <xsl:if test="$templatetablelevel + 1 = 1">
                <xsl:value-of select="$tablestyle30"/>
                <xsl:value-of select="$altova:RowStyle104"/>
            </xsl:if>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:ListOrCombinedList">
                <xsl:for-each select="@combinationId">
                    <xsl:text>{\cs1285\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
                <xsl:for-each select="@listNumber">
                    <xsl:text>{\cs1286\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend30"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="ListOrCombinedListPart2">
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_30_1 div 1440) - 0.06944 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend30"/>
            <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:PriorSeats">
                <xsl:text>{\cs1287\f1\fs20 </xsl:text>
                <xsl:apply-templates>
                    <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_30_2 div 1440) - 0.01389 - 0.01042"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                </xsl:apply-templates>
                <xsl:text>}</xsl:text>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend30"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:DHondtFraction">
                <xsl:if test="@step = 1">
                    <xsl:call-template name="ElectionFractionPart1">
                        <xsl:with-param name="smaller" select="1"/>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_30_3 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend30"/>
            <xsl:text>\ql\sl0\li100\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:DHondtFraction">
                <xsl:if test="@step = 1">
                    <xsl:call-template name="ElectionFractionPart2">
                        <xsl:with-param name="smaller" select="1"/>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_30_4 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend30"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:DHondtFraction">
                <xsl:if test="@step = 2">
                    <xsl:call-template name="ElectionFractionPart1">
                        <xsl:with-param name="smaller" select="1"/>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_30_5 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend30"/>
            <xsl:text>\ql\sl0\li100\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:DHondtFraction">
                <xsl:if test="@step = 2">
                    <xsl:call-template name="ElectionFractionPart2">
                        <xsl:with-param name="smaller" select="1"/>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_30_6 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend30"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:DHondtFraction">
                <xsl:if test="@step = 3">
                    <xsl:call-template name="ElectionFractionPart1">
                        <xsl:with-param name="smaller" select="1"/>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_30_7 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend30"/>
            <xsl:text>\ql\sl0\li100\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:DHondtFraction">
                <xsl:if test="@step = 3">
                    <xsl:call-template name="ElectionFractionPart2">
                        <xsl:with-param name="smaller" select="1"/>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_30_8 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend30"/>
            <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
            <xsl:if test="rg:NewSeats != 0">
                <xsl:for-each select="rg:NewSeats">
                    <xsl:text>{\cs1288\f1\fs20 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_30_9 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:if>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend30"/>
            <xsl:if test="$templatetablelevel + 1 > 1">
                <xsl:text>{\*\nesttableprops</xsl:text>
            </xsl:if>
            <xsl:value-of select="$tablestyle30"/>
            <xsl:value-of select="$altova:RowStyle104"/>
            <xsl:value-of select="$rowend30"/>
        </xsl:for-each>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 0"/>
        <xsl:text> </xsl:text>
    </xsl:template>
    <xsl:template name="OverviewDHondtTable4">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:variable name="altova:CurrContextGrid_06B61498" select="."/>
        <xsl:variable name="altova:nTableWidthIn_31" select="$altova:nMaxWidthIn * 1.00000"/>
        <xsl:variable name="altova:nTableWidthTw_31" select="$altova:nTableWidthIn_31 * 1440"/>
        <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_31" select="round($altova:nTableWidthTw_31 * 0.25)"/>
        <xsl:variable name="altova:nTableIndentTw_31" select="0"/>
        <xsl:variable name="altova:nSumColumnWidthsTw_31" select="round(4402.00)"/>
        <xsl:variable name="altova:TableWidthFactor_31">
            <xsl:choose>
                <xsl:when test="$altova:nSumColumnWidthsTw_31 &gt; $altova:nTableWidthTw_31">
                    <xsl:value-of select="($altova:nTableWidthTw_31 - $altova:SumDefaultColumnsForWideTableTw_31) div $altova:nSumColumnWidthsTw_31"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="1"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnsWithDefaultWidth_31" select="round(8)"/>
        <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_31">
            <xsl:choose>
                <xsl:when test="$altova:nColumnsWithDefaultWidth_31 = 0">
                    <xsl:value-of select="round(8)"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="$altova:nColumnsWithDefaultWidth_31"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nDefaultColumnWidthTw_31">
            <xsl:choose>
                <xsl:when test="$altova:TableWidthFactor_31 &lt; 1">
                    <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_31 div $altova:nColumnsWithDefaultWidthNotZero_31"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="round(($altova:nTableWidthTw_31 - $altova:nSumColumnWidthsTw_31) div $altova:nColumnsWithDefaultWidthNotZero_31)"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnWidthTw_31_0" select="round(0.42 * 1440 * $altova:TableWidthFactor_31)"/>
        <xsl:variable name="altova:nColumnWidthTw_31_1" select="round(0.97 * 1440 * $altova:TableWidthFactor_31)"/>
        <xsl:variable name="altova:nColumnWidthTw_31_2" select="round(0.81 * 1440 * $altova:TableWidthFactor_31)"/>
        <xsl:variable name="altova:nColumnWidthTw_31_3" select="$altova:nDefaultColumnWidthTw_31"/>
        <xsl:variable name="altova:nColumnWidthTw_31_4" select="$altova:nDefaultColumnWidthTw_31"/>
        <xsl:variable name="altova:nColumnWidthTw_31_5" select="$altova:nDefaultColumnWidthTw_31"/>
        <xsl:variable name="altova:nColumnWidthTw_31_6" select="$altova:nDefaultColumnWidthTw_31"/>
        <xsl:variable name="altova:nColumnWidthTw_31_7" select="$altova:nDefaultColumnWidthTw_31"/>
        <xsl:variable name="altova:nColumnWidthTw_31_8" select="$altova:nDefaultColumnWidthTw_31"/>
        <xsl:variable name="altova:nColumnWidthTw_31_9" select="$altova:nDefaultColumnWidthTw_31"/>
        <xsl:variable name="altova:nColumnWidthTw_31_10" select="$altova:nDefaultColumnWidthTw_31"/>
        <xsl:variable name="altova:nColumnWidthTw_31_11" select="round(0.86 * 1440 * $altova:TableWidthFactor_31)"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:variable name="tablestyle31">
            <xsl:text>\trowd\trleft</xsl:text>
            <xsl:value-of select="$altova:nTableIndentTw_31"/>
            <xsl:text>\ts1289\ts1290\ts1291\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrs\brdrcf1\brdrw15\trbrdrl\brdrnil\trbrdrb\brdrs\brdrcf1\brdrw15\trbrdrr\brdrnil</xsl:text>
        </xsl:variable>
        <xsl:variable name="rowend31">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\row\pard</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="cellend31">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\cell</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestcell</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:RowStyle105">
            <xsl:text>\trrh0\trhdr</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl31" select="$altova:nTableIndentTw_31"/>
            <xsl:text>\clvertalt\clmgf\clvmgf\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl31_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl31 + $altova:nColumnWidthTw_31_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl31_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clvmgf\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl31_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl31_Col0_AfterColumn + $altova:nColumnWidthTw_31_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl31_Col1_AfterColumn)"/>
            <xsl:text>\clvertalt\clvmgf\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl31_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl31_Col1_AfterColumn + $altova:nColumnWidthTw_31_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl31_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clmgf\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl31_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl31_Col2_AfterColumn + $altova:nColumnWidthTw_31_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl31_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl31_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl31_Col3_AfterColumn + $altova:nColumnWidthTw_31_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl31_Col4_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl31_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl31_Col4_AfterColumn + $altova:nColumnWidthTw_31_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl31_Col5_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl31_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl31_Col5_AfterColumn + $altova:nColumnWidthTw_31_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl31_Col6_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl31_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl31_Col6_AfterColumn + $altova:nColumnWidthTw_31_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl31_Col7_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl31_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl31_Col7_AfterColumn + $altova:nColumnWidthTw_31_8"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl31_Col8_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl31_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl31_Col8_AfterColumn + $altova:nColumnWidthTw_31_9"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl31_Col9_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl31_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl31_Col9_AfterColumn + $altova:nColumnWidthTw_31_10"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl31_Col10_AfterColumn)"/>
            <xsl:text>\clvertalt\clvmgf\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl31_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl31_Col10_AfterColumn + $altova:nColumnWidthTw_31_11"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl31_Col11_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle31"/>
            <xsl:value-of select="$altova:RowStyle105"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="@article = &quot;P13&quot; or //kr:ElectionSubcategory[ text() = &quot;EK&quot; ]">
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs1292\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>Lijst</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs1293\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_OverviewDHondtTable4_Lijst"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:when>
            <xsl:otherwise>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs1294\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>Lijstencombinatie, lijst</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs1295\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_OverviewDHondtTable4_LijstencombinatieLijst"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend31"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend31"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1296\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Reeds toegewezen zetels</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1297\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewDHondtTable4_Reeds"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend31"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1298\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Gemiddeld aantal stemmen bij toewijzing van restzetels</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1299\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewDHondtTable4_Gemiddeld"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend31"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend31"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend31"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend31"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend31"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend31"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend31"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend31"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1300\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Toegewezen restzetels</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1301\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewDHondtTable4_restzetels"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend31"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle31"/>
        <xsl:value-of select="$altova:RowStyle105"/>
        <xsl:value-of select="$rowend31"/>
        <xsl:variable name="altova:RowStyle106">
            <xsl:text>\trrh0\trhdr</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl31" select="$altova:nTableIndentTw_31"/>
            <xsl:text>\clvertalc\clmgf\clvmrg\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl31_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl31 + $altova:nColumnWidthTw_31_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl31_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clvmrg\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl31_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl31_Col0_AfterColumn + $altova:nColumnWidthTw_31_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl31_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clvmrg\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl31_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl31_Col1_AfterColumn + $altova:nColumnWidthTw_31_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl31_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clmgf\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl31_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl31_Col2_AfterColumn + $altova:nColumnWidthTw_31_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl31_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl31_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl31_Col3_AfterColumn + $altova:nColumnWidthTw_31_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl31_Col4_AfterColumn)"/>
            <xsl:text>\clvertalc\clmgf\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl31_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl31_Col4_AfterColumn + $altova:nColumnWidthTw_31_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl31_Col5_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl31_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl31_Col5_AfterColumn + $altova:nColumnWidthTw_31_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl31_Col6_AfterColumn)"/>
            <xsl:text>\clvertalc\clmgf\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl31_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl31_Col6_AfterColumn + $altova:nColumnWidthTw_31_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl31_Col7_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl31_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl31_Col7_AfterColumn + $altova:nColumnWidthTw_31_8"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl31_Col8_AfterColumn)"/>
            <xsl:text>\clvertalc\clmgf\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl31_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl31_Col8_AfterColumn + $altova:nColumnWidthTw_31_9"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl31_Col9_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl31_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl31_Col9_AfterColumn + $altova:nColumnWidthTw_31_10"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl31_Col10_AfterColumn)"/>
            <xsl:text>\clvertalc\clvmrg\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl31_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl31_Col10_AfterColumn + $altova:nColumnWidthTw_31_11"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl31_Col11_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle31"/>
            <xsl:value-of select="$altova:RowStyle106"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend31"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend31"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend31"/>
        <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:DHondtAssignmentLine">
            <xsl:if test="position()  = 1">
                <xsl:for-each select="rg:DHondtFraction">
                    <xsl:if test="@step  = 1">
                        <xsl:for-each select="@step">
                            <xsl:text>{\cs1302\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>+1</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                    </xsl:if>
                </xsl:for-each>
            </xsl:if>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend31"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend31"/>
        <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:DHondtAssignmentLine">
            <xsl:if test="position()  = 1">
                <xsl:for-each select="rg:DHondtFraction">
                    <xsl:if test="@step  = 2">
                        <xsl:for-each select="@step">
                            <xsl:text>{\cs1303\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>+2</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                    </xsl:if>
                </xsl:for-each>
            </xsl:if>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend31"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend31"/>
        <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:DHondtAssignmentLine">
            <xsl:if test="position()  = 1">
                <xsl:for-each select="rg:DHondtFraction">
                    <xsl:if test="@step  = 3">
                        <xsl:for-each select="@step">
                            <xsl:text>{\cs1304\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>+3</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                    </xsl:if>
                </xsl:for-each>
            </xsl:if>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend31"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend31"/>
        <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:DHondtAssignmentLine">
            <xsl:if test="position()  = 1">
                <xsl:for-each select="rg:DHondtFraction">
                    <xsl:if test="@step  = 4">
                        <xsl:for-each select="@step">
                            <xsl:text>{\cs1305\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>+4</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                    </xsl:if>
                </xsl:for-each>
            </xsl:if>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend31"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend31"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend31"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle31"/>
        <xsl:value-of select="$altova:RowStyle106"/>
        <xsl:value-of select="$rowend31"/>
        <xsl:for-each select="rg:DHondtAssignmentLine">
            <xsl:variable name="altova:RowStyle107">
                <xsl:text>\trrh0</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl31" select="$altova:nTableIndentTw_31"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl31_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl31 + $altova:nColumnWidthTw_31_0"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl31_Col0_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt100\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl31_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl31_Col0_AfterColumn + $altova:nColumnWidthTw_31_1"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl31_Col1_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt20\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl31_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl31_Col1_AfterColumn + $altova:nColumnWidthTw_31_2"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl31_Col2_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl31_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl31_Col2_AfterColumn + $altova:nColumnWidthTw_31_3"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl31_Col3_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl31_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl31_Col3_AfterColumn + $altova:nColumnWidthTw_31_4"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl31_Col4_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl31_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl31_Col4_AfterColumn + $altova:nColumnWidthTw_31_5"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl31_Col5_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl31_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl31_Col5_AfterColumn + $altova:nColumnWidthTw_31_6"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl31_Col6_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl31_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl31_Col6_AfterColumn + $altova:nColumnWidthTw_31_7"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl31_Col7_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl31_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl31_Col7_AfterColumn + $altova:nColumnWidthTw_31_8"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl31_Col8_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl31_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl31_Col8_AfterColumn + $altova:nColumnWidthTw_31_9"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl31_Col9_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl31_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl31_Col9_AfterColumn + $altova:nColumnWidthTw_31_10"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl31_Col10_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl31_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl31_Col10_AfterColumn + $altova:nColumnWidthTw_31_11"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl31_Col11_AfterColumn)"/>
            </xsl:variable>
            <xsl:if test="$templatetablelevel + 1 = 1">
                <xsl:value-of select="$tablestyle31"/>
                <xsl:value-of select="$altova:RowStyle107"/>
            </xsl:if>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:ListOrCombinedList">
                <xsl:for-each select="@combinationId">
                    <xsl:text>{\cs1306\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
                <xsl:for-each select="@listNumber">
                    <xsl:text>{\cs1307\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend31"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="ListOrCombinedListPart2">
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_31_1 div 1440) - 0.06944 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend31"/>
            <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:PriorSeats">
                <xsl:text>{\cs1308\f1\fs20 </xsl:text>
                <xsl:apply-templates>
                    <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_31_2 div 1440) - 0.01389 - 0.01042"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                </xsl:apply-templates>
                <xsl:text>}</xsl:text>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend31"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:DHondtFraction">
                <xsl:if test="@step = 1">
                    <xsl:call-template name="ElectionFractionPart1">
                        <xsl:with-param name="smaller" select="1"/>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_31_3 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend31"/>
            <xsl:text>\ql\sl0\li60\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:DHondtFraction">
                <xsl:if test="@step = 1">
                    <xsl:call-template name="ElectionFractionPart2">
                        <xsl:with-param name="smaller" select="1"/>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_31_4 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend31"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:DHondtFraction">
                <xsl:if test="@step = 2">
                    <xsl:call-template name="ElectionFractionPart1">
                        <xsl:with-param name="smaller" select="1"/>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_31_5 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend31"/>
            <xsl:text>\ql\sl0\li60\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:DHondtFraction">
                <xsl:if test="@step = 2">
                    <xsl:call-template name="ElectionFractionPart2">
                        <xsl:with-param name="smaller" select="1"/>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_31_6 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend31"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:DHondtFraction">
                <xsl:if test="@step = 3">
                    <xsl:call-template name="ElectionFractionPart1">
                        <xsl:with-param name="smaller" select="1"/>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_31_7 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend31"/>
            <xsl:text>\ql\sl0\li60\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:DHondtFraction">
                <xsl:if test="@step = 3">
                    <xsl:call-template name="ElectionFractionPart2">
                        <xsl:with-param name="smaller" select="1"/>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_31_8 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend31"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:DHondtFraction">
                <xsl:if test="@step = 4">
                    <xsl:call-template name="ElectionFractionPart1">
                        <xsl:with-param name="smaller" select="1"/>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_31_9 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend31"/>
            <xsl:text>\ql\sl0\li60\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:DHondtFraction">
                <xsl:if test="@step = 4">
                    <xsl:call-template name="ElectionFractionPart2">
                        <xsl:with-param name="smaller" select="1"/>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_31_10 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend31"/>
            <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
            <xsl:if test="rg:NewSeats != 0">
                <xsl:for-each select="rg:NewSeats">
                    <xsl:text>{\cs1309\f1\fs20 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_31_11 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:if>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend31"/>
            <xsl:if test="$templatetablelevel + 1 > 1">
                <xsl:text>{\*\nesttableprops</xsl:text>
            </xsl:if>
            <xsl:value-of select="$tablestyle31"/>
            <xsl:value-of select="$altova:RowStyle107"/>
            <xsl:value-of select="$rowend31"/>
        </xsl:for-each>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 0"/>
        <xsl:text> </xsl:text>
    </xsl:template>
    <xsl:template name="OverviewDHondtTable5-10">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:variable name="altova:CurrContextGrid_06B62BD8" select="."/>
        <xsl:variable name="altova:nTableWidthIn_32" select="$altova:nMaxWidthIn * 1.00000"/>
        <xsl:variable name="altova:nTableWidthTw_32" select="$altova:nTableWidthIn_32 * 1440"/>
        <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_32" select="round($altova:nTableWidthTw_32 * 0.25)"/>
        <xsl:variable name="altova:nTableIndentTw_32" select="0"/>
        <xsl:variable name="altova:nSumColumnWidthsTw_32" select="round(2001.00)"/>
        <xsl:variable name="altova:TableWidthFactor_32">
            <xsl:choose>
                <xsl:when test="$altova:nSumColumnWidthsTw_32 &gt; $altova:nTableWidthTw_32">
                    <xsl:value-of select="($altova:nTableWidthTw_32 - $altova:SumDefaultColumnsForWideTableTw_32) div $altova:nSumColumnWidthsTw_32"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="1"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnsWithDefaultWidth_32" select="round(12)"/>
        <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_32">
            <xsl:choose>
                <xsl:when test="$altova:nColumnsWithDefaultWidth_32 = 0">
                    <xsl:value-of select="round(12)"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="$altova:nColumnsWithDefaultWidth_32"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nDefaultColumnWidthTw_32">
            <xsl:choose>
                <xsl:when test="$altova:TableWidthFactor_32 &lt; 1">
                    <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_32 div $altova:nColumnsWithDefaultWidthNotZero_32"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="round(($altova:nTableWidthTw_32 - $altova:nSumColumnWidthsTw_32) div $altova:nColumnsWithDefaultWidthNotZero_32)"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnWidthTw_32_0" select="round(0.42 * 1440 * $altova:TableWidthFactor_32)"/>
        <xsl:variable name="altova:nColumnWidthTw_32_1" select="round(0.97 * 1440 * $altova:TableWidthFactor_32)"/>
        <xsl:variable name="altova:nColumnWidthTw_32_2" select="$altova:nDefaultColumnWidthTw_32"/>
        <xsl:variable name="altova:nColumnWidthTw_32_3" select="$altova:nDefaultColumnWidthTw_32"/>
        <xsl:variable name="altova:nColumnWidthTw_32_4" select="$altova:nDefaultColumnWidthTw_32"/>
        <xsl:variable name="altova:nColumnWidthTw_32_5" select="$altova:nDefaultColumnWidthTw_32"/>
        <xsl:variable name="altova:nColumnWidthTw_32_6" select="$altova:nDefaultColumnWidthTw_32"/>
        <xsl:variable name="altova:nColumnWidthTw_32_7" select="$altova:nDefaultColumnWidthTw_32"/>
        <xsl:variable name="altova:nColumnWidthTw_32_8" select="$altova:nDefaultColumnWidthTw_32"/>
        <xsl:variable name="altova:nColumnWidthTw_32_9" select="$altova:nDefaultColumnWidthTw_32"/>
        <xsl:variable name="altova:nColumnWidthTw_32_10" select="$altova:nDefaultColumnWidthTw_32"/>
        <xsl:variable name="altova:nColumnWidthTw_32_11" select="$altova:nDefaultColumnWidthTw_32"/>
        <xsl:variable name="altova:nColumnWidthTw_32_12" select="$altova:nDefaultColumnWidthTw_32"/>
        <xsl:variable name="altova:nColumnWidthTw_32_13" select="$altova:nDefaultColumnWidthTw_32"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:variable name="tablestyle32">
            <xsl:text>\trowd\trleft</xsl:text>
            <xsl:value-of select="$altova:nTableIndentTw_32"/>
            <xsl:text>\ts1310\ts1311\ts1312\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrs\brdrcf1\brdrw15\trbrdrl\brdrnil\trbrdrb\brdrs\brdrcf1\brdrw15\trbrdrr\brdrnil</xsl:text>
        </xsl:variable>
        <xsl:variable name="rowend32">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\row\pard</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="cellend32">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\cell</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestcell</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:RowStyle108">
            <xsl:text>\trrh0\trhdr</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl32" select="$altova:nTableIndentTw_32"/>
            <xsl:text>\clvertalt\clmgf\clvmgf\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl32_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl32 + $altova:nColumnWidthTw_32_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clvmgf\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl32_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col0_AfterColumn + $altova:nColumnWidthTw_32_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clmgf\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl32_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col1_AfterColumn + $altova:nColumnWidthTw_32_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl32_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col2_AfterColumn + $altova:nColumnWidthTw_32_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl32_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col3_AfterColumn + $altova:nColumnWidthTw_32_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col4_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl32_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col4_AfterColumn + $altova:nColumnWidthTw_32_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col5_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl32_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col5_AfterColumn + $altova:nColumnWidthTw_32_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col6_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl32_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col6_AfterColumn + $altova:nColumnWidthTw_32_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col7_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl32_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col7_AfterColumn + $altova:nColumnWidthTw_32_8"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col8_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl32_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col8_AfterColumn + $altova:nColumnWidthTw_32_9"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col9_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl32_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col9_AfterColumn + $altova:nColumnWidthTw_32_10"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col10_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl32_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col10_AfterColumn + $altova:nColumnWidthTw_32_11"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col11_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl32_Col12_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col11_AfterColumn + $altova:nColumnWidthTw_32_12"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col12_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl32_Col13_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col12_AfterColumn + $altova:nColumnWidthTw_32_13"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col13_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle32"/>
            <xsl:value-of select="$altova:RowStyle108"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="@article = &quot;P13&quot; or //kr:ElectionSubcategory[ text() = &quot;EK&quot; ]">
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs1313\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>Lijst</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs1314\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_OverviewDHondtTable5-10_Lijst"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:when>
            <xsl:otherwise>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs1315\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>Lijstencombinatie, lijst</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs1316\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_OverviewDHondtTable5-10_LijstencombinatieLijst"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend32"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend32"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1317\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Gemiddeld aantal stemmen bij toewijzing van restzetels</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1318\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewDHondtTable5-10_Gemiddeld"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend32"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend32"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend32"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend32"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend32"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend32"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend32"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend32"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend32"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend32"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend32"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend32"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle32"/>
        <xsl:value-of select="$altova:RowStyle108"/>
        <xsl:value-of select="$rowend32"/>
        <xsl:variable name="altova:RowStyle109">
            <xsl:text>\trrh0\trhdr</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl32" select="$altova:nTableIndentTw_32"/>
            <xsl:text>\clvertalc\clmgf\clvmrg\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl32_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl32 + $altova:nColumnWidthTw_32_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clvmrg\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl32_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col0_AfterColumn + $altova:nColumnWidthTw_32_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clmgf\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl32_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col1_AfterColumn + $altova:nColumnWidthTw_32_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl32_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col2_AfterColumn + $altova:nColumnWidthTw_32_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clmgf\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl32_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col3_AfterColumn + $altova:nColumnWidthTw_32_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col4_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl32_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col4_AfterColumn + $altova:nColumnWidthTw_32_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col5_AfterColumn)"/>
            <xsl:text>\clvertalc\clmgf\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl32_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col5_AfterColumn + $altova:nColumnWidthTw_32_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col6_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl32_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col6_AfterColumn + $altova:nColumnWidthTw_32_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col7_AfterColumn)"/>
            <xsl:text>\clvertalc\clmgf\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl32_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col7_AfterColumn + $altova:nColumnWidthTw_32_8"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col8_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl32_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col8_AfterColumn + $altova:nColumnWidthTw_32_9"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col9_AfterColumn)"/>
            <xsl:text>\clvertalc\clmgf\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl32_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col9_AfterColumn + $altova:nColumnWidthTw_32_10"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col10_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl32_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col10_AfterColumn + $altova:nColumnWidthTw_32_11"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col11_AfterColumn)"/>
            <xsl:text>\clvertalc\clmgf\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl32_Col12_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col11_AfterColumn + $altova:nColumnWidthTw_32_12"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col12_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl32_Col13_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col12_AfterColumn + $altova:nColumnWidthTw_32_13"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col13_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle32"/>
            <xsl:value-of select="$altova:RowStyle109"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend32"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend32"/>
        <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:DHondtAssignmentLine">
            <xsl:if test="position()  = 1">
                <xsl:for-each select="rg:DHondtFraction">
                    <xsl:if test="@step  = 5">
                        <xsl:for-each select="@step">
                            <xsl:text>{\cs1319\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>+5</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                    </xsl:if>
                </xsl:for-each>
            </xsl:if>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend32"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend32"/>
        <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:DHondtAssignmentLine">
            <xsl:if test="position()  = 1">
                <xsl:for-each select="rg:DHondtFraction">
                    <xsl:if test="@step  = 6">
                        <xsl:for-each select="@step">
                            <xsl:text>{\cs1320\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>+6</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                    </xsl:if>
                </xsl:for-each>
            </xsl:if>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend32"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend32"/>
        <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:DHondtAssignmentLine">
            <xsl:if test="position()  = 1">
                <xsl:for-each select="rg:DHondtFraction">
                    <xsl:if test="@step  = 7">
                        <xsl:for-each select="@step">
                            <xsl:text>{\cs1321\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>+7</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                    </xsl:if>
                </xsl:for-each>
            </xsl:if>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend32"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend32"/>
        <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:DHondtAssignmentLine">
            <xsl:if test="position()  = 1">
                <xsl:for-each select="rg:DHondtFraction">
                    <xsl:if test="@step  = 8">
                        <xsl:for-each select="@step">
                            <xsl:text>{\cs1322\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>+8</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                    </xsl:if>
                </xsl:for-each>
            </xsl:if>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend32"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend32"/>
        <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:DHondtAssignmentLine">
            <xsl:if test="position()  = 1">
                <xsl:for-each select="rg:DHondtFraction">
                    <xsl:if test="@step  = 9">
                        <xsl:for-each select="@step">
                            <xsl:text>{\cs1323\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>+9</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                    </xsl:if>
                </xsl:for-each>
            </xsl:if>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend32"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend32"/>
        <xsl:text>\qc\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:DHondtAssignmentLine">
            <xsl:if test="position()  = 1">
                <xsl:for-each select="rg:DHondtFraction">
                    <xsl:if test="@step  = 10">
                        <xsl:for-each select="@step">
                            <xsl:text>{\cs1324\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>+10</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                    </xsl:if>
                </xsl:for-each>
            </xsl:if>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend32"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend32"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle32"/>
        <xsl:value-of select="$altova:RowStyle109"/>
        <xsl:value-of select="$rowend32"/>
        <xsl:for-each select="rg:DHondtAssignmentLine">
            <xsl:variable name="altova:RowStyle110">
                <xsl:text>\trrh0</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl32" select="$altova:nTableIndentTw_32"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl32_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl32 + $altova:nColumnWidthTw_32_0"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col0_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt100\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl32_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col0_AfterColumn + $altova:nColumnWidthTw_32_1"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col1_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl32_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col1_AfterColumn + $altova:nColumnWidthTw_32_2"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col2_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl32_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col2_AfterColumn + $altova:nColumnWidthTw_32_3"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col3_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl32_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col3_AfterColumn + $altova:nColumnWidthTw_32_4"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col4_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl32_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col4_AfterColumn + $altova:nColumnWidthTw_32_5"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col5_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl32_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col5_AfterColumn + $altova:nColumnWidthTw_32_6"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col6_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl32_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col6_AfterColumn + $altova:nColumnWidthTw_32_7"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col7_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl32_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col7_AfterColumn + $altova:nColumnWidthTw_32_8"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col8_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl32_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col8_AfterColumn + $altova:nColumnWidthTw_32_9"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col9_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl32_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col9_AfterColumn + $altova:nColumnWidthTw_32_10"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col10_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl32_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col10_AfterColumn + $altova:nColumnWidthTw_32_11"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col11_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl32_Col12_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col11_AfterColumn + $altova:nColumnWidthTw_32_12"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col12_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl32_Col13_AfterColumn" select="$altova:CurrGridPos_Tbl32_Col12_AfterColumn + $altova:nColumnWidthTw_32_13"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl32_Col13_AfterColumn)"/>
            </xsl:variable>
            <xsl:if test="$templatetablelevel + 1 = 1">
                <xsl:value-of select="$tablestyle32"/>
                <xsl:value-of select="$altova:RowStyle110"/>
            </xsl:if>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:ListOrCombinedList">
                <xsl:for-each select="@combinationId">
                    <xsl:text>{\cs1325\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
                <xsl:for-each select="@listNumber">
                    <xsl:text>{\cs1326\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend32"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="ListOrCombinedListPart2">
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_32_1 div 1440) - 0.06944 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend32"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:DHondtFraction">
                <xsl:if test="@step = 5">
                    <xsl:call-template name="ElectionFractionPart1">
                        <xsl:with-param name="smaller" select="1"/>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_32_2 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend32"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:DHondtFraction">
                <xsl:if test="@step = 5">
                    <xsl:call-template name="ElectionFractionPart2">
                        <xsl:with-param name="smaller" select="1"/>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_32_3 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend32"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:DHondtFraction">
                <xsl:if test="@step = 6">
                    <xsl:call-template name="ElectionFractionPart1">
                        <xsl:with-param name="smaller" select="1"/>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_32_4 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend32"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:DHondtFraction">
                <xsl:if test="@step = 6">
                    <xsl:call-template name="ElectionFractionPart2">
                        <xsl:with-param name="smaller" select="1"/>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_32_5 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend32"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:DHondtFraction">
                <xsl:if test="@step = 7">
                    <xsl:call-template name="ElectionFractionPart1">
                        <xsl:with-param name="smaller" select="1"/>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_32_6 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend32"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:DHondtFraction">
                <xsl:if test="@step = 7">
                    <xsl:call-template name="ElectionFractionPart2">
                        <xsl:with-param name="smaller" select="1"/>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_32_7 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend32"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:DHondtFraction">
                <xsl:if test="@step = 8">
                    <xsl:call-template name="ElectionFractionPart1">
                        <xsl:with-param name="smaller" select="1"/>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_32_8 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend32"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:DHondtFraction">
                <xsl:if test="@step = 8">
                    <xsl:call-template name="ElectionFractionPart2">
                        <xsl:with-param name="smaller" select="1"/>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_32_9 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend32"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:DHondtFraction">
                <xsl:if test="@step = 9">
                    <xsl:call-template name="ElectionFractionPart1">
                        <xsl:with-param name="smaller" select="1"/>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_32_10 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend32"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:DHondtFraction">
                <xsl:if test="@step = 9">
                    <xsl:call-template name="ElectionFractionPart2">
                        <xsl:with-param name="smaller" select="1"/>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_32_11 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend32"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:DHondtFraction">
                <xsl:if test="@step = 10">
                    <xsl:call-template name="ElectionFractionPart1">
                        <xsl:with-param name="smaller" select="1"/>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_32_12 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend32"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:for-each select="rg:DHondtFraction">
                <xsl:if test="@step = 10">
                    <xsl:call-template name="ElectionFractionPart2">
                        <xsl:with-param name="smaller" select="1"/>
                        <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_32_13 div 1440) - 0.01042 - 0.01042"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:for-each>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend32"/>
            <xsl:if test="$templatetablelevel + 1 > 1">
                <xsl:text>{\*\nesttableprops</xsl:text>
            </xsl:if>
            <xsl:value-of select="$tablestyle32"/>
            <xsl:value-of select="$altova:RowStyle110"/>
            <xsl:value-of select="$rowend32"/>
        </xsl:for-each>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 0"/>
        <xsl:text> </xsl:text>
    </xsl:template>
    <xsl:template name="OverviewCandidateResult1-1-4">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="fromLine" select="1"/>
        <xsl:param name="tillLine" select="80"/>
        <xsl:param name="remainingCandidates"/>
        <xsl:variable name="altova:CurrContextGrid_06B64558" select="."/>
        <xsl:variable name="altova:nTableWidthIn_33" select="$altova:nMaxWidthIn * 1.00000"/>
        <xsl:variable name="altova:nTableWidthTw_33" select="$altova:nTableWidthIn_33 * 1440"/>
        <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_33" select="round($altova:nTableWidthTw_33 * 0.25)"/>
        <xsl:variable name="altova:nTableIndentTw_33" select="0"/>
        <xsl:variable name="altova:nSumColumnWidthsTw_33" select="round(4701.00)"/>
        <xsl:variable name="altova:TableWidthFactor_33">
            <xsl:choose>
                <xsl:when test="$altova:nSumColumnWidthsTw_33 &gt; $altova:nTableWidthTw_33">
                    <xsl:value-of select="($altova:nTableWidthTw_33 - $altova:SumDefaultColumnsForWideTableTw_33) div $altova:nSumColumnWidthsTw_33"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="1"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnsWithDefaultWidth_33" select="round(4)"/>
        <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_33">
            <xsl:choose>
                <xsl:when test="$altova:nColumnsWithDefaultWidth_33 = 0">
                    <xsl:value-of select="round(4)"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="$altova:nColumnsWithDefaultWidth_33"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nDefaultColumnWidthTw_33">
            <xsl:choose>
                <xsl:when test="$altova:TableWidthFactor_33 &lt; 1">
                    <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_33 div $altova:nColumnsWithDefaultWidthNotZero_33"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="round(($altova:nTableWidthTw_33 - $altova:nSumColumnWidthsTw_33) div $altova:nColumnsWithDefaultWidthNotZero_33)"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnWidthTw_33_0" select="round(0.35 * 1440 * $altova:TableWidthFactor_33)"/>
        <xsl:variable name="altova:nColumnWidthTw_33_1" select="round(2.92 * 1440 * $altova:TableWidthFactor_33)"/>
        <xsl:variable name="altova:nColumnWidthTw_33_2" select="$altova:nDefaultColumnWidthTw_33"/>
        <xsl:variable name="altova:nColumnWidthTw_33_3" select="$altova:nDefaultColumnWidthTw_33"/>
        <xsl:variable name="altova:nColumnWidthTw_33_4" select="$altova:nDefaultColumnWidthTw_33"/>
        <xsl:variable name="altova:nColumnWidthTw_33_5" select="$altova:nDefaultColumnWidthTw_33"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:variable name="tablestyle33">
            <xsl:text>\trowd\trleft</xsl:text>
            <xsl:value-of select="$altova:nTableIndentTw_33"/>
            <xsl:text>\ts1327\ts1328\ts1329\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
        </xsl:variable>
        <xsl:variable name="rowend33">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\row\pard</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="cellend33">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\cell</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestcell</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:RowStyle111">
            <xsl:text>\trrh0\trhdr</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl33" select="$altova:nTableIndentTw_33"/>
            <xsl:text>\clvertalc\clmgf\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl33_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl33 + $altova:nColumnWidthTw_33_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl33_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl33_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl33_Col0_AfterColumn + $altova:nColumnWidthTw_33_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl33_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clmgf\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl33_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl33_Col1_AfterColumn + $altova:nColumnWidthTw_33_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl33_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl33_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl33_Col2_AfterColumn + $altova:nColumnWidthTw_33_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl33_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl33_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl33_Col3_AfterColumn + $altova:nColumnWidthTw_33_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl33_Col4_AfterColumn)"/>
            <xsl:text>\clvertalb\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl33_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl33_Col4_AfterColumn + $altova:nColumnWidthTw_33_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl33_Col5_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle33"/>
            <xsl:value-of select="$altova:RowStyle111"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1330\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Volgnummer     Kandidaten</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1331\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateResult1-1-4_VolgnummerKandidaten"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend33"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend33"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:if test="count ( rg:Type[ text() = &quot;op zichzelf staande lijst&quot; ] ) = 0">
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs1332\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Aantal stemmen per kieskring</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs1333\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewCandidateResult1-1-4_AantalStemmen"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:if>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend33"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend33"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend33"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1334\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Totaal</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1335\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateResult1-1-4_Totaal"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend33"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle33"/>
        <xsl:value-of select="$altova:RowStyle111"/>
        <xsl:value-of select="$rowend33"/>
        <xsl:variable name="altova:RowStyle112">
            <xsl:text>\trrh0\trhdr</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl33" select="$altova:nTableIndentTw_33"/>
            <xsl:text>\clvertalt\clmgf\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl33_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl33 + $altova:nColumnWidthTw_33_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl33_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl33_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl33_Col0_AfterColumn + $altova:nColumnWidthTw_33_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl33_Col1_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl33_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl33_Col1_AfterColumn + $altova:nColumnWidthTw_33_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl33_Col2_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl33_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl33_Col2_AfterColumn + $altova:nColumnWidthTw_33_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl33_Col3_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl33_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl33_Col3_AfterColumn + $altova:nColumnWidthTw_33_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl33_Col4_AfterColumn)"/>
            <xsl:text>\clvertalb\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl33_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl33_Col4_AfterColumn + $altova:nColumnWidthTw_33_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl33_Col5_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle33"/>
            <xsl:value-of select="$altova:RowStyle112"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1336\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>op de lijst</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1337\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateResult1-1-4_opDeLijst"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend33"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend33"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="position" select="1"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_33_2 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend33"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="position" select="2"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_33_3 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend33"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="position" select="3"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_33_4 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend33"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1338\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>aantal</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1339\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateResult1-1-4_aantal"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1340\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>stemmen</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1341\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateResult1-1-4_stemmen"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend33"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle33"/>
        <xsl:value-of select="$altova:RowStyle112"/>
        <xsl:value-of select="$rowend33"/>
        <xsl:for-each select="rg:CandidateAndResult[position()&gt;=$fromLine and position()&lt;=$tillLine]">
            <xsl:variable name="altova:RowStyle113">
                <xsl:text>\trrh0</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl33" select="$altova:nTableIndentTw_33"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl33_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl33 + $altova:nColumnWidthTw_33_0"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl33_Col0_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt100\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl33_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl33_Col0_AfterColumn + $altova:nColumnWidthTw_33_1"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl33_Col1_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl33_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl33_Col1_AfterColumn + $altova:nColumnWidthTw_33_2"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl33_Col2_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl33_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl33_Col2_AfterColumn + $altova:nColumnWidthTw_33_3"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl33_Col3_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl33_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl33_Col3_AfterColumn + $altova:nColumnWidthTw_33_4"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl33_Col4_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl33_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl33_Col4_AfterColumn + $altova:nColumnWidthTw_33_5"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl33_Col5_AfterColumn)"/>
            </xsl:variable>
            <xsl:if test="$templatetablelevel + 1 = 1">
                <xsl:value-of select="$tablestyle33"/>
                <xsl:value-of select="$altova:RowStyle113"/>
            </xsl:if>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="CandidateId">
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_33_0 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend33"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="CandidateInTable">
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_33_1 div 1440) - 0.06944 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend33"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="position" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_33_2 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend33"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="position" select="2"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_33_3 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend33"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="position" select="3"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_33_4 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend33"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="position" select="4"/>
                <xsl:with-param name="alle" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_33_5 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend33"/>
            <xsl:if test="$templatetablelevel + 1 > 1">
                <xsl:text>{\*\nesttableprops</xsl:text>
            </xsl:if>
            <xsl:value-of select="$tablestyle33"/>
            <xsl:value-of select="$altova:RowStyle113"/>
            <xsl:value-of select="$rowend33"/>
        </xsl:for-each>
        <xsl:for-each select="rg:VotesInElectoralDistrictPart[position()=1 and $remainingCandidates &lt; 1]">
            <xsl:variable name="altova:RowStyle114">
                <xsl:text>\trrh0</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl33" select="$altova:nTableIndentTw_33"/>
                <xsl:text>\clvertalc\clmgf\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl33_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl33 + $altova:nColumnWidthTw_33_0"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl33_Col0_AfterColumn)"/>
                <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl33_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl33_Col0_AfterColumn + $altova:nColumnWidthTw_33_1"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl33_Col1_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl33_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl33_Col1_AfterColumn + $altova:nColumnWidthTw_33_2"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl33_Col2_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl33_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl33_Col2_AfterColumn + $altova:nColumnWidthTw_33_3"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl33_Col3_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl33_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl33_Col3_AfterColumn + $altova:nColumnWidthTw_33_4"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl33_Col4_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl33_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl33_Col4_AfterColumn + $altova:nColumnWidthTw_33_5"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl33_Col5_AfterColumn)"/>
            </xsl:variable>
            <xsl:if test="$templatetablelevel + 1 = 1">
                <xsl:value-of select="$tablestyle33"/>
                <xsl:value-of select="$altova:RowStyle114"/>
            </xsl:if>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs1342\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Totaal</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs1343\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewCandidateResult1-1-4_Totaal2"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend33"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend33"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_33_2 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend33"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="2"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_33_3 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend33"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="3"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_33_4 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend33"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="4"/>
                <xsl:with-param name="alle" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_33_5 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend33"/>
            <xsl:if test="$templatetablelevel + 1 > 1">
                <xsl:text>{\*\nesttableprops</xsl:text>
            </xsl:if>
            <xsl:value-of select="$tablestyle33"/>
            <xsl:value-of select="$altova:RowStyle114"/>
            <xsl:value-of select="$rowend33"/>
        </xsl:for-each>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 0"/>
        <xsl:text> </xsl:text>
    </xsl:template>
    <xsl:template name="OverviewCandidateResult1-1-7">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="fromLine" select="1"/>
        <xsl:param name="tillLine" select="80"/>
        <xsl:param name="remainingCandidates"/>
        <xsl:param name="hasSecondPage" select="false()"/>
        <xsl:variable name="altova:CurrContextGrid_06B7D438" select="."/>
        <xsl:variable name="altova:nTableWidthIn_34" select="$altova:nMaxWidthIn * 1.00000"/>
        <xsl:variable name="altova:nTableWidthTw_34" select="$altova:nTableWidthIn_34 * 1440"/>
        <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_34" select="round($altova:nTableWidthTw_34 * 0.25)"/>
        <xsl:variable name="altova:nTableIndentTw_34" select="0"/>
        <xsl:variable name="altova:nSumColumnWidthsTw_34" select="round(4201.00)"/>
        <xsl:variable name="altova:TableWidthFactor_34">
            <xsl:choose>
                <xsl:when test="$altova:nSumColumnWidthsTw_34 &gt; $altova:nTableWidthTw_34">
                    <xsl:value-of select="($altova:nTableWidthTw_34 - $altova:SumDefaultColumnsForWideTableTw_34) div $altova:nSumColumnWidthsTw_34"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="1"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnsWithDefaultWidth_34" select="round(7)"/>
        <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_34">
            <xsl:choose>
                <xsl:when test="$altova:nColumnsWithDefaultWidth_34 = 0">
                    <xsl:value-of select="round(7)"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="$altova:nColumnsWithDefaultWidth_34"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nDefaultColumnWidthTw_34">
            <xsl:choose>
                <xsl:when test="$altova:TableWidthFactor_34 &lt; 1">
                    <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_34 div $altova:nColumnsWithDefaultWidthNotZero_34"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="round(($altova:nTableWidthTw_34 - $altova:nSumColumnWidthsTw_34) div $altova:nColumnsWithDefaultWidthNotZero_34)"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnWidthTw_34_0" select="round(0.35 * 1440 * $altova:TableWidthFactor_34)"/>
        <xsl:variable name="altova:nColumnWidthTw_34_1" select="round(2.57 * 1440 * $altova:TableWidthFactor_34)"/>
        <xsl:variable name="altova:nColumnWidthTw_34_2" select="$altova:nDefaultColumnWidthTw_34"/>
        <xsl:variable name="altova:nColumnWidthTw_34_3" select="$altova:nDefaultColumnWidthTw_34"/>
        <xsl:variable name="altova:nColumnWidthTw_34_4" select="$altova:nDefaultColumnWidthTw_34"/>
        <xsl:variable name="altova:nColumnWidthTw_34_5" select="$altova:nDefaultColumnWidthTw_34"/>
        <xsl:variable name="altova:nColumnWidthTw_34_6" select="$altova:nDefaultColumnWidthTw_34"/>
        <xsl:variable name="altova:nColumnWidthTw_34_7" select="$altova:nDefaultColumnWidthTw_34"/>
        <xsl:variable name="altova:nColumnWidthTw_34_8" select="$altova:nDefaultColumnWidthTw_34"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:variable name="tablestyle34">
            <xsl:text>\trowd\trleft</xsl:text>
            <xsl:value-of select="$altova:nTableIndentTw_34"/>
            <xsl:text>\ts1344\ts1345\ts1346\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
        </xsl:variable>
        <xsl:variable name="rowend34">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\row\pard</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="cellend34">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\cell</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestcell</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:RowStyle115">
            <xsl:text>\trrh0\trhdr</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl34" select="$altova:nTableIndentTw_34"/>
            <xsl:text>\clvertalc\clmgf\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl34_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl34 + $altova:nColumnWidthTw_34_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl34_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl34_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl34_Col0_AfterColumn + $altova:nColumnWidthTw_34_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl34_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clmgf\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl34_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl34_Col1_AfterColumn + $altova:nColumnWidthTw_34_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl34_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl34_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl34_Col2_AfterColumn + $altova:nColumnWidthTw_34_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl34_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl34_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl34_Col3_AfterColumn + $altova:nColumnWidthTw_34_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl34_Col4_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl34_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl34_Col4_AfterColumn + $altova:nColumnWidthTw_34_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl34_Col5_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl34_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl34_Col5_AfterColumn + $altova:nColumnWidthTw_34_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl34_Col6_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl34_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl34_Col6_AfterColumn + $altova:nColumnWidthTw_34_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl34_Col7_AfterColumn)"/>
            <xsl:text>\clvertalb\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl34_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl34_Col7_AfterColumn + $altova:nColumnWidthTw_34_8"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl34_Col8_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle34"/>
            <xsl:value-of select="$altova:RowStyle115"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$hasSecondPage">
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs1347\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>Volgnummer     Kandidaten</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs1348\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_OverviewCandidateResult1-1-7_VolgnummerKandidaten"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:text>\par </xsl:text>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs1349\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>op de lijst</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs1350\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_OverviewCandidateResult1-1-7_opDeLijst"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:when>
            <xsl:otherwise>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs1351\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>Volgnummer     Kandidaten</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs1352\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_OverviewCandidateResult1-1-7_VolgnummerKandidaten"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend34"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend34"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:if test="count ( rg:Type[ text() = &quot;op zichzelf staande lijst&quot; ] ) = 0">
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs1353\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Aantal stemmen per kieskring</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs1354\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewCandidateResult1-1-7_AantalStemmen"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:if>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend34"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend34"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend34"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend34"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend34"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend34"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumberTop">
            <xsl:with-param name="position" select="7"/>
            <xsl:with-param name="alle" select="1"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_34_8 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend34"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle34"/>
        <xsl:value-of select="$altova:RowStyle115"/>
        <xsl:value-of select="$rowend34"/>
        <xsl:variable name="altova:RowStyle116">
            <xsl:text>\trrh0\trhdr</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl34" select="$altova:nTableIndentTw_34"/>
            <xsl:text>\clvertalt\clmgf\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl34_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl34 + $altova:nColumnWidthTw_34_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl34_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl34_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl34_Col0_AfterColumn + $altova:nColumnWidthTw_34_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl34_Col1_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl34_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl34_Col1_AfterColumn + $altova:nColumnWidthTw_34_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl34_Col2_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl34_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl34_Col2_AfterColumn + $altova:nColumnWidthTw_34_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl34_Col3_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl34_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl34_Col3_AfterColumn + $altova:nColumnWidthTw_34_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl34_Col4_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl34_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl34_Col4_AfterColumn + $altova:nColumnWidthTw_34_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl34_Col5_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl34_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl34_Col5_AfterColumn + $altova:nColumnWidthTw_34_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl34_Col6_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl34_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl34_Col6_AfterColumn + $altova:nColumnWidthTw_34_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl34_Col7_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl34_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl34_Col7_AfterColumn + $altova:nColumnWidthTw_34_8"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl34_Col8_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle34"/>
            <xsl:value-of select="$altova:RowStyle116"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:if test="not($hasSecondPage)">
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs1355\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>op de lijst</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs1356\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewCandidateResult1-1-7_opDeLijst"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:if>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend34"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend34"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="position" select="1"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_34_2 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend34"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="position" select="2"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_34_3 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend34"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="position" select="3"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_34_4 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend34"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="position" select="4"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_34_5 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend34"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="position" select="5"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_34_6 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend34"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="position" select="6"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_34_7 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend34"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumberBottom">
            <xsl:with-param name="position" select="7"/>
            <xsl:with-param name="alle" select="1"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_34_8 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend34"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle34"/>
        <xsl:value-of select="$altova:RowStyle116"/>
        <xsl:value-of select="$rowend34"/>
        <xsl:for-each select="rg:CandidateAndResult[position()&gt;=$fromLine and position()&lt;=$tillLine]">
            <xsl:variable name="altova:RowStyle117">
                <xsl:text>\trrh0</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl34" select="$altova:nTableIndentTw_34"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl34_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl34 + $altova:nColumnWidthTw_34_0"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl34_Col0_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt100\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl34_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl34_Col0_AfterColumn + $altova:nColumnWidthTw_34_1"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl34_Col1_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl34_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl34_Col1_AfterColumn + $altova:nColumnWidthTw_34_2"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl34_Col2_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl34_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl34_Col2_AfterColumn + $altova:nColumnWidthTw_34_3"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl34_Col3_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl34_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl34_Col3_AfterColumn + $altova:nColumnWidthTw_34_4"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl34_Col4_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl34_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl34_Col4_AfterColumn + $altova:nColumnWidthTw_34_5"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl34_Col5_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl34_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl34_Col5_AfterColumn + $altova:nColumnWidthTw_34_6"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl34_Col6_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl34_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl34_Col6_AfterColumn + $altova:nColumnWidthTw_34_7"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl34_Col7_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl34_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl34_Col7_AfterColumn + $altova:nColumnWidthTw_34_8"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl34_Col8_AfterColumn)"/>
            </xsl:variable>
            <xsl:if test="$templatetablelevel + 1 = 1">
                <xsl:value-of select="$tablestyle34"/>
                <xsl:value-of select="$altova:RowStyle117"/>
            </xsl:if>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="CandidateId">
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_34_0 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend34"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="CandidateInTable">
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_34_1 div 1440) - 0.06944 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend34"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="position" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_34_2 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend34"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="position" select="2"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_34_3 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend34"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="position" select="3"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_34_4 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend34"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="position" select="4"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_34_5 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend34"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="position" select="5"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_34_6 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend34"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="position" select="6"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_34_7 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend34"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="position" select="7"/>
                <xsl:with-param name="alle" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_34_8 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend34"/>
            <xsl:if test="$templatetablelevel + 1 > 1">
                <xsl:text>{\*\nesttableprops</xsl:text>
            </xsl:if>
            <xsl:value-of select="$tablestyle34"/>
            <xsl:value-of select="$altova:RowStyle117"/>
            <xsl:value-of select="$rowend34"/>
        </xsl:for-each>
        <xsl:for-each select="rg:VotesInElectoralDistrictPart[position()=1 and $remainingCandidates &lt; 1]">
            <xsl:variable name="altova:RowStyle118">
                <xsl:text>\trrh0</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl34" select="$altova:nTableIndentTw_34"/>
                <xsl:text>\clvertalc\clmgf\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl34_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl34 + $altova:nColumnWidthTw_34_0"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl34_Col0_AfterColumn)"/>
                <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl34_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl34_Col0_AfterColumn + $altova:nColumnWidthTw_34_1"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl34_Col1_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl34_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl34_Col1_AfterColumn + $altova:nColumnWidthTw_34_2"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl34_Col2_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl34_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl34_Col2_AfterColumn + $altova:nColumnWidthTw_34_3"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl34_Col3_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl34_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl34_Col3_AfterColumn + $altova:nColumnWidthTw_34_4"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl34_Col4_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl34_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl34_Col4_AfterColumn + $altova:nColumnWidthTw_34_5"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl34_Col5_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl34_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl34_Col5_AfterColumn + $altova:nColumnWidthTw_34_6"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl34_Col6_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl34_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl34_Col6_AfterColumn + $altova:nColumnWidthTw_34_7"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl34_Col7_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl34_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl34_Col7_AfterColumn + $altova:nColumnWidthTw_34_8"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl34_Col8_AfterColumn)"/>
            </xsl:variable>
            <xsl:if test="$templatetablelevel + 1 = 1">
                <xsl:value-of select="$tablestyle34"/>
                <xsl:value-of select="$altova:RowStyle118"/>
            </xsl:if>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs1357\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Totaal</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs1358\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewCandidateResult1-1-7_Totaal2"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend34"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend34"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_34_2 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend34"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="2"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_34_3 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend34"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="3"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_34_4 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend34"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="4"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_34_5 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend34"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="5"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_34_6 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend34"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="6"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_34_7 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend34"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="7"/>
                <xsl:with-param name="alle" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_34_8 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend34"/>
            <xsl:if test="$templatetablelevel + 1 > 1">
                <xsl:text>{\*\nesttableprops</xsl:text>
            </xsl:if>
            <xsl:value-of select="$tablestyle34"/>
            <xsl:value-of select="$altova:RowStyle118"/>
            <xsl:value-of select="$rowend34"/>
        </xsl:for-each>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 0"/>
        <xsl:text> </xsl:text>
    </xsl:template>
    <xsl:template name="OverviewCandidateResult1-8-20">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="fromLine" select="1"/>
        <xsl:param name="tillLine" select="80"/>
        <xsl:param name="remainingCandidates"/>
        <xsl:variable name="altova:CurrContextGrid_06B7E818" select="."/>
        <xsl:variable name="altova:nTableWidthIn_35" select="$altova:nMaxWidthIn * 1.00000"/>
        <xsl:variable name="altova:nTableWidthTw_35" select="$altova:nTableWidthIn_35 * 1440"/>
        <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_35" select="round($altova:nTableWidthTw_35 * 0.25)"/>
        <xsl:variable name="altova:nTableIndentTw_35" select="0"/>
        <xsl:variable name="altova:nSumColumnWidthsTw_35" select="round(1381.00)"/>
        <xsl:variable name="altova:TableWidthFactor_35">
            <xsl:choose>
                <xsl:when test="$altova:nSumColumnWidthsTw_35 &gt; $altova:nTableWidthTw_35">
                    <xsl:value-of select="($altova:nTableWidthTw_35 - $altova:SumDefaultColumnsForWideTableTw_35) div $altova:nSumColumnWidthsTw_35"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="1"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnsWithDefaultWidth_35" select="round(13)"/>
        <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_35">
            <xsl:choose>
                <xsl:when test="$altova:nColumnsWithDefaultWidth_35 = 0">
                    <xsl:value-of select="round(13)"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="$altova:nColumnsWithDefaultWidth_35"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nDefaultColumnWidthTw_35">
            <xsl:choose>
                <xsl:when test="$altova:TableWidthFactor_35 &lt; 1">
                    <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_35 div $altova:nColumnsWithDefaultWidthNotZero_35"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="round(($altova:nTableWidthTw_35 - $altova:nSumColumnWidthsTw_35) div $altova:nColumnsWithDefaultWidthNotZero_35)"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnWidthTw_35_0" select="round(0.36 * 1440 * $altova:TableWidthFactor_35)"/>
        <xsl:variable name="altova:nColumnWidthTw_35_1" select="$altova:nDefaultColumnWidthTw_35"/>
        <xsl:variable name="altova:nColumnWidthTw_35_2" select="$altova:nDefaultColumnWidthTw_35"/>
        <xsl:variable name="altova:nColumnWidthTw_35_3" select="$altova:nDefaultColumnWidthTw_35"/>
        <xsl:variable name="altova:nColumnWidthTw_35_4" select="$altova:nDefaultColumnWidthTw_35"/>
        <xsl:variable name="altova:nColumnWidthTw_35_5" select="$altova:nDefaultColumnWidthTw_35"/>
        <xsl:variable name="altova:nColumnWidthTw_35_6" select="$altova:nDefaultColumnWidthTw_35"/>
        <xsl:variable name="altova:nColumnWidthTw_35_7" select="$altova:nDefaultColumnWidthTw_35"/>
        <xsl:variable name="altova:nColumnWidthTw_35_8" select="$altova:nDefaultColumnWidthTw_35"/>
        <xsl:variable name="altova:nColumnWidthTw_35_9" select="$altova:nDefaultColumnWidthTw_35"/>
        <xsl:variable name="altova:nColumnWidthTw_35_10" select="$altova:nDefaultColumnWidthTw_35"/>
        <xsl:variable name="altova:nColumnWidthTw_35_11" select="$altova:nDefaultColumnWidthTw_35"/>
        <xsl:variable name="altova:nColumnWidthTw_35_12" select="$altova:nDefaultColumnWidthTw_35"/>
        <xsl:variable name="altova:nColumnWidthTw_35_13" select="$altova:nDefaultColumnWidthTw_35"/>
        <xsl:variable name="altova:nColumnWidthTw_35_14" select="round(0.60 * 1440 * $altova:TableWidthFactor_35)"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:variable name="tablestyle35">
            <xsl:text>\trowd\trleft</xsl:text>
            <xsl:value-of select="$altova:nTableIndentTw_35"/>
            <xsl:text>\ts1359\ts1360\ts1361\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
        </xsl:variable>
        <xsl:variable name="rowend35">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\row\pard</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="cellend35">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\cell</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestcell</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:RowStyle119">
            <xsl:text>\trrh0\trhdr</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl35" select="$altova:nTableIndentTw_35"/>
            <xsl:text>\clvertalc\clmgf\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl35_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl35 + $altova:nColumnWidthTw_35_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl35_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col0_AfterColumn + $altova:nColumnWidthTw_35_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clmgf\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl35_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col1_AfterColumn + $altova:nColumnWidthTw_35_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl35_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col2_AfterColumn + $altova:nColumnWidthTw_35_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl35_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col3_AfterColumn + $altova:nColumnWidthTw_35_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col4_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl35_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col4_AfterColumn + $altova:nColumnWidthTw_35_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col5_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl35_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col5_AfterColumn + $altova:nColumnWidthTw_35_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col6_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl35_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col6_AfterColumn + $altova:nColumnWidthTw_35_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col7_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl35_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col7_AfterColumn + $altova:nColumnWidthTw_35_8"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col8_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl35_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col8_AfterColumn + $altova:nColumnWidthTw_35_9"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col9_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl35_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col9_AfterColumn + $altova:nColumnWidthTw_35_10"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col10_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl35_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col10_AfterColumn + $altova:nColumnWidthTw_35_11"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col11_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl35_Col12_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col11_AfterColumn + $altova:nColumnWidthTw_35_12"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col12_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl35_Col13_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col12_AfterColumn + $altova:nColumnWidthTw_35_13"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col13_AfterColumn)"/>
            <xsl:text>\clvertalb\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl35_Col14_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col13_AfterColumn + $altova:nColumnWidthTw_35_14"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col14_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle35"/>
            <xsl:value-of select="$altova:RowStyle119"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1362\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Volgnummer</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1363\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateResult1-8-20_Volgnummer"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1364\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>op de lijst</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1365\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateResult1-8-20_opDeLijst"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend35"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend35"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:if test="count ( rg:Type[ text() = &quot;op zichzelf staande lijst&quot; ] ) = 0 and count(rg:CandidateAndResult[position() = 1]/rg:VotesInElectoralDistrictPart[position() = 2]/rg:VotesInElectoralDistrict) &gt; 1">
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs1366\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Aantal stemmen per kieskring</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs1367\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewCandidateResult1-8-20_AantalStemmen"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:if>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend35"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend35"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend35"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend35"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend35"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend35"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend35"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend35"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend35"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend35"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend35"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend35"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumberTop">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="14"/>
            <xsl:with-param name="alle" select="1"/>
            <xsl:with-param name="aantal" select="1"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_14 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend35"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle35"/>
        <xsl:value-of select="$altova:RowStyle119"/>
        <xsl:value-of select="$rowend35"/>
        <xsl:variable name="altova:RowStyle120">
            <xsl:text>\trrh0\trhdr</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl35" select="$altova:nTableIndentTw_35"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl35_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl35 + $altova:nColumnWidthTw_35_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col0_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl35_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col0_AfterColumn + $altova:nColumnWidthTw_35_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col1_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl35_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col1_AfterColumn + $altova:nColumnWidthTw_35_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col2_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl35_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col2_AfterColumn + $altova:nColumnWidthTw_35_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col3_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl35_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col3_AfterColumn + $altova:nColumnWidthTw_35_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col4_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl35_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col4_AfterColumn + $altova:nColumnWidthTw_35_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col5_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl35_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col5_AfterColumn + $altova:nColumnWidthTw_35_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col6_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl35_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col6_AfterColumn + $altova:nColumnWidthTw_35_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col7_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl35_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col7_AfterColumn + $altova:nColumnWidthTw_35_8"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col8_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl35_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col8_AfterColumn + $altova:nColumnWidthTw_35_9"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col9_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl35_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col9_AfterColumn + $altova:nColumnWidthTw_35_10"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col10_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl35_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col10_AfterColumn + $altova:nColumnWidthTw_35_11"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col11_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl35_Col12_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col11_AfterColumn + $altova:nColumnWidthTw_35_12"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col12_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl35_Col13_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col12_AfterColumn + $altova:nColumnWidthTw_35_13"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col13_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl35_Col14_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col13_AfterColumn + $altova:nColumnWidthTw_35_14"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col14_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle35"/>
            <xsl:value-of select="$altova:RowStyle120"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>{\cs1368\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text> </xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend35"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="1"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_1 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend35"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="2"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_2 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend35"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="3"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_3 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend35"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="4"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_4 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend35"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="5"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_5 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend35"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="6"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_6 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend35"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="7"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_7 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend35"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="8"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_8 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend35"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="9"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_9 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend35"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="10"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_10 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend35"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="11"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_11 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend35"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="12"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_12 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend35"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="13"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_13 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend35"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumberBottom">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="14"/>
            <xsl:with-param name="alle" select="1"/>
            <xsl:with-param name="aantal" select="0"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_14 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend35"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle35"/>
        <xsl:value-of select="$altova:RowStyle120"/>
        <xsl:value-of select="$rowend35"/>
        <xsl:for-each select="rg:CandidateAndResult[position()&gt;=$fromLine and position()&lt;=$tillLine]">
            <xsl:variable name="altova:RowStyle121">
                <xsl:text>\trrh0</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl35" select="$altova:nTableIndentTw_35"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl35_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl35 + $altova:nColumnWidthTw_35_0"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col0_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl35_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col0_AfterColumn + $altova:nColumnWidthTw_35_1"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col1_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl35_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col1_AfterColumn + $altova:nColumnWidthTw_35_2"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col2_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl35_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col2_AfterColumn + $altova:nColumnWidthTw_35_3"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col3_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl35_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col3_AfterColumn + $altova:nColumnWidthTw_35_4"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col4_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl35_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col4_AfterColumn + $altova:nColumnWidthTw_35_5"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col5_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl35_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col5_AfterColumn + $altova:nColumnWidthTw_35_6"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col6_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl35_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col6_AfterColumn + $altova:nColumnWidthTw_35_7"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col7_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl35_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col7_AfterColumn + $altova:nColumnWidthTw_35_8"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col8_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl35_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col8_AfterColumn + $altova:nColumnWidthTw_35_9"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col9_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl35_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col9_AfterColumn + $altova:nColumnWidthTw_35_10"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col10_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl35_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col10_AfterColumn + $altova:nColumnWidthTw_35_11"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col11_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl35_Col12_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col11_AfterColumn + $altova:nColumnWidthTw_35_12"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col12_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl35_Col13_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col12_AfterColumn + $altova:nColumnWidthTw_35_13"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col13_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl35_Col14_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col13_AfterColumn + $altova:nColumnWidthTw_35_14"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col14_AfterColumn)"/>
            </xsl:variable>
            <xsl:if test="$templatetablelevel + 1 = 1">
                <xsl:value-of select="$tablestyle35"/>
                <xsl:value-of select="$altova:RowStyle121"/>
            </xsl:if>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="CandidateId">
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_0 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend35"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="part" select="2"/>
                <xsl:with-param name="position" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_1 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend35"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="part" select="2"/>
                <xsl:with-param name="position" select="2"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_2 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend35"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="part" select="2"/>
                <xsl:with-param name="position" select="3"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_3 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend35"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="part" select="2"/>
                <xsl:with-param name="position" select="4"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_4 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend35"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="part" select="2"/>
                <xsl:with-param name="position" select="5"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_5 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend35"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="part" select="2"/>
                <xsl:with-param name="position" select="6"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_6 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend35"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="part" select="2"/>
                <xsl:with-param name="position" select="7"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_7 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend35"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="part" select="2"/>
                <xsl:with-param name="position" select="8"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_8 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend35"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="part" select="2"/>
                <xsl:with-param name="position" select="9"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_9 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend35"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="part" select="2"/>
                <xsl:with-param name="position" select="10"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_10 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend35"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="part" select="2"/>
                <xsl:with-param name="position" select="11"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_11 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend35"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="part" select="2"/>
                <xsl:with-param name="position" select="12"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_12 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend35"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="part" select="2"/>
                <xsl:with-param name="position" select="13"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_13 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend35"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="part" select="2"/>
                <xsl:with-param name="position" select="14"/>
                <xsl:with-param name="alle" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_14 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend35"/>
            <xsl:if test="$templatetablelevel + 1 > 1">
                <xsl:text>{\*\nesttableprops</xsl:text>
            </xsl:if>
            <xsl:value-of select="$tablestyle35"/>
            <xsl:value-of select="$altova:RowStyle121"/>
            <xsl:value-of select="$rowend35"/>
        </xsl:for-each>
        <xsl:for-each select="rg:VotesInElectoralDistrictPart[position()=2 and $remainingCandidates &lt; 1]">
            <xsl:variable name="altova:RowStyle122">
                <xsl:text>\trrh0</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl35" select="$altova:nTableIndentTw_35"/>
                <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl35_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl35 + $altova:nColumnWidthTw_35_0"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col0_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl35_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col0_AfterColumn + $altova:nColumnWidthTw_35_1"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col1_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl35_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col1_AfterColumn + $altova:nColumnWidthTw_35_2"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col2_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl35_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col2_AfterColumn + $altova:nColumnWidthTw_35_3"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col3_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl35_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col3_AfterColumn + $altova:nColumnWidthTw_35_4"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col4_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl35_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col4_AfterColumn + $altova:nColumnWidthTw_35_5"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col5_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl35_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col5_AfterColumn + $altova:nColumnWidthTw_35_6"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col6_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl35_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col6_AfterColumn + $altova:nColumnWidthTw_35_7"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col7_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl35_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col7_AfterColumn + $altova:nColumnWidthTw_35_8"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col8_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl35_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col8_AfterColumn + $altova:nColumnWidthTw_35_9"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col9_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl35_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col9_AfterColumn + $altova:nColumnWidthTw_35_10"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col10_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl35_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col10_AfterColumn + $altova:nColumnWidthTw_35_11"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col11_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl35_Col12_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col11_AfterColumn + $altova:nColumnWidthTw_35_12"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col12_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl35_Col13_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col12_AfterColumn + $altova:nColumnWidthTw_35_13"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col13_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl35_Col14_AfterColumn" select="$altova:CurrGridPos_Tbl35_Col13_AfterColumn + $altova:nColumnWidthTw_35_14"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl35_Col14_AfterColumn)"/>
            </xsl:variable>
            <xsl:if test="$templatetablelevel + 1 = 1">
                <xsl:value-of select="$tablestyle35"/>
                <xsl:value-of select="$altova:RowStyle122"/>
            </xsl:if>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs1369\f1\fs16 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Totaal</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs1370\f1\fs16 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewCandidateResult1-8-20_Totaal2"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend35"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_1 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend35"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="2"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_2 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend35"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="3"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_3 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend35"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="4"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_4 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend35"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="5"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_5 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend35"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="6"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_6 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend35"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="7"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_7 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend35"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="8"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_8 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend35"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="9"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_9 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend35"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="10"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_10 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend35"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="11"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_11 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend35"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="12"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_12 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend35"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="13"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_13 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend35"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="14"/>
                <xsl:with-param name="alle" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_35_14 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend35"/>
            <xsl:if test="$templatetablelevel + 1 > 1">
                <xsl:text>{\*\nesttableprops</xsl:text>
            </xsl:if>
            <xsl:value-of select="$tablestyle35"/>
            <xsl:value-of select="$altova:RowStyle122"/>
            <xsl:value-of select="$rowend35"/>
        </xsl:for-each>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 0"/>
        <xsl:text> </xsl:text>
    </xsl:template>
    <xsl:template name="OverviewCandidateResult-EK-1-2">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="fromLine" select="1"/>
        <xsl:param name="tillLine" select="80"/>
        <xsl:param name="remainingCandidates"/>
        <xsl:variable name="altova:CurrContextGrid_06B806D8" select="."/>
        <xsl:variable name="altova:nTableWidthIn_36" select="$altova:nMaxWidthIn * 1.00000"/>
        <xsl:variable name="altova:nTableWidthTw_36" select="$altova:nTableWidthIn_36 * 1440"/>
        <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_36" select="round($altova:nTableWidthTw_36 * 0.25)"/>
        <xsl:variable name="altova:nTableIndentTw_36" select="0"/>
        <xsl:variable name="altova:nSumColumnWidthsTw_36" select="round(4301.50)"/>
        <xsl:variable name="altova:TableWidthFactor_36">
            <xsl:choose>
                <xsl:when test="$altova:nSumColumnWidthsTw_36 &gt; $altova:nTableWidthTw_36">
                    <xsl:value-of select="($altova:nTableWidthTw_36 - $altova:SumDefaultColumnsForWideTableTw_36) div $altova:nSumColumnWidthsTw_36"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="1"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnsWithDefaultWidth_36" select="round(5)"/>
        <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_36">
            <xsl:choose>
                <xsl:when test="$altova:nColumnsWithDefaultWidth_36 = 0">
                    <xsl:value-of select="round(5)"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="$altova:nColumnsWithDefaultWidth_36"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nDefaultColumnWidthTw_36">
            <xsl:choose>
                <xsl:when test="$altova:TableWidthFactor_36 &lt; 1">
                    <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_36 div $altova:nColumnsWithDefaultWidthNotZero_36"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="round(($altova:nTableWidthTw_36 - $altova:nSumColumnWidthsTw_36) div $altova:nColumnsWithDefaultWidthNotZero_36)"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnWidthTw_36_0" select="round(0.21 * 1440 * $altova:TableWidthFactor_36)"/>
        <xsl:variable name="altova:nColumnWidthTw_36_1" select="round(0.63 * 1440 * $altova:TableWidthFactor_36)"/>
        <xsl:variable name="altova:nColumnWidthTw_36_2" select="round(2.15 * 1440 * $altova:TableWidthFactor_36)"/>
        <xsl:variable name="altova:nColumnWidthTw_36_3" select="$altova:nDefaultColumnWidthTw_36"/>
        <xsl:variable name="altova:nColumnWidthTw_36_4" select="$altova:nDefaultColumnWidthTw_36"/>
        <xsl:variable name="altova:nColumnWidthTw_36_5" select="$altova:nDefaultColumnWidthTw_36"/>
        <xsl:variable name="altova:nColumnWidthTw_36_6" select="$altova:nDefaultColumnWidthTw_36"/>
        <xsl:variable name="altova:nColumnWidthTw_36_7" select="$altova:nDefaultColumnWidthTw_36"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:variable name="tablestyle36">
            <xsl:text>\trowd\trleft</xsl:text>
            <xsl:value-of select="$altova:nTableIndentTw_36"/>
            <xsl:text>\ts1371\ts1372\ts1373\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
        </xsl:variable>
        <xsl:variable name="rowend36">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\row\pard</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="cellend36">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\cell</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestcell</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:RowStyle123">
            <xsl:text>\trrh0\trhdr</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl36" select="$altova:nTableIndentTw_36"/>
            <xsl:text>\clvertalc\clmgf\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl36_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl36 + $altova:nColumnWidthTw_36_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl36_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl36_Col0_AfterColumn + $altova:nColumnWidthTw_36_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl36_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl36_Col1_AfterColumn + $altova:nColumnWidthTw_36_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clmgf\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl36_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl36_Col2_AfterColumn + $altova:nColumnWidthTw_36_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl36_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl36_Col3_AfterColumn + $altova:nColumnWidthTw_36_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col4_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl36_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl36_Col4_AfterColumn + $altova:nColumnWidthTw_36_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col5_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl36_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl36_Col5_AfterColumn + $altova:nColumnWidthTw_36_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col6_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl36_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl36_Col6_AfterColumn + $altova:nColumnWidthTw_36_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col7_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle36"/>
            <xsl:value-of select="$altova:RowStyle123"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1374\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Volgnummer</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1375\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateResult-EK-1-2_Volgnummer"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend36"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend36"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1376\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Kandidaten</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1377\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateResult-EK-1-2_Kandidaten"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend36"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1378\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Aantal stemmen (per provincie)</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1379\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateResult-EK-1-2_AantalStemmen"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend36"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend36"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend36"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend36"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:CandidateAndResult[position() = 1]">
            <xsl:for-each select="rg:VotesInElectoralDistrictPart[position() = 1]">
                <xsl:for-each select="rg:VotesInElectoralDistrict[@id = &apos;alle&apos;]">
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs1380\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>Totaal</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs1381\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewCandidateResult-EK-1-2_Totaal"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:for-each>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend36"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle36"/>
        <xsl:value-of select="$altova:RowStyle123"/>
        <xsl:value-of select="$rowend36"/>
        <xsl:variable name="altova:RowStyle124">
            <xsl:text>\trrh0\trhdr</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl36" select="$altova:nTableIndentTw_36"/>
            <xsl:text>\clvertalc\clmgf\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl36_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl36 + $altova:nColumnWidthTw_36_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl36_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl36_Col0_AfterColumn + $altova:nColumnWidthTw_36_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl36_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl36_Col1_AfterColumn + $altova:nColumnWidthTw_36_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl36_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl36_Col2_AfterColumn + $altova:nColumnWidthTw_36_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl36_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl36_Col3_AfterColumn + $altova:nColumnWidthTw_36_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col4_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl36_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl36_Col4_AfterColumn + $altova:nColumnWidthTw_36_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col5_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl36_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl36_Col5_AfterColumn + $altova:nColumnWidthTw_36_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col6_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl36_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl36_Col6_AfterColumn + $altova:nColumnWidthTw_36_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col7_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle36"/>
            <xsl:value-of select="$altova:RowStyle124"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1382\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>op de lijst</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1383\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateResult-EK-1-2_opDeLijst"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend36"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend36"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend36"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="position" select="1"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_36_3 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend36"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictABLine">
            <xsl:with-param name="position" select="1"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_36_4 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:call-template name="DistrictABLine">
            <xsl:with-param name="position" select="1"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_36_4 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend36"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="position" select="2"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_36_5 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend36"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictABLine">
            <xsl:with-param name="position" select="2"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_36_6 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:call-template name="DistrictABLine">
            <xsl:with-param name="position" select="2"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_36_6 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend36"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:CandidateAndResult[position() = 1]">
            <xsl:for-each select="rg:VotesInElectoralDistrictPart[position() = 1]">
                <xsl:for-each select="rg:VotesInElectoralDistrict[@id = &apos;alle&apos;]">
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs1384\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>aantal</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs1385\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewCandidateResult-EK-1-2_aantal"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:for-each>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend36"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle36"/>
        <xsl:value-of select="$altova:RowStyle124"/>
        <xsl:value-of select="$rowend36"/>
        <xsl:variable name="altova:RowStyle125">
            <xsl:text>\trrh0\trhdr</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl36" select="$altova:nTableIndentTw_36"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl36_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl36 + $altova:nColumnWidthTw_36_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col0_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl36_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl36_Col0_AfterColumn + $altova:nColumnWidthTw_36_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col1_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl36_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl36_Col1_AfterColumn + $altova:nColumnWidthTw_36_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col2_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl36_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl36_Col2_AfterColumn + $altova:nColumnWidthTw_36_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col3_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl36_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl36_Col3_AfterColumn + $altova:nColumnWidthTw_36_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col4_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl36_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl36_Col4_AfterColumn + $altova:nColumnWidthTw_36_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col5_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl36_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl36_Col5_AfterColumn + $altova:nColumnWidthTw_36_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col6_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl36_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl36_Col6_AfterColumn + $altova:nColumnWidthTw_36_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col7_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle36"/>
            <xsl:value-of select="$altova:RowStyle125"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend36"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend36"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend36"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictVoteA">
            <xsl:with-param name="position" select="1"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_36_3 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend36"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictVoteB">
            <xsl:with-param name="position" select="1"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_36_4 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend36"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictVoteA">
            <xsl:with-param name="position" select="2"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_36_5 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend36"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictVoteB">
            <xsl:with-param name="position" select="2"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_36_6 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend36"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:for-each select="rg:CandidateAndResult[position() = 1]">
            <xsl:for-each select="rg:VotesInElectoralDistrictPart[position() = 1]">
                <xsl:for-each select="rg:VotesInElectoralDistrict[@id = &apos;alle&apos;]">
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs1386\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>stemmen</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs1387\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewCandidateResult-EK-1-2_stemmen"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs1388\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>*</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs1389\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewCandidateResult-EK-1-2_FootnoteSign1"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:for-each>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend36"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle36"/>
        <xsl:value-of select="$altova:RowStyle125"/>
        <xsl:value-of select="$rowend36"/>
        <xsl:for-each select="rg:CandidateAndResult[position()&gt;=$fromLine and position()&lt;=$tillLine]">
            <xsl:variable name="altova:RowStyle126">
                <xsl:text>\trrh0</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl36" select="$altova:nTableIndentTw_36"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl36_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl36 + $altova:nColumnWidthTw_36_0"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col0_AfterColumn)"/>
                <xsl:text>\clvertalt\clmgf\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt100\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl36_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl36_Col0_AfterColumn + $altova:nColumnWidthTw_36_1"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col1_AfterColumn)"/>
                <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl36_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl36_Col1_AfterColumn + $altova:nColumnWidthTw_36_2"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col2_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl36_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl36_Col2_AfterColumn + $altova:nColumnWidthTw_36_3"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col3_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl36_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl36_Col3_AfterColumn + $altova:nColumnWidthTw_36_4"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col4_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl36_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl36_Col4_AfterColumn + $altova:nColumnWidthTw_36_5"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col5_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl36_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl36_Col5_AfterColumn + $altova:nColumnWidthTw_36_6"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col6_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl36_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl36_Col6_AfterColumn + $altova:nColumnWidthTw_36_7"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col7_AfterColumn)"/>
            </xsl:variable>
            <xsl:if test="$templatetablelevel + 1 = 1">
                <xsl:value-of select="$tablestyle36"/>
                <xsl:value-of select="$altova:RowStyle126"/>
            </xsl:if>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="CandidateId">
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_36_0 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend36"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="CandidateInTable">
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_36_1 div 1440) + ($altova:nColumnWidthTw_36_2 div 1440) - 0.06944 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend36"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend36"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="position" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_36_3 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend36"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="position" select="1"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_36_4 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend36"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="position" select="2"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_36_5 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend36"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="position" select="2"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_36_6 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend36"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="position" select="3"/>
                <xsl:with-param name="alle" select="1"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_36_7 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend36"/>
            <xsl:if test="$templatetablelevel + 1 > 1">
                <xsl:text>{\*\nesttableprops</xsl:text>
            </xsl:if>
            <xsl:value-of select="$tablestyle36"/>
            <xsl:value-of select="$altova:RowStyle126"/>
            <xsl:value-of select="$rowend36"/>
        </xsl:for-each>
        <xsl:for-each select="rg:VotesInElectoralDistrictPart[position()=1 and $remainingCandidates &lt; 1]">
            <xsl:variable name="altova:RowStyle127">
                <xsl:text>\trrh0</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl36" select="$altova:nTableIndentTw_36"/>
                <xsl:text>\clvertalc\clmgf\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl36_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl36 + $altova:nColumnWidthTw_36_0"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col0_AfterColumn)"/>
                <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl36_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl36_Col0_AfterColumn + $altova:nColumnWidthTw_36_1"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col1_AfterColumn)"/>
                <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl36_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl36_Col1_AfterColumn + $altova:nColumnWidthTw_36_2"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col2_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl36_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl36_Col2_AfterColumn + $altova:nColumnWidthTw_36_3"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col3_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl36_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl36_Col3_AfterColumn + $altova:nColumnWidthTw_36_4"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col4_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl36_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl36_Col4_AfterColumn + $altova:nColumnWidthTw_36_5"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col5_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl36_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl36_Col5_AfterColumn + $altova:nColumnWidthTw_36_6"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col6_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl36_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl36_Col6_AfterColumn + $altova:nColumnWidthTw_36_7"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl36_Col7_AfterColumn)"/>
            </xsl:variable>
            <xsl:if test="$templatetablelevel + 1 = 1">
                <xsl:value-of select="$tablestyle36"/>
                <xsl:value-of select="$altova:RowStyle127"/>
            </xsl:if>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs1390\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Totaal</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs1391\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewCandidateResult-EK-1-2_Totaal2"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend36"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend36"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend36"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_36_3 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend36"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="1"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_36_4 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend36"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="2"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_36_5 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend36"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="2"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_36_6 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend36"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="3"/>
                <xsl:with-param name="alle" select="1"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_36_7 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend36"/>
            <xsl:if test="$templatetablelevel + 1 > 1">
                <xsl:text>{\*\nesttableprops</xsl:text>
            </xsl:if>
            <xsl:value-of select="$tablestyle36"/>
            <xsl:value-of select="$altova:RowStyle127"/>
            <xsl:value-of select="$rowend36"/>
        </xsl:for-each>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 0"/>
        <xsl:text> </xsl:text>
        <xsl:for-each select="rg:CandidateAndResult[position() = 1]">
            <xsl:for-each select="rg:VotesInElectoralDistrictPart[position() = 1]">
                <xsl:for-each select="rg:VotesInElectoralDistrict[@id = &apos;alle&apos;]">
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs1392\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>* </xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs1393\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewCandidateResult-EK-1-2_FootnoteSign2"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs1394\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>Voor zover sprake is van gelijkluidende lijsten.</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs1395\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_OverviewCandidateResult-EK-1-2_VoorZoverSprake"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:for-each>
            </xsl:for-each>
        </xsl:for-each>
    </xsl:template>
    <xsl:template name="OverviewCandidateResult-EK-1-4">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="fromLine" select="1"/>
        <xsl:param name="tillLine" select="80"/>
        <xsl:param name="remainingCandidates"/>
        <xsl:variable name="altova:CurrContextGrid_06BB1130" select="."/>
        <xsl:variable name="altova:nTableWidthIn_37" select="$altova:nMaxWidthIn * 1.00000"/>
        <xsl:variable name="altova:nTableWidthTw_37" select="$altova:nTableWidthIn_37 * 1440"/>
        <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_37" select="round($altova:nTableWidthTw_37 * 0.25)"/>
        <xsl:variable name="altova:nTableIndentTw_37" select="0"/>
        <xsl:variable name="altova:nSumColumnWidthsTw_37" select="round(5182.00)"/>
        <xsl:variable name="altova:TableWidthFactor_37">
            <xsl:choose>
                <xsl:when test="$altova:nSumColumnWidthsTw_37 &gt; $altova:nTableWidthTw_37">
                    <xsl:value-of select="($altova:nTableWidthTw_37 - $altova:SumDefaultColumnsForWideTableTw_37) div $altova:nSumColumnWidthsTw_37"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="1"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnsWithDefaultWidth_37" select="round(8)"/>
        <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_37">
            <xsl:choose>
                <xsl:when test="$altova:nColumnsWithDefaultWidth_37 = 0">
                    <xsl:value-of select="round(8)"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="$altova:nColumnsWithDefaultWidth_37"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nDefaultColumnWidthTw_37">
            <xsl:choose>
                <xsl:when test="$altova:TableWidthFactor_37 &lt; 1">
                    <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_37 div $altova:nColumnsWithDefaultWidthNotZero_37"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="round(($altova:nTableWidthTw_37 - $altova:nSumColumnWidthsTw_37) div $altova:nColumnsWithDefaultWidthNotZero_37)"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnWidthTw_37_0" select="round(0.21 * 1440 * $altova:TableWidthFactor_37)"/>
        <xsl:variable name="altova:nColumnWidthTw_37_1" select="round(0.63 * 1440 * $altova:TableWidthFactor_37)"/>
        <xsl:variable name="altova:nColumnWidthTw_37_2" select="round(2.15 * 1440 * $altova:TableWidthFactor_37)"/>
        <xsl:variable name="altova:nColumnWidthTw_37_3" select="$altova:nDefaultColumnWidthTw_37"/>
        <xsl:variable name="altova:nColumnWidthTw_37_4" select="$altova:nDefaultColumnWidthTw_37"/>
        <xsl:variable name="altova:nColumnWidthTw_37_5" select="$altova:nDefaultColumnWidthTw_37"/>
        <xsl:variable name="altova:nColumnWidthTw_37_6" select="$altova:nDefaultColumnWidthTw_37"/>
        <xsl:variable name="altova:nColumnWidthTw_37_7" select="$altova:nDefaultColumnWidthTw_37"/>
        <xsl:variable name="altova:nColumnWidthTw_37_8" select="$altova:nDefaultColumnWidthTw_37"/>
        <xsl:variable name="altova:nColumnWidthTw_37_9" select="$altova:nDefaultColumnWidthTw_37"/>
        <xsl:variable name="altova:nColumnWidthTw_37_10" select="$altova:nDefaultColumnWidthTw_37"/>
        <xsl:variable name="altova:nColumnWidthTw_37_11" select="round(0.61 * 1440 * $altova:TableWidthFactor_37)"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:variable name="tablestyle37">
            <xsl:text>\trowd\trleft</xsl:text>
            <xsl:value-of select="$altova:nTableIndentTw_37"/>
            <xsl:text>\ts1396\ts1397\ts1398\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
        </xsl:variable>
        <xsl:variable name="rowend37">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\row\pard</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="cellend37">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\cell</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestcell</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:RowStyle128">
            <xsl:text>\trrh0\trhdr</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37" select="$altova:nTableIndentTw_37"/>
            <xsl:text>\clvertalc\clmgf\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl37 + $altova:nColumnWidthTw_37_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col0_AfterColumn + $altova:nColumnWidthTw_37_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col1_AfterColumn + $altova:nColumnWidthTw_37_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clmgf\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col2_AfterColumn + $altova:nColumnWidthTw_37_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col3_AfterColumn + $altova:nColumnWidthTw_37_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col4_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col4_AfterColumn + $altova:nColumnWidthTw_37_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col5_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col5_AfterColumn + $altova:nColumnWidthTw_37_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col6_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col6_AfterColumn + $altova:nColumnWidthTw_37_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col7_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col7_AfterColumn + $altova:nColumnWidthTw_37_8"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col8_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col8_AfterColumn + $altova:nColumnWidthTw_37_9"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col9_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col9_AfterColumn + $altova:nColumnWidthTw_37_10"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col10_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col10_AfterColumn + $altova:nColumnWidthTw_37_11"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col11_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle37"/>
            <xsl:value-of select="$altova:RowStyle128"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1399\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Volgnummer</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1400\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateResult-EK-1-4_Volgnummer"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend37"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend37"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1401\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Kandidaten</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1402\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateResult-EK-1-4_Kandidaten"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend37"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:if test="count ( rg:Type[ text() = &quot;op zichzelf staande lijst&quot; ] ) = 0">
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs1403\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Aantal stemmen (per provincie)</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs1404\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewCandidateResult-EK-1-4_AantalStemmen"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:if>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend37"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend37"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend37"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend37"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend37"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend37"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend37"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend37"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1405\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Totaal</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1406\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateResult-EK-1-4_Totaal"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend37"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle37"/>
        <xsl:value-of select="$altova:RowStyle128"/>
        <xsl:value-of select="$rowend37"/>
        <xsl:variable name="altova:RowStyle129">
            <xsl:text>\trrh0\trhdr</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37" select="$altova:nTableIndentTw_37"/>
            <xsl:text>\clvertalc\clmgf\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl37 + $altova:nColumnWidthTw_37_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col0_AfterColumn + $altova:nColumnWidthTw_37_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col1_AfterColumn + $altova:nColumnWidthTw_37_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col2_AfterColumn + $altova:nColumnWidthTw_37_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col3_AfterColumn + $altova:nColumnWidthTw_37_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col4_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col4_AfterColumn + $altova:nColumnWidthTw_37_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col5_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col5_AfterColumn + $altova:nColumnWidthTw_37_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col6_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col6_AfterColumn + $altova:nColumnWidthTw_37_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col7_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col7_AfterColumn + $altova:nColumnWidthTw_37_8"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col8_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col8_AfterColumn + $altova:nColumnWidthTw_37_9"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col9_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col9_AfterColumn + $altova:nColumnWidthTw_37_10"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col10_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col10_AfterColumn + $altova:nColumnWidthTw_37_11"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col11_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle37"/>
            <xsl:value-of select="$altova:RowStyle129"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1407\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>op de lijst</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1408\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateResult-EK-1-4_opDeLijst"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend37"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend37"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend37"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="position" select="1"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_37_3 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend37"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictABLine">
            <xsl:with-param name="position" select="1"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_37_4 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend37"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="position" select="2"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_37_5 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend37"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictABLine">
            <xsl:with-param name="position" select="2"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_37_6 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend37"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="position" select="3"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_37_7 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend37"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictABLine">
            <xsl:with-param name="position" select="3"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_37_8 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend37"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="position" select="4"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_37_9 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend37"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictABLine">
            <xsl:with-param name="position" select="4"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_37_10 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend37"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1409\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>aantal</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1410\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateResult-EK-1-4_aantal"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend37"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle37"/>
        <xsl:value-of select="$altova:RowStyle129"/>
        <xsl:value-of select="$rowend37"/>
        <xsl:variable name="altova:RowStyle130">
            <xsl:text>\trrh0\trhdr</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37" select="$altova:nTableIndentTw_37"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl37 + $altova:nColumnWidthTw_37_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col0_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col0_AfterColumn + $altova:nColumnWidthTw_37_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col1_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col1_AfterColumn + $altova:nColumnWidthTw_37_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col2_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col2_AfterColumn + $altova:nColumnWidthTw_37_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col3_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col3_AfterColumn + $altova:nColumnWidthTw_37_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col4_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col4_AfterColumn + $altova:nColumnWidthTw_37_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col5_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col5_AfterColumn + $altova:nColumnWidthTw_37_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col6_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col6_AfterColumn + $altova:nColumnWidthTw_37_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col7_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col7_AfterColumn + $altova:nColumnWidthTw_37_8"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col8_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col8_AfterColumn + $altova:nColumnWidthTw_37_9"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col9_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col9_AfterColumn + $altova:nColumnWidthTw_37_10"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col10_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl37_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col10_AfterColumn + $altova:nColumnWidthTw_37_11"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col11_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle37"/>
            <xsl:value-of select="$altova:RowStyle130"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend37"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend37"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend37"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictVoteA">
            <xsl:with-param name="position" select="1"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_37_3 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend37"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictVoteB">
            <xsl:with-param name="position" select="1"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_37_4 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend37"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictVoteA">
            <xsl:with-param name="position" select="2"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_37_5 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend37"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictVoteB">
            <xsl:with-param name="position" select="2"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_37_6 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend37"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictVoteA">
            <xsl:with-param name="position" select="3"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_37_7 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend37"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictVoteB">
            <xsl:with-param name="position" select="3"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_37_8 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend37"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictVoteA">
            <xsl:with-param name="position" select="4"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_37_9 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend37"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictVoteB">
            <xsl:with-param name="position" select="4"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_37_10 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend37"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1411\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>stemmen</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1412\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateResult-EK-1-4_stemmen"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1413\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>*</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1414\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateResult-EK-1-4_FootnoteSign1"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend37"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle37"/>
        <xsl:value-of select="$altova:RowStyle130"/>
        <xsl:value-of select="$rowend37"/>
        <xsl:for-each select="rg:CandidateAndResult[position()&gt;=$fromLine and position()&lt;=$tillLine]">
            <xsl:variable name="altova:RowStyle131">
                <xsl:text>\trrh0</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl37" select="$altova:nTableIndentTw_37"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl37_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl37 + $altova:nColumnWidthTw_37_0"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col0_AfterColumn)"/>
                <xsl:text>\clvertalc\clmgf\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl37_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col0_AfterColumn + $altova:nColumnWidthTw_37_1"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col1_AfterColumn)"/>
                <xsl:text>\clvertalt\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt100\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl37_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col1_AfterColumn + $altova:nColumnWidthTw_37_2"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col2_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl37_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col2_AfterColumn + $altova:nColumnWidthTw_37_3"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col3_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl37_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col3_AfterColumn + $altova:nColumnWidthTw_37_4"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col4_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl37_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col4_AfterColumn + $altova:nColumnWidthTw_37_5"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col5_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl37_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col5_AfterColumn + $altova:nColumnWidthTw_37_6"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col6_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl37_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col6_AfterColumn + $altova:nColumnWidthTw_37_7"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col7_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl37_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col7_AfterColumn + $altova:nColumnWidthTw_37_8"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col8_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl37_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col8_AfterColumn + $altova:nColumnWidthTw_37_9"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col9_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl37_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col9_AfterColumn + $altova:nColumnWidthTw_37_10"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col10_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl37_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col10_AfterColumn + $altova:nColumnWidthTw_37_11"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col11_AfterColumn)"/>
            </xsl:variable>
            <xsl:if test="$templatetablelevel + 1 = 1">
                <xsl:value-of select="$tablestyle37"/>
                <xsl:value-of select="$altova:RowStyle131"/>
            </xsl:if>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="CandidateId">
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_37_0 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend37"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="CandidateInTable">
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_37_1 div 1440) + ($altova:nColumnWidthTw_37_2 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend37"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend37"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="position" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_37_3 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend37"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="position" select="1"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_37_4 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend37"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="position" select="2"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_37_5 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend37"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="position" select="2"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_37_6 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend37"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="position" select="3"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_37_7 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend37"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="position" select="3"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_37_8 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend37"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="position" select="4"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_37_9 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend37"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="position" select="4"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_37_10 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend37"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="position" select="5"/>
                <xsl:with-param name="alle" select="1"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_37_11 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend37"/>
            <xsl:if test="$templatetablelevel + 1 > 1">
                <xsl:text>{\*\nesttableprops</xsl:text>
            </xsl:if>
            <xsl:value-of select="$tablestyle37"/>
            <xsl:value-of select="$altova:RowStyle131"/>
            <xsl:value-of select="$rowend37"/>
        </xsl:for-each>
        <xsl:for-each select="rg:VotesInElectoralDistrictPart[position()=1 and $remainingCandidates &lt; 1]">
            <xsl:variable name="altova:RowStyle132">
                <xsl:text>\trrh0</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl37" select="$altova:nTableIndentTw_37"/>
                <xsl:text>\clvertalc\clmgf\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl37_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl37 + $altova:nColumnWidthTw_37_0"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col0_AfterColumn)"/>
                <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl37_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col0_AfterColumn + $altova:nColumnWidthTw_37_1"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col1_AfterColumn)"/>
                <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl37_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col1_AfterColumn + $altova:nColumnWidthTw_37_2"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col2_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl37_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col2_AfterColumn + $altova:nColumnWidthTw_37_3"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col3_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl37_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col3_AfterColumn + $altova:nColumnWidthTw_37_4"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col4_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl37_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col4_AfterColumn + $altova:nColumnWidthTw_37_5"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col5_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl37_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col5_AfterColumn + $altova:nColumnWidthTw_37_6"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col6_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl37_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col6_AfterColumn + $altova:nColumnWidthTw_37_7"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col7_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl37_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col7_AfterColumn + $altova:nColumnWidthTw_37_8"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col8_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl37_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col8_AfterColumn + $altova:nColumnWidthTw_37_9"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col9_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl37_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col9_AfterColumn + $altova:nColumnWidthTw_37_10"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col10_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl37_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl37_Col10_AfterColumn + $altova:nColumnWidthTw_37_11"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl37_Col11_AfterColumn)"/>
            </xsl:variable>
            <xsl:if test="$templatetablelevel + 1 = 1">
                <xsl:value-of select="$tablestyle37"/>
                <xsl:value-of select="$altova:RowStyle132"/>
            </xsl:if>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs1415\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Totaal</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs1416\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewCandidateResult-EK-1-4_Totaal2"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend37"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend37"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend37"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_37_3 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend37"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="1"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_37_4 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend37"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="2"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_37_5 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend37"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="2"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_37_6 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend37"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="3"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_37_7 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend37"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="3"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_37_8 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend37"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="4"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_37_9 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend37"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="4"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_37_10 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend37"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="5"/>
                <xsl:with-param name="alle" select="1"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_37_11 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend37"/>
            <xsl:if test="$templatetablelevel + 1 > 1">
                <xsl:text>{\*\nesttableprops</xsl:text>
            </xsl:if>
            <xsl:value-of select="$tablestyle37"/>
            <xsl:value-of select="$altova:RowStyle132"/>
            <xsl:value-of select="$rowend37"/>
        </xsl:for-each>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 0"/>
        <xsl:text> </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1417\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>* </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1418\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateResult-EK-1-4_FootnoteSign2"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1419\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Voor zover sprake is van gelijkluidende lijsten.</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1420\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateResult-EK-1-4_VoorZoverSprake"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="OverviewCandidateResult-EK-1-5">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="fromLine" select="1"/>
        <xsl:param name="tillLine" select="80"/>
        <xsl:param name="remainingCandidates"/>
        <xsl:variable name="altova:CurrContextGrid_06BB3110" select="."/>
        <xsl:variable name="altova:nTableWidthIn_38" select="$altova:nMaxWidthIn * 1.00000"/>
        <xsl:variable name="altova:nTableWidthTw_38" select="$altova:nTableWidthIn_38 * 1440"/>
        <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_38" select="round($altova:nTableWidthTw_38 * 0.25)"/>
        <xsl:variable name="altova:nTableIndentTw_38" select="0"/>
        <xsl:variable name="altova:nSumColumnWidthsTw_38" select="round(4301.50)"/>
        <xsl:variable name="altova:TableWidthFactor_38">
            <xsl:choose>
                <xsl:when test="$altova:nSumColumnWidthsTw_38 &gt; $altova:nTableWidthTw_38">
                    <xsl:value-of select="($altova:nTableWidthTw_38 - $altova:SumDefaultColumnsForWideTableTw_38) div $altova:nSumColumnWidthsTw_38"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="1"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnsWithDefaultWidth_38" select="round(10)"/>
        <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_38">
            <xsl:choose>
                <xsl:when test="$altova:nColumnsWithDefaultWidth_38 = 0">
                    <xsl:value-of select="round(10)"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="$altova:nColumnsWithDefaultWidth_38"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nDefaultColumnWidthTw_38">
            <xsl:choose>
                <xsl:when test="$altova:TableWidthFactor_38 &lt; 1">
                    <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_38 div $altova:nColumnsWithDefaultWidthNotZero_38"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="round(($altova:nTableWidthTw_38 - $altova:nSumColumnWidthsTw_38) div $altova:nColumnsWithDefaultWidthNotZero_38)"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnWidthTw_38_0" select="round(0.21 * 1440 * $altova:TableWidthFactor_38)"/>
        <xsl:variable name="altova:nColumnWidthTw_38_1" select="round(0.63 * 1440 * $altova:TableWidthFactor_38)"/>
        <xsl:variable name="altova:nColumnWidthTw_38_2" select="round(2.15 * 1440 * $altova:TableWidthFactor_38)"/>
        <xsl:variable name="altova:nColumnWidthTw_38_3" select="$altova:nDefaultColumnWidthTw_38"/>
        <xsl:variable name="altova:nColumnWidthTw_38_4" select="$altova:nDefaultColumnWidthTw_38"/>
        <xsl:variable name="altova:nColumnWidthTw_38_5" select="$altova:nDefaultColumnWidthTw_38"/>
        <xsl:variable name="altova:nColumnWidthTw_38_6" select="$altova:nDefaultColumnWidthTw_38"/>
        <xsl:variable name="altova:nColumnWidthTw_38_7" select="$altova:nDefaultColumnWidthTw_38"/>
        <xsl:variable name="altova:nColumnWidthTw_38_8" select="$altova:nDefaultColumnWidthTw_38"/>
        <xsl:variable name="altova:nColumnWidthTw_38_9" select="$altova:nDefaultColumnWidthTw_38"/>
        <xsl:variable name="altova:nColumnWidthTw_38_10" select="$altova:nDefaultColumnWidthTw_38"/>
        <xsl:variable name="altova:nColumnWidthTw_38_11" select="$altova:nDefaultColumnWidthTw_38"/>
        <xsl:variable name="altova:nColumnWidthTw_38_12" select="$altova:nDefaultColumnWidthTw_38"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:variable name="tablestyle38">
            <xsl:text>\trowd\trleft</xsl:text>
            <xsl:value-of select="$altova:nTableIndentTw_38"/>
            <xsl:text>\ts1421\ts1422\ts1423\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
        </xsl:variable>
        <xsl:variable name="rowend38">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\row\pard</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="cellend38">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\cell</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestcell</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:RowStyle133">
            <xsl:text>\trrh0\trhdr</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38" select="$altova:nTableIndentTw_38"/>
            <xsl:text>\clvertalc\clmgf\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl38 + $altova:nColumnWidthTw_38_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col0_AfterColumn + $altova:nColumnWidthTw_38_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col1_AfterColumn + $altova:nColumnWidthTw_38_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clmgf\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col2_AfterColumn + $altova:nColumnWidthTw_38_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col3_AfterColumn + $altova:nColumnWidthTw_38_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col4_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col4_AfterColumn + $altova:nColumnWidthTw_38_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col5_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col5_AfterColumn + $altova:nColumnWidthTw_38_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col6_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col6_AfterColumn + $altova:nColumnWidthTw_38_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col7_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col7_AfterColumn + $altova:nColumnWidthTw_38_8"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col8_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col8_AfterColumn + $altova:nColumnWidthTw_38_9"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col9_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col9_AfterColumn + $altova:nColumnWidthTw_38_10"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col10_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col10_AfterColumn + $altova:nColumnWidthTw_38_11"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col11_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col12_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col11_AfterColumn + $altova:nColumnWidthTw_38_12"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col12_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle38"/>
            <xsl:value-of select="$altova:RowStyle133"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1424\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Volgnummer</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1425\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateResult-EK-1-5_Volgnummer"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1426\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Kandidaten</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1427\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateResult-EK-1-5_Kandidaten"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:if test="count ( rg:Type[ text() = &quot;op zichzelf staande lijst&quot; ] ) = 0">
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs1428\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Aantal stemmen (per provincie)</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs1429\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewCandidateResult-EK-1-5_AantalStemmen"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:if>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle38"/>
        <xsl:value-of select="$altova:RowStyle133"/>
        <xsl:value-of select="$rowend38"/>
        <xsl:variable name="altova:RowStyle134">
            <xsl:text>\trrh0\trhdr</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38" select="$altova:nTableIndentTw_38"/>
            <xsl:text>\clvertalc\clmgf\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl38 + $altova:nColumnWidthTw_38_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col0_AfterColumn + $altova:nColumnWidthTw_38_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col1_AfterColumn + $altova:nColumnWidthTw_38_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col2_AfterColumn + $altova:nColumnWidthTw_38_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col3_AfterColumn + $altova:nColumnWidthTw_38_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col4_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col4_AfterColumn + $altova:nColumnWidthTw_38_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col5_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col5_AfterColumn + $altova:nColumnWidthTw_38_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col6_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col6_AfterColumn + $altova:nColumnWidthTw_38_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col7_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col7_AfterColumn + $altova:nColumnWidthTw_38_8"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col8_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col8_AfterColumn + $altova:nColumnWidthTw_38_9"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col9_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col9_AfterColumn + $altova:nColumnWidthTw_38_10"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col10_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col10_AfterColumn + $altova:nColumnWidthTw_38_11"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col11_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col12_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col11_AfterColumn + $altova:nColumnWidthTw_38_12"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col12_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle38"/>
            <xsl:value-of select="$altova:RowStyle134"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1430\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>op de lijst</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1431\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateResult-EK-1-5_opDeLijst"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="position" select="1"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_3 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictABLine">
            <xsl:with-param name="position" select="1"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_4 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="position" select="2"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_5 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictABLine">
            <xsl:with-param name="position" select="2"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_6 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="position" select="3"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_7 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictABLine">
            <xsl:with-param name="position" select="3"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_8 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="position" select="4"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_9 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictABLine">
            <xsl:with-param name="position" select="4"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_10 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="position" select="5"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_11 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictABLine">
            <xsl:with-param name="position" select="5"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_12 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle38"/>
        <xsl:value-of select="$altova:RowStyle134"/>
        <xsl:value-of select="$rowend38"/>
        <xsl:variable name="altova:RowStyle135">
            <xsl:text>\trrh0\trhdr</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38" select="$altova:nTableIndentTw_38"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl38 + $altova:nColumnWidthTw_38_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col0_AfterColumn + $altova:nColumnWidthTw_38_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col1_AfterColumn + $altova:nColumnWidthTw_38_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col2_AfterColumn + $altova:nColumnWidthTw_38_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col3_AfterColumn + $altova:nColumnWidthTw_38_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col4_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col4_AfterColumn + $altova:nColumnWidthTw_38_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col5_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col5_AfterColumn + $altova:nColumnWidthTw_38_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col6_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col6_AfterColumn + $altova:nColumnWidthTw_38_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col7_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col7_AfterColumn + $altova:nColumnWidthTw_38_8"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col8_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col8_AfterColumn + $altova:nColumnWidthTw_38_9"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col9_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col9_AfterColumn + $altova:nColumnWidthTw_38_10"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col10_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col10_AfterColumn + $altova:nColumnWidthTw_38_11"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col11_AfterColumn)"/>
            <xsl:text>\clvertalc\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl38_Col12_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col11_AfterColumn + $altova:nColumnWidthTw_38_12"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col12_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle38"/>
            <xsl:value-of select="$altova:RowStyle135"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictVoteA">
            <xsl:with-param name="position" select="1"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_3 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictVoteB">
            <xsl:with-param name="position" select="1"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_4 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictVoteA">
            <xsl:with-param name="position" select="2"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_5 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictVoteB">
            <xsl:with-param name="position" select="2"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_6 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictVoteA">
            <xsl:with-param name="position" select="3"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_7 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictVoteB">
            <xsl:with-param name="position" select="3"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_8 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictVoteA">
            <xsl:with-param name="position" select="4"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_9 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictVoteB">
            <xsl:with-param name="position" select="4"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_10 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictVoteA">
            <xsl:with-param name="position" select="5"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_11 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictVoteB">
            <xsl:with-param name="position" select="5"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_12 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend38"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle38"/>
        <xsl:value-of select="$altova:RowStyle135"/>
        <xsl:value-of select="$rowend38"/>
        <xsl:for-each select="rg:CandidateAndResult[position()&gt;=$fromLine and position()&lt;=$tillLine]">
            <xsl:variable name="altova:RowStyle136">
                <xsl:text>\trrh0</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl38" select="$altova:nTableIndentTw_38"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl38_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl38 + $altova:nColumnWidthTw_38_0"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col0_AfterColumn)"/>
                <xsl:text>\clvertalc\clmgf\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl38_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col0_AfterColumn + $altova:nColumnWidthTw_38_1"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col1_AfterColumn)"/>
                <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt100\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl38_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col1_AfterColumn + $altova:nColumnWidthTw_38_2"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col2_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl38_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col2_AfterColumn + $altova:nColumnWidthTw_38_3"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col3_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl38_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col3_AfterColumn + $altova:nColumnWidthTw_38_4"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col4_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl38_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col4_AfterColumn + $altova:nColumnWidthTw_38_5"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col5_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl38_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col5_AfterColumn + $altova:nColumnWidthTw_38_6"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col6_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl38_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col6_AfterColumn + $altova:nColumnWidthTw_38_7"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col7_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl38_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col7_AfterColumn + $altova:nColumnWidthTw_38_8"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col8_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl38_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col8_AfterColumn + $altova:nColumnWidthTw_38_9"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col9_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl38_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col9_AfterColumn + $altova:nColumnWidthTw_38_10"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col10_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl38_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col10_AfterColumn + $altova:nColumnWidthTw_38_11"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col11_AfterColumn)"/>
                <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl38_Col12_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col11_AfterColumn + $altova:nColumnWidthTw_38_12"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col12_AfterColumn)"/>
            </xsl:variable>
            <xsl:if test="$templatetablelevel + 1 = 1">
                <xsl:value-of select="$tablestyle38"/>
                <xsl:value-of select="$altova:RowStyle136"/>
            </xsl:if>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="CandidateId">
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_0 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend38"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="CandidateInTable">
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_1 div 1440) + ($altova:nColumnWidthTw_38_2 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend38"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend38"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="position" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_3 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend38"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="position" select="1"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_4 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend38"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="position" select="2"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_5 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend38"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="position" select="2"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_6 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend38"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="position" select="3"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_7 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend38"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="position" select="3"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_8 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend38"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="position" select="4"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_9 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend38"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="position" select="4"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_10 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend38"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="position" select="5"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_11 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend38"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="position" select="5"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_12 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend38"/>
            <xsl:if test="$templatetablelevel + 1 > 1">
                <xsl:text>{\*\nesttableprops</xsl:text>
            </xsl:if>
            <xsl:value-of select="$tablestyle38"/>
            <xsl:value-of select="$altova:RowStyle136"/>
            <xsl:value-of select="$rowend38"/>
        </xsl:for-each>
        <xsl:for-each select="rg:VotesInElectoralDistrictPart[position()=1 and $remainingCandidates &lt; 1]">
            <xsl:variable name="altova:RowStyle137">
                <xsl:text>\trrh0</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl38" select="$altova:nTableIndentTw_38"/>
                <xsl:text>\clvertalc\clmgf\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl38_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl38 + $altova:nColumnWidthTw_38_0"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col0_AfterColumn)"/>
                <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl38_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col0_AfterColumn + $altova:nColumnWidthTw_38_1"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col1_AfterColumn)"/>
                <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl38_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col1_AfterColumn + $altova:nColumnWidthTw_38_2"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col2_AfterColumn)"/>
                <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl38_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col2_AfterColumn + $altova:nColumnWidthTw_38_3"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col3_AfterColumn)"/>
                <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl38_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col3_AfterColumn + $altova:nColumnWidthTw_38_4"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col4_AfterColumn)"/>
                <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl38_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col4_AfterColumn + $altova:nColumnWidthTw_38_5"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col5_AfterColumn)"/>
                <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl38_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col5_AfterColumn + $altova:nColumnWidthTw_38_6"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col6_AfterColumn)"/>
                <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl38_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col6_AfterColumn + $altova:nColumnWidthTw_38_7"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col7_AfterColumn)"/>
                <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl38_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col7_AfterColumn + $altova:nColumnWidthTw_38_8"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col8_AfterColumn)"/>
                <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl38_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col8_AfterColumn + $altova:nColumnWidthTw_38_9"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col9_AfterColumn)"/>
                <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl38_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col9_AfterColumn + $altova:nColumnWidthTw_38_10"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col10_AfterColumn)"/>
                <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl38_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col10_AfterColumn + $altova:nColumnWidthTw_38_11"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col11_AfterColumn)"/>
                <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl38_Col12_AfterColumn" select="$altova:CurrGridPos_Tbl38_Col11_AfterColumn + $altova:nColumnWidthTw_38_12"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl38_Col12_AfterColumn)"/>
            </xsl:variable>
            <xsl:if test="$templatetablelevel + 1 = 1">
                <xsl:value-of select="$tablestyle38"/>
                <xsl:value-of select="$altova:RowStyle137"/>
            </xsl:if>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs1432\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Totaal</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs1433\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewCandidateResult-EK-1-5_Totaal2"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend38"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend38"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend38"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_3 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend38"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="1"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_4 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend38"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="2"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_5 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend38"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="2"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_6 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend38"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="3"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_7 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend38"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="3"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_8 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend38"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="4"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_9 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend38"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="4"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_10 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend38"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="5"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_11 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend38"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="5"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_38_12 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend38"/>
            <xsl:if test="$templatetablelevel + 1 > 1">
                <xsl:text>{\*\nesttableprops</xsl:text>
            </xsl:if>
            <xsl:value-of select="$tablestyle38"/>
            <xsl:value-of select="$altova:RowStyle137"/>
            <xsl:value-of select="$rowend38"/>
        </xsl:for-each>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 0"/>
        <xsl:text> </xsl:text>
    </xsl:template>
    <xsl:template name="OverviewCandidateResult-EK-6-12">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="fromLine" select="1"/>
        <xsl:param name="tillLine" select="80"/>
        <xsl:param name="remainingCandidates"/>
        <xsl:variable name="altova:CurrContextGrid_06BB50F0" select="."/>
        <xsl:variable name="altova:nTableWidthIn_39" select="$altova:nMaxWidthIn * 1.00000"/>
        <xsl:variable name="altova:nTableWidthTw_39" select="$altova:nTableWidthIn_39 * 1440"/>
        <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_39" select="round($altova:nTableWidthTw_39 * 0.25)"/>
        <xsl:variable name="altova:nTableIndentTw_39" select="0"/>
        <xsl:variable name="altova:nSumColumnWidthsTw_39" select="round(2081.50)"/>
        <xsl:variable name="altova:TableWidthFactor_39">
            <xsl:choose>
                <xsl:when test="$altova:nSumColumnWidthsTw_39 &gt; $altova:nTableWidthTw_39">
                    <xsl:value-of select="($altova:nTableWidthTw_39 - $altova:SumDefaultColumnsForWideTableTw_39) div $altova:nSumColumnWidthsTw_39"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="1"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnsWithDefaultWidth_39" select="round(13)"/>
        <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_39">
            <xsl:choose>
                <xsl:when test="$altova:nColumnsWithDefaultWidth_39 = 0">
                    <xsl:value-of select="round(13)"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="$altova:nColumnsWithDefaultWidth_39"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nDefaultColumnWidthTw_39">
            <xsl:choose>
                <xsl:when test="$altova:TableWidthFactor_39 &lt; 1">
                    <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_39 div $altova:nColumnsWithDefaultWidthNotZero_39"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="round(($altova:nTableWidthTw_39 - $altova:nSumColumnWidthsTw_39) div $altova:nColumnsWithDefaultWidthNotZero_39)"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnWidthTw_39_0" select="round(0.56 * 1440 * $altova:TableWidthFactor_39)"/>
        <xsl:variable name="altova:nColumnWidthTw_39_1" select="round(0.28 * 1440 * $altova:TableWidthFactor_39)"/>
        <xsl:variable name="altova:nColumnWidthTw_39_2" select="$altova:nDefaultColumnWidthTw_39"/>
        <xsl:variable name="altova:nColumnWidthTw_39_3" select="$altova:nDefaultColumnWidthTw_39"/>
        <xsl:variable name="altova:nColumnWidthTw_39_4" select="$altova:nDefaultColumnWidthTw_39"/>
        <xsl:variable name="altova:nColumnWidthTw_39_5" select="$altova:nDefaultColumnWidthTw_39"/>
        <xsl:variable name="altova:nColumnWidthTw_39_6" select="$altova:nDefaultColumnWidthTw_39"/>
        <xsl:variable name="altova:nColumnWidthTw_39_7" select="$altova:nDefaultColumnWidthTw_39"/>
        <xsl:variable name="altova:nColumnWidthTw_39_8" select="$altova:nDefaultColumnWidthTw_39"/>
        <xsl:variable name="altova:nColumnWidthTw_39_9" select="$altova:nDefaultColumnWidthTw_39"/>
        <xsl:variable name="altova:nColumnWidthTw_39_10" select="$altova:nDefaultColumnWidthTw_39"/>
        <xsl:variable name="altova:nColumnWidthTw_39_11" select="$altova:nDefaultColumnWidthTw_39"/>
        <xsl:variable name="altova:nColumnWidthTw_39_12" select="$altova:nDefaultColumnWidthTw_39"/>
        <xsl:variable name="altova:nColumnWidthTw_39_13" select="$altova:nDefaultColumnWidthTw_39"/>
        <xsl:variable name="altova:nColumnWidthTw_39_14" select="$altova:nDefaultColumnWidthTw_39"/>
        <xsl:variable name="altova:nColumnWidthTw_39_15" select="round(0.61 * 1440 * $altova:TableWidthFactor_39)"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:variable name="tablestyle39">
            <xsl:text>\trowd\trleft</xsl:text>
            <xsl:value-of select="$altova:nTableIndentTw_39"/>
            <xsl:text>\ts1434\ts1435\ts1436\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
        </xsl:variable>
        <xsl:variable name="rowend39">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\row\pard</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="cellend39">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\cell</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestcell</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:RowStyle138">
            <xsl:text>\trrh0\trhdr</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39" select="$altova:nTableIndentTw_39"/>
            <xsl:text>\clvertalc\clmgf\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl39 + $altova:nColumnWidthTw_39_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col0_AfterColumn + $altova:nColumnWidthTw_39_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clmgf\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col1_AfterColumn + $altova:nColumnWidthTw_39_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col2_AfterColumn + $altova:nColumnWidthTw_39_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col3_AfterColumn + $altova:nColumnWidthTw_39_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col4_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col4_AfterColumn + $altova:nColumnWidthTw_39_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col5_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col5_AfterColumn + $altova:nColumnWidthTw_39_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col6_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col6_AfterColumn + $altova:nColumnWidthTw_39_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col7_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col7_AfterColumn + $altova:nColumnWidthTw_39_8"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col8_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col8_AfterColumn + $altova:nColumnWidthTw_39_9"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col9_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col9_AfterColumn + $altova:nColumnWidthTw_39_10"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col10_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col10_AfterColumn + $altova:nColumnWidthTw_39_11"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col11_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col12_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col11_AfterColumn + $altova:nColumnWidthTw_39_12"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col12_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col13_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col12_AfterColumn + $altova:nColumnWidthTw_39_13"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col13_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col14_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col13_AfterColumn + $altova:nColumnWidthTw_39_14"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col14_AfterColumn)"/>
            <xsl:text>\clvertalb\clbrdrt\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col15_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col14_AfterColumn + $altova:nColumnWidthTw_39_15"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col15_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle39"/>
            <xsl:value-of select="$altova:RowStyle138"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1437\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Volgnummer</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1438\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateResult-EK-6-12_Volgnummer"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:if test="count ( rg:Type[ text() = &quot;op zichzelf staande lijst&quot; ] ) = 0 and count(rg:CandidateAndResult[position() = 1]/rg:VotesInElectoralDistrictPart[position() = 2]/rg:VotesInElectoralDistrict) &gt; 1">
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs1439\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Aantal stemmen (per provincie)</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs1440\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewCandidateResult-EK-6-12_AantalStemmen"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:if>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1441\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Totaal</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1442\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateResult-EK-6-12_Totaal"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle39"/>
        <xsl:value-of select="$altova:RowStyle138"/>
        <xsl:value-of select="$rowend39"/>
        <xsl:variable name="altova:RowStyle139">
            <xsl:text>\trrh0\trhdr</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39" select="$altova:nTableIndentTw_39"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl39 + $altova:nColumnWidthTw_39_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col0_AfterColumn + $altova:nColumnWidthTw_39_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col1_AfterColumn + $altova:nColumnWidthTw_39_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col2_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col2_AfterColumn + $altova:nColumnWidthTw_39_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col3_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col3_AfterColumn + $altova:nColumnWidthTw_39_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col4_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col4_AfterColumn + $altova:nColumnWidthTw_39_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col5_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col5_AfterColumn + $altova:nColumnWidthTw_39_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col6_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col6_AfterColumn + $altova:nColumnWidthTw_39_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col7_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col7_AfterColumn + $altova:nColumnWidthTw_39_8"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col8_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col8_AfterColumn + $altova:nColumnWidthTw_39_9"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col9_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col9_AfterColumn + $altova:nColumnWidthTw_39_10"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col10_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col10_AfterColumn + $altova:nColumnWidthTw_39_11"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col11_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col12_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col11_AfterColumn + $altova:nColumnWidthTw_39_12"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col12_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col13_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col12_AfterColumn + $altova:nColumnWidthTw_39_13"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col13_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col14_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col13_AfterColumn + $altova:nColumnWidthTw_39_14"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col14_AfterColumn)"/>
            <xsl:text>\clvertalb\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col15_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col14_AfterColumn + $altova:nColumnWidthTw_39_15"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col15_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle39"/>
            <xsl:value-of select="$altova:RowStyle139"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1443\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>op de </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1444\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateResult-EK-6-12_opDe"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="1"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_1 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictABLine">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="1"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_2 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="2"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_3 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictABLine">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="2"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_4 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="3"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_5 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictABLine">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="3"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_6 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="4"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_7 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictABLine">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="4"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_8 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="5"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_9 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictABLine">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="5"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_10 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="6"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_11 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictABLine">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="6"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_12 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictNumber">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="7"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_13 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictABLine">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="7"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_14 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1445\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>aantal</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1446\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateResult-EK-6-12_aantal"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle39"/>
        <xsl:value-of select="$altova:RowStyle139"/>
        <xsl:value-of select="$rowend39"/>
        <xsl:variable name="altova:RowStyle140">
            <xsl:text>\trrh0\trhdr</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39" select="$altova:nTableIndentTw_39"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl39 + $altova:nColumnWidthTw_39_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col0_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col0_AfterColumn + $altova:nColumnWidthTw_39_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col1_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col1_AfterColumn + $altova:nColumnWidthTw_39_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col2_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col2_AfterColumn + $altova:nColumnWidthTw_39_3"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col3_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col3_AfterColumn + $altova:nColumnWidthTw_39_4"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col4_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col4_AfterColumn + $altova:nColumnWidthTw_39_5"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col5_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col5_AfterColumn + $altova:nColumnWidthTw_39_6"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col6_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col6_AfterColumn + $altova:nColumnWidthTw_39_7"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col7_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col7_AfterColumn + $altova:nColumnWidthTw_39_8"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col8_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col8_AfterColumn + $altova:nColumnWidthTw_39_9"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col9_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col9_AfterColumn + $altova:nColumnWidthTw_39_10"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col10_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col10_AfterColumn + $altova:nColumnWidthTw_39_11"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col11_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col12_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col11_AfterColumn + $altova:nColumnWidthTw_39_12"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col12_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col13_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col12_AfterColumn + $altova:nColumnWidthTw_39_13"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col13_AfterColumn)"/>
            <xsl:text>\clvertalt\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col14_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col13_AfterColumn + $altova:nColumnWidthTw_39_14"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col14_AfterColumn)"/>
            <xsl:text>\clvertalb\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl39_Col15_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col14_AfterColumn + $altova:nColumnWidthTw_39_15"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col15_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle39"/>
            <xsl:value-of select="$altova:RowStyle140"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1447\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>lijst</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1448\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateResult-EK-6-12_lijst"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictVoteA">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="1"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_1 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictVoteB">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="1"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_2 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictVoteA">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="2"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_3 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictVoteB">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="2"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_4 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictVoteA">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="3"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_5 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictVoteB">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="3"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_6 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictVoteA">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="4"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_7 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictVoteB">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="4"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_8 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictVoteA">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="5"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_9 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictVoteB">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="5"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_10 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictVoteA">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="6"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_11 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictVoteB">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="6"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_12 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictVoteA">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="7"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_13 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="DistrictVoteB">
            <xsl:with-param name="part" select="2"/>
            <xsl:with-param name="position" select="7"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_14 div 1440) - 0.01042 - 0.01042"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1449\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>stemmen</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1450\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateResult-EK-6-12_stemmen"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1451\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>*</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1452\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateResult-EK-6-12_FootnoteSign1"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend39"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle39"/>
        <xsl:value-of select="$altova:RowStyle140"/>
        <xsl:value-of select="$rowend39"/>
        <xsl:for-each select="rg:CandidateAndResult[position()&gt;=$fromLine and position()&lt;=$tillLine]">
            <xsl:variable name="altova:RowStyle141">
                <xsl:text>\trrh0</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl39" select="$altova:nTableIndentTw_39"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl39_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl39 + $altova:nColumnWidthTw_39_0"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col0_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl39_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col0_AfterColumn + $altova:nColumnWidthTw_39_1"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col1_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl39_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col1_AfterColumn + $altova:nColumnWidthTw_39_2"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col2_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl39_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col2_AfterColumn + $altova:nColumnWidthTw_39_3"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col3_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl39_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col3_AfterColumn + $altova:nColumnWidthTw_39_4"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col4_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl39_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col4_AfterColumn + $altova:nColumnWidthTw_39_5"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col5_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl39_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col5_AfterColumn + $altova:nColumnWidthTw_39_6"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col6_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl39_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col6_AfterColumn + $altova:nColumnWidthTw_39_7"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col7_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl39_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col7_AfterColumn + $altova:nColumnWidthTw_39_8"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col8_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl39_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col8_AfterColumn + $altova:nColumnWidthTw_39_9"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col9_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl39_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col9_AfterColumn + $altova:nColumnWidthTw_39_10"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col10_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl39_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col10_AfterColumn + $altova:nColumnWidthTw_39_11"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col11_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl39_Col12_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col11_AfterColumn + $altova:nColumnWidthTw_39_12"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col12_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl39_Col13_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col12_AfterColumn + $altova:nColumnWidthTw_39_13"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col13_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl39_Col14_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col13_AfterColumn + $altova:nColumnWidthTw_39_14"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col14_AfterColumn)"/>
                <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl39_Col15_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col14_AfterColumn + $altova:nColumnWidthTw_39_15"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col15_AfterColumn)"/>
            </xsl:variable>
            <xsl:if test="$templatetablelevel + 1 = 1">
                <xsl:value-of select="$tablestyle39"/>
                <xsl:value-of select="$altova:RowStyle141"/>
            </xsl:if>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="CandidateId">
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_0 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend39"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="part" select="2"/>
                <xsl:with-param name="position" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_1 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend39"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="part" select="2"/>
                <xsl:with-param name="position" select="1"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_2 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend39"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="part" select="2"/>
                <xsl:with-param name="position" select="2"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_3 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend39"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="part" select="2"/>
                <xsl:with-param name="position" select="2"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_4 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend39"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="part" select="2"/>
                <xsl:with-param name="position" select="3"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_5 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend39"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="part" select="2"/>
                <xsl:with-param name="position" select="3"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_6 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend39"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="part" select="2"/>
                <xsl:with-param name="position" select="4"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_7 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend39"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="part" select="2"/>
                <xsl:with-param name="position" select="4"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_8 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend39"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="part" select="2"/>
                <xsl:with-param name="position" select="5"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_9 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend39"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="part" select="2"/>
                <xsl:with-param name="position" select="5"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_10 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend39"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="part" select="2"/>
                <xsl:with-param name="position" select="6"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_11 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend39"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="part" select="2"/>
                <xsl:with-param name="position" select="6"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_12 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend39"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="part" select="2"/>
                <xsl:with-param name="position" select="7"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_13 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend39"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="part" select="2"/>
                <xsl:with-param name="position" select="7"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_14 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend39"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="Vote">
                <xsl:with-param name="part" select="2"/>
                <xsl:with-param name="position" select="8"/>
                <xsl:with-param name="alle" select="1"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_15 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend39"/>
            <xsl:if test="$templatetablelevel + 1 > 1">
                <xsl:text>{\*\nesttableprops</xsl:text>
            </xsl:if>
            <xsl:value-of select="$tablestyle39"/>
            <xsl:value-of select="$altova:RowStyle141"/>
            <xsl:value-of select="$rowend39"/>
        </xsl:for-each>
        <xsl:for-each select="rg:VotesInElectoralDistrictPart[position()=2 and $remainingCandidates &lt; 1]">
            <xsl:variable name="altova:RowStyle142">
                <xsl:text>\trrh0</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl39" select="$altova:nTableIndentTw_39"/>
                <xsl:text>\clvertalc\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl39_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl39 + $altova:nColumnWidthTw_39_0"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col0_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl39_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col0_AfterColumn + $altova:nColumnWidthTw_39_1"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col1_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl39_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col1_AfterColumn + $altova:nColumnWidthTw_39_2"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col2_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl39_Col3_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col2_AfterColumn + $altova:nColumnWidthTw_39_3"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col3_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl39_Col4_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col3_AfterColumn + $altova:nColumnWidthTw_39_4"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col4_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl39_Col5_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col4_AfterColumn + $altova:nColumnWidthTw_39_5"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col5_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl39_Col6_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col5_AfterColumn + $altova:nColumnWidthTw_39_6"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col6_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl39_Col7_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col6_AfterColumn + $altova:nColumnWidthTw_39_7"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col7_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl39_Col8_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col7_AfterColumn + $altova:nColumnWidthTw_39_8"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col8_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl39_Col9_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col8_AfterColumn + $altova:nColumnWidthTw_39_9"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col9_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl39_Col10_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col9_AfterColumn + $altova:nColumnWidthTw_39_10"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col10_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl39_Col11_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col10_AfterColumn + $altova:nColumnWidthTw_39_11"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col11_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl39_Col12_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col11_AfterColumn + $altova:nColumnWidthTw_39_12"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col12_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl39_Col13_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col12_AfterColumn + $altova:nColumnWidthTw_39_13"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col13_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl39_Col14_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col13_AfterColumn + $altova:nColumnWidthTw_39_14"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col14_AfterColumn)"/>
                <xsl:text>\clvertalt\clbrdrt\brdrs\brdrcf1\brdrw15\clbrdrb\brdrs\brdrcf1\brdrw15\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
                <xsl:text>\cellx</xsl:text>
                <xsl:variable name="altova:CurrGridPos_Tbl39_Col15_AfterColumn" select="$altova:CurrGridPos_Tbl39_Col14_AfterColumn + $altova:nColumnWidthTw_39_15"/>
                <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl39_Col15_AfterColumn)"/>
            </xsl:variable>
            <xsl:if test="$templatetablelevel + 1 = 1">
                <xsl:value-of select="$tablestyle39"/>
                <xsl:value-of select="$altova:RowStyle142"/>
            </xsl:if>
            <xsl:text>\pard</xsl:text>
            <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
            <xsl:text>\itap</xsl:text>
            <xsl:value-of select="$templatetablelevel + 1"/>
            <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs1453\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Totaal</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs1454\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_OverviewCandidateResult-EK-6-12_Totaal2"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend39"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_1 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend39"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="1"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_2 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend39"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="2"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_3 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend39"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="2"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_4 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend39"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="3"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_5 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend39"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="3"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_6 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend39"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="4"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_7 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend39"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="4"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_8 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend39"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="5"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_9 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend39"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="5"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_10 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend39"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="6"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_11 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend39"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="6"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_12 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend39"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="7"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_13 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend39"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="7"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_14 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend39"/>
            <xsl:text>\qr\sl0\f1\fs22 </xsl:text>
            <xsl:call-template name="TotalVotes2">
                <xsl:with-param name="position" select="8"/>
                <xsl:with-param name="alle" select="1"/>
                <xsl:with-param name="weighted" select="1"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_39_15 div 1440) - 0.01042 - 0.01042"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
            <xsl:text>\f0\fs24</xsl:text>
            <xsl:value-of select="$cellend39"/>
            <xsl:if test="$templatetablelevel + 1 > 1">
                <xsl:text>{\*\nesttableprops</xsl:text>
            </xsl:if>
            <xsl:value-of select="$tablestyle39"/>
            <xsl:value-of select="$altova:RowStyle142"/>
            <xsl:value-of select="$rowend39"/>
        </xsl:for-each>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 0"/>
        <xsl:text> </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1455\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>* </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1456\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateResult-EK-6-12_FootnoteSign2"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1457\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Voor zover sprake is van gelijkluidende lijsten.</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1458\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_OverviewCandidateResult-EK-6-12_VoorZoverSprake"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="ResidualSeatsAssignment">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="articleLoting" select="&apos;&apos;"/>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1459\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>De restzetels zijn met toepassing van artikel </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1460\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_ResidualSeatsAssignment_restzetelsZijn"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
            <xsl:when test="//kr:ElectionSubcategory[ text() != &quot;EK&quot; ]">
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs1461\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>P 7</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs1462\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_ResidualSeatsAssignment_P7"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:when>
            <xsl:otherwise>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs1463\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>U 9</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs1464\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_ResidualSeatsAssignment_U9"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1465\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text> van de Kieswet toegewezen aan de </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1466\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_ResidualSeatsAssignment_toegewezen"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:if test="//kr:ElectionSubcategory[ text() != &quot;EK&quot; ]">
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs1467\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>lijstencombinaties onderscheidenlijk </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs1468\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP22_ResidualSeatsAssignment_lijstencombinaties"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:if>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1469\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>lijsten die na toewijzing van de zetel het grootste </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1470\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_ResidualSeatsAssignment_naToewijzing"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
            <xsl:when test="//kr:ElectionSubcategory[ text() != &quot;EK&quot; ]">
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs1471\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>gemiddeld</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs1472\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_ResidualSeatsAssignment_gemiddeld"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:when>
            <xsl:otherwise>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs1473\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>gemiddelde</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs1474\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP22_ResidualSeatsAssignment_gemiddelde"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1475\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text> aantal stemmen per zetel hebben.</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1476\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_ResidualSeatsAssignment_stemmenPerZetel"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:call-template name="LineBreak">
            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
        </xsl:call-template>
        <xsl:for-each select="rg:RG520">
            <xsl:call-template name="OverviewDHondtAssignment">
                <xsl:with-param name="articleLoting" select="$articleLoting"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
            </xsl:call-template>
            <xsl:call-template name="OverviewDHondtAssignmentSpecial">
                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
            </xsl:call-template>
        </xsl:for-each>
    </xsl:template>
    <xsl:template name="AssignmentWithinListGroups">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:for-each select="rg:RG520">
            <xsl:choose>
                <xsl:when test="count(rg:AssignmentWithinListGroups) &gt; 0">
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs1477\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>De aan de lijstengroepen toegewezen zetels zijn ingevolge artikel </xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs1478\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_AssignmentWithinListGroups_lijstengroepenToegewezen"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:choose>
                        <xsl:when test="//kr:ElectionSubcategory[ text() != &quot;EK&quot; ]">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs1479\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>P 12</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs1480\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP22_AssignmentWithinListGroups_P12"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs1481\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>U 12</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs1482\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP22_AssignmentWithinListGroups_U12"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs1483\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text> van de Kieswet als volgt verdeeld over de verbonden lijsten. Eerst is de groepskiesdeler vastgesteld door het stemcijfer van de lijstengroep te delen door het aantal aan die groep toegewezen zetels. Vervolgens is de groepskiesdeler gedeeld op de stemcijfers van de lijsten waaruit de groep bestaat. Aan elk van de lijsten is het aantal zetels toegewezen overeenkomend met het aldus voor de desbetreffende lijst verkregen quotiënt. De restzetels zijn toegewezen aan de lijsten die bij genoemde deling de grootste overschotten hebben.</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs1484\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_AssignmentWithinListGroups_Kieswet"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:call-template name="LineBreak">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                    <xsl:text>\page </xsl:text>
                    <xsl:call-template name="OverviewAssignmentWithinListGroups">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs1485\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>Niet van toepassing.</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs1486\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP22_AssignmentWithinListGroups_NietVanToepassing"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:call-template name="LineBreak">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                    <xsl:text>\page </xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:for-each>
    </xsl:template>
    <xsl:template name="CandidateId">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:for-each select="eml:Candidate">
            <xsl:for-each select="eml:CandidateIdentifier">
                <xsl:for-each select="@Id">
                    <xsl:text>{\cs1487\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:for-each>
        </xsl:for-each>
    </xsl:template>
    <xsl:template name="Vote">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="part" select="1"/>
        <xsl:param name="position" select="&apos;&apos;"/>
        <xsl:param name="alle" select="0"/>
        <xsl:param name="weighted" select="0"/>
        <xsl:choose>
            <xsl:when test="rg:VotesInElectoralDistrictPart[position() = $part] / rg:VotesInElectoralDistrict[($alle = 1 and (@id = &apos;alle&apos; or position() = $position)) or ($alle = 0 and @id != &apos;alle&apos; and position() = $position)]">
                <xsl:for-each select="rg:VotesInElectoralDistrictPart[position() = $part]">
                    <xsl:for-each select="rg:VotesInElectoralDistrict[($alle = 1 and (@id = &apos;alle&apos; or position() = $position)) or ($alle = 0 and @id != &apos;alle&apos; and position() = $position)]">
                        <xsl:choose>
                            <xsl:when test="$weighted = 0">
                                <xsl:text>{\cs1488\f1\fs20 </xsl:text>
                                <xsl:apply-templates>
                                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                                </xsl:apply-templates>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:when test="$weighted = 1">
                                <xsl:for-each select="@weighted">
                                    <xsl:text>{\cs1489\f1\fs20 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="string(.)"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:for-each>
                            </xsl:when>
                        </xsl:choose>
                    </xsl:for-each>
                </xsl:for-each>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1490\cf140\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>.</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="DistrictNumber">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="part" select="1"/>
        <xsl:param name="position" select="&apos;&apos;"/>
        <xsl:param name="alle" select="0"/>
        <xsl:for-each select="rg:CandidateAndResult[position() = 1]">
            <xsl:for-each select="rg:VotesInElectoralDistrictPart[position() = $part]">
                <xsl:for-each select="rg:VotesInElectoralDistrict">
                    <xsl:choose>
                        <xsl:when test="$alle = 1 and @id = &apos;alle&apos;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs1491\f1\fs20 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>Totaal</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs1492\f1\fs20 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP22_DistrictNumber_Totaal"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:text>\par </xsl:text>
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs1493\f1\fs20 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>aantal</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs1494\f1\fs20 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP22_DistrictNumber_aantal"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:text>\par </xsl:text>
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs1495\f1\fs20 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>stemmen</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs1496\f1\fs20 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP22_DistrictNumber_stemmen"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test="position() = $position and @id != &apos;alle&apos;">
                            <xsl:for-each select="@id">
                                <xsl:text>{\cs1497\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="string(.)"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:for-each>
                        </xsl:when>
                    </xsl:choose>
                </xsl:for-each>
            </xsl:for-each>
        </xsl:for-each>
    </xsl:template>
    <xsl:template name="DistrictNumberTop">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="part" select="1"/>
        <xsl:param name="position" select="&apos;&apos;"/>
        <xsl:param name="alle" select="0"/>
        <xsl:param name="aantal" select="0"/>
        <xsl:for-each select="rg:CandidateAndResult[position() = 1]">
            <xsl:for-each select="rg:VotesInElectoralDistrictPart[position() = $part]">
                <xsl:for-each select="rg:VotesInElectoralDistrict">
                    <xsl:if test="$alle = 1 and @id = &apos;alle&apos;">
                        <xsl:choose>
                            <xsl:when test="$aantal = 1">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\cs1498\f1\fs20 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text>Totaal</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\cs1499\f1\fs20 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP22_DistrictNumber_Totaal"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <xsl:text>\par </xsl:text>
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\cs1500\f1\fs20 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text>aantal</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\cs1501\f1\fs20 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP22_DistrictNumber_aantal"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\cs1502\f1\fs20 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text>Totaal</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\cs1503\f1\fs20 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP22_DistrictNumber_Totaal"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:if>
                </xsl:for-each>
            </xsl:for-each>
        </xsl:for-each>
    </xsl:template>
    <xsl:template name="DistrictNumberBottom">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="part" select="1"/>
        <xsl:param name="position" select="&apos;&apos;"/>
        <xsl:param name="alle" select="0"/>
        <xsl:param name="aantal" select="1"/>
        <xsl:for-each select="rg:CandidateAndResult[position() = 1]">
            <xsl:for-each select="rg:VotesInElectoralDistrictPart[position() = $part]">
                <xsl:for-each select="rg:VotesInElectoralDistrict">
                    <xsl:choose>
                        <xsl:when test="$alle = 1 and @id = &apos;alle&apos;">
                            <xsl:if test="$aantal = 1">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\cs1504\f1\fs20 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text>aantal</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\cs1505\f1\fs20 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP22_DistrictNumber_aantal"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <xsl:text>\par </xsl:text>
                            </xsl:if>
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs1506\f1\fs20 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>stemmen</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs1507\f1\fs20 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP22_DistrictNumber_stemmen"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test="position() = $position and @id != &apos;alle&apos;">
                            <xsl:for-each select="@id">
                                <xsl:text>{\cs1508\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="string(.)"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:for-each>
                        </xsl:when>
                    </xsl:choose>
                </xsl:for-each>
            </xsl:for-each>
        </xsl:for-each>
    </xsl:template>
    <xsl:template name="TotalVotes">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="part" select="1"/>
        <xsl:param name="position" select="&apos;&apos;"/>
        <xsl:param name="alle" select="0"/>
        <xsl:param name="weighted" select="0"/>
        <xsl:for-each select="rg:VotesInElectoralDistrictPart[position() = $part]">
            <xsl:for-each select="rg:VotesInElectoralDistrict[($alle = 1 and (@id = &apos;alle&apos; or position() = $position)) or ($alle = 0 and @id != &apos;alle&apos; and position() = $position)]">
                <xsl:choose>
                    <xsl:when test="$weighted = 0">
                        <xsl:text>{\cs1509\f1\fs20 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:when test="$weighted = 1">
                        <xsl:for-each select="@weighted">
                            <xsl:text>{\cs1510\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="string(.)"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                    </xsl:when>
                </xsl:choose>
            </xsl:for-each>
        </xsl:for-each>
    </xsl:template>
    <xsl:template name="TotalVotes2">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="position" select="&apos;&apos;"/>
        <xsl:param name="alle" select="0"/>
        <xsl:param name="weighted" select="0"/>
        <xsl:for-each select="rg:VotesInElectoralDistrict[($alle = 1 and (@id = &apos;alle&apos; or position() = $position)) or ($alle = 0 and @id != &apos;alle&apos; and position() = $position)]">
            <xsl:choose>
                <xsl:when test="$weighted = 0">
                    <xsl:text>{\cs1511\f1\fs20 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:when test="$weighted = 1">
                    <xsl:for-each select="@weighted">
                        <xsl:text>{\cs1512\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="string(.)"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:when>
            </xsl:choose>
        </xsl:for-each>
    </xsl:template>
    <xsl:template name="PartyHeaderEvenOdd">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="isEvenOdd"/>
        <xsl:param name="isSeats"/>
        <xsl:param name="ab"/>
        <xsl:choose>
            <xsl:when test="count(rg:CandidateAndResult[position() = 1]/rg:VotesInElectoralDistrictPart) = 2 and $isEvenOdd = 1">
                <xsl:if test="$SV_OutputFormat = &apos;RTF&apos;">
                    <xsl:text>\page </xsl:text>
                </xsl:if>
                <xsl:text>\par\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s0\f0\fs24\sl0\fs22\s1513\s1514\sl0\f1\fs22 </xsl:text>
                <xsl:if test="$SV_OutputFormat = &apos;PDF&apos;">
                    <xsl:text>\par </xsl:text>
                </xsl:if>
                <xsl:call-template name="PartyHeader2or4Lines">
                    <xsl:with-param name="isSeats" select="$isSeats"/>
                    <xsl:with-param name="ab" select="$ab"/>
                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                </xsl:call-template>
                <xsl:text>\s0\f0\fs24</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>\page </xsl:text>
                <xsl:text>\par\par</xsl:text>
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s0\f0\fs24\sl0\fs22\s1515\s1516\sl0\f1\fs22 </xsl:text>
                <xsl:call-template name="PartyHeader2or4Lines">
                    <xsl:with-param name="isSeats" select="$isSeats"/>
                    <xsl:with-param name="ab" select="$ab"/>
                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                </xsl:call-template>
                <xsl:text>\s0\f0\fs24</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="PartyHeader2or4Lines">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="isSeats"/>
        <xsl:param name="ab"/>
        <xsl:choose>
            <xsl:when test="$isSeats = 1">
                <xsl:call-template name="PartyHeader4Lines">
                    <xsl:with-param name="ab" select="$ab"/>
                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
                <xsl:call-template name="PartyHeader2Lines">
                    <xsl:with-param name="ab" select="$ab"/>
                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="DistrictVoteA">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="part" select="1"/>
        <xsl:param name="position" select="&apos;&apos;"/>
        <xsl:if test="rg:CandidateAndResult[position()=1]/rg:VotesInElectoralDistrictPart[position()=$part]/rg:VotesInElectoralDistrict[position()=$position and @id!=&apos;alle&apos;]">
            <xsl:text>{\cs1517\f1\fs20 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text>A</xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
        </xsl:if>
    </xsl:template>
    <xsl:template name="DistrictVoteB">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="part" select="1"/>
        <xsl:param name="position" select="&apos;&apos;"/>
        <xsl:if test="rg:CandidateAndResult[position()=1]/rg:VotesInElectoralDistrictPart[position()=$part]/rg:VotesInElectoralDistrict[position()=$position and @id!=&apos;alle&apos;]">
            <xsl:text>{\cs1518\f1\fs20 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text>B</xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
        </xsl:if>
    </xsl:template>
    <xsl:template name="DistrictABLine">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="part" select="1"/>
        <xsl:param name="position" select="&apos;&apos;"/>
        <xsl:if test="rg:CandidateAndResult[position()=1]/rg:VotesInElectoralDistrictPart[position()=$part]/rg:VotesInElectoralDistrict[position()=$position and @id!=&apos;alle&apos;]">
            <xsl:text>{\cs1519\f1\fs20 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text>_____</xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
        </xsl:if>
    </xsl:template>
    <xsl:template name="ProvincesTable">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:variable name="altova:CurrContextGrid_06BEB880" select="."/>
        <xsl:variable name="altova:nTableWidthIn_40" select="$altova:nMaxWidthIn * 1.00000"/>
        <xsl:variable name="altova:nTableWidthTw_40" select="$altova:nTableWidthIn_40 * 1440"/>
        <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_40" select="round($altova:nTableWidthTw_40 * 0.25)"/>
        <xsl:variable name="altova:nTableIndentTw_40" select="0"/>
        <xsl:variable name="altova:nSumColumnWidthsTw_40" select="round(0.00 + 1.00 * $altova:nTableWidthTw_40)"/>
        <xsl:variable name="altova:TableWidthFactor_40">
            <xsl:choose>
                <xsl:when test="$altova:nSumColumnWidthsTw_40 &gt; $altova:nTableWidthTw_40">
                    <xsl:value-of select="$altova:nTableWidthTw_40 div $altova:nSumColumnWidthsTw_40"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="1"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnWidthTw_40_0" select="round($altova:nTableWidthTw_40 * 0.33 * $altova:TableWidthFactor_40)"/>
        <xsl:variable name="altova:nColumnWidthTw_40_1" select="round($altova:nTableWidthTw_40 * 0.33 * $altova:TableWidthFactor_40)"/>
        <xsl:variable name="altova:nColumnWidthTw_40_2" select="round($altova:nTableWidthTw_40 * 0.33 * $altova:TableWidthFactor_40)"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:variable name="tablestyle40">
            <xsl:text>\trowd\trleft</xsl:text>
            <xsl:value-of select="$altova:nTableIndentTw_40"/>
            <xsl:text>\ts1520\ts1521\ts1522\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrs\brdrcf1\brdrw15\trbrdrl\brdrnil\trbrdrb\brdrs\brdrcf1\brdrw15\trbrdrr\brdrnil</xsl:text>
        </xsl:variable>
        <xsl:variable name="rowend40">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\row\pard</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="cellend40">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\cell</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestcell</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:RowStyle143">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl40" select="$altova:nTableIndentTw_40"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl40_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl40 + $altova:nColumnWidthTw_40_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl40_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl40_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl40_Col0_AfterColumn + $altova:nColumnWidthTw_40_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl40_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl40_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl40_Col1_AfterColumn + $altova:nColumnWidthTw_40_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl40_Col2_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle40"/>
            <xsl:value-of select="$altova:RowStyle143"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1523\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>1. Groningen</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1524\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_ProvincesTable_1"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend40"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1525\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>5. Flevoland</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1526\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_ProvincesTable_5"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend40"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1527\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>9. Zuid-Holland</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1528\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_ProvincesTable_9"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend40"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle40"/>
        <xsl:value-of select="$altova:RowStyle143"/>
        <xsl:value-of select="$rowend40"/>
        <xsl:variable name="altova:RowStyle144">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl40" select="$altova:nTableIndentTw_40"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl40_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl40 + $altova:nColumnWidthTw_40_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl40_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl40_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl40_Col0_AfterColumn + $altova:nColumnWidthTw_40_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl40_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl40_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl40_Col1_AfterColumn + $altova:nColumnWidthTw_40_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl40_Col2_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle40"/>
            <xsl:value-of select="$altova:RowStyle144"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1529\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>2. Fryslân</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1530\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_ProvincesTable_2"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend40"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1531\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>6. Gelderland</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1532\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_ProvincesTable_6"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend40"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1533\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>10. Zeeland</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1534\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_ProvincesTable_10"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend40"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle40"/>
        <xsl:value-of select="$altova:RowStyle144"/>
        <xsl:value-of select="$rowend40"/>
        <xsl:variable name="altova:RowStyle145">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl40" select="$altova:nTableIndentTw_40"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl40_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl40 + $altova:nColumnWidthTw_40_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl40_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl40_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl40_Col0_AfterColumn + $altova:nColumnWidthTw_40_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl40_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl40_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl40_Col1_AfterColumn + $altova:nColumnWidthTw_40_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl40_Col2_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle40"/>
            <xsl:value-of select="$altova:RowStyle145"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1535\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>3. Drenthe</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1536\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_ProvincesTable_3"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend40"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1537\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>7. Utrecht</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1538\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_ProvincesTable_7"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend40"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1539\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>11. Noord-Brabant</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1540\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_ProvincesTable_11"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend40"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle40"/>
        <xsl:value-of select="$altova:RowStyle145"/>
        <xsl:value-of select="$rowend40"/>
        <xsl:variable name="altova:RowStyle146">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl40" select="$altova:nTableIndentTw_40"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl40_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl40 + $altova:nColumnWidthTw_40_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl40_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl40_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl40_Col0_AfterColumn + $altova:nColumnWidthTw_40_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl40_Col1_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl40_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl40_Col1_AfterColumn + $altova:nColumnWidthTw_40_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl40_Col2_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle40"/>
            <xsl:value-of select="$altova:RowStyle146"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1541\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>4. Overijssel</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1542\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_ProvincesTable_4"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend40"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1543\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>8. Noord-Holland</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1544\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_ProvincesTable_8"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend40"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1545\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>12. Limburg</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1546\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP22_ProvincesTable_12"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend40"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle40"/>
        <xsl:value-of select="$altova:RowStyle146"/>
        <xsl:value-of select="$rowend40"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 0"/>
        <xsl:text> </xsl:text>
    </xsl:template>
    <xsl:template name="CandidateListSubmitted">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="districtId"/>
        <xsl:param name="smaller" select="1"/>
        <xsl:for-each select="rg:SubmittedInElectoralDistrict[position() = $districtId]">
            <xsl:choose>
                <xsl:when test=". = &quot;true&quot;">
                    <xsl:choose>
                        <xsl:when test="$smaller = 1">
                            <xsl:text>{\cs1547\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>*</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs1548\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>*</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:choose>
                        <xsl:when test="$smaller = 1">
                            <xsl:text>{\cs1549\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>·</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs1550\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>·</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:for-each>
    </xsl:template>
    <xsl:template name="CandidateListSubmittedHeader">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="districtId"/>
        <xsl:param name="smaller" select="1"/>
        <xsl:for-each select="rg:OverviewOfListsAndDistricts[position() = 1]">
            <xsl:for-each select="rg:SubmittedInElectoralDistrict[position() = $districtId]">
                <xsl:choose>
                    <xsl:when test="$smaller = 1">
                        <xsl:for-each select="@id">
                            <xsl:text>{\cs1551\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="string(.)"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:for-each select="@id">
                            <xsl:text>{\cs1552\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="string(.)"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:for-each>
        </xsl:for-each>
    </xsl:template>
    <xsl:template name="ListOrCombinedListPart2">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:if test="count(rg:ListOrCombinedList/rg:ListInCombination) &gt;0">
            <xsl:text>{\cs1553\f1\fs20 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text>(</xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:for-each select="rg:ListOrCombinedList">
                <xsl:for-each select="rg:ListInCombination">
                    <xsl:text>{\cs1554\f1\fs20 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                    <xsl:if test="position() != last()">
                        <xsl:text>{\cs1555\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>, </xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:if>
                </xsl:for-each>
            </xsl:for-each>
            <xsl:text>{\cs1556\f1\fs20 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text>)</xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
        </xsl:if>
        <xsl:choose>
            <xsl:when test="//kr:ElectionSubcategory[text()= &apos;PS2&apos; or text()= &apos;TK&apos;]">
                <xsl:for-each select="rg:ListOrCombinedList">
                    <xsl:if test="@districtNumber">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1557\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>(Kieskring </xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1558\f1\fs20 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP22_ListOrCombinedListPart2_Kieskring"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:for-each select="@districtNumber">
                            <xsl:text>{\cs1559\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="string(.)"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                            <xsl:text>{\cs1560\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>)</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                    </xsl:if>
                </xsl:for-each>
            </xsl:when>
            <xsl:when test="//kr:ElectionSubcategory[text()= &apos;EK&apos;]">
                <xsl:for-each select="rg:ListOrCombinedList">
                    <xsl:if test="@provinceName">
                        <xsl:for-each select="@provinceName">
                            <xsl:text>{\cs1561\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>(</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                            <xsl:text>{\cs1562\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="string(.)"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                            <xsl:text>{\cs1563\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>)</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                    </xsl:if>
                </xsl:for-each>
            </xsl:when>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="ElectionName">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="isBold" select="0"/>
        <xsl:if test="0=1">
            <xsl:text>{\cs1564\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text>Election name including date</xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:text>\par </xsl:text>
        </xsl:if>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1565\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>de verkiezing van de leden van </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1566\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP_ElectionName_verkiezingLeden"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:call-template name="ElectionNameSimple">
            <xsl:with-param name="isBold" select="$isBold"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
        </xsl:call-template>
        <xsl:call-template name="ElectionDomain">
            <xsl:with-param name="isBold" select="$isBold"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
        </xsl:call-template>
        <xsl:for-each select="eml:ElectionIdentifier">
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs1567\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> op </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs1568\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP_ElectionName_op"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:for-each select="kr:ElectionDate">
                <xsl:call-template name="Date">
                    <xsl:with-param name="isBold" select="$isBold"/>
                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                </xsl:call-template>
            </xsl:for-each>
        </xsl:for-each>
    </xsl:template>
    <xsl:template name="PartyName">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="isBold" select="0"/>
        <xsl:if test="$isBold=0">
            <xsl:choose>
                <xsl:when test="./eml:AffiliationIdentifier/eml:RegisteredName[text() != &quot;&quot;]">
                    <xsl:for-each select="eml:AffiliationIdentifier">
                        <xsl:for-each select="eml:RegisteredName">
                            <xsl:text>{\cs1569\f1\fs22 </xsl:text>
                            <xsl:apply-templates>
                                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                            </xsl:apply-templates>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                    </xsl:for-each>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs1570\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>niet van toepassing (blanco lijst)</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs1571\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP_PartyName_blancoLijst"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:if>
        <xsl:if test="$isBold=1">
            <xsl:choose>
                <xsl:when test="./eml:AffiliationIdentifier/eml:RegisteredName[text() != &quot;&quot;]">
                    <xsl:for-each select="eml:AffiliationIdentifier">
                        <xsl:for-each select="eml:RegisteredName">
                            <xsl:text>{\cs1572\f1\fs22\b </xsl:text>
                            <xsl:apply-templates>
                                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                            </xsl:apply-templates>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                    </xsl:for-each>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs1573\f1\fs22\b </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>niet van toepassing (blanco lijst)</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs1574\f1\fs22\b </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP_PartyName_blancoLijst"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:if>
    </xsl:template>
    <xsl:template name="LastNameH1">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="isBold" select="0"/>
        <xsl:param name="fontSize" select="&apos;normal&apos;"/>
        <xsl:if test="0=1">
            <xsl:text>{\cs1575\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text>Displays the last name &quot;Baron van der Zaag jr.&quot; (name components a+b+c+d).</xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:text>\par </xsl:text>
        </xsl:if>
        <xsl:if test="$fontSize=&apos;normal&apos;">
            <xsl:if test="$isBold=0">
                <xsl:for-each select="xnl:PersonName">
                    <xsl:for-each select="xnl:NamePrefix">
                        <xsl:text>{\cs1576\f1\fs22 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                        <xsl:if test=". != &apos;&apos;">
                            <xsl:call-template name="Space">
                                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                            </xsl:call-template>
                        </xsl:if>
                    </xsl:for-each>
                    <xsl:for-each select="xnl:LastName">
                        <xsl:text>{\cs1577\f1\fs22 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
            </xsl:if>
            <xsl:if test="$isBold=1">
                <xsl:for-each select="xnl:PersonName">
                    <xsl:for-each select="xnl:NamePrefix">
                        <xsl:text>{\cs1578\f1\fs22\b </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                        <xsl:if test=". != &apos;&apos;">
                            <xsl:call-template name="Space">
                                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                            </xsl:call-template>
                        </xsl:if>
                    </xsl:for-each>
                    <xsl:for-each select="xnl:LastName">
                        <xsl:text>{\cs1579\f1\fs22\b </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
            </xsl:if>
        </xsl:if>
        <xsl:if test="$fontSize=&apos;smaller&apos;">
            <xsl:if test="$isBold=0">
                <xsl:for-each select="xnl:PersonName">
                    <xsl:for-each select="xnl:NamePrefix">
                        <xsl:text>{\cs1580\f1\fs20 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                        <xsl:if test=". != &apos;&apos;">
                            <xsl:call-template name="Space">
                                <xsl:with-param name="fontSize" select="$fontSize"/>
                                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                            </xsl:call-template>
                        </xsl:if>
                    </xsl:for-each>
                    <xsl:for-each select="xnl:LastName">
                        <xsl:text>{\cs1581\f1\fs20 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
            </xsl:if>
            <xsl:if test="$isBold=1">
                <xsl:for-each select="xnl:PersonName">
                    <xsl:for-each select="xnl:NamePrefix">
                        <xsl:text>{\cs1582\f1\fs20\b </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                        <xsl:if test=". != &apos;&apos;">
                            <xsl:call-template name="Space">
                                <xsl:with-param name="fontSize" select="$fontSize"/>
                                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                            </xsl:call-template>
                        </xsl:if>
                    </xsl:for-each>
                    <xsl:for-each select="xnl:LastName">
                        <xsl:text>{\cs1583\f1\fs20\b </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
            </xsl:if>
        </xsl:if>
        <xsl:if test="$fontSize=&apos;x-small&apos;">
            <xsl:if test="$isBold=0">
                <xsl:for-each select="xnl:PersonName">
                    <xsl:for-each select="xnl:NamePrefix">
                        <xsl:text>{\cs1584\f1\fs18 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                        <xsl:if test=". != &apos;&apos;">
                            <xsl:call-template name="Space">
                                <xsl:with-param name="fontSize" select="$fontSize"/>
                                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                            </xsl:call-template>
                        </xsl:if>
                    </xsl:for-each>
                    <xsl:for-each select="xnl:LastName">
                        <xsl:text>{\cs1585\f1\fs18 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
            </xsl:if>
            <xsl:if test="$isBold=1">
                <xsl:for-each select="xnl:PersonName">
                    <xsl:for-each select="xnl:NamePrefix">
                        <xsl:text>{\cs1586\f1\fs18\b </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                        <xsl:if test=". != &apos;&apos;">
                            <xsl:call-template name="Space">
                                <xsl:with-param name="fontSize" select="$fontSize"/>
                                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                            </xsl:call-template>
                        </xsl:if>
                    </xsl:for-each>
                    <xsl:for-each select="xnl:LastName">
                        <xsl:text>{\cs1587\f1\fs18\b </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
            </xsl:if>
        </xsl:if>
    </xsl:template>
    <xsl:template name="FirstNameH1">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="isBold" select="0"/>
        <xsl:param name="fontSize" select="&apos;normal&apos;"/>
        <xsl:if test="0=1">
            <xsl:text>{\cs1588\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text>Displays the initials and first name like &quot;H.H.G. (Henk)&quot; (name components e+f).</xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:text>\par </xsl:text>
        </xsl:if>
        <xsl:if test="$fontSize=&apos;normal&apos;">
            <xsl:if test="$isBold=0">
                <xsl:for-each select="xnl:PersonName">
                    <xsl:for-each select="xnl:NameLine">
                        <xsl:text>{\cs1589\f1\fs22 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                    <xsl:if test="count(xnl:NameLine[@NameType=&quot;Initials&quot; and text() != &quot;&quot;]) &gt; 0 and count(xnl:FirstName) &gt; 0">
                        <xsl:call-template name="Space">
                            <xsl:with-param name="fontSize" select="$fontSize"/>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:call-template>
                    </xsl:if>
                    <xsl:for-each select="xnl:FirstName">
                        <xsl:text>{\cs1590\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>(</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                        <xsl:text>{\cs1591\f1\fs22 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                        <xsl:text>{\cs1592\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>)</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
            </xsl:if>
            <xsl:if test="$isBold=1">
                <xsl:for-each select="xnl:PersonName">
                    <xsl:for-each select="xnl:NameLine">
                        <xsl:text>{\cs1593\f1\fs22\b </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                    <xsl:if test="count(xnl:NameLine[@NameType=&quot;Initials&quot; and text() != &quot;&quot;]) &gt; 0 and count(xnl:FirstName) &gt; 0">
                        <xsl:call-template name="Space">
                            <xsl:with-param name="fontSize" select="$fontSize"/>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:call-template>
                    </xsl:if>
                    <xsl:for-each select="xnl:FirstName">
                        <xsl:text>{\cs1594\f1\fs22\b </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>(</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                        <xsl:text>{\cs1595\f1\fs22\b </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                        <xsl:text>{\cs1596\f1\fs22\b </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>)</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
            </xsl:if>
        </xsl:if>
        <xsl:if test="$fontSize=&apos;smaller&apos;">
            <xsl:if test="$isBold=0">
                <xsl:for-each select="xnl:PersonName">
                    <xsl:for-each select="xnl:NameLine">
                        <xsl:text>{\cs1597\f1\fs20 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                    <xsl:if test="count(xnl:NameLine[@NameType=&quot;Initials&quot; and text() != &quot;&quot;]) &gt; 0 and count(xnl:FirstName) &gt; 0">
                        <xsl:call-template name="Space">
                            <xsl:with-param name="fontSize" select="$fontSize"/>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:call-template>
                    </xsl:if>
                    <xsl:for-each select="xnl:FirstName">
                        <xsl:text>{\cs1598\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>(</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                        <xsl:text>{\cs1599\f1\fs20 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                        <xsl:text>{\cs1600\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>)</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
            </xsl:if>
            <xsl:if test="$isBold=1">
                <xsl:for-each select="xnl:PersonName">
                    <xsl:for-each select="xnl:NameLine">
                        <xsl:text>{\cs1601\f1\fs20\b </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                    <xsl:if test="count(xnl:NameLine[@NameType=&quot;Initials&quot; and text() != &quot;&quot;]) &gt; 0 and count(xnl:FirstName) &gt; 0">
                        <xsl:call-template name="Space">
                            <xsl:with-param name="fontSize" select="$fontSize"/>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:call-template>
                    </xsl:if>
                    <xsl:for-each select="xnl:FirstName">
                        <xsl:text>{\cs1602\f1\fs20\b </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>(</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                        <xsl:text>{\cs1603\f1\fs20\b </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                        <xsl:text>{\cs1604\f1\fs20\b </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>)</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
            </xsl:if>
        </xsl:if>
        <xsl:if test="$fontSize=&apos;x-small&apos;">
            <xsl:if test="$isBold=0">
                <xsl:for-each select="xnl:PersonName">
                    <xsl:for-each select="xnl:NameLine">
                        <xsl:text>{\cs1605\f1\fs18 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                    <xsl:if test="count(xnl:NameLine[@NameType=&quot;Initials&quot; and text() != &quot;&quot;]) &gt; 0 and count(xnl:FirstName) &gt; 0">
                        <xsl:call-template name="Space">
                            <xsl:with-param name="fontSize" select="$fontSize"/>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:call-template>
                    </xsl:if>
                    <xsl:for-each select="xnl:FirstName">
                        <xsl:text>{\cs1606\f1\fs18 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>(</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                        <xsl:text>{\cs1607\f1\fs18 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                        <xsl:text>{\cs1608\f1\fs18 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>)</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
            </xsl:if>
            <xsl:if test="$isBold=1">
                <xsl:for-each select="xnl:PersonName">
                    <xsl:for-each select="xnl:NameLine">
                        <xsl:text>{\cs1609\f1\fs18\b </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                    <xsl:if test="count(xnl:NameLine[@NameType=&quot;Initials&quot; and text() != &quot;&quot;]) &gt; 0 and count(xnl:FirstName) &gt; 0">
                        <xsl:call-template name="Space">
                            <xsl:with-param name="fontSize" select="$fontSize"/>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:call-template>
                    </xsl:if>
                    <xsl:for-each select="xnl:FirstName">
                        <xsl:text>{\cs1610\f1\fs18\b </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>(</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                        <xsl:text>{\cs1611\f1\fs18\b </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                        <xsl:text>{\cs1612\f1\fs18\b </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>)</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
            </xsl:if>
        </xsl:if>
    </xsl:template>
    <xsl:template name="Gender">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="isBold" select="0"/>
        <xsl:param name="fontSize" select="&apos;normal&apos;"/>
        <xsl:if test="0=1">
            <xsl:text>{\cs1613\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text>Displays the gender as &quot; (m)&quot; or &quot; (v)&quot; with preceding blank (name component g), if @PublishGender = &quot;true&quot;.</xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:text>\par </xsl:text>
        </xsl:if>
        <xsl:if test="$fontSize = &apos;normal&apos;">
            <xsl:if test="$isBold=0">
                <xsl:if test="../kr:ListData/@PublishGender=&quot;true&quot;">
                    <xsl:for-each select="eml:Gender">
                        <xsl:choose>
                            <xsl:when test=".=&quot;male&quot;">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\cs1614\f1\fs22 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text> (m)</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\cs1615\f1\fs22 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP_Gender_m"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:when test=".=&quot;female&quot;">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\cs1616\f1\fs22 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text> (v)</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\cs1617\f1\fs22 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP_Gender_v"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:when test=".=&quot;unknown&quot;">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\cs1618\f1\fs22 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text> (f)</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\cs1619\f1\fs22 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP_Gender_unknown"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                        </xsl:choose>
                    </xsl:for-each>
                </xsl:if>
            </xsl:if>
            <xsl:if test="$isBold=1">
                <xsl:if test="../kr:ListData/@PublishGender=&quot;true&quot;">
                    <xsl:for-each select="eml:Gender">
                        <xsl:choose>
                            <xsl:when test=".=&quot;male&quot;">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\cs1620\f1\fs22\b </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text> (m)</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\cs1621\f1\fs22\b </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP_Gender_m"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:when test=".=&quot;female&quot;">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\cs1622\f1\fs22\b </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text> (v)</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\cs1623\f1\fs22\b </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP_Gender_v"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:when test=".=&quot;unknown&quot;">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\cs1624\f1\fs22\b </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text> (f)</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\cs1625\f1\fs22\b </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP_Gender_unknown"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                        </xsl:choose>
                    </xsl:for-each>
                </xsl:if>
            </xsl:if>
        </xsl:if>
        <xsl:if test="$fontSize = &apos;smaller&apos;">
            <xsl:if test="$isBold=0">
                <xsl:if test="../kr:ListData/@PublishGender=&quot;true&quot;">
                    <xsl:for-each select="eml:Gender">
                        <xsl:choose>
                            <xsl:when test=".=&quot;male&quot;">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\cs1626\f1\fs20 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text> (m)</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\cs1627\f1\fs20 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP_Gender_m"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:when test=".=&quot;female&quot;">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\cs1628\f1\fs20 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text> (v)</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\cs1629\f1\fs20 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP_Gender_v"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:when test=".=&quot;unknown&quot;">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\cs1630\f1\fs20 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text> (f)</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\cs1631\f1\fs20 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP_Gender_unknown"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                        </xsl:choose>
                    </xsl:for-each>
                </xsl:if>
            </xsl:if>
            <xsl:if test="$isBold=1">
                <xsl:if test="../kr:ListData/@PublishGender=&quot;true&quot;">
                    <xsl:for-each select="eml:Gender">
                        <xsl:choose>
                            <xsl:when test=".=&quot;male&quot;">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\cs1632\f1\fs20\b </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text> (m)</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\cs1633\f1\fs20\b </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP_Gender_m"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:when test=".=&quot;female&quot;">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\cs1634\f1\fs20\b </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text> (v)</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\cs1635\f1\fs20\b </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP_Gender_v"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:when test=".=&quot;unknown&quot;">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\cs1636\f1\fs20\b </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text> (f)</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\cs1637\f1\fs20\b </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP_Gender_unknown"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                        </xsl:choose>
                    </xsl:for-each>
                </xsl:if>
            </xsl:if>
        </xsl:if>
        <xsl:if test="$fontSize = &apos;x-small&apos;">
            <xsl:if test="$isBold=0">
                <xsl:if test="../kr:ListData/@PublishGender=&quot;true&quot;">
                    <xsl:for-each select="eml:Gender">
                        <xsl:choose>
                            <xsl:when test=".=&quot;male&quot;">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\cs1638\f1\fs18 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text> (m)</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\cs1639\f1\fs18 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP_Gender_m"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:when test=".=&quot;female&quot;">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\cs1640\f1\fs18 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text> (v)</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\cs1641\f1\fs18 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP_Gender_v"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:when test=".=&quot;unknown&quot;">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\cs1642\f1\fs18 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text> (f)</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\cs1643\f1\fs18 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP_Gender_unknown"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                        </xsl:choose>
                    </xsl:for-each>
                </xsl:if>
            </xsl:if>
            <xsl:if test="$isBold=1">
                <xsl:if test="../kr:ListData/@PublishGender=&quot;true&quot;">
                    <xsl:for-each select="eml:Gender">
                        <xsl:choose>
                            <xsl:when test=".=&quot;male&quot;">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\cs1644\f1\fs18\b </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text> (m)</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\cs1645\f1\fs18\b </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP_Gender_m"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:when test=".=&quot;female&quot;">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\cs1646\f1\fs18\b </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text> (v)</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\cs1647\f1\fs18\b </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP_Gender_v"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:when test=".=&quot;unknown&quot;">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\cs1648\f1\fs18\b </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text> (f)</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\cs1649\f1\fs18\b </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP_Gender_unknown"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                        </xsl:choose>
                    </xsl:for-each>
                </xsl:if>
            </xsl:if>
        </xsl:if>
    </xsl:template>
    <xsl:template name="City">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="isBold" select="0"/>
        <xsl:param name="fontSize" select="&apos;normal&apos;"/>
        <xsl:if test="0=1">
            <xsl:text>{\cs1650\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text>City (without postal code) &quot;DV Nuth&quot;</xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:text>\par </xsl:text>
        </xsl:if>
        <xsl:if test="$fontSize = &apos;normal&apos;">
            <xsl:if test="$isBold=0">
                <xsl:for-each select="xal:Locality">
                    <xsl:for-each select="xal:LocalityName">
                        <xsl:text>{\cs1651\f1\fs22 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
            </xsl:if>
            <xsl:if test="$isBold=1">
                <xsl:for-each select="xal:Locality">
                    <xsl:for-each select="xal:LocalityName">
                        <xsl:text>{\cs1652\f1\fs22\b </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
            </xsl:if>
        </xsl:if>
        <xsl:if test="$fontSize = &apos;x-small&apos;">
            <xsl:if test="$isBold=0">
                <xsl:for-each select="xal:Locality">
                    <xsl:for-each select="xal:LocalityName">
                        <xsl:text>{\cs1653\f1\fs18 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
            </xsl:if>
            <xsl:if test="$isBold=1">
                <xsl:for-each select="xal:Locality">
                    <xsl:for-each select="xal:LocalityName">
                        <xsl:text>{\cs1654\f1\fs18\b </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
            </xsl:if>
        </xsl:if>
    </xsl:template>
    <xsl:template name="Date">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="isBold" select="0"/>
        <xsl:param name="fontSize" select="&apos;normal&apos;"/>
        <xsl:if test="$fontSize = &apos;normal&apos;">
            <xsl:if test="$isBold=0">
                <xsl:if test="substring(text(),9, 1) != &quot;0&quot;">
                    <xsl:text>{\cs1655\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="substring(text(),9, 1)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:if>
                <xsl:text>{\cs1656\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="substring(text(),10, 1)"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>{\cs1657\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text> </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:choose>
                    <xsl:when test="substring(text(),6, 2) = &quot;01&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1658\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>januari</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1659\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_januari"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;02&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1660\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>februari</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1661\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_februari"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;03&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1662\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>maart</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1663\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_maart"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;04&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1664\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>april</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1665\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_april"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;05&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1666\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>mei</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1667\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_mei"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;06&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1668\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>juni</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1669\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_juni"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;07&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1670\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>juli</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1671\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_juli"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;08&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1672\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>augustus</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1673\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_augustus"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;09&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1674\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>september</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1675\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_september"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;10&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1676\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>oktober</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1677\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_oktober"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;11&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1678\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>november</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1679\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_november"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2)  = &quot;12&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1680\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>december</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1681\f1\fs22 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_december"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                </xsl:choose>
                <xsl:text>{\cs1682\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text> </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>{\cs1683\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="substring(text(),1, 4)"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:if>
            <xsl:if test="$isBold=1">
                <xsl:if test="substring(text(),9, 1) != &quot;0&quot;">
                    <xsl:text>{\cs1684\f1\fs22\b </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="substring(text(),9, 1)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:if>
                <xsl:text>{\cs1685\f1\fs22\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="substring(text(),10, 1)"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>{\cs1686\f1\fs22\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text> </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:choose>
                    <xsl:when test="substring(text(),6, 2) = &quot;01&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1687\f1\fs22\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>januari</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1688\f1\fs22\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_januari"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;02&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1689\f1\fs22\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>februari</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1690\f1\fs22\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_februari"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;03&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1691\f1\fs22\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>maart</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1692\f1\fs22\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_maart"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;04&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1693\f1\fs22\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>april</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1694\f1\fs22\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_april"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;05&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1695\f1\fs22\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>mei</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1696\f1\fs22\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_mei"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;06&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1697\f1\fs22\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>juni</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1698\f1\fs22\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_juni"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;07&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1699\f1\fs22\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>juli</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1700\f1\fs22\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_juli"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;08&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1701\f1\fs22\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>augustus</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1702\f1\fs22\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_augustus"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;09&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1703\f1\fs22\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>september</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1704\f1\fs22\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_september"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;10&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1705\f1\fs22\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>oktober</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1706\f1\fs22\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_oktober"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;11&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1707\f1\fs22\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>november</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1708\f1\fs22\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_november"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2)  = &quot;12&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1709\f1\fs22\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>december</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1710\f1\fs22\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_december"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                </xsl:choose>
                <xsl:text>{\cs1711\f1\fs22\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text> </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>{\cs1712\f1\fs22\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="substring(text(),1, 4)"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:if>
        </xsl:if>
        <xsl:if test="$fontSize = &apos;x-small&apos;">
            <xsl:if test="$isBold=0">
                <xsl:if test="substring(text(),9, 1) != &quot;0&quot;">
                    <xsl:text>{\cs1713\f1\fs18 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="substring(text(),9, 1)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:if>
                <xsl:text>{\cs1714\f1\fs18 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="substring(text(),10, 1)"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>{\cs1715\f1\fs18 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text> </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:choose>
                    <xsl:when test="substring(text(),6, 2) = &quot;01&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1716\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>januari</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1717\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_januari"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;02&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1718\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>februari</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1719\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_februari"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;03&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1720\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>maart</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1721\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_maart"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;04&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1722\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>april</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1723\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_april"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;05&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1724\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>mei</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1725\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_mei"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;06&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1726\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>juni</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1727\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_juni"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;07&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1728\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>juli</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1729\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_juli"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;08&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1730\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>augustus</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1731\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_augustus"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;09&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1732\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>september</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1733\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_september"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;10&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1734\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>oktober</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1735\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_oktober"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;11&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1736\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>november</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1737\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_november"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2)  = &quot;12&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1738\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>december</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1739\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_december"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                </xsl:choose>
                <xsl:text>{\cs1740\f1\fs18 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text> </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>{\cs1741\f1\fs18 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="substring(text(),1, 4)"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:if>
            <xsl:if test="$isBold=1">
                <xsl:if test="substring(text(),9, 1) != &quot;0&quot;">
                    <xsl:text>{\cs1742\f1\fs18\b </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="substring(text(),9, 1)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:if>
                <xsl:text>{\cs1743\f1\fs18\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="substring(text(),10, 1)"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>{\cs1744\f1\fs18\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text> </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:choose>
                    <xsl:when test="substring(text(),6, 2) = &quot;01&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1745\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>januari</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1746\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_januari"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;02&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1747\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>februari</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1748\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_februari"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;03&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1749\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>maart</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1750\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_maart"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;04&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1751\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>april</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1752\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_april"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;05&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1753\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>mei</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1754\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_mei"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;06&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1755\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>juni</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1756\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_juni"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;07&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1757\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>juli</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1758\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_juli"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;08&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1759\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>augustus</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1760\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_augustus"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;09&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1761\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>september</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1762\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_september"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;10&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1763\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>oktober</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1764\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_oktober"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;11&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1765\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>november</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1766\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_november"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2)  = &quot;12&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\cs1767\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>december</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\cs1768\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_december"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                </xsl:choose>
                <xsl:text>{\cs1769\f1\fs18\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text> </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>{\cs1770\f1\fs18\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="substring(text(),1, 4)"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:if>
        </xsl:if>
    </xsl:template>
    <xsl:template name="GenerateDate">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:text>{\cs1771\f1\fs18 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:value-of select="$generateDate"/>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
    </xsl:template>
    <xsl:template name="HashCode">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:text>{\cs1772\f1\fs18 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:value-of select="$hashCode"/>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
    </xsl:template>
    <xsl:template name="FooterWithoutHashcode">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:if test="$isDraft=&quot;true&quot;">
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs1773\f1\fs18 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>(Concept) </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs1774\f1\fs18 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP_FooterWithoutHashcode_concept"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:if>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1775\f1\fs18 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Datum: </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1776\f1\fs18 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP_FooterWithoutHashcode_datum"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:call-template name="GenerateDate">
            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
        </xsl:call-template>
    </xsl:template>
    <xsl:template name="Checkbox">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:choose>
            <xsl:when test="text()=&quot;true&quot;">
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs1777\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>■</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs1778\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP_Checkbox_iconChecked"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:text>{\cs1779\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>  </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs1780\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>□</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs1781\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP_Checkbox_iconUnchecked"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:text>{\cs1782\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>  </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="FooterWithHashcode">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:choose>
            <xsl:when test="$isDraft=&quot;true&quot;">
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs1783\f1\fs18 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>(Concept) | </xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs1784\f1\fs18 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP_FooterWithHashcode_concept"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:call-template name="GenerateDate">
                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs1785\f1\fs18 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>Hashcode: </xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs1786\f1\fs18 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP_FooterWithHashcode_hashcode"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:call-template name="HashCode">
                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                </xsl:call-template>
                <xsl:text>{\cs1787\f1\fs18 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text> | </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:call-template name="GenerateDate">
                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="CandidateListName">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:choose>
            <xsl:when test="./rg:CandidateListName/eml:AffiliationIdentifier/eml:RegisteredName[text() != &quot;&quot;]">
                <xsl:for-each select="rg:CandidateListName">
                    <xsl:call-template name="PartyName">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                </xsl:for-each>
            </xsl:when>
            <xsl:otherwise>
                <xsl:for-each select="rg:FirstCandidateName">
                    <xsl:call-template name="LastNameH1">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                    <xsl:text>{\cs1788\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>, </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                    <xsl:call-template name="FirstNameH1">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                </xsl:for-each>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="PartyName2">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:if test="0=1">
            <xsl:text>{\cs1789\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text>If no name is registered, display &quot;</xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:text>{\cs1790\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text>blanco lijst met als eerste kandidaat</xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:text>{\cs1791\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text>...&quot;</xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
        </xsl:if>
        <xsl:choose>
            <xsl:when test="./eml:AffiliationIdentifier/eml:RegisteredName[text() != &quot;&quot;]">
                <xsl:for-each select="eml:AffiliationIdentifier">
                    <xsl:for-each select="eml:RegisteredName">
                        <xsl:text>{\cs1792\f1\fs22 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
            </xsl:when>
            <xsl:otherwise>
                <xsl:choose>
                    <xsl:when test="$lang=0">
                        <xsl:text>{\cs1793\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>blanco lijst met als eerste kandidaat</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>{\cs1794\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="$RP_PartyName2_blancoLijst"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:text>{\cs1795\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text> </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:for-each select="eml:Candidate">
                    <xsl:if test="position() = 1">
                        <xsl:for-each select="eml:CandidateFullName">
                            <xsl:call-template name="LastNameH1">
                                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                            </xsl:call-template>
                            <xsl:text>{\cs1796\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>, </xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                            <xsl:call-template name="FirstNameH1">
                                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                            </xsl:call-template>
                        </xsl:for-each>
                        <xsl:call-template name="Gender">
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:call-template>
                    </xsl:if>
                </xsl:for-each>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="ElectionFraction">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="smaller" select="0"/>
        <xsl:for-each select="rg:Fraction">
            <xsl:text>{\cs1797\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:value-of select="floor( @numerator  div  @denominator )"/>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:if test="@numerator - ( floor(@numerator div  @denominator ) * @denominator) != 0">
                <xsl:text>{\cs1798\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text> </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>{\cs1799\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="@numerator - ( floor(@numerator div  @denominator ) * @denominator)"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>{\cs1800\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>/</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:for-each select="@denominator">
                    <xsl:text>{\cs1801\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="string(.)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:if>
        </xsl:for-each>
    </xsl:template>
    <xsl:template name="Gender2">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="isBold" select="0"/>
        <xsl:param name="isSmaller" select="0"/>
        <xsl:if test="0=1">
            <xsl:text>{\cs1802\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text>Displays the gender as &quot; (m)&quot; or &quot; (v)&quot; with preceding blank (name component g).</xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:text>\par </xsl:text>
        </xsl:if>
        <xsl:if test="$isSmaller=0">
            <xsl:if test="$isBold=0">
                <xsl:for-each select="eml:Gender">
                    <xsl:choose>
                        <xsl:when test=".=&quot;male&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs1803\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text> (m)</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs1804\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_Gender2_m"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test=".=&quot;female&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs1805\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text> (v)</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs1806\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_Gender2_v"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test=".=&quot;unknown&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs1807\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text> (f)</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs1808\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_Gender2_unknown"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                    </xsl:choose>
                </xsl:for-each>
            </xsl:if>
            <xsl:if test="$isBold=1">
                <xsl:for-each select="eml:Gender">
                    <xsl:choose>
                        <xsl:when test=".=&quot;male&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs1809\f1\fs22\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text> (m)</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs1810\f1\fs22\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_Gender2_m"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test=".=&quot;female&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs1811\f1\fs22\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text> (v)</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs1812\f1\fs22\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_Gender2_v"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test=".=&quot;unknown&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs1813\f1\fs22\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text> (f)</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs1814\f1\fs22\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_Gender2_unknown"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                    </xsl:choose>
                </xsl:for-each>
            </xsl:if>
        </xsl:if>
        <xsl:if test="$isSmaller=1">
            <xsl:if test="$isBold=0">
                <xsl:for-each select="eml:Gender">
                    <xsl:choose>
                        <xsl:when test=".=&quot;male&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs1815\f1\fs20 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text> (m)</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs1816\f1\fs20 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_Gender2_m"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test=".=&quot;female&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs1817\f1\fs20 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text> (v)</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs1818\f1\fs20 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_Gender2_v"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test=".=&quot;unknown&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs1819\f1\fs20 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text> (f)</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs1820\f1\fs20 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_Gender2_unknown"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                    </xsl:choose>
                </xsl:for-each>
            </xsl:if>
            <xsl:if test="$isBold=1">
                <xsl:for-each select="eml:Gender">
                    <xsl:choose>
                        <xsl:when test=".=&quot;male&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs1821\f1\fs20\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text> (m)</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs1822\f1\fs20\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_Gender2_m"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test=".=&quot;female&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs1823\f1\fs20\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text> (v)</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs1824\f1\fs20\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_Gender2_v"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test=".=&quot;unknown&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs1825\f1\fs20\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text> (f)</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs1826\f1\fs20\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_Gender2_unknown"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                    </xsl:choose>
                </xsl:for-each>
            </xsl:if>
        </xsl:if>
    </xsl:template>
    <xsl:template name="PartyNameOrFirstCandidate">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:if test="0=1">
            <xsl:text>{\cs1827\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text>If no name is registered, display the &quot;</xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:text>{\cs1828\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text>blanco lijst met als eerste kandidaat</xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:text>{\cs1829\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text>&quot; + first candidates name</xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
        </xsl:if>
        <xsl:for-each select="rg:CandidateListName">
            <xsl:choose>
                <xsl:when test="./eml:AffiliationIdentifier/eml:RegisteredName[text()!=&quot;&quot;]">
                    <xsl:for-each select="eml:AffiliationIdentifier">
                        <xsl:for-each select="eml:RegisteredName">
                            <xsl:text>{\cs1830\f1\fs22 </xsl:text>
                            <xsl:apply-templates>
                                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                            </xsl:apply-templates>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                    </xsl:for-each>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:choose>
                        <xsl:when test="$lang=0">
                            <xsl:text>{\cs1831\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>blanco lijst met als eerste kandidaat </xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>{\cs1832\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="$RP_PartyNameOrFirstCandidate_blancoLijst"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:for-each select="rg:FirstCandidateName">
                        <xsl:call-template name="LastNameH1">
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:call-template>
                        <xsl:text>{\cs1833\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>,</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                        <xsl:call-template name="Initials">
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:call-template>
                    </xsl:for-each>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:for-each>
    </xsl:template>
    <xsl:template name="SignatureBlock">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="distance" select="1"/>
        <xsl:variable name="altova:CurrContextGrid_06CFFC20" select="."/>
        <xsl:variable name="altova:nTableWidthIn_41" select="$altova:nMaxWidthIn * 1.00000"/>
        <xsl:variable name="altova:nTableWidthTw_41" select="$altova:nTableWidthIn_41 * 1440"/>
        <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_41" select="round($altova:nTableWidthTw_41 * 0.25)"/>
        <xsl:variable name="altova:nTableIndentTw_41" select="0"/>
        <xsl:variable name="altova:nSumColumnWidthsTw_41" select="round(2800.50)"/>
        <xsl:variable name="altova:TableWidthFactor_41">
            <xsl:choose>
                <xsl:when test="$altova:nSumColumnWidthsTw_41 &gt; $altova:nTableWidthTw_41">
                    <xsl:value-of select="($altova:nTableWidthTw_41 - $altova:SumDefaultColumnsForWideTableTw_41) div $altova:nSumColumnWidthsTw_41"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="1"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnsWithDefaultWidth_41" select="round(1)"/>
        <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_41">
            <xsl:choose>
                <xsl:when test="$altova:nColumnsWithDefaultWidth_41 = 0">
                    <xsl:value-of select="round(1)"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="$altova:nColumnsWithDefaultWidth_41"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nDefaultColumnWidthTw_41">
            <xsl:choose>
                <xsl:when test="$altova:TableWidthFactor_41 &lt; 1">
                    <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_41 div $altova:nColumnsWithDefaultWidthNotZero_41"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="round(($altova:nTableWidthTw_41 - $altova:nSumColumnWidthsTw_41) div $altova:nColumnsWithDefaultWidthNotZero_41)"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnWidthTw_41_0" select="round(1.94 * 1440 * $altova:TableWidthFactor_41)"/>
        <xsl:variable name="altova:nColumnWidthTw_41_1" select="$altova:nDefaultColumnWidthTw_41"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:variable name="tablestyle41">
            <xsl:text>\trowd\trleft</xsl:text>
            <xsl:value-of select="$altova:nTableIndentTw_41"/>
            <xsl:text>\ts1834\ts1835\ts1836\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
        </xsl:variable>
        <xsl:variable name="rowend41">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\row\pard</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="cellend41">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\cell</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestcell</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:RowStyle147">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl41" select="$altova:nTableIndentTw_41"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl41_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl41 + $altova:nColumnWidthTw_41_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl41_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl41_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl41_Col0_AfterColumn + $altova:nColumnWidthTw_41_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl41_Col1_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle41"/>
            <xsl:value-of select="$altova:RowStyle147"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend41"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\par </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1837\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Plaats: ........................................................</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1838\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP_SignatureBlock_plaats"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
        <xsl:text>\par </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1839\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>Datum: .......................................................</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1840\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP_SignatureBlock_datum"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
        <xsl:text>\par </xsl:text>
        <xsl:text>\par </xsl:text>
        <xsl:if test="$distance &gt;= 1">
            <xsl:text>\par </xsl:text>
        </xsl:if>
        <xsl:if test="$distance &gt;= 2">
            <xsl:text>\par </xsl:text>
        </xsl:if>
        <xsl:text>\par </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1841\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>......................................................................, Voorzitter</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1842\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP_SignatureBlock_voorzitter"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
        <xsl:text>\par </xsl:text>
        <xsl:text>\par </xsl:text>
        <xsl:if test="$distance &gt;= 1">
            <xsl:text>\par </xsl:text>
        </xsl:if>
        <xsl:if test="$distance &gt;= 2">
            <xsl:text>\par </xsl:text>
        </xsl:if>
        <xsl:text>\par </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1843\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>......................................................................</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1844\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP_SignatureBlock_emptyLine"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
        <xsl:text>\par </xsl:text>
        <xsl:text>\par </xsl:text>
        <xsl:if test="$distance &gt;= 1">
            <xsl:text>\par </xsl:text>
        </xsl:if>
        <xsl:if test="$distance &gt;= 2">
            <xsl:text>\par </xsl:text>
        </xsl:if>
        <xsl:text>\par </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1845\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>......................................................................</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1846\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP_SignatureBlock_emptyLine"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
        <xsl:text>\par </xsl:text>
        <xsl:text>\par </xsl:text>
        <xsl:if test="$distance &gt;= 1">
            <xsl:text>\par </xsl:text>
        </xsl:if>
        <xsl:if test="$distance &gt;= 2">
            <xsl:text>\par </xsl:text>
        </xsl:if>
        <xsl:text>\par </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1847\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>...................................................................... Leden</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1848\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP_SignatureBlock_leden"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
        <xsl:text>\par </xsl:text>
        <xsl:text>\par </xsl:text>
        <xsl:if test="$distance &gt;= 1">
            <xsl:text>\par </xsl:text>
        </xsl:if>
        <xsl:if test="$distance &gt;= 2">
            <xsl:text>\par </xsl:text>
        </xsl:if>
        <xsl:text>\par </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1849\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>......................................................................</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1850\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP_SignatureBlock_emptyLine"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
        <xsl:text>\par </xsl:text>
        <xsl:text>\par </xsl:text>
        <xsl:if test="$distance &gt;= 1">
            <xsl:text>\par </xsl:text>
        </xsl:if>
        <xsl:if test="$distance &gt;= 2">
            <xsl:text>\par </xsl:text>
        </xsl:if>
        <xsl:text>\par </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1851\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>......................................................................</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1852\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP_SignatureBlock_emptyLine"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\par </xsl:text>
        <xsl:text>\par </xsl:text>
        <xsl:text>\par </xsl:text>
        <xsl:if test="$distance &gt;= 1">
            <xsl:text>\par </xsl:text>
        </xsl:if>
        <xsl:if test="$distance &gt;= 2">
            <xsl:text>\par </xsl:text>
        </xsl:if>
        <xsl:text>\par </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1853\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>......................................................................</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1854\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP_SignatureBlock_emptyLine"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend41"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle41"/>
        <xsl:value-of select="$altova:RowStyle147"/>
        <xsl:value-of select="$rowend41"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 0"/>
        <xsl:text> </xsl:text>
    </xsl:template>
    <xsl:template name="ElectionNameSimple">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="isBold" select="0"/>
        <xsl:if test="0=1">
            <xsl:text>{\cs1855\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text>Just election name</xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:text>\par </xsl:text>
        </xsl:if>
        <xsl:if test="$isBold=0">
            <xsl:for-each select="eml:ElectionIdentifier">
                <xsl:for-each select="eml:ElectionCategory">
                    <xsl:choose>
                        <xsl:when test=".= &quot;TK&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs1856\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>de Tweede Kamer der Staten-Generaal</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs1857\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_ElectionNameSimple_tweedeKamer"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test=".=&quot;EK&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs1858\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>de Eerste Kamer der Staten-Generaal</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs1859\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_ElectionNameSimple_eersteKamer"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test=".=&quot;PS&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs1860\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>provinciale staten van</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs1861\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_ElectionNameSimple_provincialeStaten"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test=".=&quot;EP&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs1862\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>het Europees Parlement</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs1863\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_ElectionNameSimple_hetEuropeesParlement"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test=".=&quot;GR&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs1864\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>de raad van de gemeente</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs1865\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_ElectionNameSimple_raadVanDeGemeente"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test=".=&quot;ER&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs1866\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>de eilandsraad van het openbaar lichaam</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs1867\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_ElectionNameSimple_eilandsraad"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test=".=&quot;DR&quot;">
                            <xsl:choose>
                                <xsl:when test="../kr:ElectionDomain[ starts-with( text() , &quot;Amsterdam&quot; ) ]">
                                    <xsl:choose>
                                        <xsl:when test="$lang=0">
                                            <xsl:text>{\cs1868\f1\fs22 </xsl:text>
                                            <xsl:call-template name="write-text">
                                                <xsl:with-param name="text">
                                                    <xsl:text>de deelraad</xsl:text>
                                                </xsl:with-param>
                                            </xsl:call-template>
                                            <xsl:text>}</xsl:text>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:text>{\cs1869\f1\fs22 </xsl:text>
                                            <xsl:call-template name="write-text">
                                                <xsl:with-param name="text">
                                                    <xsl:value-of select="$RP_ElectionNameSimple_deelraad"/>
                                                </xsl:with-param>
                                            </xsl:call-template>
                                            <xsl:text>}</xsl:text>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </xsl:when>
                                <xsl:when test="../kr:ElectionDomain[ starts-with( text() , &quot;Rotterdam&quot; ) ]">
                                    <xsl:choose>
                                        <xsl:when test="$lang=0">
                                            <xsl:text>{\cs1870\f1\fs22 </xsl:text>
                                            <xsl:call-template name="write-text">
                                                <xsl:with-param name="text">
                                                    <xsl:text>de deelgemeenteraad</xsl:text>
                                                </xsl:with-param>
                                            </xsl:call-template>
                                            <xsl:text>}</xsl:text>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:text>{\cs1871\f1\fs22 </xsl:text>
                                            <xsl:call-template name="write-text">
                                                <xsl:with-param name="text">
                                                    <xsl:value-of select="$RP_ElectionNameSimple_deelgemeenteraad"/>
                                                </xsl:with-param>
                                            </xsl:call-template>
                                            <xsl:text>}</xsl:text>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </xsl:when>
                            </xsl:choose>
                        </xsl:when>
                    </xsl:choose>
                </xsl:for-each>
            </xsl:for-each>
        </xsl:if>
        <xsl:if test="$isBold=1">
            <xsl:for-each select="eml:ElectionIdentifier">
                <xsl:for-each select="eml:ElectionCategory">
                    <xsl:choose>
                        <xsl:when test=".= &quot;TK&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs1872\f1\fs22\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>de Tweede Kamer der Staten-Generaal</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs1873\f1\fs22\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_ElectionNameSimple_tweedeKamer"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test=".=&quot;EK&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs1874\f1\fs22\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>de Eerste Kamer der Staten-Generaal</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs1875\f1\fs22\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_ElectionNameSimple_eersteKamer"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test=".=&quot;PS&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs1876\f1\fs22\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>provinciale staten van</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs1877\f1\fs22\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_ElectionNameSimple_provincialeStaten"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test=".=&quot;EP&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs1878\f1\fs22\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>het Europees Parlement</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs1879\f1\fs22\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_ElectionNameSimple_hetEuropeesParlement"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test=".=&quot;GR&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs1880\f1\fs22\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>de raad van de gemeente</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs1881\f1\fs22\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_ElectionNameSimple_raadVanDeGemeente"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test=".=&quot;ER&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\cs1882\f1\fs22\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>de eilandsraad van het openbaar lichaam</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs1883\f1\fs22\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_ElectionNameSimple_eilandsraad"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test=".=&quot;DR&quot;">
                            <xsl:choose>
                                <xsl:when test="../kr:ElectionDomain[ starts-with( text() , &quot;Amsterdam&quot; ) ]">
                                    <xsl:choose>
                                        <xsl:when test="$lang=0">
                                            <xsl:text>{\cs1884\f1\fs22\b </xsl:text>
                                            <xsl:call-template name="write-text">
                                                <xsl:with-param name="text">
                                                    <xsl:text>de deelraad</xsl:text>
                                                </xsl:with-param>
                                            </xsl:call-template>
                                            <xsl:text>}</xsl:text>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:text>{\cs1885\f1\fs22\b </xsl:text>
                                            <xsl:call-template name="write-text">
                                                <xsl:with-param name="text">
                                                    <xsl:value-of select="$RP_ElectionNameSimple_deelraad"/>
                                                </xsl:with-param>
                                            </xsl:call-template>
                                            <xsl:text>}</xsl:text>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </xsl:when>
                                <xsl:when test="../kr:ElectionDomain[ starts-with( text() , &quot;Rotterdam&quot; ) ]">
                                    <xsl:choose>
                                        <xsl:when test="$lang=0">
                                            <xsl:text>{\cs1886\f1\fs22\b </xsl:text>
                                            <xsl:call-template name="write-text">
                                                <xsl:with-param name="text">
                                                    <xsl:text>de deelgemeenteraad</xsl:text>
                                                </xsl:with-param>
                                            </xsl:call-template>
                                            <xsl:text>}</xsl:text>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:text>{\cs1887\f1\fs22\b </xsl:text>
                                            <xsl:call-template name="write-text">
                                                <xsl:with-param name="text">
                                                    <xsl:value-of select="$RP_ElectionNameSimple_deelgemeenteraad"/>
                                                </xsl:with-param>
                                            </xsl:call-template>
                                            <xsl:text>}</xsl:text>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </xsl:when>
                            </xsl:choose>
                        </xsl:when>
                    </xsl:choose>
                </xsl:for-each>
            </xsl:for-each>
        </xsl:if>
    </xsl:template>
    <xsl:template name="LineBreak">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:choose>
            <xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s0\f0\fs24\sl0\fs22\s1888\s1889\sl0\f1\fs22 </xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>\par </xsl:text>
                <xsl:text>\par </xsl:text>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="LineBreakTable">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:choose>
            <xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
                <xsl:text>\pard</xsl:text>
                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                <xsl:text>\itap</xsl:text>
                <xsl:value-of select="$templatetablelevel + 0"/>
                <xsl:text>\s0\f0\fs24\sl0\fs22\s1890\s1891\sl0\f1\fs22 </xsl:text>
                <xsl:text>\f0\fs24</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>\par </xsl:text>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="ElectionDomain">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="isBold" select="0"/>
        <xsl:param name="font-size" select="&apos;small&apos;"/>
        <xsl:if test="0=1">
            <xsl:text>{\cs1892\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text>Election domain as part of the elction name - if needed</xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
        </xsl:if>
        <xsl:if test="$isBold=0 and $font-size=&apos;small&apos;">
            <xsl:for-each select="eml:ElectionIdentifier">
                <xsl:choose>
                    <xsl:when test="./eml:ElectionCategory[text()=&quot;PS&quot; or text()=&quot;GR&quot; or text()=&quot;ER&quot;]">
                        <xsl:for-each select="kr:ElectionDomain">
                            <xsl:text>{\cs1893\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text> </xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                            <xsl:text>{\cs1894\f1\fs22 </xsl:text>
                            <xsl:apply-templates>
                                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                            </xsl:apply-templates>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:when test="./eml:ElectionCategory[ text()=&quot;DR&quot; ]">
                        <xsl:for-each select="kr:ElectionDomain">
                            <xsl:choose>
                                <xsl:when test=". != &quot;Rotterdam - Centrum&quot;  and  . != &quot;Rotterdam - Pernis&quot;">
                                    <xsl:text>{\cs1895\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text> </xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                    <xsl:text>{\cs1896\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="substring( text() , 13 )"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs1897\f1\fs22 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text> </xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                    <xsl:text>{\cs1898\f1\fs22 </xsl:text>
                                    <xsl:apply-templates>
                                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                                    </xsl:apply-templates>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:for-each>
                    </xsl:when>
                </xsl:choose>
            </xsl:for-each>
        </xsl:if>
        <xsl:if test="$isBold=1 and $font-size=&apos;small&apos;">
            <xsl:for-each select="eml:ElectionIdentifier">
                <xsl:choose>
                    <xsl:when test="./eml:ElectionCategory[text()=&quot;PS&quot; or text()=&quot;GR&quot; or text()=&quot;ER&quot;]">
                        <xsl:for-each select="kr:ElectionDomain">
                            <xsl:text>{\cs1899\f1\fs22\b </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text> </xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                            <xsl:text>{\cs1900\f1\fs22\b </xsl:text>
                            <xsl:apply-templates>
                                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                            </xsl:apply-templates>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:when test="./eml:ElectionCategory[ text()=&quot;DR&quot; ]">
                        <xsl:for-each select="kr:ElectionDomain">
                            <xsl:choose>
                                <xsl:when test=". != &quot;Rotterdam - Centrum&quot;  and  . != &quot;Rotterdam - Pernis&quot;">
                                    <xsl:text>{\cs1901\f1\fs22\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text> </xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                    <xsl:text>{\cs1902\f1\fs22\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="substring( text() , 13 )"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs1903\f1\fs22\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text> </xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                    <xsl:text>{\cs1904\f1\fs22\b </xsl:text>
                                    <xsl:apply-templates>
                                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                                    </xsl:apply-templates>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:for-each>
                    </xsl:when>
                </xsl:choose>
            </xsl:for-each>
        </xsl:if>
        <xsl:if test="$isBold=1 and $font-size=&apos;medium&apos;">
            <xsl:for-each select="eml:ElectionIdentifier">
                <xsl:choose>
                    <xsl:when test="./eml:ElectionCategory[text()=&quot;PS&quot; or text()=&quot;GR&quot; or text()=&quot;ER&quot;]">
                        <xsl:for-each select="kr:ElectionDomain">
                            <xsl:text>{\cs1905\f1\fs26\b </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text> </xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                            <xsl:text>{\cs1906\f1\fs26\b </xsl:text>
                            <xsl:apply-templates>
                                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                            </xsl:apply-templates>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:when test="./eml:ElectionCategory[ text()=&quot;DR&quot; ]">
                        <xsl:for-each select="kr:ElectionDomain">
                            <xsl:choose>
                                <xsl:when test=". != &quot;Rotterdam - Centrum&quot;  and  . != &quot;Rotterdam - Pernis&quot;">
                                    <xsl:text>{\cs1907\f1\fs26\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text> </xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                    <xsl:text>{\cs1908\f1\fs26\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="substring( text() , 13 )"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\cs1909\f1\fs26\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text> </xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                    <xsl:text>{\cs1910\f1\fs26\b </xsl:text>
                                    <xsl:apply-templates>
                                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                                    </xsl:apply-templates>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:for-each>
                    </xsl:when>
                </xsl:choose>
            </xsl:for-each>
        </xsl:if>
    </xsl:template>
    <xsl:template name="ContestIdentifier">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="isBold" select="0"/>
        <xsl:param name="fontSize" select="&apos;normal&apos;"/>
        <xsl:if test="$fontSize = &apos;normal&apos;">
            <xsl:if test="$isBold=0">
                <xsl:for-each select="eml:ContestIdentifier">
                    <xsl:for-each select="@Id">
                        <xsl:text>{\cs1911\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="string(.)"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                    <xsl:text>{\cs1912\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> (</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                    <xsl:for-each select="eml:ContestName">
                        <xsl:text>{\cs1913\f1\fs22 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                    <xsl:text>{\cs1914\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>)</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:if>
            <xsl:if test="$isBold=1">
                <xsl:for-each select="eml:ContestIdentifier">
                    <xsl:for-each select="@Id">
                        <xsl:text>{\cs1915\f1\fs22\b </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="string(.)"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                    <xsl:text>{\cs1916\f1\fs22\b </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> (</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                    <xsl:for-each select="eml:ContestName">
                        <xsl:text>{\cs1917\f1\fs22\b </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                    <xsl:text>{\cs1918\f1\fs22\b </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>)</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:if>
        </xsl:if>
        <xsl:if test="$fontSize = &apos;medium&apos;">
            <xsl:if test="$isBold=0">
                <xsl:for-each select="eml:ContestIdentifier">
                    <xsl:for-each select="@Id">
                        <xsl:text>{\cs1919\f1\fs26 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="string(.)"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                    <xsl:text>{\cs1920\f1\fs26 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> (</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                    <xsl:for-each select="eml:ContestName">
                        <xsl:text>{\cs1921\f1\fs26 </xsl:text>
                        <xsl:apply-templates>
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:apply-templates>
                        <xsl:text>}</xsl:text>
                    </xsl:for-each>
                    <xsl:text>{\cs1922\f1\fs26 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>)</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:if>
        </xsl:if>
    </xsl:template>
    <xsl:template name="Space">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="fontSize" select="&apos;normal&apos;"/>
        <xsl:choose>
            <xsl:when test="$fontSize=&quot;normal&quot;">
                <xsl:text>{\cs1923\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="&apos; &apos;"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:when test="$fontSize=&quot;smaller&quot;">
                <xsl:text>{\cs1924\f1\fs20 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="&apos; &apos;"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:when test="$fontSize=&apos;x-small&apos;">
                <xsl:text>{\cs1925\f1\fs18 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="&apos; &apos;"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1926\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="&apos; &apos;"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="ElectionFractionPart1">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="smaller" select="0"/>
        <xsl:choose>
            <xsl:when test="$smaller = 1">
                <xsl:for-each select="rg:Fraction">
                    <xsl:text>{\cs1927\f1\fs20 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="floor( @numerator  div  @denominator )"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:when>
            <xsl:otherwise>
                <xsl:for-each select="rg:Fraction">
                    <xsl:text>{\cs1928\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="floor( @numerator  div  @denominator )"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="ElectionFractionPart2">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="smaller" select="0"/>
        <xsl:choose>
            <xsl:when test="$smaller = 1">
                <xsl:for-each select="rg:Fraction">
                    <xsl:if test="@numerator - ( floor(@numerator div  @denominator ) * @denominator) != 0">
                        <xsl:text>{\cs1929\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="@numerator - ( floor(@numerator div  @denominator ) * @denominator)"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                        <xsl:text>{\cs1930\f1\fs20 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>/</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                        <xsl:for-each select="@denominator">
                            <xsl:text>{\cs1931\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="string(.)"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                    </xsl:if>
                </xsl:for-each>
            </xsl:when>
            <xsl:otherwise>
                <xsl:for-each select="rg:Fraction">
                    <xsl:if test="@numerator - ( floor(@numerator div  @denominator ) * @denominator) != 0">
                        <xsl:text>{\cs1932\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:value-of select="@numerator - ( floor(@numerator div  @denominator ) * @denominator)"/>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                        <xsl:text>{\cs1933\f1\fs22 </xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text">
                                <xsl:text>/</xsl:text>
                            </xsl:with-param>
                        </xsl:call-template>
                        <xsl:text>}</xsl:text>
                        <xsl:for-each select="@denominator">
                            <xsl:text>{\cs1934\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:value-of select="string(.)"/>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                    </xsl:if>
                </xsl:for-each>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="Initials">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:if test="0=1">
            <xsl:text>{\cs1935\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text>Displays the initials like &quot; H.H.G.&quot; (name components f) with preceding blank.</xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:text>\par </xsl:text>
        </xsl:if>
        <xsl:for-each select="xnl:PersonName">
            <xsl:for-each select="xnl:NameLine">
                <xsl:call-template name="Space">
                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                </xsl:call-template>
                <xsl:text>{\cs1936\f1\fs22 </xsl:text>
                <xsl:apply-templates>
                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                </xsl:apply-templates>
                <xsl:text>}</xsl:text>
            </xsl:for-each>
        </xsl:for-each>
    </xsl:template>
    <xsl:template name="FooterLine">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:if test="$SV_OutputFormat = &apos;PDF&apos;">
            <xsl:text>{\cs1937\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text>______</xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
        </xsl:if>
        <xsl:text>{\cs1938\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text>__________________________________________________________________</xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
    </xsl:template>
    <xsl:template name="LegacyFooter">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="isHashcode" select="1"/>
        <xsl:param name="isPagenumber" select="1"/>
        <xsl:variable name="altova:CurrContextGrid_06D04000" select="."/>
        <xsl:variable name="altova:nTableWidthIn_42" select="$altova:nMaxWidthIn * 1.00000"/>
        <xsl:variable name="altova:nTableWidthTw_42" select="$altova:nTableWidthIn_42 * 1440"/>
        <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_42" select="round($altova:nTableWidthTw_42 * 0.25)"/>
        <xsl:variable name="altova:nTableIndentTw_42" select="0"/>
        <xsl:variable name="altova:nSumColumnWidthsTw_42" select="round(2000.50)"/>
        <xsl:variable name="altova:TableWidthFactor_42">
            <xsl:choose>
                <xsl:when test="$altova:nSumColumnWidthsTw_42 &gt; $altova:nTableWidthTw_42">
                    <xsl:value-of select="($altova:nTableWidthTw_42 - $altova:SumDefaultColumnsForWideTableTw_42) div $altova:nSumColumnWidthsTw_42"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="1"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnsWithDefaultWidth_42" select="round(1)"/>
        <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_42">
            <xsl:choose>
                <xsl:when test="$altova:nColumnsWithDefaultWidth_42 = 0">
                    <xsl:value-of select="round(1)"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="$altova:nColumnsWithDefaultWidth_42"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nDefaultColumnWidthTw_42">
            <xsl:choose>
                <xsl:when test="$altova:TableWidthFactor_42 &lt; 1">
                    <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_42 div $altova:nColumnsWithDefaultWidthNotZero_42"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="round(($altova:nTableWidthTw_42 - $altova:nSumColumnWidthsTw_42) div $altova:nColumnsWithDefaultWidthNotZero_42)"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnWidthTw_42_0" select="$altova:nDefaultColumnWidthTw_42"/>
        <xsl:variable name="altova:nColumnWidthTw_42_1" select="round(1.39 * 1440 * $altova:TableWidthFactor_42)"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:variable name="tablestyle42">
            <xsl:text>\trowd\trleft</xsl:text>
            <xsl:value-of select="$altova:nTableIndentTw_42"/>
            <xsl:text>\ts1939\ts1940\ts1941\trspdl15\trspdt15\trspdb15\trspdr15\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt30\trpaddl30\trpaddb30\trpaddr30\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
        </xsl:variable>
        <xsl:variable name="rowend42">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\row\pard</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="cellend42">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\cell</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestcell</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:RowStyle148">
            <xsl:text>\trrh600</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl42" select="$altova:nTableIndentTw_42"/>
            <xsl:text>\clvertalc\clmgf\clpadl0\clpadfl3\clpadb0\clpadfb3\clpadt0\clpadft3\clpadr0\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl42_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl42 + $altova:nColumnWidthTw_42_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl42_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl42_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl42_Col0_AfterColumn + $altova:nColumnWidthTw_42_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl42_Col1_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle42"/>
            <xsl:value-of select="$altova:RowStyle148"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend42"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend42"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle42"/>
        <xsl:value-of select="$altova:RowStyle148"/>
        <xsl:value-of select="$rowend42"/>
        <xsl:variable name="altova:RowStyle149">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl42" select="$altova:nTableIndentTw_42"/>
            <xsl:text>\clvertalb\clmgf\clpadl0\clpadfl3\clpadb0\clpadfb3\clpadt0\clpadft3\clpadr0\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl42_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl42 + $altova:nColumnWidthTw_42_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl42_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl42_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl42_Col0_AfterColumn + $altova:nColumnWidthTw_42_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl42_Col1_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle42"/>
            <xsl:value-of select="$altova:RowStyle149"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:call-template name="FooterLine">
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_42_0 div 1440) + ($altova:nColumnWidthTw_42_1 div 1440)"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend42"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend42"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle42"/>
        <xsl:value-of select="$altova:RowStyle149"/>
        <xsl:value-of select="$rowend42"/>
        <xsl:variable name="altova:RowStyle150">
            <xsl:text>\trrh600</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl42" select="$altova:nTableIndentTw_42"/>
            <xsl:text>\clvertalt\clpadl0\clpadfl3\clpadb0\clpadfb3\clpadt0\clpadft3\clpadr0\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl42_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl42 + $altova:nColumnWidthTw_42_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl42_Col0_AfterColumn)"/>
            <xsl:text>\clvertalt\clpadl0\clpadfl3\clpadb0\clpadfb3\clpadt0\clpadft3\clpadr0\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl42_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl42_Col0_AfterColumn + $altova:nColumnWidthTw_42_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl42_Col1_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle42"/>
            <xsl:value-of select="$altova:RowStyle150"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs18 </xsl:text>
        <xsl:if test="$isHashcode=1">
            <xsl:call-template name="FooterWithHashcode">
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_42_0 div 1440)"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
        </xsl:if>
        <xsl:if test="$isHashcode=0">
            <xsl:call-template name="FooterWithoutHashcode">
                <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_42_0 div 1440)"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
            </xsl:call-template>
        </xsl:if>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend42"/>
        <xsl:text>\qr\sl0\f1\fs18 </xsl:text>
        <xsl:if test="$isPagenumber=1">
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs1942\f1\fs18 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>pagina </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs1943\f1\fs18 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP_LegacyFooter_pagina"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\cs1944</xsl:text>
            <xsl:text>\chpgn</xsl:text>
            <xsl:text>{\cs1945\f1\fs18 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text> / </xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:text>{\field{\*\fldinst{\cs1946\f1\fs18 NUMPAGES }}{\fldrslt }}</xsl:text>
        </xsl:if>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend42"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle42"/>
        <xsl:value-of select="$altova:RowStyle150"/>
        <xsl:value-of select="$rowend42"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 0"/>
        <xsl:text> </xsl:text>
    </xsl:template>
    <xsl:template name="ObjectionsReference">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="authority" select="&apos;hoofstembureau&apos;"/>
        <xsl:param name="skipFirstSentence" select="0"/>
        <xsl:if test="$skipFirstSentence = 0">
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\cs1947\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>Door de in de zittingsruimte aanwezige kiezers zijn</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\cs1948\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP_ObjectionsReference_aanwezigeKiezers"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>\par </xsl:text>
        </xsl:if>
        <xsl:variable name="altova:CurrContextGrid_06D04840" select="."/>
        <xsl:variable name="altova:nTableWidthIn_43" select="$altova:nMaxWidthIn * 1.00000"/>
        <xsl:variable name="altova:nTableWidthTw_43" select="$altova:nTableWidthIn_43 * 1440"/>
        <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_43" select="round($altova:nTableWidthTw_43 * 0.25)"/>
        <xsl:variable name="altova:nTableIndentTw_43" select="0"/>
        <xsl:variable name="altova:nSumColumnWidthsTw_43" select="round(901.00)"/>
        <xsl:variable name="altova:TableWidthFactor_43">
            <xsl:choose>
                <xsl:when test="$altova:nSumColumnWidthsTw_43 &gt; $altova:nTableWidthTw_43">
                    <xsl:value-of select="($altova:nTableWidthTw_43 - $altova:SumDefaultColumnsForWideTableTw_43) div $altova:nSumColumnWidthsTw_43"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="1"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnsWithDefaultWidth_43" select="round(1)"/>
        <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_43">
            <xsl:choose>
                <xsl:when test="$altova:nColumnsWithDefaultWidth_43 = 0">
                    <xsl:value-of select="round(1)"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="$altova:nColumnsWithDefaultWidth_43"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nDefaultColumnWidthTw_43">
            <xsl:choose>
                <xsl:when test="$altova:TableWidthFactor_43 &lt; 1">
                    <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_43 div $altova:nColumnsWithDefaultWidthNotZero_43"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="round(($altova:nTableWidthTw_43 - $altova:nSumColumnWidthsTw_43) div $altova:nColumnsWithDefaultWidthNotZero_43)"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnWidthTw_43_0" select="round(0.42 * 1440 * $altova:TableWidthFactor_43)"/>
        <xsl:variable name="altova:nColumnWidthTw_43_1" select="round(0.21 * 1440 * $altova:TableWidthFactor_43)"/>
        <xsl:variable name="altova:nColumnWidthTw_43_2" select="$altova:nDefaultColumnWidthTw_43"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:variable name="tablestyle43">
            <xsl:text>\trowd\trleft</xsl:text>
            <xsl:value-of select="$altova:nTableIndentTw_43"/>
            <xsl:text>\ts1949\ts1950\ts1951\trspdl0\trspdt0\trspdb0\trspdr0\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt15\trpaddl15\trpaddb15\trpaddr15\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
        </xsl:variable>
        <xsl:variable name="rowend43">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\row\pard</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="cellend43">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\cell</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestcell</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:RowStyle151">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl43" select="$altova:nTableIndentTw_43"/>
            <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl43_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl43 + $altova:nColumnWidthTw_43_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl43_Col0_AfterColumn)"/>
            <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl43_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl43_Col0_AfterColumn + $altova:nColumnWidthTw_43_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl43_Col1_AfterColumn)"/>
            <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl43_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl43_Col1_AfterColumn + $altova:nColumnWidthTw_43_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl43_Col2_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle43"/>
            <xsl:value-of select="$altova:RowStyle151"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend43"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1952\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>□ </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1953\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP_ObjectionsReference_iconUnchecked"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend43"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1954\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>geen bezwaren ingebracht.</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1955\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP_ObjectionsReference_geenBezwarenIngebracht"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend43"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle43"/>
        <xsl:value-of select="$altova:RowStyle151"/>
        <xsl:value-of select="$rowend43"/>
        <xsl:variable name="altova:RowStyle152">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl43" select="$altova:nTableIndentTw_43"/>
            <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl43_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl43 + $altova:nColumnWidthTw_43_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl43_Col0_AfterColumn)"/>
            <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl43_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl43_Col0_AfterColumn + $altova:nColumnWidthTw_43_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl43_Col1_AfterColumn)"/>
            <xsl:text>\clvertalt\clpadl15\clpadfl3\clpadb15\clpadfb3\clpadt15\clpadft3\clpadr15\clpadfr3</xsl:text>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl43_Col2_AfterColumn" select="$altova:CurrGridPos_Tbl43_Col1_AfterColumn + $altova:nColumnWidthTw_43_2"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl43_Col2_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle43"/>
            <xsl:value-of select="$altova:RowStyle152"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend43"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1956\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>□ </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1957\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP_ObjectionsReference_iconUnchecked"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend43"/>
        <xsl:text>\ql\sl0\f1\fs22 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\cs1958\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>de volgende bezwaren ingebracht (zie gewaarmerkte bijlage voor bezwaren en opmerkingen daarover van het </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\cs1959\f1\fs22 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP_ObjectionsReference_volgendeBezwarenIngebracht"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>{\cs1960\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:value-of select="$authority"/>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>{\cs1961\f1\fs22 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text>).</xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend43"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle43"/>
        <xsl:value-of select="$altova:RowStyle152"/>
        <xsl:value-of select="$rowend43"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 0"/>
        <xsl:text> </xsl:text>
    </xsl:template>
    <xsl:template name="LivingAddress">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="isBold" select="0"/>
        <xsl:if test="0=1">
            <xsl:text>{\cs1962\f1\fs22 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text>City and Country code (if present) &quot;Amsterdam&quot; or &quot;Berlin (DE)&quot;</xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:text>\par </xsl:text>
        </xsl:if>
        <xsl:for-each select="kr:LivingAddress">
            <xsl:if test="$isBold=0">
                <xsl:for-each select="kr:LocalityName">
                    <xsl:text>{\cs1963\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
                <xsl:for-each select="kr:CountryNameCode">
                    <xsl:text>{\cs1964\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> (</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                    <xsl:text>{\cs1965\f1\fs22 </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                    <xsl:text>{\cs1966\f1\fs22 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>)</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:if>
            <xsl:if test="$isBold=1">
                <xsl:for-each select="kr:LocalityName">
                    <xsl:text>{\cs1967\f1\fs22\b </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
                <xsl:for-each select="kr:CountryNameCode">
                    <xsl:text>{\cs1968\f1\fs22\b </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> (</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                    <xsl:text>{\cs1969\f1\fs22\b </xsl:text>
                    <xsl:apply-templates>
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:apply-templates>
                    <xsl:text>}</xsl:text>
                    <xsl:text>{\cs1970\f1\fs22\b </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text>)</xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:for-each>
            </xsl:if>
        </xsl:for-each>
    </xsl:template>
    <xsl:template name="QualifyingAddressCity">
        <xsl:param name="altova:nMaxWidthIn" select="7.06944"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="isBold" select="0"/>
        <xsl:param name="fontSize" select="&apos;normal&apos;"/>
        <xsl:for-each select="eml:QualifyingAddress">
            <xsl:call-template name="City">
                <xsl:with-param name="isBold" select="$isBold"/>
                <xsl:with-param name="fontSize" select="$fontSize"/>
                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
            </xsl:call-template>
            <xsl:for-each select="xal:Country">
                <xsl:call-template name="City">
                    <xsl:with-param name="isBold" select="$isBold"/>
                    <xsl:with-param name="fontSize" select="$fontSize"/>
                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                </xsl:call-template>
                <xsl:for-each select="xal:CountryNameCode">
                    <xsl:call-template name="Space">
                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                    </xsl:call-template>
                    <xsl:if test="$fontSize = &apos;normal&apos;">
                        <xsl:if test="$isBold = 0">
                            <xsl:text>{\cs1971\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>(</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                            <xsl:text>{\cs1972\f1\fs22 </xsl:text>
                            <xsl:apply-templates>
                                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                            </xsl:apply-templates>
                            <xsl:text>}</xsl:text>
                            <xsl:text>{\cs1973\f1\fs22 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>)</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:if>
                        <xsl:if test="$isBold = 1">
                            <xsl:text>{\cs1974\f1\fs22\b </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>(</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                            <xsl:text>{\cs1975\f1\fs22\b </xsl:text>
                            <xsl:apply-templates>
                                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                            </xsl:apply-templates>
                            <xsl:text>}</xsl:text>
                            <xsl:text>{\cs1976\f1\fs22\b </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>)</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:if>
                    </xsl:if>
                    <xsl:if test="$fontSize = &apos;smaller&apos;">
                        <xsl:if test="$isBold = 0">
                            <xsl:text>{\cs1977\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>(</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                            <xsl:text>{\cs1978\f1\fs20 </xsl:text>
                            <xsl:apply-templates>
                                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                            </xsl:apply-templates>
                            <xsl:text>}</xsl:text>
                            <xsl:text>{\cs1979\f1\fs20 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>)</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:if>
                        <xsl:if test="$isBold = 1">
                            <xsl:text>{\cs1980\f1\fs20\b </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>(</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                            <xsl:text>{\cs1981\f1\fs20\b </xsl:text>
                            <xsl:apply-templates>
                                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                            </xsl:apply-templates>
                            <xsl:text>}</xsl:text>
                            <xsl:text>{\cs1982\f1\fs20\b </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>)</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:if>
                    </xsl:if>
                    <xsl:if test="$fontSize = &apos;x-small&apos;">
                        <xsl:if test="$isBold = 0">
                            <xsl:text>{\cs1983\f1\fs18 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>(</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                            <xsl:text>{\cs1984\f1\fs18 </xsl:text>
                            <xsl:apply-templates>
                                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                            </xsl:apply-templates>
                            <xsl:text>}</xsl:text>
                            <xsl:text>{\cs1985\f1\fs18 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>)</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:if>
                        <xsl:if test="$isBold = 1">
                            <xsl:text>{\cs1986\f1\fs18\b </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>(</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                            <xsl:text>{\cs1987\f1\fs18\b </xsl:text>
                            <xsl:apply-templates>
                                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                            </xsl:apply-templates>
                            <xsl:text>}</xsl:text>
                            <xsl:text>{\cs1988\f1\fs18\b </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text>)</xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                        </xsl:if>
                    </xsl:if>
                </xsl:for-each>
            </xsl:for-each>
        </xsl:for-each>
    </xsl:template>
    <xsl:template name="altova:Section_06624E60_FooterRight">
        <xsl:variable name="altova:nMaxWidthIn" select="7.07"/>
        <xsl:variable name="templatetablelevel" select="0"/>
        <xsl:call-template name="LegacyFooter">
            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
        </xsl:call-template>
    </xsl:template>
    <xsl:template name="altova:Section_06624E60_FooterLeft">
        <xsl:variable name="altova:nMaxWidthIn" select="7.07"/>
        <xsl:variable name="templatetablelevel" select="0"/>
        <xsl:call-template name="LegacyFooter">
            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
        </xsl:call-template>
    </xsl:template>
    <xsl:template name="EmptyHeader"/>
    <xsl:template name="write-text">
        <xsl:param name="text"/>
        <xsl:param name="bEscape" select="true()"/>
        <xsl:choose>
            <xsl:when test="$bEscape">
                <xsl:variable name="sLinefeed" select="'&#x0A;'"/>
                <xsl:choose>
                    <xsl:when test="contains($text, $sLinefeed)">
                        <xsl:variable name="first-line" select="substring-before($text, $sLinefeed)"/>
                        <xsl:variable name="rest" select="substring-after($text, $sLinefeed)"/>
                        <xsl:call-template name="write-text-line">
                            <xsl:with-param name="text" select="$first-line"/>
                        </xsl:call-template>
                        <xsl:text>\u13?</xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text" select="$rest"/>
                        </xsl:call-template>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:call-template name="write-text-line">
                            <xsl:with-param name="text" select="$text"/>
                        </xsl:call-template>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:when>
            <xsl:otherwise>
                <xsl:value-of select="string($text)"/>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="write-text-line">
        <xsl:param name="text"/>
        <xsl:variable name="text-length" select="string-length($text)"/>
        <xsl:variable name="text-after-bs" select="substring-after($text, '\')"/>
        <xsl:variable name="text-after-bs-length" select="string-length($text-after-bs)"/>
        <xsl:choose>
            <xsl:when test="$text-after-bs-length = 0">
                <xsl:choose>
                    <xsl:when test="substring($text, $text-length) = '\'">
                        <xsl:call-template name="write-text-ob">
                            <xsl:with-param name="text" select="concat(substring($text,1,$text-length - 1), '\\')"/>
                            <xsl:with-param name="text-length" select="$text-length + 1"/>
                        </xsl:call-template>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:call-template name="write-text-ob">
                            <xsl:with-param name="text" select="$text"/>
                            <xsl:with-param name="text-length" select="$text-length"/>
                        </xsl:call-template>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:when>
            <xsl:otherwise>
                <xsl:call-template name="write-text-ob">
                    <xsl:with-param name="text" select="concat(substring($text,1,$text-length - $text-after-bs-length - 1), '\\')"/>
                    <xsl:with-param name="text-length" select="$text-length - $text-after-bs-length + 1"/>
                </xsl:call-template>
                <xsl:call-template name="write-text-line">
                    <xsl:with-param name="text" select="$text-after-bs"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="write-text-ob">
        <xsl:param name="text"/>
        <xsl:param name="text-length"/>
        <xsl:variable name="text-after-ob" select="substring-after($text, '{')"/>
        <xsl:variable name="text-after-ob-length" select="string-length($text-after-ob)"/>
        <xsl:choose>
            <xsl:when test="$text-after-ob-length = 0">
                <xsl:choose>
                    <xsl:when test="substring($text, $text-length) = '{'">
                        <xsl:call-template name="write-text-cb">
                            <xsl:with-param name="text" select="concat(substring($text,1,$text-length - 1), '\{')"/>
                            <xsl:with-param name="text-length" select="$text-length + 1"/>
                        </xsl:call-template>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:call-template name="write-text-cb">
                            <xsl:with-param name="text" select="$text"/>
                            <xsl:with-param name="text-length" select="$text-length"/>
                        </xsl:call-template>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:when>
            <xsl:otherwise>
                <xsl:call-template name="write-text-cb">
                    <xsl:with-param name="text" select="concat(substring($text,1,$text-length - $text-after-ob-length - 1), '\{')"/>
                    <xsl:with-param name="text-length" select="$text-length - $text-after-ob-length + 1"/>
                </xsl:call-template>
                <xsl:call-template name="write-text-ob">
                    <xsl:with-param name="text" select="$text-after-ob"/>
                    <xsl:with-param name="text-length" select="$text-after-ob-length"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="write-text-cb">
        <xsl:param name="text"/>
        <xsl:param name="text-length"/>
        <xsl:variable name="text-after-cb" select="substring-after($text, '}')"/>
        <xsl:variable name="text-after-cb-length" select="string-length($text-after-cb)"/>
        <xsl:choose>
            <xsl:when test="$text-after-cb-length = 0">
                <xsl:choose>
                    <xsl:when test="substring($text, $text-length) = '}'">
                        <xsl:value-of select="concat(substring($text,1,$text-length - 1), '\}')"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:value-of select="$text"/>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:when>
            <xsl:otherwise>
                <xsl:value-of select="concat(substring($text,1,$text-length - $text-after-cb-length - 1), '\}')"/>
                <xsl:call-template name="write-text-cb">
                    <xsl:with-param name="text" select="$text-after-cb"/>
                    <xsl:with-param name="text-length" select="$text-after-cb-length"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template match="text()|@*">
        <xsl:call-template name="write-text">
            <xsl:with-param name="text" select="."/>
        </xsl:call-template>
    </xsl:template>
    <xsl:template name="altova:GetColorID">
        <xsl:param name="text"/>
        <xsl:variable name="txt" select="translate($text, 'abcdefghijklmnopqrstuvwxyz#', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' )"/>
        <xsl:choose>
            <xsl:when test="$txt = 'WHITE'">
                <xsl:text>140</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'IVORY'">
                <xsl:text>139</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTYELLOW'">
                <xsl:text>138</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'YELLOW'">
                <xsl:text>137</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'SNOW'">
                <xsl:text>136</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FLORALWHITE'">
                <xsl:text>135</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LEMONCHIFFON'">
                <xsl:text>134</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'CORNSILK'">
                <xsl:text>133</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'SEASHELL'">
                <xsl:text>132</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LAVENDERBLUSH'">
                <xsl:text>131</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'PAPAYAWHIP'">
                <xsl:text>130</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'BLANCHEDALMOND'">
                <xsl:text>129</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MISTYROSE'">
                <xsl:text>128</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'BISQUE'">
                <xsl:text>127</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MOCCASIN'">
                <xsl:text>126</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'NAVAJOWHITE'">
                <xsl:text>125</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'PEACHPUFF'">
                <xsl:text>124</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'GOLD'">
                <xsl:text>123</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'PINK'">
                <xsl:text>122</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTPINK'">
                <xsl:text>121</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'ORANGE'">
                <xsl:text>120</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTSALMON'">
                <xsl:text>119</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKORANGE'">
                <xsl:text>118</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'CORAL'">
                <xsl:text>117</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'HOTPINK'">
                <xsl:text>116</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'TOMATO'">
                <xsl:text>115</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'ORANGERED'">
                <xsl:text>114</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DEEPPINK'">
                <xsl:text>113</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FUCHSIA'">
                <xsl:text>112</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MAGENTA'">
                <xsl:text>111</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'RED'">
                <xsl:text>110</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'OLDLACE'">
                <xsl:text>109</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTGOLDENRODYELLOW'">
                <xsl:text>108</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LINEN'">
                <xsl:text>107</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'ANTIQUEWHITE'">
                <xsl:text>106</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'SALMON'">
                <xsl:text>105</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'GHOSTWHITE'">
                <xsl:text>104</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MINTCREAM'">
                <xsl:text>103</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'WHITESMOKE'">
                <xsl:text>102</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'BEIGE'">
                <xsl:text>101</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'WHEAT'">
                <xsl:text>100</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'SANDYBROWN'">
                <xsl:text>99</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'AZURE'">
                <xsl:text>98</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'HONEYDEW'">
                <xsl:text>97</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'ALICEBLUE'">
                <xsl:text>96</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'KHAKI'">
                <xsl:text>95</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTCORAL'">
                <xsl:text>94</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'PALEGOLDENROD'">
                <xsl:text>93</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'VIOLET'">
                <xsl:text>92</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKSALMON'">
                <xsl:text>91</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LAVENDER'">
                <xsl:text>90</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTCYAN'">
                <xsl:text>89</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'BURLYWOOD'">
                <xsl:text>88</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'PLUM'">
                <xsl:text>87</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'GAINSBORO'">
                <xsl:text>86</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'CRIMSON'">
                <xsl:text>85</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'PALEVIOLETRED'">
                <xsl:text>84</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'GOLDENROD'">
                <xsl:text>83</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'ORCHID'">
                <xsl:text>82</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'THISTLE'">
                <xsl:text>81</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTGRAY'">
                <xsl:text>80</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'TAN'">
                <xsl:text>79</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'CHOCOLATE'">
                <xsl:text>78</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'PERU'">
                <xsl:text>77</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'INDIANRED'">
                <xsl:text>76</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MEDIUMVIOLETRED'">
                <xsl:text>75</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'SILVER'">
                <xsl:text>74</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKKHAKI'">
                <xsl:text>73</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'ROSYBROWN'">
                <xsl:text>72</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MEDIUMORCHID'">
                <xsl:text>71</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKGOLDENROD'">
                <xsl:text>70</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FIREBRICK'">
                <xsl:text>69</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'POWDERBLUE'">
                <xsl:text>68</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTSTEELBLUE'">
                <xsl:text>67</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'PALETURQUOISE'">
                <xsl:text>66</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'GREENYELLOW'">
                <xsl:text>65</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTBLUE'">
                <xsl:text>64</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKGRAY'">
                <xsl:text>63</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'BROWN'">
                <xsl:text>62</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'SIENNA'">
                <xsl:text>61</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'YELLOWGREEN'">
                <xsl:text>60</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKORCHID'">
                <xsl:text>59</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'PALEGREEN'">
                <xsl:text>58</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKVIOLET'">
                <xsl:text>57</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MEDIUMPURPLE'">
                <xsl:text>56</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTGREEN'">
                <xsl:text>55</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKSEAGREEN'">
                <xsl:text>54</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'SADDLEBROWN'">
                <xsl:text>53</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKMAGENTA'">
                <xsl:text>52</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKRED'">
                <xsl:text>51</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'BLUEVIOLET'">
                <xsl:text>50</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTSKYBLUE'">
                <xsl:text>49</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'SKYBLUE'">
                <xsl:text>48</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'GRAY'">
                <xsl:text>47</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'OLIVE'">
                <xsl:text>46</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'PURPLE'">
                <xsl:text>45</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MAROON'">
                <xsl:text>44</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'AQUAMARINE'">
                <xsl:text>43</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'CHARTREUSE'">
                <xsl:text>42</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LAWNGREEN'">
                <xsl:text>41</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MEDIUMSLATEBLUE'">
                <xsl:text>40</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTSLATEGRAY'">
                <xsl:text>39</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'SLATEGRAY'">
                <xsl:text>38</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'OLIVEDRAB'">
                <xsl:text>37</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'SLATEBLUE'">
                <xsl:text>36</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DIMGRAY'">
                <xsl:text>35</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MEDIUMAQUAMARINE'">
                <xsl:text>34</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'CORNFLOWERBLUE'">
                <xsl:text>33</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'CADETBLUE'">
                <xsl:text>32</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKOLIVEGREEN'">
                <xsl:text>31</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'INDIGO'">
                <xsl:text>30</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MEDIUMTURQUOISE'">
                <xsl:text>29</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKSLATEBLUE'">
                <xsl:text>28</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'STEELBLUE'">
                <xsl:text>27</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'ROYALBLUE'">
                <xsl:text>26</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'TURQUOISE'">
                <xsl:text>25</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MEDIUMSEAGREEN'">
                <xsl:text>24</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIMEGREEN'">
                <xsl:text>23</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKSLATEGRAY'">
                <xsl:text>22</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'SEAGREEN'">
                <xsl:text>21</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FORESTGREEN'">
                <xsl:text>20</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTSEAGREEN'">
                <xsl:text>19</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DODGERBLUE'">
                <xsl:text>18</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MIDNIGHTBLUE'">
                <xsl:text>17</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'CYAN'">
                <xsl:text>16</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'AQUA'">
                <xsl:text>15</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'SPRINGGREEN'">
                <xsl:text>14</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIME'">
                <xsl:text>13</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MEDIUMSPRINGGREEN'">
                <xsl:text>12</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKTURQUOISE'">
                <xsl:text>11</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DEEPSKYBLUE'">
                <xsl:text>10</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKCYAN'">
                <xsl:text>9</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'TEAL'">
                <xsl:text>8</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'GREEN'">
                <xsl:text>7</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKGREEN'">
                <xsl:text>6</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'BLUE'">
                <xsl:text>5</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MEDIUMBLUE'">
                <xsl:text>4</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKBLUE'">
                <xsl:text>3</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'NAVY'">
                <xsl:text>2</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'BLACK'">
                <xsl:text>1</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFFFFF'">
                <xsl:text>140</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFFFF0'">
                <xsl:text>139</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFFFE0'">
                <xsl:text>138</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFFF00'">
                <xsl:text>137</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFFAFA'">
                <xsl:text>136</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFFAF0'">
                <xsl:text>135</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFFACD'">
                <xsl:text>134</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFF8DC'">
                <xsl:text>133</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFF5EE'">
                <xsl:text>132</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFF0F5'">
                <xsl:text>131</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFEFD5'">
                <xsl:text>130</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFEBCD'">
                <xsl:text>129</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFE4E1'">
                <xsl:text>128</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFE4C4'">
                <xsl:text>127</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFE4B5'">
                <xsl:text>126</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFDEAD'">
                <xsl:text>125</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFDAB9'">
                <xsl:text>124</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFD700'">
                <xsl:text>123</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFC0CB'">
                <xsl:text>122</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFB6C1'">
                <xsl:text>121</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFA500'">
                <xsl:text>120</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFA07A'">
                <xsl:text>119</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FF8C00'">
                <xsl:text>118</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FF7F50'">
                <xsl:text>117</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FF69B4'">
                <xsl:text>116</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FF6347'">
                <xsl:text>115</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FF4500'">
                <xsl:text>114</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FF1493'">
                <xsl:text>113</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FF00FF'">
                <xsl:text>112</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FF00FF'">
                <xsl:text>111</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FF0000'">
                <xsl:text>110</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FDF5E6'">
                <xsl:text>109</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FAFAD2'">
                <xsl:text>108</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FAF0E6'">
                <xsl:text>107</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FAEBD7'">
                <xsl:text>106</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FA8072'">
                <xsl:text>105</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'F8F8FF'">
                <xsl:text>104</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'F5FFFA'">
                <xsl:text>103</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'F5F5F5'">
                <xsl:text>102</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'F5F5DC'">
                <xsl:text>101</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'F5DEB3'">
                <xsl:text>100</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'F4A460'">
                <xsl:text>99</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'F0FFFF'">
                <xsl:text>98</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'F0FFF0'">
                <xsl:text>97</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'F0F8FF'">
                <xsl:text>96</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'F0E68C'">
                <xsl:text>95</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'F08080'">
                <xsl:text>94</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'EEE8AA'">
                <xsl:text>93</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'EE82EE'">
                <xsl:text>92</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'E9967A'">
                <xsl:text>91</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'E6E6FA'">
                <xsl:text>90</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'E0FFFF'">
                <xsl:text>89</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DEB887'">
                <xsl:text>88</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DDA0DD'">
                <xsl:text>87</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DCDCDC'">
                <xsl:text>86</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DC143C'">
                <xsl:text>85</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DB7093'">
                <xsl:text>84</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DAA520'">
                <xsl:text>83</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DA70D6'">
                <xsl:text>82</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'D8BFD8'">
                <xsl:text>81</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'D3D3D3'">
                <xsl:text>80</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'D2B48C'">
                <xsl:text>79</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'D2691E'">
                <xsl:text>78</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'CD853F'">
                <xsl:text>77</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'CD5C5C'">
                <xsl:text>76</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'C71585'">
                <xsl:text>75</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'C0C0C0'">
                <xsl:text>74</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'BDB76B'">
                <xsl:text>73</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'BC8F8F'">
                <xsl:text>72</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'BA55D3'">
                <xsl:text>71</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'B8860B'">
                <xsl:text>70</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'B22222'">
                <xsl:text>69</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'B0E0E6'">
                <xsl:text>68</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'B0C4DE'">
                <xsl:text>67</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'AFEEEE'">
                <xsl:text>66</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'ADFF2F'">
                <xsl:text>65</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'ADD8E6'">
                <xsl:text>64</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'A9A9A9'">
                <xsl:text>63</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'A52A2A'">
                <xsl:text>62</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'A0522D'">
                <xsl:text>61</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '9ACD32'">
                <xsl:text>60</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '9932CC'">
                <xsl:text>59</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '98FB98'">
                <xsl:text>58</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '9400D3'">
                <xsl:text>57</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '9370DB'">
                <xsl:text>56</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '90EE90'">
                <xsl:text>55</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '8FBC8B'">
                <xsl:text>54</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '8B4513'">
                <xsl:text>53</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '8B008B'">
                <xsl:text>52</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '8B0000'">
                <xsl:text>51</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '8A2BE2'">
                <xsl:text>50</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '87CEFA'">
                <xsl:text>49</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '87CEEB'">
                <xsl:text>48</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '808080'">
                <xsl:text>47</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '808000'">
                <xsl:text>46</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '800080'">
                <xsl:text>45</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '800000'">
                <xsl:text>44</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '7FFFD4'">
                <xsl:text>43</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '7FFF00'">
                <xsl:text>42</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '7CFC00'">
                <xsl:text>41</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '7B68EE'">
                <xsl:text>40</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '778899'">
                <xsl:text>39</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '708090'">
                <xsl:text>38</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '6B8E23'">
                <xsl:text>37</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '6A5ACD'">
                <xsl:text>36</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '696969'">
                <xsl:text>35</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '66CDAA'">
                <xsl:text>34</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '6495ED'">
                <xsl:text>33</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '5F9EA0'">
                <xsl:text>32</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '556B2F'">
                <xsl:text>31</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '4B0082'">
                <xsl:text>30</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '48D1CC'">
                <xsl:text>29</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '483D8B'">
                <xsl:text>28</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '4682B4'">
                <xsl:text>27</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '4169E1'">
                <xsl:text>26</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '40E0D0'">
                <xsl:text>25</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '3CB371'">
                <xsl:text>24</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '32CD32'">
                <xsl:text>23</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '2F4F4F'">
                <xsl:text>22</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '2E8B57'">
                <xsl:text>21</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '228B22'">
                <xsl:text>20</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '20B2AA'">
                <xsl:text>19</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '1E90FF'">
                <xsl:text>18</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '191970'">
                <xsl:text>17</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '00FFFF'">
                <xsl:text>16</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '00FFFF'">
                <xsl:text>15</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '00FF7F'">
                <xsl:text>14</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '00FF00'">
                <xsl:text>13</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '00FA9A'">
                <xsl:text>12</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '00CED1'">
                <xsl:text>11</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '00BFFF'">
                <xsl:text>10</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '008B8B'">
                <xsl:text>9</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '008080'">
                <xsl:text>8</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '008000'">
                <xsl:text>7</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '006400'">
                <xsl:text>6</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '0000FF'">
                <xsl:text>5</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '0000CD'">
                <xsl:text>4</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '00008B'">
                <xsl:text>3</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '000080'">
                <xsl:text>2</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '000000'">
                <xsl:text>1</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>0</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="altova:GetFontID">
        <xsl:param name="font"/>
        <xsl:variable name="font-upper" select="translate($font, 'abcdefghijklmnopqrstuvwxyz#', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' )"/>
        <xsl:choose>
            <xsl:when test="$font-upper = 'TIMES NEW ROMAN'">
                <xsl:text>0</xsl:text>
            </xsl:when>
            <xsl:when test="$font-upper = 'ARIAL'">
                <xsl:text>1</xsl:text>
            </xsl:when>
            <xsl:when test="$font-upper = 'SYMBOL'">
                <xsl:text>2</xsl:text>
            </xsl:when>
            <xsl:when test="$font-upper = 'WINGDINGS'">
                <xsl:text>3</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>0</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="altova:GetRtfBorderStyle">
        <xsl:param name="style"/>
        <xsl:choose>
            <xsl:when test="$style='none'">
                <xsl:text>\brdrnil</xsl:text>
            </xsl:when>
            <xsl:when test="$style='hidden'">
                <xsl:text>\brdrnone</xsl:text>
            </xsl:when>
            <xsl:when test="$style='dotted'">
                <xsl:text>\brdrdot</xsl:text>
            </xsl:when>
            <xsl:when test="$style='dashed'">
                <xsl:text>\brdrdash</xsl:text>
            </xsl:when>
            <xsl:when test="$style='solid'">
                <xsl:text>\brdrs</xsl:text>
            </xsl:when>
            <xsl:when test="$style='double'">
                <xsl:text>\brdrd</xsl:text>
            </xsl:when>
            <xsl:when test="$style='groove'">
                <xsl:text>\brdrengrave</xsl:text>
            </xsl:when>
            <xsl:when test="$style='ridge'">
                <xsl:text>\brdremboss</xsl:text>
            </xsl:when>
            <xsl:when test="$style='inset'">
                <xsl:text>\brdrinset</xsl:text>
            </xsl:when>
            <xsl:when test="$style='outset'">
                <xsl:text>\brdroutset</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>\brdrnil</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="altova:ConvertWidthToTwips">
        <xsl:param name="width"/>
        <xsl:variable name="normal-width" select="normalize-space($width)"/>
        <xsl:choose>
            <xsl:when test="contains($normal-width,'px')">
                <xsl:value-of select="(number(substring-before($normal-width,'px')) * 1440) div $altova:nPxPerIn"/>
            </xsl:when>
            <xsl:when test="contains($normal-width,'cm')">
                <xsl:value-of select="(number(substring-before($normal-width,'cm')) * 1440) div 2.54"/>
            </xsl:when>
            <xsl:when test="contains($normal-width,'mm')">
                <xsl:value-of select="(number(substring-before($normal-width,'mm')) * 1440) div 25.4"/>
            </xsl:when>
            <xsl:when test="contains($normal-width,'in')">
                <xsl:value-of select="number(substring-before($normal-width,'in')) * 1440"/>
            </xsl:when>
            <xsl:when test="contains($normal-width,'pc')">
                <xsl:value-of select="number(substring-before($normal-width,'pc')) * 240"/>
            </xsl:when>
            <xsl:when test="contains($normal-width,'pt')">
                <xsl:value-of select="number(substring-before($normal-width,'pt')) * 20"/>
            </xsl:when>
            <xsl:when test="$normal-width='thin'">
                <xsl:value-of select="30"/>
            </xsl:when>
            <xsl:when test="$normal-width='medium'">
                <xsl:value-of select="60"/>
            </xsl:when>
            <xsl:when test="$normal-width='thick'">
                <xsl:value-of select="80"/>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>0</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
</xsl:stylesheet>
