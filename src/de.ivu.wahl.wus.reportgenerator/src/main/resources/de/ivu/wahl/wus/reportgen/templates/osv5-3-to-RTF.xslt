<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2015 rel. 4 - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:altova="http://www.altova.com" xmlns:altova-xfi="http://www.altova.com/xslt-extensions/xbrl" xmlns:altovaext="http://www.altova.com/xslt-extensions" xmlns:array="http://www.w3.org/2005/xpath-functions/array" xmlns:clitype="clitype" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:eml="urn:oasis:names:tc:evs:schema:eml" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:iso4217="http://www.xbrl.org/2003/iso4217" xmlns:ix="http://www.xbrl.org/2008/inlineXBRL" xmlns:java="java" xmlns:kr="http://www.kiesraad.nl/extensions" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:map="http://www.w3.org/2005/xpath-functions/map" xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:rg="http://www.kiesraad.nl/reportgenerator" xmlns:sps="http://www.altova.com/StyleVision/user-xpath-functions" xmlns:ts="urn:oasis:names:tc:evs:schema:eml:ts" xmlns:xal="urn:oasis:names:tc:ciq:xsdschema:xAL:2.0" xmlns:xbrldi="http://xbrl.org/2006/xbrldi" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:xff="http://www.xbrl.org/2010/function/formula" xmlns:xfi="http://www.xbrl.org/2008/function/instance" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xnl="urn:oasis:names:tc:ciq:xsdschema:xNL:2.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" exclude-result-prefixes="altova altova-xfi altovaext array clitype ds eml fn iso4217 ix java kr link map math rg sps ts xal xbrldi xbrli xff xfi xlink xnl xs xsi">
    <xsl:import href="D:\projekte\de.ivu.wahl.wus.reportgenerator\src\main\resources\de\ivu\wahl\wus\reportgen\text\nl\reused-parts-simple-text.xslt"/>
    <xsl:import href="D:\projekte\de.ivu.wahl.wus.reportgenerator\src\main\resources\de\ivu\wahl\wus\reportgen\text\nl\osv5-3-text.xslt"/>
    <xsl:output method="text" encoding="UTF-8"/>
    <xsl:param name="SV_OutputFormat" select="'RTF'"/>
    <xsl:param name="generateDate" select="'01-02-2003 04:05:06'"/>
    <xsl:param name="hashCode" select="'12 34 56 78 90 AB CD EF 12 34 56 78 90 AB CD EF FF FF FF FF'"/>
    <xsl:param name="isDraft" select="'false'"/>
    <xsl:param name="lang" select="'1'"/>
    <xsl:variable name="XML" select="/"/>
    <xsl:variable name="altova:nPxPerIn" select="96"/>
    <xsl:template match="*" priority="-1.0">
        <xsl:param name="altova:nMaxWidthIn" select="6.26389"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:apply-templates>
            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel"/>
        </xsl:apply-templates>
    </xsl:template>
    <xsl:template match="/">
        <xsl:variable name="altova:nMaxWidthIn" select="6.26389"/>
        <xsl:variable name="templatetablelevel" select="0"/>
        <xsl:text>{\rtf1\ansi\deff0</xsl:text>
        <xsl:text>{\fonttbl{\f0\fnil Times New Roman;}{\f1\fnil Arial;}{\f2\fnil Symbol;}{\f3\fnil Wingdings;}}</xsl:text>
        <xsl:text>{\colortbl;\red0\green0\blue0;\red0\green0\blue128;\red0\green0\blue139;\red0\green0\blue205;\red0\green0\blue255;\red0\green100\blue0;\red0\green128\blue0;\red0\green128\blue128;\red0\green139\blue139;\red0\green191\blue255;\red0\green206\blue209;\red0\green250\blue154;\red0\green255\blue0;\red0\green255\blue127;\red0\green255\blue255;\red0\green255\blue255;\red25\green25\blue112;\red30\green144\blue255;\red32\green178\blue170;\red34\green139\blue34;\red46\green139\blue87;\red47\green79\blue79;\red50\green205\blue50;\red60\green179\blue113;\red64\green224\blue208;\red65\green105\blue225;\red70\green130\blue180;\red72\green61\blue139;\red72\green209\blue204;\red75\green0\blue130;\red85\green107\blue47;\red95\green158\blue160;\red100\green149\blue237;\red102\green205\blue170;\red105\green105\blue105;\red106\green90\blue205;\red107\green142\blue35;\red112\green128\blue144;\red119\green136\blue153;\red123\green104\blue238;\red124\green252\blue0;\red127\green255\blue0;\red127\green255\blue212;\red128\green0\blue0;\red128\green0\blue128;\red128\green128\blue0;\red128\green128\blue128;\red135\green206\blue235;\red135\green206\blue250;\red138\green43\blue226;\red139\green0\blue0;\red139\green0\blue139;\red139\green69\blue19;\red143\green188\blue139;\red144\green238\blue144;\red147\green112\blue219;\red148\green0\blue211;\red152\green251\blue152;\red153\green50\blue204;\red154\green205\blue50;\red160\green82\blue45;\red165\green42\blue42;\red169\green169\blue169;\red173\green216\blue230;\red173\green255\blue47;\red175\green238\blue238;\red176\green196\blue222;\red176\green224\blue230;\red178\green34\blue34;\red184\green134\blue11;\red186\green85\blue211;\red188\green143\blue143;\red189\green183\blue107;\red192\green192\blue192;\red199\green21\blue133;\red205\green92\blue92;\red205\green133\blue63;\red210\green105\blue30;\red210\green180\blue140;\red211\green211\blue211;\red216\green191\blue216;\red218\green112\blue214;\red218\green165\blue32;\red219\green112\blue147;\red220\green20\blue60;\red220\green220\blue220;\red221\green160\blue221;\red222\green184\blue135;\red224\green255\blue255;\red230\green230\blue250;\red233\green150\blue122;\red238\green130\blue238;\red238\green232\blue170;\red240\green128\blue128;\red240\green230\blue140;\red240\green248\blue255;\red240\green255\blue240;\red240\green255\blue255;\red244\green164\blue96;\red245\green222\blue179;\red245\green245\blue220;\red245\green245\blue245;\red245\green255\blue250;\red248\green248\blue255;\red250\green128\blue114;\red250\green235\blue215;\red250\green240\blue230;\red250\green250\blue210;\red253\green245\blue230;\red255\green0\blue0;\red255\green0\blue255;\red255\green0\blue255;\red255\green20\blue147;\red255\green69\blue0;\red255\green99\blue71;\red255\green105\blue180;\red255\green127\blue80;\red255\green140\blue0;\red255\green160\blue122;\red255\green165\blue0;\red255\green182\blue193;\red255\green192\blue203;\red255\green215\blue0;\red255\green218\blue185;\red255\green222\blue173;\red255\green228\blue181;\red255\green228\blue196;\red255\green228\blue225;\red255\green235\blue205;\red255\green239\blue213;\red255\green240\blue245;\red255\green245\blue238;\red255\green248\blue220;\red255\green250\blue205;\red255\green250\blue240;\red255\green250\blue250;\red255\green255\blue0;\red255\green255\blue224;\red255\green255\blue240;\red255\green255\blue255;}</xsl:text>
        <xsl:text>{\stylesheet</xsl:text>
        <xsl:text>{\s0\f0\fs24\snext0 Normal;}</xsl:text>
        <xsl:text>{\s1\f0\fs24\snext0 Paragraph;}</xsl:text>
        <xsl:text>{\s2\f0\fs24\i\snext0 Address;}</xsl:text>
        <xsl:text>{\s3\qc\f0\fs24\snext0 Center;}</xsl:text>
        <xsl:text>{\s4\lin720\f0\fs24\snext0 Blockquote;}</xsl:text>
        <xsl:text>{\s5\lin60\rin60\brdrs\brdrcf47\brdrw15\f0\fs24\snext0 Fieldset;}</xsl:text>
        <xsl:text>{\s6\f1\fs24\snext0 Preformatted;}</xsl:text>
        <xsl:text>{\s7\f1\fs24\snext0 Preformatted and wrapping;}</xsl:text>
        <xsl:text>{\s8\f1\fs48\b\snext0 Heading 1;}</xsl:text>
        <xsl:text>{\s9\f1\fs36\b\snext0 Heading 2;}</xsl:text>
        <xsl:text>{\s10\f1\fs26\b\snext0 Heading 3;}</xsl:text>
        <xsl:text>{\s11\f1\fs22\b\snext0 Heading 4;}</xsl:text>
        <xsl:text>{\s12\f1\fs18\b\snext0 Heading 5;}</xsl:text>
        <xsl:text>{\s13\f1\fs16\b\snext0 Heading 6;}</xsl:text>
        <xsl:text>{\*\ts15\tsrowd\ql\f1\fs18\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil\snext0 Table *;}</xsl:text>
        <xsl:text>}</xsl:text>
        <xsl:text>{\*\generator Altova StyleVision Enterprise Edition;}\viewkind1\viewzk0\viewscale100\newtblstyruls\nofeaturethrottle1 </xsl:text>
        <xsl:text>\dntblnsbdb\fs24\f0 </xsl:text>
        <xsl:call-template name="altova:DocumentSection_0">
            <xsl:with-param name="altova:nMaxWidthIn" select="6.26"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel"/>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
    </xsl:template>
    <xsl:template name="altova:DocumentSection_0">
        <xsl:param name="altova:nMaxWidthIn"/>
        <xsl:param name="templatetablelevel"/>
        <xsl:text>\sectd\facingp\pgwsxn11900\pghsxn16820\margtsxn1280\marglsxn1440\margbsxn1720\margrsxn1440\headery0\footery0\cols1\colsx720\pgndec\ftnbj\ftnrstcont\ftnnar</xsl:text>
        <xsl:text>{</xsl:text>
        <xsl:text>\headerl </xsl:text>
        <xsl:call-template name="EmptyHeader"/>
        <xsl:text>}</xsl:text>
        <xsl:text>{</xsl:text>
        <xsl:text>\headerr </xsl:text>
        <xsl:call-template name="EmptyHeader"/>
        <xsl:text>}</xsl:text>
        <xsl:text>{</xsl:text>
        <xsl:text>\footerl </xsl:text>
        <xsl:call-template name="altova:Section_0_FooterLeft"/>
        <xsl:text>}</xsl:text>
        <xsl:text>{</xsl:text>
        <xsl:text>\footerr </xsl:text>
        <xsl:call-template name="altova:Section_0_FooterRight"/>
        <xsl:text>}</xsl:text>
        <xsl:text>\par\par</xsl:text>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 0"/>
        <xsl:text>\s11\f1\fs22\b\ql\sl0\f1\fs18 </xsl:text>
        <xsl:for-each select="$XML">
            <xsl:for-each select="eml:EML">
                <xsl:for-each select="eml:Result">
                    <xsl:for-each select="eml:Election">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>Bijlage</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$o5-3_010_1_Bijlage"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text> bij proces verbaal </xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$o5-3_010_2_Bijlage"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:for-each select="eml:ElectionIdentifier">
                            <xsl:for-each select="kr:ElectionSubcategory">
                                <xsl:choose>
                                    <xsl:when test=".=&quot;EP&quot; or .=&quot;TK&quot; or .=&quot;PS2&quot;">
                                        <xsl:choose>
                                            <xsl:when test="$lang=0">
                                                <xsl:text>{\f1\fs18 </xsl:text>
                                                <xsl:call-template name="write-text">
                                                    <xsl:with-param name="text">
                                                        <xsl:text>P 22-1</xsl:text>
                                                    </xsl:with-param>
                                                </xsl:call-template>
                                                <xsl:text>}</xsl:text>
                                            </xsl:when>
                                            <xsl:otherwise>
                                                <xsl:text>{\f1\fs18 </xsl:text>
                                                <xsl:call-template name="write-text">
                                                    <xsl:with-param name="text">
                                                        <xsl:value-of select="$o5-3_010_3_Bijlage"/>
                                                    </xsl:with-param>
                                                </xsl:call-template>
                                                <xsl:text>}</xsl:text>
                                            </xsl:otherwise>
                                        </xsl:choose>
                                    </xsl:when>
                                    <xsl:when test=".=&quot;EK&quot;">
                                        <xsl:choose>
                                            <xsl:when test="$lang=0">
                                                <xsl:text>{\f1\fs18 </xsl:text>
                                                <xsl:call-template name="write-text">
                                                    <xsl:with-param name="text">
                                                        <xsl:text>U 16</xsl:text>
                                                    </xsl:with-param>
                                                </xsl:call-template>
                                                <xsl:text>}</xsl:text>
                                            </xsl:when>
                                            <xsl:otherwise>
                                                <xsl:text>{\f1\fs18 </xsl:text>
                                                <xsl:call-template name="write-text">
                                                    <xsl:with-param name="text">
                                                        <xsl:value-of select="$o5-3_010_6_Bijlage"/>
                                                    </xsl:with-param>
                                                </xsl:call-template>
                                                <xsl:text>}</xsl:text>
                                            </xsl:otherwise>
                                        </xsl:choose>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:choose>
                                            <xsl:when test="$lang=0">
                                                <xsl:text>{\f1\fs18 </xsl:text>
                                                <xsl:call-template name="write-text">
                                                    <xsl:with-param name="text">
                                                        <xsl:text>P 22-2</xsl:text>
                                                    </xsl:with-param>
                                                </xsl:call-template>
                                                <xsl:text>}</xsl:text>
                                            </xsl:when>
                                            <xsl:otherwise>
                                                <xsl:text>{\f1\fs18 </xsl:text>
                                                <xsl:call-template name="write-text">
                                                    <xsl:with-param name="text">
                                                        <xsl:value-of select="$o5-3_010_4_Bijlage"/>
                                                    </xsl:with-param>
                                                </xsl:call-template>
                                                <xsl:text>}</xsl:text>
                                            </xsl:otherwise>
                                        </xsl:choose>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:for-each>
                        </xsl:for-each>
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>, uitslag van </xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$o5-3_010_5_Bijlage"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:call-template name="ElectionName">
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:call-template>
                        <xsl:if test="$SV_OutputFormat = &apos;PDF&apos;">
                            <xsl:text>\pard</xsl:text>
                            <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                            <xsl:text>\itap</xsl:text>
                            <xsl:value-of select="$templatetablelevel + 0"/>
                            <xsl:text>\s11\f1\fs22\b\ql\sl0\f1\fs18\s0\f0\fs24\sl0\f1\fs18 </xsl:text>
                            <xsl:text>\s0\f0\fs24\b0\f0\fs24\f0\fs24</xsl:text>
                        </xsl:if>
                    </xsl:for-each>
                </xsl:for-each>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\par\pard\s0\f0\fs24\b0\f0\fs24</xsl:text>
        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 0"/>
        <xsl:text>\par </xsl:text>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 0"/>
        <xsl:text>\s1\f0\fs24\sl0\f1\fs18 </xsl:text>
        <xsl:for-each select="$XML">
            <xsl:for-each select="eml:EML">
                <xsl:for-each select="eml:Result">
                    <xsl:for-each select="rg:RG520">
                        <xsl:text>\par </xsl:text>
                        <xsl:text>\par </xsl:text>
                        <xsl:choose>
                            <xsl:when test="//kr:ElectionSubcategory[ text() = &quot;EK&quot; ]">
                                <xsl:text>\pard</xsl:text>
                                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                                <xsl:text>\itap</xsl:text>
                                <xsl:value-of select="$templatetablelevel + 0"/>
                                <xsl:text>\s1\f0\fs24\sl0\f1\fs18\s0\f0\fs24\sl0\f1\fs18 </xsl:text>
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\f1\fs18 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text>Door de in de zittingsruimte aanwezige kiezers zijn de volgende bezwaren ingebracht: </xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\f1\fs18 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$o5-3_020_U16_volgendeBezwaren"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <xsl:text>\s0\f0\fs24\f0\fs24</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>\pard</xsl:text>
                                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                                <xsl:text>\itap</xsl:text>
                                <xsl:value-of select="$templatetablelevel + 0"/>
                                <xsl:text>\s1\f0\fs24\sl0\f1\fs18\s0\f0\fs24\sl0\f1\fs18 </xsl:text>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>Tijdens de zitting zijn door aanwezige kiezers de volgende bezwaren ingebracht:</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                                <xsl:text>\s0\f0\fs24\f0\fs24</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:text>\par </xsl:text>
                        <xsl:call-template name="ObjectionsByVoters2a">
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:call-template>
                        <xsl:text>\par </xsl:text>
                        <xsl:text>\par </xsl:text>
                        <xsl:choose>
                            <xsl:when test=".=&quot;EK&quot;">
                                <xsl:text>\pard</xsl:text>
                                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                                <xsl:text>\itap</xsl:text>
                                <xsl:value-of select="$templatetablelevel + 0"/>
                                <xsl:text>\s1\f0\fs24\sl0\f1\fs18\s0\f0\fs24\sl0\f1\fs18 </xsl:text>
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\f1\fs18 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text>Deze bezwaren geven het stembureau aanleiding het volgende op te merken:</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\f1\fs18 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$o5-3_030_U16_volgendeOpTeMerken"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <xsl:text>\s0\f0\fs24\f0\fs24</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>\pard</xsl:text>
                                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                                <xsl:text>\itap</xsl:text>
                                <xsl:value-of select="$templatetablelevel + 0"/>
                                <xsl:text>\s1\f0\fs24\sl0\f1\fs18\s0\f0\fs24\sl0\f1\fs18 </xsl:text>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>Naar aanleiding van bovenstaande bezwaren merkt het centraal stembureau het volgende op:</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                                <xsl:text>\s0\f0\fs24\f0\fs24</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:text>\par </xsl:text>
                        <xsl:text>\par </xsl:text>
                        <xsl:call-template name="ObjectionsByVoters2">
                            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                        </xsl:call-template>
                        <xsl:text>\par </xsl:text>
                        <xsl:text>\par </xsl:text>
                        <xsl:text>\par </xsl:text>
                        <xsl:text>\par\par</xsl:text>
                        <xsl:text>\pard</xsl:text>
                        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                        <xsl:text>\itap</xsl:text>
                        <xsl:value-of select="$templatetablelevel + 0"/>
                        <xsl:text>\s1\f0\fs24\sl0\f1\fs18\s0\f0\fs24\sl0\f1\fs18 </xsl:text>
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>Paraaf voorzitter ...............................................................................</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$o5-3_040_ParaafVoorzitter"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:text>\par\pard\s0\s0\f0\fs24\f0\fs24</xsl:text>
                        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                        <xsl:text>\itap</xsl:text>
                        <xsl:value-of select="$templatetablelevel + 0"/>
                        <xsl:text>\par\s1\f0\fs24\sl0\f1\fs18 </xsl:text>
                    </xsl:for-each>
                </xsl:for-each>
            </xsl:for-each>
        </xsl:for-each>
        <xsl:text>\s0\f0\fs24</xsl:text>
    </xsl:template>
    <xsl:template name="legacy_footerall">
        <xsl:param name="altova:nMaxWidthIn" select="6.26389"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:variable name="altova:CurrContextGrid_1" select="."/>
        <xsl:variable name="altova:nTableWidthIn_0" select="$altova:nMaxWidthIn * 1.00000"/>
        <xsl:variable name="altova:nTableWidthTw_0" select="$altova:nTableWidthIn_0 * 1440"/>
        <xsl:variable name="altova:SumDefaultColumnsForWideTableTw_0" select="round($altova:nTableWidthTw_0 * 0.25)"/>
        <xsl:variable name="altova:nTableIndentTw_0" select="0"/>
        <xsl:variable name="altova:nSumColumnWidthsTw_0" select="round(2000.50)"/>
        <xsl:variable name="altova:TableWidthFactor_0">
            <xsl:choose>
                <xsl:when test="$altova:nSumColumnWidthsTw_0 &gt; $altova:nTableWidthTw_0">
                    <xsl:value-of select="($altova:nTableWidthTw_0 - $altova:SumDefaultColumnsForWideTableTw_0) div $altova:nSumColumnWidthsTw_0"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="1"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnsWithDefaultWidth_0" select="round(1)"/>
        <xsl:variable name="altova:nColumnsWithDefaultWidthNotZero_0">
            <xsl:choose>
                <xsl:when test="$altova:nColumnsWithDefaultWidth_0 = 0">
                    <xsl:value-of select="round(1)"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="$altova:nColumnsWithDefaultWidth_0"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nDefaultColumnWidthTw_0">
            <xsl:choose>
                <xsl:when test="$altova:TableWidthFactor_0 &lt; 1">
                    <xsl:value-of select="$altova:SumDefaultColumnsForWideTableTw_0 div $altova:nColumnsWithDefaultWidthNotZero_0"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="round(($altova:nTableWidthTw_0 - $altova:nSumColumnWidthsTw_0) div $altova:nColumnsWithDefaultWidthNotZero_0)"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:nColumnWidthTw_0_0" select="$altova:nDefaultColumnWidthTw_0"/>
        <xsl:variable name="altova:nColumnWidthTw_0_1" select="round(1.39 * 1440 * $altova:TableWidthFactor_0)"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:variable name="tablestyle0">
            <xsl:text>\trowd</xsl:text>
            <xsl:text>\trautofit1</xsl:text>
            <xsl:text>\trftsWidth3\trwWidth</xsl:text>
            <xsl:value-of select="round($altova:nTableWidthTw_0)"/>
            <xsl:text>\trleft</xsl:text>
            <xsl:value-of select="$altova:nTableIndentTw_0"/>
            <xsl:text>\ts15\trspdl15\trspdt15\trspdb15\trspdr15\trspdfl3\trspdft3\trspdfb3\trspdfr3\trpaddt30\trpaddl30\trpaddb30\trpaddr30\trpaddft3\trpaddfl3\trpaddfb3\trpaddfr3\trbrdrt\brdrnil\trbrdrl\brdrnil\trbrdrb\brdrnil\trbrdrr\brdrnil</xsl:text>
        </xsl:variable>
        <xsl:variable name="rowend0">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\row\pard</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestrow}{\nonesttables\par}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="cellend0">
            <xsl:choose>
                <xsl:when test="$templatetablelevel + 1 = 1">
                    <xsl:text>\cell</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>\nestcell</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="altova:RowStyle0">
            <xsl:text>\trrh600</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl0" select="$altova:nTableIndentTw_0"/>
            <xsl:text>\clvertalc\clmgf\clpadl0\clpadfl3\clpadb0\clpadfb3\clpadt0\clpadft3\clpadr0\clpadfr3</xsl:text>
            <xsl:if test="$altova:nColumnWidthTw_0_0 = $altova:nDefaultColumnWidthTw_0">
                <xsl:text>\clftsWidth1</xsl:text>
            </xsl:if>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl0_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl0 + $altova:nColumnWidthTw_0_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl0_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
            <xsl:if test="$altova:nColumnWidthTw_0_1 = $altova:nDefaultColumnWidthTw_0">
                <xsl:text>\clftsWidth1</xsl:text>
            </xsl:if>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl0_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl0_Col0_AfterColumn + $altova:nColumnWidthTw_0_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl0_Col1_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle0"/>
            <xsl:value-of select="$altova:RowStyle0"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs18 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend0"/>
        <xsl:text>\ql\sl0\f1\fs18 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend0"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle0"/>
        <xsl:value-of select="$altova:RowStyle0"/>
        <xsl:value-of select="$rowend0"/>
        <xsl:variable name="altova:RowStyle1">
            <xsl:text>\trrh0</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl0" select="$altova:nTableIndentTw_0"/>
            <xsl:text>\clvertalc\clmgf\clpadl0\clpadfl3\clpadb0\clpadfb3\clpadt0\clpadft3\clpadr0\clpadfr3</xsl:text>
            <xsl:if test="$altova:nColumnWidthTw_0_0 = $altova:nDefaultColumnWidthTw_0">
                <xsl:text>\clftsWidth1</xsl:text>
            </xsl:if>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl0_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl0 + $altova:nColumnWidthTw_0_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl0_Col0_AfterColumn)"/>
            <xsl:text>\clvertalc\clmrg\clpadl30\clpadfl3\clpadb30\clpadfb3\clpadt30\clpadft3\clpadr30\clpadfr3</xsl:text>
            <xsl:if test="$altova:nColumnWidthTw_0_1 = $altova:nDefaultColumnWidthTw_0">
                <xsl:text>\clftsWidth1</xsl:text>
            </xsl:if>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl0_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl0_Col0_AfterColumn + $altova:nColumnWidthTw_0_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl0_Col1_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle0"/>
            <xsl:value-of select="$altova:RowStyle1"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs18 </xsl:text>
        <xsl:call-template name="FooterLine">
            <xsl:with-param name="altova:nMaxWidthIn" select="($altova:nColumnWidthTw_0_0 div 1440) + ($altova:nColumnWidthTw_0_1 div 1440)"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 1"/>
        </xsl:call-template>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend0"/>
        <xsl:text>\ql\sl0\f1\fs18 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend0"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle0"/>
        <xsl:value-of select="$altova:RowStyle1"/>
        <xsl:value-of select="$rowend0"/>
        <xsl:variable name="altova:RowStyle2">
            <xsl:text>\trrh600</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl0" select="$altova:nTableIndentTw_0"/>
            <xsl:text>\clvertalt\clpadl0\clpadfl3\clpadb0\clpadfb3\clpadt0\clpadft3\clpadr0\clpadfr3</xsl:text>
            <xsl:if test="$altova:nColumnWidthTw_0_0 = $altova:nDefaultColumnWidthTw_0">
                <xsl:text>\clftsWidth1</xsl:text>
            </xsl:if>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl0_Col0_AfterColumn" select="$altova:CurrGridPos_Tbl0 + $altova:nColumnWidthTw_0_0"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl0_Col0_AfterColumn)"/>
            <xsl:text>\clvertalt\clpadl0\clpadfl3\clpadb0\clpadfb3\clpadt0\clpadft3\clpadr0\clpadfr3</xsl:text>
            <xsl:if test="$altova:nColumnWidthTw_0_1 = $altova:nDefaultColumnWidthTw_0">
                <xsl:text>\clftsWidth1</xsl:text>
            </xsl:if>
            <xsl:text>\cellx</xsl:text>
            <xsl:variable name="altova:CurrGridPos_Tbl0_Col1_AfterColumn" select="$altova:CurrGridPos_Tbl0_Col0_AfterColumn + $altova:nColumnWidthTw_0_1"/>
            <xsl:value-of select="ceiling($altova:CurrGridPos_Tbl0_Col1_AfterColumn)"/>
        </xsl:variable>
        <xsl:if test="$templatetablelevel + 1 = 1">
            <xsl:value-of select="$tablestyle0"/>
            <xsl:value-of select="$altova:RowStyle2"/>
        </xsl:if>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 1 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 1"/>
        <xsl:text>\ql\sl0\f1\fs20 </xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend0"/>
        <xsl:text>\qr\sl0\f1\fs18 </xsl:text>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\f1\fs18 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>o5-3_050_Pagina</xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\f1\fs18 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$o5-3_050_Pagina"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text/>
        <xsl:text>\chpgn</xsl:text>
        <xsl:text>\f0\fs24</xsl:text>
        <xsl:value-of select="$cellend0"/>
        <xsl:if test="$templatetablelevel + 1 > 1">
            <xsl:text>{\*\nesttableprops</xsl:text>
        </xsl:if>
        <xsl:value-of select="$tablestyle0"/>
        <xsl:value-of select="$altova:RowStyle2"/>
        <xsl:value-of select="$rowend0"/>
        <xsl:text>\pard</xsl:text>
        <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
        <xsl:text>\itap</xsl:text>
        <xsl:value-of select="$templatetablelevel + 0"/>
        <xsl:text> </xsl:text>
    </xsl:template>
    <xsl:template name="ElectionName">
        <xsl:param name="altova:nMaxWidthIn" select="6.26389"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="isBold" select="0"/>
        <xsl:if test="0=1">
            <xsl:text>{\f1\fs18 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text>Election name including date</xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:text>\par </xsl:text>
        </xsl:if>
        <xsl:choose>
            <xsl:when test="$lang=0">
                <xsl:text>{\f1\fs18 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text>de verkiezing van de leden van </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{\f1\fs18 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="$RP_ElectionName_verkiezingLeden"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:call-template name="ElectionNameSimple">
            <xsl:with-param name="isBold" select="$isBold"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
        </xsl:call-template>
        <xsl:call-template name="ElectionDomain">
            <xsl:with-param name="isBold" select="$isBold"/>
            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
        </xsl:call-template>
        <xsl:for-each select="eml:ElectionIdentifier">
            <xsl:choose>
                <xsl:when test="$lang=0">
                    <xsl:text>{\f1\fs18 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:text> op </xsl:text>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>{\f1\fs18 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="$RP_ElectionName_op"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:for-each select="kr:ElectionDate">
                <xsl:call-template name="Date">
                    <xsl:with-param name="isBold" select="$isBold"/>
                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                </xsl:call-template>
            </xsl:for-each>
        </xsl:for-each>
    </xsl:template>
    <xsl:template name="Date">
        <xsl:param name="altova:nMaxWidthIn" select="6.26389"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="isBold" select="0"/>
        <xsl:param name="fontSize" select="&apos;normal&apos;"/>
        <xsl:if test="$fontSize = &apos;normal&apos;">
            <xsl:if test="$isBold=0">
                <xsl:if test="substring(text(),9, 1) != &quot;0&quot;">
                    <xsl:text>{\f1\fs18 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="substring(text(),9, 1)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:if>
                <xsl:text>{\f1\fs18 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="substring(text(),10, 1)"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>{\f1\fs18 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text> </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:choose>
                    <xsl:when test="substring(text(),6, 2) = &quot;01&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>januari</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_januari"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;02&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>februari</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_februari"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;03&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>maart</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_maart"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;04&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>april</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_april"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;05&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>mei</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_mei"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;06&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>juni</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_juni"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;07&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>juli</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_juli"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;08&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>augustus</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_augustus"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;09&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>september</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_september"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;10&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>oktober</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_oktober"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;11&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>november</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_november"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2)  = &quot;12&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>december</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_december"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                </xsl:choose>
                <xsl:text>{\f1\fs18 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text> </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>{\f1\fs18 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="substring(text(),1, 4)"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:if>
            <xsl:if test="$isBold=1">
                <xsl:if test="substring(text(),9, 1) != &quot;0&quot;">
                    <xsl:text>{\f1\fs18\b </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="substring(text(),9, 1)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:if>
                <xsl:text>{\f1\fs18\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="substring(text(),10, 1)"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>{\f1\fs18\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text> </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:choose>
                    <xsl:when test="substring(text(),6, 2) = &quot;01&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>januari</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_januari"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;02&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>februari</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_februari"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;03&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>maart</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_maart"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;04&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>april</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_april"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;05&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>mei</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_mei"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;06&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>juni</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_juni"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;07&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>juli</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_juli"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;08&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>augustus</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_augustus"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;09&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>september</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_september"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;10&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>oktober</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_oktober"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;11&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>november</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_november"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2)  = &quot;12&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>december</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_december"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                </xsl:choose>
                <xsl:text>{\f1\fs18\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text> </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>{\f1\fs18\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="substring(text(),1, 4)"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:if>
        </xsl:if>
        <xsl:if test="$fontSize = &apos;x-small&apos;">
            <xsl:if test="$isBold=0">
                <xsl:if test="substring(text(),9, 1) != &quot;0&quot;">
                    <xsl:text>{\f1\fs18 </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="substring(text(),9, 1)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:if>
                <xsl:text>{\f1\fs18 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="substring(text(),10, 1)"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>{\f1\fs18 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text> </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:choose>
                    <xsl:when test="substring(text(),6, 2) = &quot;01&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>januari</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_januari"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;02&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>februari</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_februari"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;03&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>maart</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_maart"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;04&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>april</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_april"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;05&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>mei</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_mei"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;06&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>juni</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_juni"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;07&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>juli</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_juli"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;08&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>augustus</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_augustus"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;09&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>september</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_september"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;10&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>oktober</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_oktober"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;11&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>november</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_november"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2)  = &quot;12&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>december</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_december"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                </xsl:choose>
                <xsl:text>{\f1\fs18 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text> </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>{\f1\fs18 </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="substring(text(),1, 4)"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:if>
            <xsl:if test="$isBold=1">
                <xsl:if test="substring(text(),9, 1) != &quot;0&quot;">
                    <xsl:text>{\f1\fs18\b </xsl:text>
                    <xsl:call-template name="write-text">
                        <xsl:with-param name="text">
                            <xsl:value-of select="substring(text(),9, 1)"/>
                        </xsl:with-param>
                    </xsl:call-template>
                    <xsl:text>}</xsl:text>
                </xsl:if>
                <xsl:text>{\f1\fs18\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="substring(text(),10, 1)"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>{\f1\fs18\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text> </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:choose>
                    <xsl:when test="substring(text(),6, 2) = &quot;01&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>januari</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_januari"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;02&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>februari</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_februari"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;03&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>maart</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_maart"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;04&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>april</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_april"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;05&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>mei</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_mei"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;06&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>juni</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_juni"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;07&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>juli</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_juli"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;08&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>augustus</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_augustus"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;09&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>september</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_september"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;10&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>oktober</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_oktober"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2) = &quot;11&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>november</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_november"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="substring(text(),6, 2)  = &quot;12&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>december</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18\b </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_Date_december"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                </xsl:choose>
                <xsl:text>{\f1\fs18\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:text> </xsl:text>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
                <xsl:text>{\f1\fs18\b </xsl:text>
                <xsl:call-template name="write-text">
                    <xsl:with-param name="text">
                        <xsl:value-of select="substring(text(),1, 4)"/>
                    </xsl:with-param>
                </xsl:call-template>
                <xsl:text>}</xsl:text>
            </xsl:if>
        </xsl:if>
    </xsl:template>
    <xsl:template name="ElectionNameSimple">
        <xsl:param name="altova:nMaxWidthIn" select="6.26389"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="isBold" select="0"/>
        <xsl:if test="0=1">
            <xsl:text>{\f1\fs18 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text>Just election name</xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
            <xsl:text>\par </xsl:text>
        </xsl:if>
        <xsl:for-each select="eml:ElectionIdentifier">
            <xsl:for-each select="eml:ElectionCategory">
                <xsl:choose>
                    <xsl:when test=".=&quot;EP&quot; or .=&quot;BC&quot; or .=&quot;AB&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>het </xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_ElectionNameSimple_het"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>de </xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_ElectionNameSimple_de"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:if test="$isBold=0">
                    <xsl:choose>
                        <xsl:when test=".= &quot;TK&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\f1\fs18 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>Tweede Kamer der Staten-Generaal</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\f1\fs18 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_ElectionNameSimple_tweedeKamer"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test=".=&quot;EK&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\f1\fs18 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>Eerste Kamer der Staten-Generaal</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\f1\fs18 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_ElectionNameSimple_eersteKamer"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test=".=&quot;PS&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\f1\fs18 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>provinciale staten van</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\f1\fs18 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_ElectionNameSimple_provincialeStaten"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test=".=&quot;AB&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\f1\fs18 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>algemeen bestuur van het </xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\f1\fs18 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_ElectionNameSimple_algemeen_bestuur"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:call-template name="WaterschapTypeName">
                                <xsl:with-param name="isBold" select="$isBold"/>
                                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                            </xsl:call-template>
                        </xsl:when>
                        <xsl:when test=".=&quot;EP&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\f1\fs18 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>Europees Parlement</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\f1\fs18 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_ElectionNameSimple_hetEuropeesParlement"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test=".=&quot;GR&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\f1\fs18 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>gemeenteraad</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\f1\fs18 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_ElectionNameSimple_raadVanDeGemeente"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test=".=&quot;ER&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\f1\fs18 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>eilandsraad</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\f1\fs18 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_ElectionNameSimple_eilandsraad"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test=".=&quot;BC&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\f1\fs18 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>algemeen bestuur van de bestuurscommissie</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\f1\fs18 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_ElectionNameSimple_bestuurscommissie"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test=".=&quot;GC&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\f1\fs18 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>gebiedscommissie</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\f1\fs18 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_ElectionNameSimple_gebiedscommissie"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                    </xsl:choose>
                </xsl:if>
                <xsl:if test="$isBold=1">
                    <xsl:choose>
                        <xsl:when test=".= &quot;TK&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\f1\fs18\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>Tweede Kamer der Staten-Generaal</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\f1\fs18\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_ElectionNameSimple_tweedeKamer"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test=".=&quot;EK&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\f1\fs18\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>Eerste Kamer der Staten-Generaal</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\f1\fs18\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_ElectionNameSimple_eersteKamer"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test=".=&quot;PS&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\f1\fs18\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>provinciale staten</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\f1\fs18\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_ElectionNameSimple_provincialeStaten"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test=".=&quot;AB&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\f1\fs18\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>algemeen bestuur van het </xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\f1\fs18\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_ElectionNameSimple_algemeen_bestuur"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:call-template name="WaterschapTypeName">
                                <xsl:with-param name="isBold" select="$isBold"/>
                                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                            </xsl:call-template>
                        </xsl:when>
                        <xsl:when test=".=&quot;EP&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\f1\fs18\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>Europees Parlement</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\f1\fs18\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_ElectionNameSimple_hetEuropeesParlement"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test=".=&quot;GR&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\f1\fs18\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>gemeenteraad</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\f1\fs18\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_ElectionNameSimple_raadVanDeGemeente"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test=".=&quot;ER&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\f1\fs18\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>eilandsraad</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\f1\fs18\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_ElectionNameSimple_eilandsraad"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test=".=&quot;BC&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\f1\fs18\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>algemeen bestuur van de bestuurscommissie</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\f1\fs18\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_ElectionNameSimple_bestuurscommissie"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test=".=&quot;GC&quot;">
                            <xsl:choose>
                                <xsl:when test="$lang=0">
                                    <xsl:text>{\f1\fs18\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text>gebiedscommissie</xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\f1\fs18\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="$RP_ElectionNameSimple_gebiedscommissie"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                    </xsl:choose>
                </xsl:if>
                <xsl:choose>
                    <xsl:when test=".=&quot;PS&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text> van</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_ElectionNameSimple_van"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test=".=&quot;GR&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text> van</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_ElectionNameSimple_van"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test=".=&quot;ER&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text> van het openbaar lichaam</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_ElectionNameSimple_van_eilandsraad"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test=".=&quot;BC&quot;">
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text> van stadsdeel</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_ElectionNameSimple_van_stadsdeel"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                </xsl:choose>
            </xsl:for-each>
        </xsl:for-each>
    </xsl:template>
    <xsl:template name="ObjectionsByVoters2">
        <xsl:param name="altova:nMaxWidthIn" select="6.26389"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:for-each select="rg:ObjectionsByVoters">
            <xsl:for-each select="rg:NotesOnObjections">
                <xsl:choose>
                    <xsl:when test="../rg:NotesOnObjections[text() != &quot;&quot;]">
                        <xsl:choose>
                            <xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
                                <xsl:text>\pard</xsl:text>
                                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                                <xsl:text>\itap</xsl:text>
                                <xsl:value-of select="$templatetablelevel + 0"/>
                                <xsl:text>\s0\f0\fs24\sl0\f1\fs18 </xsl:text>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:apply-templates>
                                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                                </xsl:apply-templates>
                                <xsl:text>}</xsl:text>
                                <xsl:text>\f0\fs24</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>\pard</xsl:text>
                                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                                <xsl:text>\itap</xsl:text>
                                <xsl:value-of select="$templatetablelevel + 0"/>
                                <xsl:text>\s0\f0\fs24\sl0\f1\fs18 </xsl:text>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:apply-templates>
                                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                                </xsl:apply-templates>
                                <xsl:text>}</xsl:text>
                                <xsl:text>\f0\fs24</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>.......................................................................................................................................</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_ObjectionsByVoters2_emptyLine"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:text>\par </xsl:text>
                        <xsl:text>\par </xsl:text>
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>.......................................................................................................................................</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_ObjectionsByVoters2_emptyLine"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:text>\par </xsl:text>
                        <xsl:text>\par </xsl:text>
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>.......................................................................................................................................</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_ObjectionsByVoters2_emptyLine"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:text>\par </xsl:text>
                        <xsl:text>\par </xsl:text>
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>.......................................................................................................................................</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_ObjectionsByVoters2_emptyLine"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:text>\par </xsl:text>
                        <xsl:text>\par </xsl:text>
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>.......................................................................................................................................</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_ObjectionsByVoters2_emptyLine"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:for-each>
        </xsl:for-each>
    </xsl:template>
    <xsl:template name="ObjectionsByVoters2a">
        <xsl:param name="altova:nMaxWidthIn" select="6.26389"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:text>\par </xsl:text>
        <xsl:for-each select="rg:ObjectionsByVoters">
            <xsl:for-each select="rg:Objections">
                <xsl:choose>
                    <xsl:when test="../rg:Objections[text() != &quot;&quot;]">
                        <xsl:choose>
                            <xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
                                <xsl:text>\pard</xsl:text>
                                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                                <xsl:text>\itap</xsl:text>
                                <xsl:value-of select="$templatetablelevel + 0"/>
                                <xsl:text>\s0\f0\fs24\sl0\f1\fs18 </xsl:text>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:apply-templates>
                                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                                </xsl:apply-templates>
                                <xsl:text>}</xsl:text>
                                <xsl:text>\f0\fs24</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>\pard</xsl:text>
                                <xsl:if test="$templatetablelevel + 0 &gt; 0">\intbl</xsl:if>
                                <xsl:text>\itap</xsl:text>
                                <xsl:value-of select="$templatetablelevel + 0"/>
                                <xsl:text>\s0\f0\fs24\sl0\f1\fs18 </xsl:text>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:apply-templates>
                                    <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                    <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                                </xsl:apply-templates>
                                <xsl:text>}</xsl:text>
                                <xsl:text>\f0\fs24</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>.......................................................................................................................................</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_ObjectionsByVoters2a_emptyLine"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:text>\par </xsl:text>
                        <xsl:text>\par </xsl:text>
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>.......................................................................................................................................</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_ObjectionsByVoters2a_emptyLine"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:text>\par </xsl:text>
                        <xsl:text>\par </xsl:text>
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>.......................................................................................................................................</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_ObjectionsByVoters2a_emptyLine"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:text>\par </xsl:text>
                        <xsl:text>\par </xsl:text>
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>.......................................................................................................................................</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_ObjectionsByVoters2a_emptyLine"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:text>\par </xsl:text>
                        <xsl:text>\par </xsl:text>
                        <xsl:choose>
                            <xsl:when test="$lang=0">
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:text>.......................................................................................................................................</xsl:text>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:text>{\f1\fs18 </xsl:text>
                                <xsl:call-template name="write-text">
                                    <xsl:with-param name="text">
                                        <xsl:value-of select="$RP_ObjectionsByVoters2a_emptyLine"/>
                                    </xsl:with-param>
                                </xsl:call-template>
                                <xsl:text>}</xsl:text>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:for-each>
        </xsl:for-each>
    </xsl:template>
    <xsl:template name="ElectionDomain">
        <xsl:param name="altova:nMaxWidthIn" select="6.26389"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="isBold" select="0"/>
        <xsl:param name="font-size" select="&apos;small&apos;"/>
        <xsl:if test="0=1">
            <xsl:text>{\f1\fs18 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text>Election domain as part of the elction name - if needed</xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
        </xsl:if>
        <xsl:if test="$isBold=0 and $font-size=&apos;small&apos;">
            <xsl:for-each select="eml:ElectionIdentifier">
                <xsl:choose>
                    <xsl:when test="./eml:ElectionCategory[text()=&quot;PS&quot; or text()=&quot;AB&quot; or text()=&quot;GR&quot; or text()=&quot;ER&quot;]">
                        <xsl:for-each select="kr:ElectionDomain">
                            <xsl:text>{\f1\fs18 </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text> </xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                            <xsl:text>{\f1\fs18 </xsl:text>
                            <xsl:apply-templates>
                                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                            </xsl:apply-templates>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:when test="./eml:ElectionCategory[ text()=&quot;BC&quot; or text()=&quot;GC&quot; ]">
                        <xsl:for-each select="kr:ElectionDomain">
                            <xsl:choose>
                                <xsl:when test=". != &quot;Rotterdam - Centrum&quot;  and  . != &quot;Rotterdam - Pernis&quot;">
                                    <xsl:text>{\f1\fs18 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text> </xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                    <xsl:text>{\f1\fs18 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="substring( text() , 13 )"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\f1\fs18 </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text> </xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                    <xsl:text>{\f1\fs18 </xsl:text>
                                    <xsl:apply-templates>
                                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                                    </xsl:apply-templates>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:for-each>
                    </xsl:when>
                </xsl:choose>
            </xsl:for-each>
        </xsl:if>
        <xsl:if test="$isBold=1 and $font-size=&apos;small&apos;">
            <xsl:for-each select="eml:ElectionIdentifier">
                <xsl:choose>
                    <xsl:when test="./eml:ElectionCategory[text()=&quot;PS&quot; or text()=&quot;AB&quot; or text()=&quot;GR&quot; or text()=&quot;ER&quot;]">
                        <xsl:for-each select="kr:ElectionDomain">
                            <xsl:text>{\f1\fs18\b </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text> </xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                            <xsl:text>{\f1\fs18\b </xsl:text>
                            <xsl:apply-templates>
                                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                            </xsl:apply-templates>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:when test="./eml:ElectionCategory[ text()=&quot;BC&quot; or text()=&quot;GC&quot; ]">
                        <xsl:for-each select="kr:ElectionDomain">
                            <xsl:choose>
                                <xsl:when test=". != &quot;Rotterdam - Centrum&quot;  and  . != &quot;Rotterdam - Pernis&quot;">
                                    <xsl:text>{\f1\fs18\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text> </xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                    <xsl:text>{\f1\fs18\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="substring( text() , 13 )"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\f1\fs18\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text> </xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                    <xsl:text>{\f1\fs18\b </xsl:text>
                                    <xsl:apply-templates>
                                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                                    </xsl:apply-templates>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:for-each>
                    </xsl:when>
                </xsl:choose>
            </xsl:for-each>
        </xsl:if>
        <xsl:if test="$isBold=1 and $font-size=&apos;medium&apos;">
            <xsl:for-each select="eml:ElectionIdentifier">
                <xsl:choose>
                    <xsl:when test="./eml:ElectionCategory[text()=&quot;PS&quot; or text()=&quot;AB&quot; or text()=&quot;GR&quot; or text()=&quot;ER&quot;]">
                        <xsl:for-each select="kr:ElectionDomain">
                            <xsl:text>{\f1\fs26\b </xsl:text>
                            <xsl:call-template name="write-text">
                                <xsl:with-param name="text">
                                    <xsl:text> </xsl:text>
                                </xsl:with-param>
                            </xsl:call-template>
                            <xsl:text>}</xsl:text>
                            <xsl:text>{\f1\fs26\b </xsl:text>
                            <xsl:apply-templates>
                                <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                            </xsl:apply-templates>
                            <xsl:text>}</xsl:text>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:when test="./eml:ElectionCategory[ text()=&quot;BC&quot; or text()=&quot;GC&quot; ]">
                        <xsl:for-each select="kr:ElectionDomain">
                            <xsl:choose>
                                <xsl:when test=". != &quot;Rotterdam - Centrum&quot;  and  . != &quot;Rotterdam - Pernis&quot;">
                                    <xsl:text>{\f1\fs26\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text> </xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                    <xsl:text>{\f1\fs26\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:value-of select="substring( text() , 13 )"/>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:text>{\f1\fs26\b </xsl:text>
                                    <xsl:call-template name="write-text">
                                        <xsl:with-param name="text">
                                            <xsl:text> </xsl:text>
                                        </xsl:with-param>
                                    </xsl:call-template>
                                    <xsl:text>}</xsl:text>
                                    <xsl:text>{\f1\fs26\b </xsl:text>
                                    <xsl:apply-templates>
                                        <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
                                        <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
                                    </xsl:apply-templates>
                                    <xsl:text>}</xsl:text>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:for-each>
                    </xsl:when>
                </xsl:choose>
            </xsl:for-each>
        </xsl:if>
    </xsl:template>
    <xsl:template name="FooterLine">
        <xsl:param name="altova:nMaxWidthIn" select="6.26389"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:if test="$SV_OutputFormat = &apos;PDF&apos;">
            <xsl:text>{\f1\fs18 </xsl:text>
            <xsl:call-template name="write-text">
                <xsl:with-param name="text">
                    <xsl:text>______</xsl:text>
                </xsl:with-param>
            </xsl:call-template>
            <xsl:text>}</xsl:text>
        </xsl:if>
        <xsl:text>{\f1\fs18 </xsl:text>
        <xsl:call-template name="write-text">
            <xsl:with-param name="text">
                <xsl:text>__________________________________________________________________</xsl:text>
            </xsl:with-param>
        </xsl:call-template>
        <xsl:text>}</xsl:text>
    </xsl:template>
    <xsl:template name="WaterschapTypeName">
        <xsl:param name="altova:nMaxWidthIn" select="6.26389"/>
        <xsl:param name="templatetablelevel" select="0"/>
        <xsl:param name="contestId" select="//kr:ElectionDomain/@Id"/>
        <xsl:param name="isBold" select="0"/>
        <xsl:param name="font-size" select="&apos;small&apos;"/>
        <xsl:choose>
            <xsl:when test="$font-size = &apos;medium&apos;">
                <xsl:choose>
                    <xsl:when test="$isBold = 0">
                        <xsl:choose>
                            <xsl:when test="$contestId = 2">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\f1\fs26 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text>wetterskip</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\f1\fs26 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP_WaterschapTypeName_Wetterskip"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:when test="$contestId = 9 or $contestId = 10 or $contestId = 11">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\f1\fs26 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text>hoogheemraadschap</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\f1\fs26 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP_WaterschapTypeName_Hoogheemraadschap"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:when test="$contestId = 12 or $contestId = 13 or $contestId = 14">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\f1\fs26 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text>hoogheemraadschap van</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\f1\fs26 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP_WaterschapTypeName_Hoogheemraadschap_van"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\f1\fs26 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text>waterschap</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\f1\fs26 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP_WaterschapTypeName_Waterschap"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:choose>
                            <xsl:when test="$contestId = 2">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\f1\fs26\b </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text>wetterskip</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\f1\fs26\b </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP_WaterschapTypeName_Wetterskip"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:when test="$contestId = 9 or $contestId = 10 or $contestId = 11">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\f1\fs26\b </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text>hoogheemraadschap</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\f1\fs26\b </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP_WaterschapTypeName_Hoogheemraadschap"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:when test="$contestId = 12 or $contestId = 13 or $contestId = 14">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\f1\fs26\b </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text>hoogheemraadschap van</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\f1\fs26\b </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP_WaterschapTypeName_Hoogheemraadschap_van"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\f1\fs26\b </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text>waterschap</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\f1\fs26\b </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP_WaterschapTypeName_Waterschap"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:when>
            <xsl:otherwise>
                <xsl:choose>
                    <xsl:when test="$isBold = 0">
                        <xsl:choose>
                            <xsl:when test="$contestId = 2">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\f1\fs18 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text>wetterskip</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\f1\fs18 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP_WaterschapTypeName_Wetterskip"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:when test="$contestId = 9 or $contestId = 10 or $contestId = 11">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\f1\fs18 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text>hoogheemraadschap</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\f1\fs18 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP_WaterschapTypeName_Hoogheemraadschap"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:when test="$contestId = 12 or $contestId = 13 or $contestId = 14">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\f1\fs18 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text>hoogheemraadschap van</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\f1\fs18 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP_WaterschapTypeName_Hoogheemraadschap_van"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\f1\fs18 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text>waterschap</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\f1\fs18 </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP_WaterschapTypeName_Waterschap"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:choose>
                            <xsl:when test="$contestId = 2">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\f1\fs18\b </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text>wetterskip</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\f1\fs18\b </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP_WaterschapTypeName_Wetterskip"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:when test="$contestId = 9 or $contestId = 10 or $contestId = 11">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\f1\fs18\b </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text>hoogheemraadschap</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\f1\fs18\b </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP_WaterschapTypeName_Hoogheemraadschap"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:when test="$contestId = 12 or $contestId = 13 or $contestId = 14">
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\f1\fs18\b </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text>hoogheemraadschap van</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\f1\fs18\b </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP_WaterschapTypeName_Hoogheemraadschap_van"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:choose>
                                    <xsl:when test="$lang=0">
                                        <xsl:text>{\f1\fs18\b </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:text>waterschap</xsl:text>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:text>{\f1\fs18\b </xsl:text>
                                        <xsl:call-template name="write-text">
                                            <xsl:with-param name="text">
                                                <xsl:value-of select="$RP_WaterschapTypeName_Waterschap"/>
                                            </xsl:with-param>
                                        </xsl:call-template>
                                        <xsl:text>}</xsl:text>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="altova:Section_0_FooterRight">
        <xsl:variable name="altova:nMaxWidthIn" select="6.26"/>
        <xsl:variable name="templatetablelevel" select="0"/>
        <xsl:call-template name="legacy_footerall">
            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
        </xsl:call-template>
    </xsl:template>
    <xsl:template name="altova:Section_0_FooterLeft">
        <xsl:variable name="altova:nMaxWidthIn" select="6.26"/>
        <xsl:variable name="templatetablelevel" select="0"/>
        <xsl:call-template name="legacy_footerall">
            <xsl:with-param name="altova:nMaxWidthIn" select="$altova:nMaxWidthIn"/>
            <xsl:with-param name="templatetablelevel" select="$templatetablelevel + 0"/>
        </xsl:call-template>
    </xsl:template>
    <xsl:template name="EmptyHeader"/>
    <xsl:template name="write-text">
        <xsl:param name="text"/>
        <xsl:param name="bEscape" select="true()"/>
        <xsl:choose>
            <xsl:when test="$bEscape">
                <xsl:variable name="sLinefeed" select="'&#x0A;'"/>
                <xsl:choose>
                    <xsl:when test="contains($text, $sLinefeed)">
                        <xsl:variable name="first-line" select="substring-before($text, $sLinefeed)"/>
                        <xsl:variable name="rest" select="substring-after($text, $sLinefeed)"/>
                        <xsl:call-template name="write-text-line">
                            <xsl:with-param name="text" select="$first-line"/>
                        </xsl:call-template>
                        <xsl:text>\u13?</xsl:text>
                        <xsl:call-template name="write-text">
                            <xsl:with-param name="text" select="$rest"/>
                        </xsl:call-template>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:call-template name="write-text-line">
                            <xsl:with-param name="text" select="$text"/>
                        </xsl:call-template>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:when>
            <xsl:otherwise>
                <xsl:value-of select="string($text)"/>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="write-text-line">
        <xsl:param name="text"/>
        <xsl:variable name="text-length" select="string-length($text)"/>
        <xsl:variable name="text-after-bs" select="substring-after($text, '\')"/>
        <xsl:variable name="text-after-bs-length" select="string-length($text-after-bs)"/>
        <xsl:choose>
            <xsl:when test="$text-after-bs-length = 0">
                <xsl:choose>
                    <xsl:when test="substring($text, $text-length) = '\'">
                        <xsl:call-template name="write-text-ob">
                            <xsl:with-param name="text" select="concat(substring($text,1,$text-length - 1), '\\')"/>
                            <xsl:with-param name="text-length" select="$text-length + 1"/>
                        </xsl:call-template>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:call-template name="write-text-ob">
                            <xsl:with-param name="text" select="$text"/>
                            <xsl:with-param name="text-length" select="$text-length"/>
                        </xsl:call-template>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:when>
            <xsl:otherwise>
                <xsl:call-template name="write-text-ob">
                    <xsl:with-param name="text" select="concat(substring($text,1,$text-length - $text-after-bs-length - 1), '\\')"/>
                    <xsl:with-param name="text-length" select="$text-length - $text-after-bs-length + 1"/>
                </xsl:call-template>
                <xsl:call-template name="write-text-line">
                    <xsl:with-param name="text" select="$text-after-bs"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="write-text-ob">
        <xsl:param name="text"/>
        <xsl:param name="text-length"/>
        <xsl:variable name="text-after-ob" select="substring-after($text, '{')"/>
        <xsl:variable name="text-after-ob-length" select="string-length($text-after-ob)"/>
        <xsl:choose>
            <xsl:when test="$text-after-ob-length = 0">
                <xsl:choose>
                    <xsl:when test="substring($text, $text-length) = '{'">
                        <xsl:call-template name="write-text-cb">
                            <xsl:with-param name="text" select="concat(substring($text,1,$text-length - 1), '\{')"/>
                            <xsl:with-param name="text-length" select="$text-length + 1"/>
                        </xsl:call-template>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:call-template name="write-text-cb">
                            <xsl:with-param name="text" select="$text"/>
                            <xsl:with-param name="text-length" select="$text-length"/>
                        </xsl:call-template>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:when>
            <xsl:otherwise>
                <xsl:call-template name="write-text-cb">
                    <xsl:with-param name="text" select="concat(substring($text,1,$text-length - $text-after-ob-length - 1), '\{')"/>
                    <xsl:with-param name="text-length" select="$text-length - $text-after-ob-length + 1"/>
                </xsl:call-template>
                <xsl:call-template name="write-text-ob">
                    <xsl:with-param name="text" select="$text-after-ob"/>
                    <xsl:with-param name="text-length" select="$text-after-ob-length"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="write-text-cb">
        <xsl:param name="text"/>
        <xsl:param name="text-length"/>
        <xsl:variable name="text-after-cb" select="substring-after($text, '}')"/>
        <xsl:variable name="text-after-cb-length" select="string-length($text-after-cb)"/>
        <xsl:choose>
            <xsl:when test="$text-after-cb-length = 0">
                <xsl:choose>
                    <xsl:when test="substring($text, $text-length) = '}'">
                        <xsl:value-of select="concat(substring($text,1,$text-length - 1), '\}')"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:value-of select="$text"/>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:when>
            <xsl:otherwise>
                <xsl:value-of select="concat(substring($text,1,$text-length - $text-after-cb-length - 1), '\}')"/>
                <xsl:call-template name="write-text-cb">
                    <xsl:with-param name="text" select="$text-after-cb"/>
                    <xsl:with-param name="text-length" select="$text-after-cb-length"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template match="text()|@*">
        <xsl:call-template name="write-text">
            <xsl:with-param name="text" select="."/>
        </xsl:call-template>
    </xsl:template>
    <xsl:template name="altova:GetColorID">
        <xsl:param name="text"/>
        <xsl:variable name="txt" select="translate($text, 'abcdefghijklmnopqrstuvwxyz#', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' )"/>
        <xsl:choose>
            <xsl:when test="$txt = 'WHITE'">
                <xsl:text>140</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'IVORY'">
                <xsl:text>139</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTYELLOW'">
                <xsl:text>138</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'YELLOW'">
                <xsl:text>137</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'SNOW'">
                <xsl:text>136</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FLORALWHITE'">
                <xsl:text>135</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LEMONCHIFFON'">
                <xsl:text>134</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'CORNSILK'">
                <xsl:text>133</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'SEASHELL'">
                <xsl:text>132</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LAVENDERBLUSH'">
                <xsl:text>131</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'PAPAYAWHIP'">
                <xsl:text>130</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'BLANCHEDALMOND'">
                <xsl:text>129</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MISTYROSE'">
                <xsl:text>128</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'BISQUE'">
                <xsl:text>127</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MOCCASIN'">
                <xsl:text>126</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'NAVAJOWHITE'">
                <xsl:text>125</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'PEACHPUFF'">
                <xsl:text>124</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'GOLD'">
                <xsl:text>123</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'PINK'">
                <xsl:text>122</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTPINK'">
                <xsl:text>121</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'ORANGE'">
                <xsl:text>120</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTSALMON'">
                <xsl:text>119</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKORANGE'">
                <xsl:text>118</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'CORAL'">
                <xsl:text>117</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'HOTPINK'">
                <xsl:text>116</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'TOMATO'">
                <xsl:text>115</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'ORANGERED'">
                <xsl:text>114</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DEEPPINK'">
                <xsl:text>113</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FUCHSIA'">
                <xsl:text>112</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MAGENTA'">
                <xsl:text>111</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'RED'">
                <xsl:text>110</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'OLDLACE'">
                <xsl:text>109</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTGOLDENRODYELLOW'">
                <xsl:text>108</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LINEN'">
                <xsl:text>107</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'ANTIQUEWHITE'">
                <xsl:text>106</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'SALMON'">
                <xsl:text>105</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'GHOSTWHITE'">
                <xsl:text>104</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MINTCREAM'">
                <xsl:text>103</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'WHITESMOKE'">
                <xsl:text>102</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'BEIGE'">
                <xsl:text>101</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'WHEAT'">
                <xsl:text>100</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'SANDYBROWN'">
                <xsl:text>99</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'AZURE'">
                <xsl:text>98</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'HONEYDEW'">
                <xsl:text>97</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'ALICEBLUE'">
                <xsl:text>96</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'KHAKI'">
                <xsl:text>95</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTCORAL'">
                <xsl:text>94</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'PALEGOLDENROD'">
                <xsl:text>93</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'VIOLET'">
                <xsl:text>92</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKSALMON'">
                <xsl:text>91</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LAVENDER'">
                <xsl:text>90</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTCYAN'">
                <xsl:text>89</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'BURLYWOOD'">
                <xsl:text>88</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'PLUM'">
                <xsl:text>87</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'GAINSBORO'">
                <xsl:text>86</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'CRIMSON'">
                <xsl:text>85</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'PALEVIOLETRED'">
                <xsl:text>84</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'GOLDENROD'">
                <xsl:text>83</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'ORCHID'">
                <xsl:text>82</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'THISTLE'">
                <xsl:text>81</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTGRAY'">
                <xsl:text>80</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'TAN'">
                <xsl:text>79</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'CHOCOLATE'">
                <xsl:text>78</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'PERU'">
                <xsl:text>77</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'INDIANRED'">
                <xsl:text>76</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MEDIUMVIOLETRED'">
                <xsl:text>75</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'SILVER'">
                <xsl:text>74</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKKHAKI'">
                <xsl:text>73</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'ROSYBROWN'">
                <xsl:text>72</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MEDIUMORCHID'">
                <xsl:text>71</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKGOLDENROD'">
                <xsl:text>70</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FIREBRICK'">
                <xsl:text>69</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'POWDERBLUE'">
                <xsl:text>68</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTSTEELBLUE'">
                <xsl:text>67</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'PALETURQUOISE'">
                <xsl:text>66</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'GREENYELLOW'">
                <xsl:text>65</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTBLUE'">
                <xsl:text>64</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKGRAY'">
                <xsl:text>63</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'BROWN'">
                <xsl:text>62</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'SIENNA'">
                <xsl:text>61</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'YELLOWGREEN'">
                <xsl:text>60</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKORCHID'">
                <xsl:text>59</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'PALEGREEN'">
                <xsl:text>58</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKVIOLET'">
                <xsl:text>57</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MEDIUMPURPLE'">
                <xsl:text>56</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTGREEN'">
                <xsl:text>55</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKSEAGREEN'">
                <xsl:text>54</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'SADDLEBROWN'">
                <xsl:text>53</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKMAGENTA'">
                <xsl:text>52</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKRED'">
                <xsl:text>51</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'BLUEVIOLET'">
                <xsl:text>50</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTSKYBLUE'">
                <xsl:text>49</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'SKYBLUE'">
                <xsl:text>48</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'GRAY'">
                <xsl:text>47</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'OLIVE'">
                <xsl:text>46</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'PURPLE'">
                <xsl:text>45</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MAROON'">
                <xsl:text>44</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'AQUAMARINE'">
                <xsl:text>43</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'CHARTREUSE'">
                <xsl:text>42</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LAWNGREEN'">
                <xsl:text>41</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MEDIUMSLATEBLUE'">
                <xsl:text>40</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTSLATEGRAY'">
                <xsl:text>39</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'SLATEGRAY'">
                <xsl:text>38</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'OLIVEDRAB'">
                <xsl:text>37</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'SLATEBLUE'">
                <xsl:text>36</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DIMGRAY'">
                <xsl:text>35</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MEDIUMAQUAMARINE'">
                <xsl:text>34</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'CORNFLOWERBLUE'">
                <xsl:text>33</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'CADETBLUE'">
                <xsl:text>32</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKOLIVEGREEN'">
                <xsl:text>31</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'INDIGO'">
                <xsl:text>30</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MEDIUMTURQUOISE'">
                <xsl:text>29</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKSLATEBLUE'">
                <xsl:text>28</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'STEELBLUE'">
                <xsl:text>27</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'ROYALBLUE'">
                <xsl:text>26</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'TURQUOISE'">
                <xsl:text>25</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MEDIUMSEAGREEN'">
                <xsl:text>24</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIMEGREEN'">
                <xsl:text>23</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKSLATEGRAY'">
                <xsl:text>22</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'SEAGREEN'">
                <xsl:text>21</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FORESTGREEN'">
                <xsl:text>20</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIGHTSEAGREEN'">
                <xsl:text>19</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DODGERBLUE'">
                <xsl:text>18</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MIDNIGHTBLUE'">
                <xsl:text>17</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'CYAN'">
                <xsl:text>16</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'AQUA'">
                <xsl:text>15</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'SPRINGGREEN'">
                <xsl:text>14</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'LIME'">
                <xsl:text>13</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MEDIUMSPRINGGREEN'">
                <xsl:text>12</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKTURQUOISE'">
                <xsl:text>11</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DEEPSKYBLUE'">
                <xsl:text>10</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKCYAN'">
                <xsl:text>9</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'TEAL'">
                <xsl:text>8</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'GREEN'">
                <xsl:text>7</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKGREEN'">
                <xsl:text>6</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'BLUE'">
                <xsl:text>5</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'MEDIUMBLUE'">
                <xsl:text>4</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DARKBLUE'">
                <xsl:text>3</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'NAVY'">
                <xsl:text>2</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'BLACK'">
                <xsl:text>1</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFFFFF'">
                <xsl:text>140</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFFFF0'">
                <xsl:text>139</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFFFE0'">
                <xsl:text>138</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFFF00'">
                <xsl:text>137</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFFAFA'">
                <xsl:text>136</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFFAF0'">
                <xsl:text>135</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFFACD'">
                <xsl:text>134</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFF8DC'">
                <xsl:text>133</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFF5EE'">
                <xsl:text>132</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFF0F5'">
                <xsl:text>131</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFEFD5'">
                <xsl:text>130</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFEBCD'">
                <xsl:text>129</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFE4E1'">
                <xsl:text>128</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFE4C4'">
                <xsl:text>127</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFE4B5'">
                <xsl:text>126</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFDEAD'">
                <xsl:text>125</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFDAB9'">
                <xsl:text>124</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFD700'">
                <xsl:text>123</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFC0CB'">
                <xsl:text>122</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFB6C1'">
                <xsl:text>121</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFA500'">
                <xsl:text>120</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FFA07A'">
                <xsl:text>119</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FF8C00'">
                <xsl:text>118</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FF7F50'">
                <xsl:text>117</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FF69B4'">
                <xsl:text>116</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FF6347'">
                <xsl:text>115</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FF4500'">
                <xsl:text>114</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FF1493'">
                <xsl:text>113</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FF00FF'">
                <xsl:text>112</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FF00FF'">
                <xsl:text>111</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FF0000'">
                <xsl:text>110</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FDF5E6'">
                <xsl:text>109</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FAFAD2'">
                <xsl:text>108</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FAF0E6'">
                <xsl:text>107</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FAEBD7'">
                <xsl:text>106</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'FA8072'">
                <xsl:text>105</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'F8F8FF'">
                <xsl:text>104</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'F5FFFA'">
                <xsl:text>103</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'F5F5F5'">
                <xsl:text>102</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'F5F5DC'">
                <xsl:text>101</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'F5DEB3'">
                <xsl:text>100</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'F4A460'">
                <xsl:text>99</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'F0FFFF'">
                <xsl:text>98</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'F0FFF0'">
                <xsl:text>97</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'F0F8FF'">
                <xsl:text>96</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'F0E68C'">
                <xsl:text>95</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'F08080'">
                <xsl:text>94</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'EEE8AA'">
                <xsl:text>93</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'EE82EE'">
                <xsl:text>92</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'E9967A'">
                <xsl:text>91</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'E6E6FA'">
                <xsl:text>90</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'E0FFFF'">
                <xsl:text>89</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DEB887'">
                <xsl:text>88</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DDA0DD'">
                <xsl:text>87</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DCDCDC'">
                <xsl:text>86</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DC143C'">
                <xsl:text>85</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DB7093'">
                <xsl:text>84</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DAA520'">
                <xsl:text>83</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'DA70D6'">
                <xsl:text>82</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'D8BFD8'">
                <xsl:text>81</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'D3D3D3'">
                <xsl:text>80</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'D2B48C'">
                <xsl:text>79</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'D2691E'">
                <xsl:text>78</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'CD853F'">
                <xsl:text>77</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'CD5C5C'">
                <xsl:text>76</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'C71585'">
                <xsl:text>75</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'C0C0C0'">
                <xsl:text>74</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'BDB76B'">
                <xsl:text>73</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'BC8F8F'">
                <xsl:text>72</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'BA55D3'">
                <xsl:text>71</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'B8860B'">
                <xsl:text>70</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'B22222'">
                <xsl:text>69</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'B0E0E6'">
                <xsl:text>68</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'B0C4DE'">
                <xsl:text>67</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'AFEEEE'">
                <xsl:text>66</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'ADFF2F'">
                <xsl:text>65</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'ADD8E6'">
                <xsl:text>64</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'A9A9A9'">
                <xsl:text>63</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'A52A2A'">
                <xsl:text>62</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = 'A0522D'">
                <xsl:text>61</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '9ACD32'">
                <xsl:text>60</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '9932CC'">
                <xsl:text>59</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '98FB98'">
                <xsl:text>58</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '9400D3'">
                <xsl:text>57</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '9370DB'">
                <xsl:text>56</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '90EE90'">
                <xsl:text>55</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '8FBC8B'">
                <xsl:text>54</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '8B4513'">
                <xsl:text>53</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '8B008B'">
                <xsl:text>52</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '8B0000'">
                <xsl:text>51</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '8A2BE2'">
                <xsl:text>50</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '87CEFA'">
                <xsl:text>49</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '87CEEB'">
                <xsl:text>48</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '808080'">
                <xsl:text>47</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '808000'">
                <xsl:text>46</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '800080'">
                <xsl:text>45</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '800000'">
                <xsl:text>44</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '7FFFD4'">
                <xsl:text>43</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '7FFF00'">
                <xsl:text>42</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '7CFC00'">
                <xsl:text>41</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '7B68EE'">
                <xsl:text>40</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '778899'">
                <xsl:text>39</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '708090'">
                <xsl:text>38</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '6B8E23'">
                <xsl:text>37</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '6A5ACD'">
                <xsl:text>36</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '696969'">
                <xsl:text>35</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '66CDAA'">
                <xsl:text>34</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '6495ED'">
                <xsl:text>33</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '5F9EA0'">
                <xsl:text>32</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '556B2F'">
                <xsl:text>31</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '4B0082'">
                <xsl:text>30</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '48D1CC'">
                <xsl:text>29</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '483D8B'">
                <xsl:text>28</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '4682B4'">
                <xsl:text>27</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '4169E1'">
                <xsl:text>26</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '40E0D0'">
                <xsl:text>25</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '3CB371'">
                <xsl:text>24</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '32CD32'">
                <xsl:text>23</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '2F4F4F'">
                <xsl:text>22</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '2E8B57'">
                <xsl:text>21</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '228B22'">
                <xsl:text>20</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '20B2AA'">
                <xsl:text>19</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '1E90FF'">
                <xsl:text>18</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '191970'">
                <xsl:text>17</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '00FFFF'">
                <xsl:text>16</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '00FFFF'">
                <xsl:text>15</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '00FF7F'">
                <xsl:text>14</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '00FF00'">
                <xsl:text>13</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '00FA9A'">
                <xsl:text>12</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '00CED1'">
                <xsl:text>11</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '00BFFF'">
                <xsl:text>10</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '008B8B'">
                <xsl:text>9</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '008080'">
                <xsl:text>8</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '008000'">
                <xsl:text>7</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '006400'">
                <xsl:text>6</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '0000FF'">
                <xsl:text>5</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '0000CD'">
                <xsl:text>4</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '00008B'">
                <xsl:text>3</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '000080'">
                <xsl:text>2</xsl:text>
            </xsl:when>
            <xsl:when test="$txt = '000000'">
                <xsl:text>1</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>0</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="altova:GetFontID">
        <xsl:param name="font"/>
        <xsl:variable name="font-upper" select="translate($font, 'abcdefghijklmnopqrstuvwxyz#', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' )"/>
        <xsl:choose>
            <xsl:when test="$font-upper = 'TIMES NEW ROMAN'">
                <xsl:text>0</xsl:text>
            </xsl:when>
            <xsl:when test="$font-upper = 'ARIAL'">
                <xsl:text>1</xsl:text>
            </xsl:when>
            <xsl:when test="$font-upper = 'SYMBOL'">
                <xsl:text>2</xsl:text>
            </xsl:when>
            <xsl:when test="$font-upper = 'WINGDINGS'">
                <xsl:text>3</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>0</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="altova:GetRtfBorderStyle">
        <xsl:param name="style"/>
        <xsl:choose>
            <xsl:when test="$style='none'">
                <xsl:text>\brdrnil</xsl:text>
            </xsl:when>
            <xsl:when test="$style='hidden'">
                <xsl:text>\brdrnone</xsl:text>
            </xsl:when>
            <xsl:when test="$style='dotted'">
                <xsl:text>\brdrdot</xsl:text>
            </xsl:when>
            <xsl:when test="$style='dashed'">
                <xsl:text>\brdrdash</xsl:text>
            </xsl:when>
            <xsl:when test="$style='solid'">
                <xsl:text>\brdrs</xsl:text>
            </xsl:when>
            <xsl:when test="$style='double'">
                <xsl:text>\brdrd</xsl:text>
            </xsl:when>
            <xsl:when test="$style='groove'">
                <xsl:text>\brdrengrave</xsl:text>
            </xsl:when>
            <xsl:when test="$style='ridge'">
                <xsl:text>\brdremboss</xsl:text>
            </xsl:when>
            <xsl:when test="$style='inset'">
                <xsl:text>\brdrinset</xsl:text>
            </xsl:when>
            <xsl:when test="$style='outset'">
                <xsl:text>\brdroutset</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>\brdrnil</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template name="altova:ConvertWidthToTwips">
        <xsl:param name="width"/>
        <xsl:variable name="normal-width" select="normalize-space($width)"/>
        <xsl:choose>
            <xsl:when test="contains($normal-width,'px')">
                <xsl:value-of select="(number(substring-before($normal-width,'px')) * 1440) div $altova:nPxPerIn"/>
            </xsl:when>
            <xsl:when test="contains($normal-width,'cm')">
                <xsl:value-of select="(number(substring-before($normal-width,'cm')) * 1440) div 2.54"/>
            </xsl:when>
            <xsl:when test="contains($normal-width,'mm')">
                <xsl:value-of select="(number(substring-before($normal-width,'mm')) * 1440) div 25.4"/>
            </xsl:when>
            <xsl:when test="contains($normal-width,'in')">
                <xsl:value-of select="number(substring-before($normal-width,'in')) * 1440"/>
            </xsl:when>
            <xsl:when test="contains($normal-width,'pc')">
                <xsl:value-of select="number(substring-before($normal-width,'pc')) * 240"/>
            </xsl:when>
            <xsl:when test="contains($normal-width,'pt')">
                <xsl:value-of select="number(substring-before($normal-width,'pt')) * 20"/>
            </xsl:when>
            <xsl:when test="$normal-width='thin'">
                <xsl:value-of select="30"/>
            </xsl:when>
            <xsl:when test="$normal-width='medium'">
                <xsl:value-of select="60"/>
            </xsl:when>
            <xsl:when test="$normal-width='thick'">
                <xsl:value-of select="80"/>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>0</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
</xsl:stylesheet>
